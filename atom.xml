<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>年轻人起来冲</title>
  
  
  <link href="https://shaogui.life/atom.xml" rel="self"/>
  
  <link href="https://shaogui.life/"/>
  <updated>2023-04-08T14:02:37.659Z</updated>
  <id>https://shaogui.life/</id>
  
  <author>
    <name>绍桂</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CNN之结构重参数化</title>
    <link href="https://shaogui.life/2023/04/08/CNN%E4%B9%8B%E7%BB%93%E6%9E%84%E9%87%8D%E5%8F%82%E6%95%B0%E5%8C%96/"/>
    <id>https://shaogui.life/2023/04/08/CNN%E4%B9%8B%E7%BB%93%E6%9E%84%E9%87%8D%E5%8F%82%E6%95%B0%E5%8C%96/</id>
    <published>2023-04-08T04:40:44.000Z</published>
    <updated>2023-04-08T14:02:37.659Z</updated>
    
    <content type="html"><![CDATA[<p>结构重参数化的原理</p><a id="more"></a><h1 id="什么是结构重参数化"><a class="markdownIt-Anchor" href="#什么是结构重参数化"></a> 什么是结构重参数化？</h1><ul><li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005953.png" alt="" /></li><li>我们知道模型要变好，就必须构建得更加复杂，但是这来这带来一个坏处，就是模型部署的耗时会增长，这两者是相互矛盾的，<strong>结构从参数化</strong>就是两者都可以做到，在训练的时候，通过复杂的神经网络去训练，提升模型的性能，但是在推理的时候，我通过对模型结构的重参数化生成了一个更加精简的结构，使推理的时候速度更快</li><li><strong>RepVGG 的结构重参数化过程</strong>：上图是左边是训练时的卷积网络，右边通过对结构进行重参数化，得到一个只有 1 个分支的结构，因此可以做到训练时提升性能，推理时提升速度</li><li><strong>结构从参数化的基本原理</strong>：<strong>卷积的可加性</strong>，对于同一个输入，只要其扫描频率一致（相同的通道数、kernel size、stride、padding），其卷积可过程可以融合。如下公式 1 是一个实数乘特征图和乘卷积是等效的，公式 2卷积核 F1 与 F2 可以被融合为 1 个卷积，卷积核为 (F1+F2)</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>⊗</mo><mo stretchy="false">(</mo><mi>p</mi><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>I</mi><mo>⊗</mo><mi>F</mi><mo stretchy="false">)</mo><mspace width="1em"/></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>⊗</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>I</mi><mo>⊗</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>I</mi><mo>⊗</mo><mo stretchy="false">(</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mspace width="1em"/></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}I\otimes(pF)=p(I\otimes F) \quad&amp;(1)\\I\otimes F^{(1)}+I\otimes F^{(2)}=I\otimes(F^{(1)}+F^{(1)})\quad&amp;(2)\end{matrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4480000000000004em;vertical-align:-0.9740000000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.474em;"><span style="top:-3.634em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span></span></span><span style="top:-2.3859999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9740000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.474em;"><span style="top:-3.634em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-2.3859999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9740000000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h1 id="acnet-的网络结构"><a class="markdownIt-Anchor" href="#acnet-的网络结构"></a> ACNet 的网络结构？</h1><ul><li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005292.png" alt="" /></li><li>上图左边展示 3 个分支的卷积融合为一个等效卷积的过程；右边是卷积融合的过程，主要包括融合 BN (BN fusion) 和融合分支 (branch fusion)两个步骤</li><li><strong>融合 BN (BN fusion)</strong> ：所有 BN 对输入操作一样，不改变输入分辨率，所以利用卷积的线性可加性，将 BN 的过程融合进卷积</li><li><strong>融合分支 (branch fusion)</strong>：同样利用卷积的线性可加性，将多分支的卷积融合为 1个卷积</li></ul><h1 id="repvgg-如何进行结构重参数化"><a class="markdownIt-Anchor" href="#repvgg-如何进行结构重参数化"></a> RepVGG 如何进行“结构重参数化”？</h1><ul><li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005549.png" alt="" /></li><li>1.<strong>卷积层参数</strong>：上图是 REP-VGG 块的结构重参数化过程。为了易于可视化，我们假设 C2 = C1 = 2，因此3×3层具有四个3×3矩阵，而1×1层的核为2×2矩阵</li><li>2.<strong>BN 层参数</strong>：(1)可知 BN 层为每个通道的数据进行规范化，每个通道需要 4 个参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>，输入通道 2 个则有 8 个参数；(2) 当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 均为 0 时，规范化后的数据还是原来的值，这可以用于模拟 identity 路径</li><li>3.<strong>融合卷积与 BN 层</strong>：(1)最难理解的是虚线红框部分，由原来的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 1 \times 1\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 3 \times 3\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> ，也就是单个卷积核由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3\times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，这是通过在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 四周补 0 做到的，因为补 0 后得到的卷积和是不变的；(2) 类似 [[ACNet#^udwpgu|ACNet的网络结构]]的过程，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的部分参数用于重构卷积核的值，部分参数组合成卷积的偏置值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，并且每个通道 1 个值 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005037.png" alt="" /></li><li>4.<strong>利用卷积的可加性，融合多路径</strong>：对应同 size 卷积核的，可以利用卷积的可加性，将卷积融合，具体来说是卷积核矩阵对应相加，偏置值对应相加</li></ul><h1 id="dbb-的网络结构"><a class="markdownIt-Anchor" href="#dbb-的网络结构"></a> DBB 的网络结构？</h1><ul><li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005802.png" alt="" /></li><li>参考 [[GoogleNetv1]] 的 Inception block 的概念，结合结构重参数划的理论，设计了 DBB block</li><li>每个 DBB block 包含 4 个并行的路径，推理时融合成 1 个路径</li></ul><h1 id="dbb-的-6-种模块可以等价转为单个卷积"><a class="markdownIt-Anchor" href="#dbb-的-6-种模块可以等价转为单个卷积"></a> DBB 的 6 种模块可以等价转为单个卷积？</h1><ul><li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082006464.png" alt="" /></li><li><ol><li>Conv-BN 合并：经典的卷积层融合 BN 层的结构</li></ol></li><li><ol start="2"><li>并行合并：参考ACNet的网络结构，卷积核可线性相加</li></ol></li><li><ol start="3"><li>串行合并：参考ACNet的网络结构，卷积核可线性相加</li></ol></li><li><ol start="4"><li>并行拼接：参考ACNet的网络结构，卷积核 kernel size 保持不变，数量是两个分支相加</li></ol></li><li><ol start="5"><li>平均池化转换：平均池化很像卷积核的过程，只不过是求和后加平均而已，直接对卷积核的值除 KxK，后面得到的卷积和就是 AVG 后的值了</li></ol></li><li><ol start="6"><li>多尺度卷积合并：参考ACNet的网络结构，同一将卷积核扩充为 KxK，再进行融合</li></ol></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;结构重参数化的原理&lt;/p&gt;</summary>
    
    
    
    <category term="深度学习" scheme="https://shaogui.life/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://shaogui.life/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="CNN" scheme="https://shaogui.life/tags/CNN/"/>
    
    <category term="结构重参数化" scheme="https://shaogui.life/tags/%E7%BB%93%E6%9E%84%E9%87%8D%E5%8F%82%E6%95%B0%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客速度优化</title>
    <link href="https://shaogui.life/2022/06/15/Hexo%E5%8D%9A%E5%AE%A2%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/"/>
    <id>https://shaogui.life/2022/06/15/Hexo%E5%8D%9A%E5%AE%A2%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/</id>
    <published>2022-06-15T13:05:24.609Z</published>
    <updated>2022-06-15T01:53:14.900Z</updated>
    
    <content type="html"><![CDATA[<p>本文对Hexo博客进行访问优化，使得访问速度更快了，主要是安装hexo-neat插件，实现对html、css、js、image等静态资源的高效压缩。通过压缩这些静态资源，可以减少请求的数据量从而达到优化博客访问速度的目的</p><a id="more"></a><h2 id="资源压缩"><a class="markdownIt-Anchor" href="#资源压缩"></a> 资源压缩<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2><p><strong>安装插件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p><strong>配置插件</strong><br />打开博客根目录文件<code>_config.yml</code>，添加以下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-neat 压缩</span></span><br><span class="line">neat_enable: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩html</span></span><br><span class="line">neat_html:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line"><span class="comment"># 压缩css  </span></span><br><span class="line">neat_css:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">&#x27;**/*.min.css&#x27;</span></span><br><span class="line"><span class="comment"># 压缩js</span></span><br><span class="line">neat_js:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  mangle: <span class="literal">true</span></span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">&#x27;**/*.min.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/jquery.fancybox.pack.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/index.js&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="图片懒加载"><a class="markdownIt-Anchor" href="#图片懒加载"></a> 图片懒加载<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2><p>即文字先出来，图片慢慢出来，显著提高加载速度</p><p><strong>安装插件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure><p><strong>配置文件</strong></p><p>打开配置文件<code>_config.yml</code>，添加以下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图片懒加载</span></span><br><span class="line">lazyload:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> </span><br><span class="line">  onlypost: <span class="literal">false</span></span><br><span class="line">  loadingImg: /images/loading.gif <span class="comment">#如果不填写图片则使用默认的图片</span></span><br></pre></td></tr></table></figure><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.difashi.com/2020-02/20-hexo-neat.html">hexo优化静态JS等资源压缩</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/lfri/p/12221963.html">Hexo-Next提高加载速度</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文对Hexo博客进行访问优化，使得访问速度更快了，主要是安装hexo-neat插件，实现对html、css、js、image等静态资源的高效压缩。通过压缩这些静态资源，可以减少请求的数据量从而达到优化博客访问速度的目的&lt;/p&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="hexo" scheme="https://shaogui.life/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>书摘：《你的知识需要管理》－田志刚</title>
    <link href="https://shaogui.life/2021/04/09/%E4%B9%A6%E6%91%98_%E4%BD%A0%E7%9A%84%E7%9F%A5%E8%AF%86%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86_%E7%94%B0%E5%BF%97%E5%88%9A/"/>
    <id>https://shaogui.life/2021/04/09/%E4%B9%A6%E6%91%98_%E4%BD%A0%E7%9A%84%E7%9F%A5%E8%AF%86%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86_%E7%94%B0%E5%BF%97%E5%88%9A/</id>
    <published>2021-04-09T14:56:59.000Z</published>
    <updated>2022-06-15T01:53:18.432Z</updated>
    
    <content type="html"><![CDATA[<p>一本介绍如何经营自己知识的书籍，从学习知识、保存知识、知识共享、知识使用和知识创新五个方面进行讲述，有一定的借鉴意义。说实话这本书偏工具类，以前拿小屏看没感觉，限制在大屏看，感觉很多内容都是纯粹列举<code>要点</code>，能读进去的很少（也可能我手机看过了）看到作者举例直接跳过了，所以我大概不到一天就翻完这本书了。我认为好的书它是用严密的<strong>逻辑链条</strong>去慢慢跟你讲道理的，不是突然一个例子，突然一个要点，这本书就会卡住我，阅读情绪经常是这样的：读这一部分是“有点道理”，读下一部分是“好像是这样的”，往后是“不是吧”，所以说这本书并没有打动我。之所以说这本书偏工具，是因为书中有部分内容直接教如何使用工具去实践的。</p><p>当然，对于作者管理知识的五个要点我是同意的，这五个要点是循序渐进的，是闭环流动的，作者倡导以下观点我是赞同的，也是我第一次从这本书获得的<code>知识</code>：</p><ol><li><strong>信息与知识有区别</strong></li><li><strong>终身学习以适应社会发展需要</strong></li><li><strong>显性知识隐性化以创造价值</strong></li><li><strong>共享知识以提升个人竞争力</strong></li><li><strong>持续创新以确保价值的独特性</strong></li></ol><a id="more"></a><hr /><p><strong>阅读书摘及笔记：</strong></p><blockquote><p>现在，所谓无知不是指没有知识，而是不会展示自己的知识、不会发挥知识的价值、不会发现新知识、不会学习新知识，也不去创造知识。对于主要靠知识谋生的知识工作者而言，你的知识管理过程是否运转自如，是个人发展和个人竞争力能否持续提升的关键</p></blockquote><blockquote><p>人要靠自己，但靠自己不是依靠自己的体力，而是要靠自己的脑力，靠知识</p></blockquote><blockquote><p>依靠知识绝对不是依靠文凭，也不是依靠你现在掌握的知识量，不要认为掌握了某些知识就可以一劳永逸地解决你一辈子的问题。个人可以依靠的知识，是指在一定的知识基础上，能够随着社会环境的变化，不断确定自己的专业方向并快速学习知识、分享知识、使用和创新知识并创造价值的过程，这个过程就是对你的知识进行有效管理的过程，也是提升你的知识力的过程。现在每个人都必须要考虑自己如何快速学习知识、学习什么知识、如何保存掌握的知识、如何分享知识给你的合作伙伴、如何使用和创新知识</p></blockquote><blockquote><p>对于知识的爆炸，解决的方式是你要明确自己的知识需求。知识虽多但人生有限，如果知识不能被你所用，不能成为“你的知识”，这些知识对你也没有作用</p></blockquote><blockquote><p>知识又可以分为显性知识和隐性知识。所谓显性知识是指能够用语言、文字、肢体等方式表达清楚的知识；而隐性知识则是虽然知道如何做，但却很难告诉别人或者写明白、说明白的知识。从掌握知识的角度讲，大量的知识以隐性的成分存在着，而能显性化的部分较少。你虽然知道某个事情是怎么样或者如何做，但如果让你讲出来，你可能发现能够表达的会很少，如果进一步要求你写出来，可能能写的就更少了。古语“书不尽言、言不尽意”就是这个意思，是说你能写的要比能说的少，能说的要比你知道的少，本质上就是显性和隐性知识的问题</p></blockquote><blockquote><p>隐性知识和显性知识之间存在着相互转换的过程</p></blockquote><blockquote><p>隐性知识显性化应该成为现代人的一项必备能力，如果你不能显性化你的知识，就无法建立你的竞争力。为什么中医中药很难做大，一个很重要的原因是它们主要依靠隐性知识作判断，所以传承、复制的难度较大，因此就很难快速发展</p></blockquote><blockquote><p>隐性知识还有一些特点，了解这些特点对于你管理自己的知识很有价值。</p><ul><li>你的隐性知识可能只是对你自己是隐性的，对于其他人、其他的机构可能已经是显性知识，这就需要你在前人基础上进行学习，明白是否已经有类似的显性知识；</li><li>隐性知识需要环境（此时、此地），并非永远是隐性的；</li><li>谁能将隐性的知识最先显性化，谁就是知识创新的开拓者。譬如许多大师的创新，多年后也有不同的人表达，但前者是大师，因为他最早将隐性知识显性化；</li><li>隐性知识显性化能力成为人与人之间能力差别的重要方面。将自己的隐性知识显性化应该成为每个知识工作者应具备的能力之一；</li><li>隐性知识显性化需要需求、环境等外力的作用，外力的拉动加上个人显性化的意愿，可以促进隐性知识显性化的过程；</li><li>社区是促进隐性知识显性化的环境；</li><li>隐性知识显性化的方法：讨论、回答提问、需求的压力、工作分解、流程分析等；</li><li>不能用通俗、简单的语言和文字表述知识，表明对该领域知识掌握得不够深入。</li></ul></blockquote><blockquote><p>知识与信息不同，知识除了要靠经验去消化汇集来的信息，还要去验证、思考，甚至在亲身体验过程中，去发现问题、解决问题</p></blockquote><blockquote><p>在当今时代下，个人的成长和发展以及个人竞争优势的建立，绝对不是靠信息的数量（虽然缺乏信息和获取信息的能力可以成为一个人发展的劣势）。不要以为你整天在互联网上就掌握了知识，互联网上的信息和知识你能获得我也能获得，互联网上有显性的知识也有信息，显性的知识必须跟你个人的原有知识结合起来，转化成你的隐性知识，加上对环境的判断才能发挥作用。</p></blockquote><blockquote><p>学历可以作为你知识水平的一个表现，但其表达的只是在某时、某地的知识存量，是否能持续地更新知识、是否能持续地共享和传播自己的知识、是否能将已有的知识用好用足来获取价值、是否能持续地创新知识引领发展，只有这些才是个人竞争力的源泉</p></blockquote><blockquote><p>但我们满足于仅仅不是文盲吗？虽然你学习了众多知识，但单位里领导不重视你、同事不跟你合作，你的知识有用吗？如果你掌握了众多知识，但你的知识不会利用，甚至不能给你换来养家糊口的钱，更不用说成就自己的事业，这样的知识有用吗？如果你总是学习别人的知识，读死书、死读书，在别人后面亦步亦趋，不能进行知识创新，那你的竞争优势在哪里？</p></blockquote><blockquote><p>人只能依靠自己，而依靠自己最重要的一点是依靠自己对个人知识过程的管理。只有对整个知识过程的管理才是现代人发展竞争力和竞争优势的源泉</p></blockquote><blockquote><p>不学习当然不行，但学习也不一定行。你必须知道要学习什么知识，获取什么知识；同时，学习任何领域的知识必须达到一定的深度，否则你的知识就是常识。而常识怎么可能给你带来个人的竞争优势呢？</p></blockquote><blockquote><p>终身学习的理念在20世纪中叶就被明确地提了出来，因为人们发现技术、知识的快速更新不仅影响了生产、流通和消费等领域，而且影响到每个人的日常生活。若要与之适应，人们就必须用新的知识、技能和观念来武装自己。终身教育强调现代人必须不间断地进行学习，更新个人知识，才能保持适当的应变能力，保证个人竞争力</p></blockquote><blockquote><p>更进一步说，学习本身不是目的。学习知识是为了我们能够工作、生活得更好，更幸福，能帮助我们度过快乐的一生。学习的目的是为了提高我们个人的竞争力，使我们能够在这么多的知识工作者当中脱颖而出，取得自己的成就</p></blockquote><blockquote><p>确定你的学习方向</p><ul><li>第一，你的价值观是什么？</li><li>第二，你的个人目标是什么?</li><li>第三，你的性格是什么？</li></ul></blockquote><blockquote><p>现在信息和知识越来越多，所以你在学习的时候需要确定自己的方向。在确定方向后，你就需要在你确定的方向上正向积累，争取成为一个领域的专家</p></blockquote><blockquote><p>你的学习方法模型</p><ul><li>第一，掌握该领域的基础知识。</li><li>第二，了解该领域的全貌。</li><li>第三，跟踪并掌握该领域的最新知识。</li><li>第四，在实践中学习和创新。</li></ul></blockquote><blockquote><p>人们下载的知识是显性知识的一种表现形式，对于这部分知识，如果没有被你处理过（阅读，知道是什么；思考，知道对你有什么用），根本不可能成为“你的知识”，根本不会对你产生一点点作用，只会让你“淹没在知识中”而无法自拔</p></blockquote><blockquote><p>只有那些符合个人发展目标的知识，只有经过自己的阅读、思考后保存的知识才有价值，这样的知识保存才是有价值的保存</p></blockquote><blockquote><p>任何人都有区别于他人的优势，你怎么突出自己的优势、特点和能力，怎么让更多的人知道你、了解你、认识你、信任你，方法就是共享你的知识，通过知识影响别人。更深入地说，我们现在的大部分工作都需要与人协作才能完成，通常人们会选择什么样的协作对象呢？比如招聘新员工或者提升一个经理，可想而知一定会是自己了解的人、信任的人！所以每个知识工作者都应该去主动共享和传播自己的知识，愿意将自己的知识显性化，这一方面会促进自己的学习，另一方面也能为树立自己的个人品牌发挥作用。</p></blockquote><blockquote><p>共享知识的好处</p><ul><li>故事一：共享带来合作</li><li>故事二：共享协助找到工作</li></ul></blockquote><blockquote><p>能共享出来才能真正掌握</p></blockquote><blockquote><p>在现实中，很多时候我们以为自己知道，但是当我们用语言说出来或者写出来的时候，你却会发现自己很难说得系统、完整，很难让别人明白。造成这种状况的主要原因是你对该知识点的掌握并没有达到你所认为的那样成熟，这时候你应该再去深入学习、研究这个知识点，经过更多的实践和与人交流，更广泛的阅读、讨论，才能慢慢地成熟起来。</p></blockquote><blockquote><p>仅有显性知识是不够的</p></blockquote><blockquote><p>个人知识的价值由两个因素决定：</p><ul><li>第一个因素是你的知识的独特性。知识的独特性也分两种，第一种是专，在某个方向上深入，别人都不如我深，所以我有独特性，比如读博士基本上是这个意思。还有一种是博，我既会拍电影又会画画，还会说相声、做木匠，这样的人以综合优势树立自己的独特性</li><li>第二个因素是社会对知识的需求</li></ul></blockquote><blockquote><p>让你升值的三个绝招</p><ul><li>第一，向前看三年。</li><li>第二，持续提高你知识的独特性</li><li>第三，通过知识共享树立你的个人品牌。</li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;一本介绍如何经营自己知识的书籍，从学习知识、保存知识、知识共享、知识使用和知识创新五个方面进行讲述，有一定的借鉴意义。说实话这本书偏工具类，以前拿小屏看没感觉，限制在大屏看，感觉很多内容都是纯粹列举&lt;code&gt;要点&lt;/code&gt;，能读进去的很少（也可能我手机看过了）看到作者举例直接跳过了，所以我大概不到一天就翻完这本书了。我认为好的书它是用严密的&lt;strong&gt;逻辑链条&lt;/strong&gt;去慢慢跟你讲道理的，不是突然一个例子，突然一个要点，这本书就会卡住我，阅读情绪经常是这样的：读这一部分是“有点道理”，读下一部分是“好像是这样的”，往后是“不是吧”，所以说这本书并没有打动我。之所以说这本书偏工具，是因为书中有部分内容直接教如何使用工具去实践的。&lt;/p&gt;
&lt;p&gt;当然，对于作者管理知识的五个要点我是同意的，这五个要点是循序渐进的，是闭环流动的，作者倡导以下观点我是赞同的，也是我第一次从这本书获得的&lt;code&gt;知识&lt;/code&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;信息与知识有区别&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;终身学习以适应社会发展需要&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;显性知识隐性化以创造价值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共享知识以提升个人竞争力&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续创新以确保价值的独特性&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>书摘：《群体性孤独》-[美] 雪莉·特克尔</title>
    <link href="https://shaogui.life/2021/04/08/%E4%B9%A6%E6%91%98_%E7%BE%A4%E4%BD%93%E6%80%A7%E5%AD%A4%E7%8B%AC-[%E7%BE%8E]%20%E9%9B%AA%E8%8E%89%C2%B7%E7%89%B9%E5%85%8B%E5%B0%94.hexo/"/>
    <id>https://shaogui.life/2021/04/08/%E4%B9%A6%E6%91%98_%E7%BE%A4%E4%BD%93%E6%80%A7%E5%AD%A4%E7%8B%AC-[%E7%BE%8E]%20%E9%9B%AA%E8%8E%89%C2%B7%E7%89%B9%E5%85%8B%E5%B0%94.hexo/</id>
    <published>2021-04-08T15:28:05.000Z</published>
    <updated>2022-06-15T01:53:19.098Z</updated>
    
    <content type="html"><![CDATA[<p>这是一本思考人与机器，人与网络关系的书籍，主要认识有：</p><ol><li>在当今互联网飞速发展下，把越来越多的人联系在一起，人们非但没有感觉更加<code>热闹</code>，而是更加孤独，这就是所谓的群体性孤独！！！</li><li>人们越来越期待<code>虚拟世界</code>和<code>弱联系</code>，对面对面的交流越来越抵触，比如如今网上<code>廉价的道歉</code>；</li><li>互联网是用来提高工作效率的工具，但是我们却没有被解法，反而被它束缚，要求我们<code>时刻在线</code>；</li><li>互联网犹豫荆棘丛林，各种想法、链接、图片缠绕在一起，沉迷其中就会让我们没有办法更加深刻地思考当下，太容易随波逐流；</li><li>互联网作为新生事物，完全抛弃肯定不行，但是必须时刻警惕它对我们的影响</li></ol><p>一个搞IT，搞AI的人，居然去看这类书，我都无法找到当初的原因，或许是前方路太黑，需要灯光，或许是当下被互联网所累，学习如何更加有效利用它！</p><a id="more"></a><hr /><p><strong>阅读书摘及笔记：</strong></p><blockquote><p>哈佛大学心理学教授霍华德·加德纳在30年前提出了著名的多元智能理论，认为人的智能不是简单的一种，而是由8种相互独立的智能构成的。它们分别是：语言智能、音乐智能、逻辑智能、空间智能、身体智能、自省智能、交流智能和自然智能。</p></blockquote><blockquote><p>与森林等自然环境的境遇相反，计算机和互联网正在成为人类赖以生存的新环境。和与自然接触会产生自然智能相同，我们与计算机和互联网接触会产生机器智能（不是传统意义上的能思考的机器，而是人们如何更好地驾驭机器的智能）、网络智能（不是网络里产生的群体智能，而是人们如何更好地利用网络解决问题的智能）。机器智能、网络智能的智商高低，未来在很大程度上会决定一个人的命运。</p></blockquote><blockquote><p>技术是极具诱惑力的，因为它能弥补人性中脆弱的一面。而我们的确是非常脆弱、敏感的物种。我们时常感到孤独，却又害怕被亲密关系所束缚。数字化的社交关系和机器人恰恰为我们制造了一种幻觉：我们有人陪伴，却无须付出友谊。在网络世界中我们彼此连接，同时也可以互相隐身。</p></blockquote><blockquote><p>发现人们不仅十分认真地把机器人视为宠物，还视为潜在的朋友、知己，甚至是虚拟的情人。我们并不关心机器人对人类与他们“分享”的情感能“知道”或“理解”多少。在机器人时代，只要人与机器连接的表演看起来足够多就行了。我们毫无偏见地、泰然自若地与毫无生命的机器连接在一起。这让我想起了一个短语：“技术滥交”</p></blockquote><blockquote><p>一个30岁的男人评论说：“我更愿意和一个机器人说话。和朋友们交往太累，使我筋疲力尽。机器人会一直陪伴着我，而且任何时候只要我想好了，我都可以脱离这段关系。”</p></blockquote><blockquote><p>社交机器人的发明说明人类兜了一个大圈子，还是无法摆脱对亲密关系的渴望。人们看起来很心甘情愿地相信：如果我们疏远或是忽视了彼此，机器人会补偿我们，程序早就设定好了，他们会带来虚拟的爱。当我们逐渐衰老，机器人会伺候我们；当我们的孩子无人照看，机器人会照料他们；当我们在逆境中精疲力竭而不能互相支撑时，机器人会给予我们能量。机器人不会对我们评头论足，我们得到前所未有的接纳和包容。</p></blockquote><blockquote><p>有了技术，我们惊讶于世界之“苍白”，无事表达，无人取悦。当一个化身在网络游戏里与另一个化身整晚交谈之后，在某个时刻，我们感到完全拥有一份真实的社会生活，然后接下来，在与陌生人牵强而脆弱的联系里，莫名地感到孤独无援。</p></blockquote><blockquote><p>用技术来处理亲密关系，人际关系会被弱化成仅仅是联系而已。而在此之后，简单的联系会被重新定义为亲密。换句话说，网络亲密（cyberintimacies）滑向了网络疏离（cybersolitudes）</p></blockquote><blockquote><p>在机器人的陪伴下，人们是孤单的，但也感到与他人连接在一起。在这种孤单的环境中，出现了一种新型的亲密关系。</p></blockquote><blockquote><p>人们通过移动设备把自己牢牢地拴在网络上，从而获得自我的新状态。第一种状态是“逃离现实世界”：也许他们正在你身边，但他们的精神已经游离到了另一个世界；第二种状态是“双重体验”：人们能够体验到“虚拟与现实的双重人生”；第三种状态是“多任务处理”：人们由于可以同时处理多种事情而赢得了更多时间。</p></blockquote><blockquote><p>我开始意识到，获取关于专业问题和需求的新信息并不是开始和结束一天的好方法。</p></blockquote><blockquote><p>人们通过移动设备把自己牢牢地拴在网络上，从而获得一种自我的新状态。从一开始，它就意味着某种授权：它可以从现实环境中脱离——包括其中的人。它能同时体验到现实世界和虚拟世界。而且它能通过多任务处理产生更多时间，这是我们21世纪的魔法。</p></blockquote><blockquote><p>今天的年轻人生活在“永远在线”状态，他们期待着被“打扰”。网络技术改变了人们对“分开”的理解，也让年轻人失去了“独处”的机会</p></blockquote><blockquote><p>现在的年轻人伴随着机器人宠物成长，处在一个完全被网络束缚的环境中。他们认为自己是新兴人类，也是对虚拟化生存没有任何偏见的第一代人。他们看出了网络化生活的巨大力量——毕竟他们冒着生命危险去查看网络上的信息。</p></blockquote><blockquote><p>现在的青少年也要像前辈们一样学会表达情感，去思考人生的价值和自我的意识，他们也需要学会管理和表达自己的情感，需要时间去发现自己，去思考。但是科技的发展带来了永远在线的传播服务以及快餐式的文字和图像，这完全改变了原有的规则。什么时候该停下来？什么时候该寂静无声？文字短消息的快速回复，并非不能让年轻人在人际互动中进行自我反省，但作用的确较小。当人际交互要适应小屏幕、情绪需要通过情感符号表达时，的确存在着简化的必要。</p></blockquote><blockquote><p>根据传统，生活在城市里的孩子在成长的过程中都有一个重要的经历：第一次独自游览这个城市。这个经历是一种成人的仪式，孩子们从此需要对自己负责了。即使感到恐惧，他们也需要独自承担这种感受。而如今手机的存在减轻了这个仪式带来的恐惧感。</p></blockquote><blockquote><p>青少年的独立不仅仅意味着和父母分开，也包括和同龄人分开。他们要体会友谊既是一种支持，也是一种束缚</p></blockquote><blockquote><p>人际关系有着复杂的多面性。网络的虚拟生活为个人提供了足够的空间，同时也让青少年难以从新的群体需求中逃脱。年轻人很自然地期待他的朋友们可以随时在线——这是一种由技术进步引发的社会契约，要求同龄人随传随在。因此，受到束缚的自我也开始习惯于此</p></blockquote><blockquote><p>社会学家大卫·理斯曼（David Riesman）在20世纪50年代中期写道：美国人的自我感觉从内在转向了受人支配。人们没有坚定的内在目标，依赖伙伴寻找对其自身的肯定。如今，随身携带的手机增长了受人支配的态势。在开始有一个想法或一种感觉时，我们向别人证实，几乎是提前证实。人际交流也许是简短的，但是更多的交流大可不必。人们的需求只是希望随时可以保持联系</p></blockquote><blockquote><p>自恋时并不是指那些爱自己的人，而是指脆弱的个性，拥有这种个性的人需要源源不断的外界支持来进行自我确认。这种个性的人不能容忍别人的复杂需求，却试图通过扭曲别人的身份，分离出自身需要的和能用的东西，以此来与他们建立联系。因此，自恋者仅以量身定做的表达来与别人交往</p></blockquote><blockquote><p>一个脆弱的人也可以通过选择性和限制性的与人接触，从而获得支持（也就是通讯录中最受欢迎的人）</p></blockquote><blockquote><p>精神病学家罗伯特·杰伊·利夫顿（Robert Jay Lifton）是埃里克森的学生，他对成熟自我的看法与老师不同。他称成熟自我是千变万化的，强调多面性。这个自我，是“流动的和多面的”，可以接受和修饰不同的思想和观念。当被赋予多元的、彼此毫不相干的、全球性的事物时，这样的自我可以变得活跃起来。</p></blockquote><blockquote><p>在网络空间的不和谐声中形成的自我不是多变的，而是幼稚的。而如今我认为，在这样的文化背景下成长，会让他们以自恋的方式与世界建立联系。</p></blockquote><blockquote><p>当我注册Facebook时，这个网站对我来说还很新鲜，我会把第一感觉记录下来。现在看来，我的第一感觉稀松平常：我在交友计划A和交友计划B之间游离不定。计划A是我只在这个网站上联系我认识的人；计划B是我会接受所有人的好友请求，因为他们都表示很欣赏我的工作。我前几周执行了计划A，转而又选择了更具包容性的计划B，因为我为吸引了众多陌生人的注意力和称赞而沾沾自喜</p></blockquote><blockquote><p>发短信让人有一种安全感，并且可以通过细心斟酌而展现出一个期望的自我。但虚拟空间对“道歉”等现实问题是无能为力的。打电话意味着你在全神贯注地做一件事，也意味着一种“交谈”能力。声音传递情感，我们却巴不得让声音在生活中消失</p></blockquote><blockquote><p>在短信、留言和电子邮件中，我们隐藏的内容不比我们表达的内容少。我们可以把自己更好的一面展示给别人，也可以更快、更容易地处理好一件事。聆听只会使我们节奏放慢。</p></blockquote><blockquote><p>在网络世界中，当你身处多玩家角色扮演网络游戏的时候，你不仅技艺精湛、光芒四射，更重要的是，这种行为使你处在一个新的群体当中，有虚幻的好朋友和一种归属感。人在虚幻的世界里会感到比在现实中更加自在，因为他们觉得在虚拟的世界里可以秀出一个更加优秀、更加真实的自己。随着这一切的发生，谁还愿意身处现实之中呢？</p></blockquote><blockquote><p>对网络生活进行思考的过程有助于区分心理学家所说的“演练”和“实践”。“演练”时，你首先将现实生活中所遇到的冲突提取出来，然后将其在虚拟的世界里一遍又一遍地进行表现。此事重复量很大，却只有微不足道的进步。而在“实践”时，你运用网络上的一些素材来应对现实生活中的矛盾并寻找新的解决方案。</p></blockquote><blockquote><p>有些人会选择去“告白网站”排解孤独。人们宁愿在网上对着陌生人忏悔和释放情感，也不愿意直接面对你所伤害的人给他一个真正的道歉。实际上，网上告白没有想象的那么好，人们只是为了感觉良好而用“分享”避开“孤独”。</p></blockquote><blockquote><p>我们所抱怨的人际关系，也是连接我们和真实生活的纽带。我们的情感宣泄运用了一种极端的手段。人们会善意地对待陌生人。寂寞和孤单是如此难以忍受，以至于和在网络虚拟世界认识的网友结婚，似乎竟然成为了我们最好的希望</p></blockquote><blockquote><p>将负能量释放出来可以减轻它的毒副作用；而这样的情感释放不需要与真人交互即可完成。在两种情况中，告白看上去都越来越像对话，情感宣泄看上去越来越像分享。</p></blockquote><blockquote><p>道歉所包含的基本要素为修补关系打下了重要的心理基础——不仅对于被伤害者，也包括伤害者本身。首先你必须知道你冒犯了别人，你承认自己的行为可能给对方造成伤害，你必须问你自己如何做才能弥补。</p></blockquote><blockquote><p>科技模糊了告白和道歉的界线，很容易让我们忘记道歉的真正含义，不只是因为在线空间提供给他们一个面对其他人的“廉价道歉”的选择，同时也因为我们会认为道歉本身已与他人无关。在这样的情况下，我们忘记了我们的行为可以影响到他人。</p></blockquote><blockquote><p>对不起’这3个字太难。如果你是那个收到道歉的人，你知道对于一个人来说，让他当面说出‘对不起’是很困难的。但是正是如此，才让我们可以原谅一个人，他们亲自说出来，说明他们内心还是有勇气想道歉的</p></blockquote><blockquote><p>像与机器人的交流，在线告白有吸引力是因为某些沉默的人想诉说隐秘的情感。但是如果我们通过这些网站把它们“释放出来”来解除我们的忧虑，我们就不必精确地明白这些情感的背后是什么。我们没有运用我们的感情资源来建立对我们可能有帮助的持久关系。我们不能因为这种状况而责备技术。人们对彼此失望。技术仅仅能使我们创造一个无关紧要的神话。</p></blockquote><blockquote><p>焦虑成了这种新型沟通模式的一部分。然而，当我们谈起移动通信改革的时候，我们习惯对以前的事物进行“尊敬的”贬低，而把新鲜事物理想化。就拿在线阅读来说，因为它可能导入链接和其他一些超文本，所以常常有着一个英雄般必胜的传言，而书本却被蔑称为“孤立的”</p></blockquote><blockquote><p>朱莉娅还是情不自禁地在MySpace上搜索着父亲的大家庭——他的父母、兄弟姐妹、表兄弟姐妹、叔叔及阿姨等。她说她不会跟其中的任何一人联系，至少在她和父亲邮件交流之前不会。她不知道是否MySpace能够缝合幼年时代被撕裂的那份感情。</p></blockquote><blockquote><p>我和我的朋友们都觉得如果没有手机，感觉就像一无所有，毫无防备。”对于一无所有，毫无防备的自己，就仿佛置身于危险处境。失去联系，便如此脆弱。</p></blockquote><blockquote><p>短信是如此有诱惑力。因为它产生了一个附带自己要求的承诺。这个承诺是：你发送短信的那个人会在几秒钟内收到你的短信，而不管他或她是否“空闲”，他都能够看到你的短信。其附带的要求是：当你收到一条短信时，你就要去关注它（也许你正在上课，这意味着你要低头偷偷地瞟一眼静音的手机）并且在第一时间内给予回复。</p></blockquote><blockquote><p>短信这种介质适合快速传达简单的陈述，而对于开始一段蕴含复杂情感的对话则不是那么合适</p></blockquote><blockquote><p>电话交流是如此个人化，是因为在打电话的过程中，你没有时间去坐下来考虑你将要说些什么。你所要说的话都是你真正要表达的东西。如果某人发送给你一条短信，你还有一两分钟时间来考虑你将在回复里写些什么。如果你是在一个现实的谈话中，如果你一两分钟还没有说出一句话，过了几分钟你才回答，那将是非常尴尬的。这就是我喜欢打电话的原因。我更喜欢某人是诚实的，如果你在打电话，你就完全把自己暴露出来，但同时这也比其他方式更好。</p></blockquote><blockquote><p>这些年轻人渴望时间、接触、关注，以及直接的沟通。他们想要生活中少一些伪装，他们怀念面对面打交道，而且每次只专注做一件事的世界。这听起来充满了讽刺的意味，因为他们这一代人最大的、也曾经是最引以为豪的特征就是“一心多用”。</p></blockquote><blockquote><p>斯托尔说，人类的“创造过程”机制奇特，“到目前为止，新的想法产生频率比较高的状态是冥想状态，介于走路和睡眠之间。在冥想的心理状态下，思绪和画面可以自发地组合演变……创造者可以完全放松身心，让大脑内自行产生化学作用”。但是在数字化时代，安静和独处却很难获得。</p></blockquote><blockquote><p>如果你想拥有一个不被打扰的交流和沟通的环境，你最好亲自找那个人面对面地谈。如果没办法直接见面那就打电话。但是如果你是坐在电脑前在网上和别人交谈，那就有很多东西可以打断你的谈话，因为互联网上有如此多的比谈话更有趣的东西在吸引着你</p></blockquote><blockquote><p>梭罗写道：“我步入丛林，因为我希望生活得有意义。我希望活得深刻，吸取生命中所有的精华，把非生命的一切都击溃。以免当我生命终结时，发现自己从没有活过。我不想过一种不能称之为生活的生活，活得太甜蜜，我也不想试着顺从，除非那真的有必要。</p></blockquote><blockquote><p>《连线》杂志创始主编凯文·凯利说，他发现在网络上可以恢复精力。他在网络的树荫下，身心得到休憩：“有时候我进入网络的原因只是为了主动地迷失自己，温柔地向网络的未知世界投降，暂时忘却自己确信的周遭生活。尽管人们设计互联网有着明确的目的性，网络却依然是狂野的，它的边界是未知的，它的神秘数不胜数。荆棘缠绕般的各种想法、链接、图片创造了一片茂密的丛林。网络好像是有生命的。</p></blockquote><blockquote><p>撰写自己在社交网站上的自我简介、用即时聊天工具聊天，没有比这种“艰苦”的劳动更为“深刻”的了。人们在线的大多数时间都是在潜水漫游、跟随链接、伸出随机的“触须”。一个人在朋友的网络相册里晃来晃去，然后又到其他朋友的相册里面，在一个几乎不认识的人发布的信息下面留下评论。梭罗抱怨人们总是太过于急着和别人分享观点。而在虚拟世界中，Facebook总是鼓励我们随时分享“我们大脑里面存在的东西”，无论这些思想是多么的无知，或者多么浅薄，然后它会帮助我们传播给最广的听众。每天，我们被其他人“随机”的想法所轰炸。我们已经对这种“宣泻”司空见惯。所以尽管网络身份以及个人简介都是经过了深思熟虑的设计，但是人们最终感觉唯一深思熟虑的东西只是自己投身网络的决定。做完这个决定之后，人们开始在网络的洪流中随波逐流了</p></blockquote><blockquote><p>对于那些一直保持在线的人来说，尽管有很多问题（比如像表演一样的生活，比如失去了面对面察言观色的能力），但随时有人陪伴也带来了许多欢乐。而对于那些没有连网的人来说，即使是在自己家乡的大街上，他们也会有一种怪异的孤独感。</p></blockquote><blockquote><p>神圣空间”这个词语成为了我关注的重要概念。他们中的每一个人都保持着自己的专业生活，纯洁而不受污染。他们之所以这样做，是因为他们想要和虚拟保持距离。在那个空间里，他们能最大化地感觉到他们最完整的自己。</p></blockquote><blockquote><p>一个神圣的空间不是为了躲藏自己，而是一个我们认识自己和责任的地方</p></blockquote><blockquote><p>我们对科技的期待越来越多，对彼此的期待却越来越少。我们正处于一个完美风暴的静止中心，浑然不觉已成了科技的奴仆。我们不会放弃互联网，也不可能一下子 “戒掉”手机。我们自己才是决定怎样利用科技的那个人，记住这一点，我们就一定能够拥有美好的未来。</p></blockquote><blockquote><p>我们已经变成了电脑的“杀手级”应用程序</p></blockquote><blockquote><p>我们在网络上很容易找“同伴”，但是我们却被“自我表演”的压力搞得疲惫不堪。我们虽然享受着不间断的联系，却极少给予彼此全部的注意力。我们可以随时获得关注，却为不断出现的新缩略语所累。我们很喜欢网络“懂”我们，但是这只有在个人隐私问题上做了妥协才会有可能</p></blockquote><blockquote><p>网络生活留下了大量的“电子面包屑”，一些公司可以为了商业或政治目的而进行开发。我们在网络上会有很多新的邂逅，但是这种关系都是短暂的，如果有新的或者更好的邂逅出现，那些以前的都将被尘封。事实上，新的邂逅并不一定是更好的，因为我们仅仅是喜新厌旧。我们随时连线，对新鲜事保持积极地回应。我们可以在家里办公，但是工作也同时渗入到私人生活中，直到我们几乎不能分辨出它们之间的界限。我们能够瞬间连接彼此，但是我们有时却不得不藏起我们的电话，强迫自己去享受片刻的安宁</p></blockquote><blockquote><p>科技带来的高生活节奏让我们疲惫不堪，我们考虑通过更新、更高效的技术把我们从中解救出来。但是新的技术设备却带来更大的信息量和传播速率。在这种速率递增的需求的背景下，其中一件让我们感到满意的事情就是用技术来连接远方的人们，或者更为精确地说，是连接很多来自远方的人</p></blockquote><blockquote><p>通过互联网所形成的连接并没有把我们联系得更紧密，这些连接却让我们沉迷其中无法自拔。我们会在晚餐的时候忙于发短信。当我们慢跑散步的时候，当我们开车的时候，当我们在公园陪孩子荡秋千的时候，我们都在发信息。我们不想打扰别人，因此我们不停地打扰别人，只是非“实时”罢了</p></blockquote><blockquote><p>当这些情感聚集在一起时，可能就形成了“后家庭主义时代的家庭”。家庭成员很孤独地待在一起，每个人都在自己的房间里，每个人都在用电脑或者手机等移动设备上网。我们因为忙碌而使用网络，但是却和技术一起花费了更多的时间，而与现实生活中的人们之间花费的时间越来越少。我们坚信网络连接是接近彼此的方法，即使它也是同样有效地躲避和隐藏彼此的方法。在这个限度内，如果必须要减少与现实中人们相处的时间，我们会满足于这种无生命的东西</p></blockquote><blockquote><p>我们，创造和赋予了机器人生命，并且开始谈论机器人的情感，甚至它们的“真实性”。如果我们关注的是机器人能够唤起我们自己内心的情感，那么这么做是可以的。但是我们常常忽略的问题是：“机器人的感受是什么？”我们知道机器人不能感受：他们不能感知到人的感情变化，或者人类关系的流动性。事实上，机器人什么也感受不到。而我们关心这个吗？或者它们表现出有感觉的样子，对于我们来说足够了吗？为什么我们情愿和那些既不能理解、又不能关心我们的机器人交谈？</p></blockquote><blockquote><p>理解ELIZA受欢迎不仅是因为人们愿意和机器交谈，它也说明人们变得不愿意和彼此交流。机器人保姆提供了一种新的可能，那就是我们可以逃离彼此，也可以很好地生活下去。当我们期待着电脑法官、电脑顾问、电脑老师或者电脑牧师时，我们事实上是对那些根本不关心我们、带着偏见对待、甚至虐待我们的人表达了失望。正是对于这些人的失望让机器人的“关心”看上去足够真实。我们心甘情愿地忽略机器人缺乏理解力的弱点，对这一点置若罔闻，转而去努力地让它看上去似乎更加善解人意。所有的这一切是为了创造一个假象—— 一个可以替代人类存在的东西。这就是更深层次的ELIZA效应。对于ELIZA的信任不仅说明了我们认为ELIZA程序可以理解我们，更说明了我们对彼此缺乏信任。</p></blockquote><blockquote><p>我们生活在繁荣的社交媒介文化里，我们梦想着社交机器人。尽管彼此连接，我们却依旧孤独，只能送给自己科技情人。如果网络生活太过严苛，那么机器人则总和我们在一起。想拥有机器人伴侣既是病症，也是梦想</p></blockquote><blockquote><p>就像其他心理学病症一样，它 “解决”问题但却未阐明问题。我们将会获得机器人的陪伴，却不必承担类似于人与人之间亲密关系所带来的风险。机器人暴露了我们希望能够控制社交关系的愿望，这正是我们的梦想</p></blockquote><blockquote><p>这种病症常常携带着大量的信息，以至于让人难以承受。为了承受这种恐惧，病症会把这些信息伪装起来，人们就不必每天都面对这些恐惧。所以，感觉持续的饥饿要比明白你的妈妈没有养育你更加“简单”。被超市排的长队弄得满心怒火，比处理你的配偶没有给予你所需要的关注更“容易”。当科技变成了一种病症，它就切断了表面现象和挣扎背后的真正原因之间的关联</p></blockquote><blockquote><p>俄狄浦斯（Oedipus）的神话故事。作为一个传统的、广为人知的故事，人们通常会认为俄狄浦斯因为追求知识而被惩罚——尤其是关于他出身的知识。卡珀说俄狄浦斯被惩罚另有原因——他拒绝承认知识的局限性。类似的问题也出现在我们对科技的态度上。我们失职并非因为我们试图建设一个新的东西，而是因为我们不允许自己去考虑新科技瓦解了什么。我们并不是因为发明和创造而陷入麻烦，而是因为我们认为它可以解决一切问题</p></blockquote><blockquote><p>我发现自己对网络充满了感激。它是一位坚定的施恩者，永远都在那里。我用不安分的手指爱抚它，它挑起了我的欲望，就像一个爱人一样……我想一直沉浸在它深不可测的广度之中。停留在那里，醉心于它梦幻般的怀抱里。向网络投降就像去土著丛林徒步旅行。不合逻辑的梦慰藉着你。在这个梦里，你在不同的页面和想法中穿梭跳跃。网络的白日梦已经深深地触动了我，让我感动并且搅动着我的心。</p></blockquote><blockquote><p>网络的连接性可以平复我们心灵最深处对孤独、失去和死亡的恐惧。这是一种令人欣喜的东西。但是连接也破坏了与原本维系我们的东西之间的联系，比如面对面的人际交流的价值</p></blockquote><blockquote><p>科技给了越来越多我们认为自己想要的东西。如今我们可以很容易地找到社交机器人和数字化的朋友。有人或许认为我们需要什么，它总在我们的所及范围内，我们永远也不会感到孤独。还有人假定我们想要的是大量的弱联系，支撑在线熟人关系的、非正式的网络关系。但是倘若我们真正思考我们认为自己想要东西的后果，我们才会了解我们真正想要的是什么。我们也许想要一些安静和独处的时光</p></blockquote><blockquote><p>正如梭罗提出的那样，我们也许想要生活少一些“拥挤”，等待更多不常发生的、但是很有意义的面对面邂逅。因为我们把很多时间花费在打字上面——用所有的手指或者只用拇指，我们会怀念人的声音。我们也许觉得和一个机器人下象棋也不算太坏，但是机器人却无法代替任何关于家庭或者朋友之间的谈话。一个机器人或许有需求，但是倘若要理解人的欲望，则需要语言和有血有肉的身体。因此，要进行这样的谈话，我们必须有一个真正的朋友，首先重要的是，他可以明白生命的真正含义，理解父母和家庭的含义，理解成年人之间爱的含义，理解对于子女的渴望，并且可以理解生老病死是不可避免的事情</p></blockquote><blockquote><p>现实生活中的人做事遵循一致性原则，所以当我们的关系进展顺利时，改变是逐步的，作用是缓慢的。但是在虚拟的网络生活里，所有关系的节奏加快了很多。一个人会很快从迷恋到幻灭，然后又回来，并在这个过程中来回穿梭。一个人如果在现实生活中感到有些无聊，很容易就能和一些新朋友联系上。一个人匆忙地阅读一长串邮件，并学会如何抓住“亮点”。夸张的标题往往能吸引注意力。在网络游戏里面，人物的动作总是被精简到一个从惊恐到安全、然后如此反复的模式。一个令人恐惧的邂逅自动完成，处理完了一个之后你可以重新组队，然后又用一个新的人物。我们的肾上腺素不停地向上冲，在这里没有所谓的“空闲时间”</p></blockquote><blockquote><p>通过对网络生活的研究，我认为，亲密行为是人和人之间的行为，听到他们的声音，看到他们的脸和试着读懂他们的内心。这些研究也让我想到，从某种角度来说，独处是刷新自己的状态，恢复精力。而孤独是失败的独处。去体验独处，你必须有自我振作、自我鼓励的能力，要不然你只能明白如何变得孤独。</p></blockquote><blockquote><p>今天的“回归”首要表现在进行无网络生活的实验。但是网络已经成为我们获得教育、获取新闻、找工作等不可或缺的必然途径。它已经成为我们生活的一部分。因此，我们只能退而求其次，要求自己重塑在屏幕上的生活。寻找新的平衡不仅仅是“放慢节奏”，而是“我们该如何为自我反思腾出空间？”</p></blockquote><blockquote><p>为了和这种上瘾作斗争，你必须抛弃这些令人上瘾的物质。但是，我们是不会放弃使用互联网的。我们也不会“突然完全戒掉”手机，或者禁止孩子们使用手机。我们不会停止听音乐或是回到以电视为中心的家庭生活方式</p></blockquote><blockquote><p>我相信，我们会找到一种全新的方式来沟通和连接彼此。但是，如果只考虑我们是有害物质（比如互联网技术）的受害者，并不是一个解决问题的好的开始。这种上瘾，是因为我们知道，我们不会让自己感到绝望。我们不得不找到一种方法使自己与这种让人上瘾的科技和平相处，并且让它按照我们的意愿来发挥作用。这确实是非常困难的，但却很有效果。出于对技术的简单热爱，或是出于反对技术进步的冲动，都是无济于事的</p></blockquote><blockquote><p>如今，我们和网络之间存在的问题让人困惑，无法忽略。最极端的情况是，我们有可能深陷网络连接不能自拔而忽略了彼此的存在。我们没有必要抛弃科技，或是贬低它的价值。我们需要的是把科技放回到它应处的位置。</p></blockquote><blockquote><p>群体性孤独》这本书描述了一对矛盾：我们对科技的期盼越来越多，却对彼此的期盼越来越少。我们处于一个完美风暴的静止中心。我们被科技打败了，被吸引到一个低风险并且唾手可得的联系上：Facebook上的朋友，虚拟化身，在线聊天等。如果“方便”和“可控”仍然是我们生活的首选，那么我们可能还被社交机器人诱惑而沉迷其中。就像是一个赌徒在老虎机的卡槽边上，那些令人兴奋的程序向我们许诺，让我们沉迷于游戏里而不能自拔。在机器人时代，我们必须注意到这一点，我们不再抱怨，而是期望甚至渴望简化和减少联系</p></blockquote><blockquote><p>一个耸肩是有助于缓和僵局的。但这还不是我们所处的阶段，我们距离山穷水尽的僵局还为时尚早。然而，我相信我们已经到达了一个反思的转折点，我们可以看到我们为科技进步付出的代价，并开始采取一些行动</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是一本思考人与机器，人与网络关系的书籍，主要认识有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在当今互联网飞速发展下，把越来越多的人联系在一起，人们非但没有感觉更加&lt;code&gt;热闹&lt;/code&gt;，而是更加孤独，这就是所谓的群体性孤独！！！&lt;/li&gt;
&lt;li&gt;人们越来越期待&lt;code&gt;虚拟世界&lt;/code&gt;和&lt;code&gt;弱联系&lt;/code&gt;，对面对面的交流越来越抵触，比如如今网上&lt;code&gt;廉价的道歉&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;互联网是用来提高工作效率的工具，但是我们却没有被解法，反而被它束缚，要求我们&lt;code&gt;时刻在线&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;互联网犹豫荆棘丛林，各种想法、链接、图片缠绕在一起，沉迷其中就会让我们没有办法更加深刻地思考当下，太容易随波逐流；&lt;/li&gt;
&lt;li&gt;互联网作为新生事物，完全抛弃肯定不行，但是必须时刻警惕它对我们的影响&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一个搞IT，搞AI的人，居然去看这类书，我都无法找到当初的原因，或许是前方路太黑，需要灯光，或许是当下被互联网所累，学习如何更加有效利用它！&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>在windows上使用nuitka打包Python项目</title>
    <link href="https://shaogui.life/2021/03/16/Nuitka%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://shaogui.life/2021/03/16/Nuitka%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-03-16T06:48:23.000Z</published>
    <updated>2023-04-08T12:58:31.991Z</updated>
    
    <content type="html"><![CDATA[<p>Nuitka是Python编译器，它是用Python编写，对Python解释器的无缝替换或扩展，兼容多个CPython版本，利用该工具可以对Python文件进行打包。本文用于介绍如何在windows上使用nuitka工具打包Python，包含构建打包环境、安装nuitka、测试打包。</p><a id="more"></a><h2 id="打包环境介绍"><a class="markdownIt-Anchor" href="#打包环境介绍"></a> <strong>打包环境介绍</strong></h2><p>本次打包所使用的软硬件环境如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">System: windows 10 企业版 19042.804</span><br><span class="line">NVIDIA DERVER 461.</span><br><span class="line">mingw 8.0.0</span><br><span class="line">visual studio 2017</span><br><span class="line">python 3.7.10</span><br><span class="line">nuitka 0.6.12.3</span><br><span class="line">tensorflow-gpu  2.5.0.dev20210308</span><br><span class="line">cuda 11.1</span><br><span class="line">cudnn 8.0.4</span><br><span class="line">numpy 1.20.1</span><br></pre></td></tr></table></figure><h2 id="安装nuitka"><a class="markdownIt-Anchor" href="#安装nuitka"></a> 安装nuitka<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2><ol><li>安装C编译器，有以下两个选择，任选一个安装<ul><li>根据系统配置，<a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/">下载并安装</a>MinGW64，基于gcc8.0以上的版本，安装过程参考</li><li>根据系统配置，<a href="https://visualstudio.microsoft.com/downloads/">下载并安装</a>Visual Studio 2019以上的版本</li></ul></li><li><a href="https://www.python.org/downloads/windows">下载并安装</a>Python，确保版本为：2.6、2.7或3.3、3.4、3.5、3.6、3.7、3.8、3.9 其中一个</li><li>使用以下命令安装nuitka</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install nuitka</span><br></pre></td></tr></table></figure><h2 id="测试nuitka打包2"><a class="markdownIt-Anchor" href="#测试nuitka打包2"></a> 测试nuitka打包[^2]</h2><p><a href="http://xn--mdl-tu9d554er5ifia.py">新建文件mdl.py</a>，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printinfo</span>(<span class="params">info</span>):</span></span><br><span class="line">print(info)</span><br></pre></td></tr></table></figure><p><a href="http://xn--main-494f213aw1t0uau17bc55b.py">同目录下新建main.py</a>，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> printinfo <span class="keyword">import</span> printinfo</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    printinfo(<span class="string">&#x27;Hello nuitka&#x27;</span>)</span><br></pre></td></tr></table></figure><p>测试运行无误后，运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nuitka --output-dir=<span class="built_in">test</span> hello.py</span><br></pre></td></tr></table></figure><p>运行编译之后的exe程序，得到正确结果即安装完成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\<span class="built_in">test</span>\main.exe</span><br></pre></td></tr></table></figure><p><strong>生成文件说明</strong></p><p>生成目录下，文件清理如下：</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082058632.png" alt="image-20210316145017152" /></p><ul><li>main.build     nuitka打包过程的中间文件，可删除</li><li>main.exe        nuitka打包得到的可执行文件</li><li>python37.dll  Pyhton安装目录下的python37.dll的拷贝，代码使用的库包依靠该文件去查找</li></ul><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/341099225">Nuitka入门指南-新手必备 - 知乎</a><br />[^2 ]: <a href="https://www.nuitka.net/doc/user-manual.html#id5">Nuitka User Manual</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;Nuitka是Python编译器，它是用Python编写，对Python解释器的无缝替换或扩展，兼容多个CPython版本，利用该工具可以对Python文件进行打包。本文用于介绍如何在windows上使用nuitka工具打包Python，包含构建打包环境、安装nuitka、测试打包。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://shaogui.life/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="打包" scheme="https://shaogui.life/tags/%E6%89%93%E5%8C%85/"/>
    
    <category term="python" scheme="https://shaogui.life/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>部署深度学习模型时的全流程加密方案探索</title>
    <link href="https://shaogui.life/2021/03/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2%E5%85%A8%E6%B5%81%E7%A8%8B%E5%8A%A0%E5%AF%86%E6%96%B9%E6%A1%88%E6%8E%A2%E7%B4%A2/"/>
    <id>https://shaogui.life/2021/03/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2%E5%85%A8%E6%B5%81%E7%A8%8B%E5%8A%A0%E5%AF%86%E6%96%B9%E6%A1%88%E6%8E%A2%E7%B4%A2/</id>
    <published>2021-03-11T03:40:45.000Z</published>
    <updated>2023-04-08T13:09:15.898Z</updated>
    
    <content type="html"><![CDATA[<p>本文用于探索深度学习模型在部署全流程过程中的整体方案</p><a id="more"></a><h2 id="部署场景"><a class="markdownIt-Anchor" href="#部署场景"></a> 部署场景</h2><p><strong>涉及程序端及编程语言</strong>：界面端（C#）、服务端（C#）、训练端（Python）</p><p><strong>剥离加密之后的流程</strong>：</p><ol><li>界面端根据训练配置调用训练端</li><li>训练端训练结束后保存模型（结构、文件）</li><li>服务端加载模型</li></ol><h2 id="加密要求"><a class="markdownIt-Anchor" href="#加密要求"></a> 加密要求</h2><p>由C#编写的程序部署时会将其编译为二进制，无需加密保护，主要是针对训练端的Python及训练得到的模型，有以下要求：</p><ol><li>无法明文看到Python代码</li><li>无法获得模型（结构与权重）</li><li>windows上部署</li><li>加密方案不能大幅度增加部署成本</li></ol><h2 id="加密方案"><a class="markdownIt-Anchor" href="#加密方案"></a> 加密方案</h2><p>针对Python加密以及模型的加密，调查了主流的加密方案</p><h4 id="网络收集的python加密思路"><a class="markdownIt-Anchor" href="#网络收集的python加密思路"></a> 网络收集的Python加密思路</h4><table><thead><tr><th>序号</th><th>工具</th><th>方法描述</th><th>加密及解密</th><th>优缺点</th></tr></thead><tbody><tr><td>1</td><td>Nuitka<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></td><td>.py 文件先被转成了 .c 文件，然后被编译成 .o 文件，最后合并成 .bin 可执行文件，从 bin 到 C 是不可逆的，从 C 到 Python 也是不可逆的，因此代码是安全的</td><td>编译为bin,<a href="http://xn--siqv1isvm2mbc8dr4c5s1fvtbv04cilu.so">或者编译为动态链接库.so</a> 文件</td><td>工作量小，安全性高，使用加密之后的Python便捷；编译时间长，过程复杂</td></tr><tr><td>2</td><td>发行.pyc文件<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></td><td>通过compileall模块将.py文件转为.pyc文件，该文件是二进制，无法直接看源代码，而python解释器可以直接执行.pyc文件</td><td></td><td>台兼容性好，.py 能在哪里运行，.pyc 就能在哪里运行；解释器兼容性差，.pyc 只能在特定版本的解释器上运行。有现成的反编译工具，破解成本低</td></tr><tr><td>3</td><td>代码混淆（oxyry，pyobfuscate）<sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup></td><td>让人看不懂代码，移除注释和文档，改变缩进，在tokens中间加入一定空格，重命名函数、类、变量，在空白行插入无效代码</td><td></td><td>提高了一点源码破解门槛。兼容性好，只要源码逻辑能做到兼容，混淆代码亦能；只能对单个文件混淆，无法做到多个互相有联系的源码文件的联动混淆</td></tr><tr><td>4</td><td>py2exe<sup class="footnote-ref"><a href="#fn3" id="fnref3:2">[3:2]</a></sup></td><td>将源码编译为 .pyc 文件，加之必要的依赖文件，一起打包成一个可执行文件。最终 py2exe 打包出的是二进制文件。</td><td></td><td>直接打包成 exe，方便分发和执行。破解门槛比 .pyc 更高一些；兼容性差，只能运行在 Windows 系统上。生成的可执行文件内的布局是明确、公开的，可以找到源码对应的 .pyc 文件，进而反编译出源码。</td></tr><tr><td>5</td><td>Cython<sup class="footnote-ref"><a href="#fn3" id="fnref3:3">[3:3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></td><td>将 .py/.pyx 编译为 .c 文件，再将 .c 文件编译为 .so(Unix) 或 .pyd(Windows)</td><td></td><td>生成的二进制 .so 或 .pyd 文件难以破解。同时带来了性能提升；兼容性稍差，对于不同版本的操作系统，可能需要重新编译。虽然支持大多数 Python 代码，但如果一旦发现部分代码不支持，完善成本较高。</td></tr><tr><td>6</td><td>Pyinstaller<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup><sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></td><td>打包为exe文件，</td><td></td><td>将Python文件转换为exe文件，以及dist文件夹和build文件夹，如果要移植到其他电脑上运行，也是只需要将这两个文件夹复制到对方电脑上，即使对方没有python环境，也可以运行程序，具有较好的兼容性；pyinstxtractor.py可以进行反编译</td></tr></tbody></table><p>注：py是源文件，pyc是源文件编译后的文件，pyo是源文件优化编译后的文件，pyd是其他语言写的python库<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup></p><h4 id="网络收集的模型加密思路"><a class="markdownIt-Anchor" href="#网络收集的模型加密思路"></a> 网络收集的模型加密思路</h4><table><thead><tr><th>序号</th><th>方法描述</th><th>加密及解密</th><th>优缺点</th></tr></thead><tbody><tr><td>1</td><td>将模型转换为二进制，直接打开看不见原始内容<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup></td><td>ncnn2mem工具可以将ncnn模型转为二进制的：ncnn2mem resnet.param resnet.bin</td><td>使用netron可以查看文件，反编译成本很低</td></tr><tr><td>2</td><td>将模型打包为C code，并嵌入到程序中<sup class="footnote-ref"><a href="#fn8" id="fnref8:1">[8:1]</a></sup></td><td>ncnn2mem resnet.param resnet.id.h resnet.mem.h,把这个文件 include 进来，用内存加载接口，把模型当作代码直接嵌入编译进程序中</td><td>分发exe即可，虽然不能直接获得模型，但是能用 objdump 或者十六进制编辑器从 exe 静态区中把模型抠出来</td></tr><tr><td>3</td><td>使用专用加密库对模型加密<sup class="footnote-ref"><a href="#fn8" id="fnref8:2">[8:2]</a></sup></td><td>用 openssl，把 param.bin 和 bin 两个文件用 AES 加密成 param.bin.enc 和 bin.enc；程序实现以下三步，加载加密模型：读enc文件、解密到内存、从内存加载模型</td><td>可以从算法中xor pattern或获得密钥；堆内存上暴力查找 enc 大小左右的连续内存和关键字，把模型从内存里抠出来</td></tr><tr><td>4</td><td>自定义加密算法和数据读取<sup class="footnote-ref"><a href="#fn8" id="fnref8:3">[8:3]</a></sup></td><td>用普通 xor 混淆实现</td><td>任意时刻内存中都不会存在完整的模型内容，边解密边加载</td></tr><tr><td>5</td><td>给模型加些自定义 op<sup class="footnote-ref"><a href="#fn8" id="fnref8:4">[8:4]</a></sup></td><td>cnn 可以自定义 op，可以运行时注册自定义 op，可以直接改 param</td><td>即便看到了明文的 param，也容易被名字欺骗</td></tr><tr><td>6</td><td>将外部文件嵌入二进制文件(exe，dll)，并加壳保护该文件<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup></td><td>直接程序之间调用</td><td>这种方法开发量小，仅需要将资源文件嵌入并在运行时加载。</td></tr><tr><td>7</td><td>自定义的外部文件加密方式<sup class="footnote-ref"><a href="#fn9" id="fnref9:1">[9:1]</a></sup></td><td></td><td>在加载模型文件前解密，考虑到安全性，防止解密后的模型文件暴露于内存被轻易dump，考虑使用流式加密的方法进行加解密，由此相对安全一点。</td></tr><tr><td>8</td><td>用protobuf自定义一种格式呀，没有协议文件<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup></td><td></td><td>工程量比较大</td></tr><tr><td>9</td><td>部署到云端给客户api接口调用<sup class="footnote-ref"><a href="#fn10" id="fnref10:1">[10:1]</a></sup></td><td></td><td>特定场景不适合</td></tr></tbody></table><p><strong>参考资料：</strong></p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.zhihu.com/question/299880517/answer/1719845490">如何防止商用的深度学习模型源码泄露？</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/c_1245860717607686144">Nuitka-Python打包exe - 知乎</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="http://www.361way.com/python-encrypt/6159.html">现有Python 代码加密方案 - 运维之路</a> <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a> <a href="#fnref3:2" class="footnote-backref">↩︎</a> <a href="#fnref3:3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://cloud.tencent.com/developer/article/1661136">用Cython加密打包python项目</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p><a href="https://www.cnblogs.com/hulk-1029/p/12106630.html">利用pyinstaller打包加密Python项目</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p><a href="https://blog.csdn.net/weixin_43652669/article/details/106401233">Pyinstaller 打包加密python项目</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p></li><li id="fn7" class="footnote-item"><p><a href="https://blog.csdn.net/willhuo/article/details/49886663">python py、pyc、pyo、pyd文件区别</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p></li><li id="fn8" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/268327784?utm_source=wechat_timeline">如何加密ncnn模型 - 知乎</a> <a href="#fnref8" class="footnote-backref">↩︎</a> <a href="#fnref8:1" class="footnote-backref">↩︎</a> <a href="#fnref8:2" class="footnote-backref">↩︎</a> <a href="#fnref8:3" class="footnote-backref">↩︎</a> <a href="#fnref8:4" class="footnote-backref">↩︎</a></p></li><li id="fn9" class="footnote-item"><p><a href="https://blog.csdn.net/atp1992/article/details/87636173?utm_medium=distribute.pc_relevant_download.none-task-blog-searchFromBaidu-7.nonecase&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-searchFromBaidu-7.nonecas">浅谈深度学习模型如何保护–AES加密文件流的实现（带源码）</a> <a href="#fnref9" class="footnote-backref">↩︎</a> <a href="#fnref9:1" class="footnote-backref">↩︎</a></p></li><li id="fn10" class="footnote-item"><p><a href="https://www.zhihu.com/question/299880517">如何防止商用的深度学习模型源码泄露？ - 知乎</a> <a href="#fnref10" class="footnote-backref">↩︎</a> <a href="#fnref10:1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文用于探索深度学习模型在部署全流程过程中的整体方案&lt;/p&gt;</summary>
    
    
    
    <category term="深度学习" scheme="https://shaogui.life/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://shaogui.life/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="部署" scheme="https://shaogui.life/tags/%E9%83%A8%E7%BD%B2/"/>
    
    <category term="加密" scheme="https://shaogui.life/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>在windows上安装MinGW-w64</title>
    <link href="https://shaogui.life/2021/03/10/windows%E4%B8%8A%E5%AE%89%E8%A3%85minGW/"/>
    <id>https://shaogui.life/2021/03/10/windows%E4%B8%8A%E5%AE%89%E8%A3%85minGW/</id>
    <published>2021-03-10T01:40:45.000Z</published>
    <updated>2022-06-15T01:53:18.247Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>MinGW(全称为，Minimalist GNU for Windows)，它实际上是将经典的开源 C语言编译器 GCC 移植到了 Windows 平台下，并且包含了 Win32API ，因此可以将源代码编译为可在 Windows 中运行的可执行程序。而且还可以使用一些 Windows 平台不具备的，但是Linux平台具备的开发工具和API函数。用一句话来概括就是：MinGW 就是 GCC 的 Windows 版本<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p></blockquote><a id="more"></a><h2 id="mingw-w64安装"><a class="markdownIt-Anchor" href="#mingw-w64安装"></a> MinGW-w64安装</h2><p>有两种方式安装MinGW-w64，第一种是下载压缩包安装；第二种是使用<a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/installer/mingw-w64-install.exe">MinGW-w64下载器</a>安装。下面以浏览器下载安装为例，介绍其安装流程及压缩包命名规则。</p><h4 id="下载压缩包安装"><a class="markdownIt-Anchor" href="#下载压缩包安装"></a> 下载压缩包安装</h4><ol><li><strong>下载压缩包：</strong><a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/">在这里下载</a>MinGW-w64，文件命名方式<a href="#filename_rule">如下</a>，根据自己系统及需要下载对应版本，本此安装系统为windows10(64bit)，选择了[x86_64-posix-sjlj](<a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains">https://sourceforge.net/projects/mingw-w64/files/Toolchains</a> targetting Win64/Personal Builds/mingw-builds/8.1.0/threads-posix/sjlj/x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z)</li><li>**解压压缩包：**将路径<code>mingw64/bin</code>配置到系统环境变量<code>PATH</code>中；<code>mingw64/lib</code>配置到环境变量LIB中；<code>mingw64/bin</code>配置到环境变量INCLUDE中</li><li>**测试安装：**打开windows终端cmd，输入<code>gcc -v</code>，无误后安装成功</li></ol><h4 id="span-idfilename_rule文件命名方式解释span"><a class="markdownIt-Anchor" href="#span-idfilename_rule文件命名方式解释span"></a> <span id="filename_rule">文件命名方式解释</span> <sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup></h4><ul><li><strong>version</strong>: GCC编译器版本</li><li><strong>architecture</strong>: 电脑系统类型，i686指32位系统；x86_64指64位系统</li><li><strong>threads</strong>: 线程类型，posix指可移植的操作系统接口，UNIX系统支持该标准；win32指windows下的一个标准</li><li><strong>exception</strong>: 异常处理类型，32位系统有2种：dwarf和sjlj；64位系统同样2种：seh 和 sjlj。3种类型的区别为<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：<ul><li><strong>sjlj</strong>：可用于32位和64位 – 不是“零成本”：即使不抛出exception，也会造成较小的性能损失（在exception大的代码中约为15％） – 允许exception遍历例如窗口callback</li><li><strong>seh</strong>：结构化异常处理，利用FS段寄存器，将原点压入栈，遇到异常弹出，seh 是新发明的，而 sjlj 则是古老的，seh 性能比较好，但不支持 32位。 sjlj 稳定性好，支持 32位</li><li><strong>dwarf</strong>：只有32位可用 – 没有永久的运行时间开销 – 需要整个调用堆栈被启用，这意味着exception不能被抛出，例如Windows系统DLL。</li></ul></li><li><strong>build revision</strong>: 建立修订</li></ul><p><strong>参考资料：</strong></p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/u010429831/article/details/106766165/">Windows系统下安装配置 MinGW-w64 开发环境_yunfan-CSDN博客</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/cangqinglang/p/11074124.html">MinGW-w64安装教程——著名C/C++编译器GCC的Windows版本</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;MinGW(全称为，Minimalist GNU for Windows)，它实际上是将经典的开源 C语言编译器 GCC 移植到了 Windows 平台下，并且包含了 Win32API ，因此可以将源代码编译为可在 Windows 中运行的可执行程序。而且还可以使用一些 Windows 平台不具备的，但是Linux平台具备的开发工具和API函数。用一句话来概括就是：MinGW 就是 GCC 的 Windows 版本&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="MinGW64" scheme="https://shaogui.life/tags/MinGW64/"/>
    
    <category term="windows" scheme="https://shaogui.life/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>使用oracle VM vitualbox安装windows10系统</title>
    <link href="https://shaogui.life/2021/03/09/%E4%BD%BF%E7%94%A8oracle-VM-vitualbox%E5%AE%89%E8%A3%85windows10%E7%B3%BB%E7%BB%9F/"/>
    <id>https://shaogui.life/2021/03/09/%E4%BD%BF%E7%94%A8oracle-VM-vitualbox%E5%AE%89%E8%A3%85windows10%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-03-09T09:35:11.000Z</published>
    <updated>2023-04-08T12:35:26.621Z</updated>
    
    <content type="html"><![CDATA[<p>由于工作需要，在windows10工作机编译的代码需要在干净的windows中测试代码运行效果，所以本文介绍如何使用oracle VM vitualbox安装windows10系统，已经配置主机与虚拟机之间的文件传输过程</p><a id="more"></a><p>为避免大段文字及节省时间，以下简单描述安装步骤：</p><h2 id="前期准备"><a class="markdownIt-Anchor" href="#前期准备"></a> 前期准备</h2><ol><li><p><a href="https://msdn.itellyou.cn/">到此选择</a>合适的系统，获得下载连接<code>ed2k://|file|xxxxxxx</code>，然后使用迅雷下载该文件</p></li><li><p><a href="https://www.virtualbox.org/wiki/Downloads">到此下载</a>并安装oracle VM vitualbox</p></li></ol><h2 id="安装windows10"><a class="markdownIt-Anchor" href="#安装windows10"></a> 安装windows10</h2><ol><li>启动oracle VM vitualbox，并选择<code>新建</code>按钮</li><li>命名虚拟机，选择<code>类型</code>及<code>版本</code>，然后点击<code>下一步</code>，注意和第一步下载的系统对应</li><li>配置虚拟机使用内存，点击<code>下一步</code></li><li>点击<code>现在创建虚拟硬盘</code>虚拟硬盘，然后点击<code>下一步</code></li><li>选择虚拟硬盘类型为<code>VDI</code>，然后点击<code>下一步</code></li><li>选择虚拟硬盘大小为<code>动态分配</code>，然后点击<code>下一步</code></li><li>选择虚拟硬盘的<code>文件大小及大小</code>，然后点击<code>创建</code></li><li>至此完成虚拟机的创建，后面的将第一步下载的文件挂载至虚拟机硬盘上，才能启动虚拟机</li><li>右键点击新建的虚拟机，依次选择<code>设置-&gt;存储</code>，点击选择虚拟盘，选择第一步下载的系统，操作看下图</li><li>退出设置后，启动虚拟机，并安装windows10系统</li></ol><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082034346.png" alt="image-20210309171724366" /></p><h2 id="配置虚拟机"><a class="markdownIt-Anchor" href="#配置虚拟机"></a> 配置虚拟机</h2><p>通过以下两种方式配置虚拟机与主机之间的文件传输</p><p><strong>双向拷贝及拖放</strong></p><ol><li>完成系统安装后，右键点击虚拟机，选择依次点击<code>设置-&gt;常规-&gt;高级</code>，将<code>共享粘贴板</code>及<code>拖放</code>都改为<mark>双向</mark></li><li>启动虚拟机，在新窗口的菜单中选择<code>设备-&gt;安装增强功能</code>，然后到系统中找到CD驱动器挂载的安装程序，双击该驱动安装程序，具体操作看下图</li></ol><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082035805.png" alt="image-20210309172743941" /></p><p><strong>共享文件夹</strong></p><p>通过文件共享的方式，将主机的某个文件夹共享给虚拟机</p><ol><li>在虚拟机窗口中菜单，选择<code>设备-&gt;共享文件夹-&gt;共享文件夹</code></li><li>双击<code>固定分配</code>下的选项，选择主机的<code>共享文件夹路径</code>，设置共享文件夹名称，设置<code>只读</code>与<code>自动挂载</code>，最后点击OK</li><li>主机的共享文件夹被挂载到文件系统，打开我的电脑即可访问</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于工作需要，在windows10工作机编译的代码需要在干净的windows中测试代码运行效果，所以本文介绍如何使用oracle VM vitualbox安装windows10系统，已经配置主机与虚拟机之间的文件传输过程&lt;/p&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="windows10" scheme="https://shaogui.life/tags/windows10/"/>
    
    <category term="虚拟机" scheme="https://shaogui.life/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>在Windows上编译带CUDA(GPU)的OpenCV</title>
    <link href="https://shaogui.life/2021/03/08/%E5%9C%A8Windows%E4%B8%8A%E7%BC%96%E8%AF%91%E5%B8%A6CUDA(GPU)%E7%9A%84opencv/"/>
    <id>https://shaogui.life/2021/03/08/%E5%9C%A8Windows%E4%B8%8A%E7%BC%96%E8%AF%91%E5%B8%A6CUDA(GPU)%E7%9A%84opencv/</id>
    <published>2021-03-08T13:00:44.000Z</published>
    <updated>2023-04-08T12:42:32.723Z</updated>
    
    <content type="html"><![CDATA[<p>本文一步一步地介绍如何在windows上编译带CUDA模块（GPU）支持的OpenCV，为避免长篇大论，截图过多，尽可能简单地描述</p><a id="more"></a><p><strong>本次安装说明：</strong></p><p>本次在windows10上、RTX2060S编译OpenCV4.5.0，其他相关软件安装情况如下：</p><ul><li>NVIDIA Diver 461</li><li>CUDA 11.1</li><li>CUDNN 8.0.4</li><li>Cmake 3.19.3</li><li>Visual studio 2017</li></ul><h2 id="第一步安装前准备"><a class="markdownIt-Anchor" href="#第一步安装前准备"></a> 第一步：安装前准备</h2><ol><li>确认系统显卡牌子为：NVIDIA，并<a href="https://developer.nvidia.com/zh-cn/cuda-gpus">在此</a>查看是否支持CUDA ，在列表中找到即是支持显卡</li><li><a href="https://www.nvidia.cn/geforce/drivers/">下载</a>并安装显卡驱动</li><li><a href="https://developer.nvidia.com/zh-cn/cuda-toolkit">下载</a>并安装CUDA，<a href="https://developer.nvidia.com/zh-cn/cudnn">下载</a>CUDNN，安装过程参考<a href=""></a></li><li><a href="https://cmake.org/download/">下载</a>并安装CmakeGUI</li><li><a href="https://visualstudio.microsoft.com/downloads/">下载</a>并安装VIsual sudio 2017</li><li><a href="https://opencv.org/releases/">下载</a>OpenCV</li><li><a href="https://github.com/opencv/opencv_contrib/">下载</a>OpenCV contrib，需跟OpenCV同版本</li><li>解压OpenCV及OpenCV contrib</li><li>在OpenCV解压目录下创建build</li></ol><h2 id="第二步使用cmake-gui构建opencv"><a class="markdownIt-Anchor" href="#第二步使用cmake-gui构建opencv"></a> 第二步：使用Cmake-gui构建opencv</h2><ol><li>**启动Cmake：**为编译OpenCV的Python接口，需在在终端激活某个conda虚拟环境，并运行<code>cmake-gui</code>程序，如不需要使用Python接口，直接运行<code>cmake-gui</code>即可</li><li><strong>配置Cmake：</strong>（1）<code>source code</code>选择OpenCV解压后的源码；（2）<code>build binaries</code>选择第一步创建的build目录；（3）点击<code>Configure</code>，在弹窗中依次选<code>VIsual sudio 15 2017</code> 、 <code>x64</code>，点击<code>Finish</code></li><li>**配置CUDA模块：**Cmake完成初始编译编译后，在出现的红色新选项中勾选<code>WITH_CUDA</code>，<code>OPENCV_DNN_CUDA</code>，<code>ENABLE_FAST_MATH</code></li><li>**配置OpenCV contrib：**在出现的红色新选项中找到<code>OPENCV_EXTRA_MODULES_PATH</code>，并将Value配置为第一步解压的OpenCV contrib目录下的<code>modules</code>目录路径</li><li><strong>配置OpenCV的Python接口</strong>：（1）点击<code>Add Entry</code>新增BUILD_opencv_python3和BUILD_opencv_python2两项，其中BUILD_opencv_python3设置value为true，另一个设置为false；（2）搜索并配置<code>PYTHON3_EXECUTABLE</code>、<code>PYTHON3_INCLUDE_DIR</code>、<code>PYTHON3_LIBRARY</code>、<code>PYTHON3_NUMPY_INCLUDE_DIRS</code>、<code>PYTHON3_PACKAGES_PATH</code>，配置结果看下图<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li><li>**其他配置项：**搜索并勾选<code>OPENCV_ENABLE_NONFREE</code>，<code>build_opencv_world</code></li><li>再次点击<code>COnfigure</code>，在新增红色配置项中找到<code>CUDA_ARCH_BIN</code>，删除小于显卡计算能力的数值，计算能力可以在<a href="https://developer.nvidia.com/zh-cn/cuda-gpus"></a>找到。</li><li>再次点击<code>COnfigure</code>，确认日志中出现<em>Configuring done</em>后，点击<code>Generate</code></li></ol><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042170.png" alt="image-20210306160653041" /></p><h2 id="第三步使用visual-studio编译opencv"><a class="markdownIt-Anchor" href="#第三步使用visual-studio编译opencv"></a> 第三步：使用Visual studio编译opencv</h2><ol><li>点击<code>Open Project</code>或者使用<code>Visual studio</code>打开<strong><a href="http://OpenCV.sh">OpenCV.sh</a></strong></li><li>打开后，更改<strong>Debug</strong>模式为<strong>Release</strong>模式</li><li>右键点击<code>Cmake Targets</code>下的<code>ALL_BUILD</code>，并点击<code>build</code>，此步编译文件需要较长时间</li><li>一旦完成，右键点击<code>Install</code>，并点击<code>build</code></li></ol><p>到此，已经成功在windows10上编译了带CUDA模块的OpenCV，编译得到的文件位于<code>build\install</code>下</p><h2 id="第四步python及c使用"><a class="markdownIt-Anchor" href="#第四步python及c使用"></a> 第四步：Python及C++使用</h2><p><strong>Python端使用</strong></p><ol><li>安装OpenCV到Python，</li><li>新建Python文件，写入以下内容，并在终端运行，如果无误则运行成功</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看opencv信息</span></span><br><span class="line">print(cv2.getBuildInformation())</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取图片</span></span><br><span class="line">frame=cv2.imread(<span class="string">&#x27;test.jpg&#x27;</span>)</span><br><span class="line">print(frame.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment">#上传图片到GPU</span></span><br><span class="line">gpu_frame=cv2.cuda_GpuMat()</span><br><span class="line">gpu_frame.upload(frame)</span><br><span class="line"></span><br><span class="line"><span class="comment">#resize</span></span><br><span class="line">gpu_resframe=cv2.cuda.resize(gpu_frame,(<span class="number">1024</span>,<span class="number">512</span>))</span><br><span class="line">cpu_resfram=gpu_resframe.download()</span><br><span class="line">print(cpu_resfram.shape)</span><br></pre></td></tr></table></figure><p><strong>C++端使用</strong></p><ol><li>配置系统环境，将编译目录下的<code>install\x64\vc15\bin</code>完整路径配置到系统路径下，<mark>并重启系统</mark></li><li>打开visual studio，新建<code>Visual C++</code>空项目，新建文件<code>main.cpp</code>，写入下面内容</li><li>点击<code>生成-&gt;生成解决方案</code>，不出现错误后，运行程序，无错误即可使用OpenCV的cuda模块</li><li>配置OpenCV开发环境，依次点击<code>视图-&gt;其他窗口-&gt;属性窗口</code>，右键点击<code>Release | x64</code>，新建项目属性表，新建完成后双击项目该文件，进行以下配置。</li></ol><ul><li><strong>VC++目录-&gt;包含目录</strong>：E:\opencv-4.5.0\build_test\install\include;E:\opencv-4.5.0\build_test\install\include\opencv2;$(IncludePath)</li><li>**VC++目录-&gt;库目录：**E:\opencv-4.5.0\build_test\install\x64\vc15\lib;$(LibraryPath)</li><li>**链接器-&gt;输入：**opencv_world450.dll;%(AdditionalDependencies)</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/dnn.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/dnn/all_layers.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//读取图片</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> image_path = <span class="string">&quot;C:\\Users\\wushaogui\\Desktop\\CCP_REPOS\\SegementModule\\SegementModule\\test.jpg&quot;</span>;</span><br><span class="line">cv::Mat rgb_image = cv::imread(image_path, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">cv::cuda::GpuMat gpu_frame, gpu_resized;</span><br><span class="line"><span class="comment">//上传图片到GPU</span></span><br><span class="line">gpu_frame.upload(rgb_image);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Resize</span></span><br><span class="line"><span class="keyword">auto</span> input_size = cv::Size(<span class="number">1024</span>,<span class="number">512</span>);</span><br><span class="line">cv::cuda::resize(gpu_frame, resized, input_size, <span class="number">0</span>, <span class="number">0</span>, cv::INTER_NEAREST);</span><br><span class="line"></span><br><span class="line"><span class="comment">//下载并保存图片</span></span><br><span class="line">cv::Mat cpu_resized;</span><br><span class="line">gpu_resized.download(cpu_resized);</span><br><span class="line">cv::imwrite(<span class="string">&quot;resized_test.jpg&quot;</span>, cpu_resized);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四步解决问题及其他需了解信息"><a class="markdownIt-Anchor" href="#第四步解决问题及其他需了解信息"></a> 第四步：解决问题及其他需了解信息</h2><h3 id="资源无法下载"><a class="markdownIt-Anchor" href="#资源无法下载"></a> 资源无法下载<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h3><p>在此次编译中，无法下载的资源有：ADE、face_landmark_model.dat、ffmpeg、ippicv、nvidia_optical_flow、xfeatures2d</p><p>**解决方法：**网络下载，这些文件，计算文件md5进行文件重命名后，将文件放置在编译目录下的<code>.cache</code>目录下，此次编译放置情况如下：</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042047.png" alt="image-20210306150042380" /></p><p><strong>参考资料<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>：</strong></p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/qq_37781464/article/details/110078370">win10使用vs2019从源码编译OpenCV4.5+cuda10.2+cudnn8.0的C++环境和Python环境</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/fengxinzioo/article/details/104919888">windows安装opencv4.1.1过程中ffmpeg、ippicv、face_landmark_model下载出错解决办法</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://haroonshakeel.medium.com/build-opencv-4-4-0-with-cuda-gpu-support-on-windows-10-without-tears-aa85d470bcd0">Build OpenCV 4.4.0 with CUDA (GPU) Support on Windows 10 (Without Tears) | by M. Haroon Shakeel | Medium</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://blog.csdn.net/hitpisces/article/details/104266030">Win10下编译同时支持CUDA以及Python3的OpenCV 4.2教程_吃白兔的小青菜的博客-CSDN博客</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文一步一步地介绍如何在windows上编译带CUDA模块（GPU）支持的OpenCV，为避免长篇大论，截图过多，尽可能简单地描述&lt;/p&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="cuda" scheme="https://shaogui.life/tags/cuda/"/>
    
    <category term="windows" scheme="https://shaogui.life/tags/windows/"/>
    
    <category term="opencv" scheme="https://shaogui.life/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>Hexo操作命令备忘录</title>
    <link href="https://shaogui.life/2021/03/06/Hexo%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>https://shaogui.life/2021/03/06/Hexo%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98%E5%BD%95/</id>
    <published>2021-03-06T14:39:44.000Z</published>
    <updated>2022-06-15T01:53:15.170Z</updated>
    
    <content type="html"><![CDATA[<p>本文用于记录hexo常见的操作步骤，即使温习回顾</p><a id="more"></a><h2 id="hexo常见命令"><a class="markdownIt-Anchor" href="#hexo常见命令"></a> Hexo常见命令<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2><h3 id="新建文章"><a class="markdownIt-Anchor" href="#新建文章"></a> 新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;title&gt;</span><br><span class="line">hexo new <span class="string">&quot;post title with whitespace&quot;</span></span><br></pre></td></tr></table></figure><p><strong>参数：</strong></p><ul><li>-p,–path   自定义新文章路径</li><li>-r,–replace   如果存在同名文件，将其覆盖</li><li>-s,–slug        文章Slug，作为新文章的文件名和发布后的 URL</li></ul><p>注意：文件明包含空格时，需要用双引号括起来</p><h3 id="新建草稿"><a class="markdownIt-Anchor" href="#新建草稿"></a> 新建草稿</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft &lt;title&gt;</span><br><span class="line">hexo new draft <span class="string">&quot;draft title with whitespace&quot;</span></span><br></pre></td></tr></table></figure><h3 id="发布草稿"><a class="markdownIt-Anchor" href="#发布草稿"></a> 发布草稿</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo publish &lt;title&gt;</span><br><span class="line">hexo publish <span class="string">&quot;draft title with whitespace&quot;</span></span><br></pre></td></tr></table></figure><p>注意：title不带文件后缀<code>.md</code></p><h3 id="新建页面"><a class="markdownIt-Anchor" href="#新建页面"></a> 新建页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page --path about/me <span class="string">&quot;About me&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p></blockquote><h3 id="生成博客"><a class="markdownIt-Anchor" href="#生成博客"></a> 生成博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><strong>参数：</strong></p><ul><li>-d,–deploy            文件生成后立即部署</li><li>-w,–watch             监视文件改动</li><li>-b,-bail                   生成过程中如果发生任何未处理的异常则抛出异常</li><li>-f,–force                强制重新生成文件</li><li>-c,–concurrency  最大同时生成文件的数量，默认无限制</li></ul><h3 id="本地浏览"><a class="markdownIt-Anchor" href="#本地浏览"></a> 本地浏览</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><strong>参数：</strong></p><ul><li>-p,–port            重设端口</li><li>-s,–static          只使用静态文件</li><li>-l,–log               启动日记记录，使用覆盖记录格式</li></ul><h2 id="远程部署"><a class="markdownIt-Anchor" href="#远程部署"></a> 远程部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><strong>参数：</strong></p><ul><li>-g,–generate   部署之前预先生成静态文件</li></ul><h3 id="清除缓存"><a class="markdownIt-Anchor" href="#清除缓存"></a> 清除缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><blockquote><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)</p></blockquote><blockquote><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</p></blockquote><h3 id="查看版本"><a class="markdownIt-Anchor" href="#查看版本"></a> 查看版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="hexo的yaml-front-matter"><a class="markdownIt-Anchor" href="#hexo的yaml-front-matter"></a> Hexo的YAML Front Matter<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2><p>文章参数列举如下：</p><table><thead><tr><th>参数</th><th>描述</th><th>取值</th></tr></thead><tbody><tr><td>title</td><td>标题名</td><td></td></tr><tr><td>date</td><td>创建日期</td><td></td></tr><tr><td>updated</td><td>更新日期</td><td></td></tr><tr><td>tags</td><td>标签</td><td>- 标签1<br />- 标签2<br />- 标签3</td></tr><tr><td>categories</td><td>分类</td><td>- 分类<br />- 子分类<br />- 子子分类</td></tr><tr><td>copyright</td><td>是否添加版权声明</td><td>true</td></tr><tr><td>top</td><td>是否置顶</td><td>true/空</td></tr><tr><td>description</td><td>文章描述</td><td>空</td></tr><tr><td>mathjax:</td><td>是否添加latex公式支持</td><td>true</td></tr></tbody></table><p><strong>参考资料：</strong></p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://hexo.io/zh-cn/docs/commands">指令 | Hexo</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/nineya_com/article/details/103316683">Hexo博客发表文章、草稿、添加分类和标签_玖涯博客-CSDN博客</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文用于记录hexo常见的操作步骤，即使温习回顾&lt;/p&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Hexo" scheme="https://shaogui.life/tags/Hexo/"/>
    
    <category term="Next" scheme="https://shaogui.life/tags/Next/"/>
    
    <category term="博客" scheme="https://shaogui.life/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>如何使用tensorflowServing进行模型部署</title>
    <link href="https://shaogui.life/2021/02/22/%E5%A6%82%E4%BD%95%E7%94%A8tensorflowServing%E8%BF%9B%E8%A1%8C%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/"/>
    <id>https://shaogui.life/2021/02/22/%E5%A6%82%E4%BD%95%E7%94%A8tensorflowServing%E8%BF%9B%E8%A1%8C%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/</id>
    <published>2021-02-22T10:30:44.000Z</published>
    <updated>2023-04-08T13:09:10.651Z</updated>
    
    <content type="html"><![CDATA[<p>TensorFlow Serving是用于机器学习的灵活，高性能的服务系统，针对生产环境而设计。 TensorFlow服务 可以轻松部署新算法和实验，同时保持不变服务器体系结构和API。TensorFlow Serving开箱即用 与TensorFlow模型集成，但可以轻松扩展以服务于其他  模型类型</p><a id="more"></a><h1 id="关键概念"><a class="markdownIt-Anchor" href="#关键概念"></a> 关键概念</h1><h2 id="key-conception"><a class="markdownIt-Anchor" href="#key-conception"></a> Key Conception</h2><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082031214.svg" alt="serving_architecture" /></p><h3 id="loaders"><a class="markdownIt-Anchor" href="#loaders"></a> Loaders</h3><p>Loaders管理Servables的生命周期。Loader API 是一种支持独立于特定算法，数据或产品用例的通用基础架构。具体来说，Loaders标准化了用于加载和卸载Servable的API。</p><h3 id="sources"><a class="markdownIt-Anchor" href="#sources"></a> Sources</h3><p>Sources 是可以寻找和提供 Servables 的模块，每个 Source 提供了0个或者多个Servable streams，对于每个Servable stream，Source 都会提供一个Loader实例。</p><h3 id="managers"><a class="markdownIt-Anchor" href="#managers"></a> Managers</h3><p>管理 Servable 的整个的生命周期，包括：</p><ul><li>loading Servables</li><li>serving Servables</li><li>unloading Servables</li></ul><p>Managers监听Sources并跟踪所有版本。Managers尝试满足、响应Sources的请求，但是如果所请求的资源不可用，可能会拒绝加载相应版本。Managers也可以推迟“卸载”。例如，Managers可能会等待到较新的版本完成加载之后再卸载（基于保证始终至少加载一个版本的策略）。</p><h3 id="servables"><a class="markdownIt-Anchor" href="#servables"></a> Servables</h3><p>Servable是Tensorflow Serving的核心抽象，是客户端用于执行计算的基础对象,其大小和粒度是灵活的。Tensorflow  serving可以在单个实例的生命周期内处理一个或多个版本的Servable，这样既可以随时加载新的算法配置，权重或其他数据；也能够同时加载多个版本的Servable，支持逐步发布和实验。由此产生另外一个概念：Servable stream，即是指Servable的版本序列，按版本号递增排序。Tensorflow Serving 将 model  表示为一个或者多个Servables，一个Servable可能对应着模型的一部分，例如，a large lookup table 可以被许多  Tensorflow Serving 共享。另外，Servable不管理自己的生命周期</p><h3 id="core"><a class="markdownIt-Anchor" href="#core"></a> Core</h3><p>Tensorflow Serving core 负责管理Servables的Lifecycle和metrics，将Servables和loaders看作黑箱(opaque objects)。</p><p>广义地说：</p><ol><li>Sources create Loaders for Servable Versions.</li><li>Loaders are sent as Aspired Versions to the Manager, which loads and serves them to client requests.</li></ol><p>例子：</p><ol><li>Source 为指定的服务(磁盘中检测模型权重的新版本)创建Loader，Loader里包含了服务所需要的元数据（模型）；</li><li>Source 使用回调函数通知 Manager 的 Aspired Version(Servable version的集合);</li><li>Manager 根据配置的Version Policy决定下一步的操作（是否 unload 之前的Servable，或者 load 新的Servable）；</li><li>如果 Manager 判定是操作安全的，就会给 Loader 要求的resource并让 Loader 加载新的版本;</li><li>客户端向 Manager 请求服务，可以指定服务版本或者只是请求最新的版本。Manager 返回服务端的处理结果;</li></ol><h2 id="extensibility"><a class="markdownIt-Anchor" href="#extensibility"></a> Extensibility</h2><p>Tensorflow Serving提供了几个可扩展的entry point，用户可以在其中添加自定义功能。</p><h3 id="version-policy"><a class="markdownIt-Anchor" href="#version-policy"></a> Version Policy</h3><p>Version Policy(版本策略)可以指定单个Servable stream中的版本加载和卸载顺序。它包括Availability Preserving Policy（在卸载旧版本之前加载并准备好新版本）和Resource Preserving Policy（在加载新版本之前先卸载旧版本）。</p><h3 id="source"><a class="markdownIt-Anchor" href="#source"></a> Source</h3><p>New Sources可以支持新的文件系统，云产品和算法后端，这主要和创建自定义Source有关。</p><h3 id="loaders-2"><a class="markdownIt-Anchor" href="#loaders-2"></a> Loaders</h3><p>Loaers是添加算法、数据后端的扩展点。Tensorflow就是这样一种算法后端。例如，用户将实现一个新的Loader，以便对新的Servable机器学习模型实例的访问和卸载。</p><h3 id="batcher"><a class="markdownIt-Anchor" href="#batcher"></a> Batcher</h3><p>将多个请求批处理为单个请求可以显着降低计算成本，尤其是在存在诸如GPU的硬件加速器的情况下。Tensorflow Serving包括一个请求批处理小部件，它允许客户端轻松地将请求中特定类型的计算进行批量处理。</p><h1 id="系统环境搭建"><a class="markdownIt-Anchor" href="#系统环境搭建"></a> 系统环境搭建</h1><h2 id="系统及软硬件说明"><a class="markdownIt-Anchor" href="#系统及软硬件说明"></a> 系统及软硬件说明</h2><p><strong>系统</strong>：Ubuntu16.04</p><p><strong>软件</strong></p><ul><li>驱动 450.23.05</li><li>cuda 11.1</li><li>cudnn 8.0.5</li><li>tensorflow nightly-gpu(2.4)</li><li>python 3.7.9</li></ul><p>硬件</p><ul><li>RTX 3090</li></ul><h2 id="导出keras模型"><a class="markdownIt-Anchor" href="#导出keras模型"></a> 导出Keras模型</h2><p>将keras中以<code>model.save(filepath)</code>保存的模型h5文件，转为tensorflow的xx格式，加载模型时，使用✔️<code>tf.keras.models.load_model</code>而不是❌<code>keras.models.load_model</code>，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先使用tf.keras的load_model来导入模型h5文件</span></span><br><span class="line">model_path = <span class="string">&#x27;v3_resnet50_unet.h5&#x27;</span></span><br><span class="line">model = tf.keras.models.load_model(model_path, custom_objects=dependencies)</span><br><span class="line">model.save(<span class="string">&#x27;deploy/tfs/0&#x27;</span>, save_format=<span class="string">&#x27;tf&#x27;</span>)  <span class="comment"># 导出tf格式的模型文件</span></span><br></pre></td></tr></table></figure><p>导出之后，有以下目录结构</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082032836.png" alt="image-20210205165552193" /></p><p>导出之后，使用以下命令查看模型的signature、input、output，后续客户端调用需要这些信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saved_model_cli show --dir tfs/0/ --all</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">signature_def[&#39;serving_default&#39;]:</span><br><span class="line">  The given SavedModel SignatureDef contains the following input(s):</span><br><span class="line">    inputs[&#39;input_1&#39;] tensor_info:</span><br><span class="line">        dtype: DT_FLOAT</span><br><span class="line">        shape: (-1, 512, 1024, 3)</span><br><span class="line">        name: serving_default_input_1:0</span><br><span class="line">  The given SavedModel SignatureDef contains the following output(s):</span><br><span class="line">    outputs[&#39;activation_49&#39;] tensor_info:</span><br><span class="line">        dtype: DT_FLOAT</span><br><span class="line">        shape: (-1, 524288, 1)</span><br><span class="line">        name: StatefulPartitionedCall:0</span><br><span class="line">  Method name is: tensorflow&#x2F;serving&#x2F;predict</span><br></pre></td></tr></table></figure><p>以上可以确定，signature、input、output分别为：serving_default，input_1，activation_49</p><p><strong>saved_model_cli</strong>为tensorflow的python工具包，位于<code>tensorflow/python/tools/saved_model_cli.py</code>下，一般安装了tensorflow，可以直接找到该命令。</p><h2 id="docker部署模型"><a class="markdownIt-Anchor" href="#docker部署模型"></a> Docker部署模型</h2><h3 id="拉取tfs的docker镜像"><a class="markdownIt-Anchor" href="#拉取tfs的docker镜像"></a> 拉取tfs的docker镜像</h3><p><strong>1.安装docker</strong></p><p>安装过程参考官方安装文档<a href="https://docs.docker.com/engine/install/ubuntu/">Install Docker Engine on Ubuntu</a></p><p><strong>2.安装nvidia-docker</strong></p><p>在docker上安装nvidia插件，以便使得应用在GPU上运行，安装过程参考：<a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker">Installation Guide</a></p><p><strong>3.拉取tfs镜像</strong></p><p><a href="https://hub.docker.com/r/tensorflow/serving/tags/?page=1&amp;ordering=last_updated">docker官网</a>上包含不同版本的tfs镜像，根据需求需要版本，使用以下命令拉取tfs镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull tensorflow/serving:nightly-gpu</span><br></pre></td></tr></table></figure><h3 id="启动tfs容器"><a class="markdownIt-Anchor" href="#启动tfs容器"></a> 启动tfs容器</h3><p>使用以下命令启动tfs容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo nvidia-docker run -p 8500:8500  \</span><br><span class="line">  -v <span class="string">&quot;[path]/tfs:/models/resnet50_unet&quot;</span> \</span><br><span class="line">  -e MODEL_NAME=resnet50_unet \</span><br><span class="line">  -e CUDA_VISIBLE_DEVICES=1 \</span><br><span class="line">  -t 9e73a1470b72&amp;</span><br></pre></td></tr></table></figure><blockquote><p>其中9e73a1470b72为tfs镜像的id，可通过docker image ls查看</p></blockquote><p>tfs容器可用参数解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">--port &#x3D; 8500                     用于侦听gRPC API的端口</span><br><span class="line">--rest_api_port &#x3D; 0               用于侦听HTTP &#x2F; REST API的端口。如果设置为零，将不会导出HTTP </span><br><span class="line">                                    &#x2F; REST API。此端口必须与--port中指定的端口不同。</span><br><span class="line">--rest_api_num_threads &#x3D; 160      用于HTTP &#x2F; REST API处理的线程数。如果未设置，</span><br><span class="line">                                    将根据CPU数量自动设置。</span><br><span class="line">--rest_api_timeout_in_ms &#x3D; 30000  HTTP &#x2F; REST API调用超时。</span><br><span class="line">--enable_batching &#x3D; false bool    启用批处理</span><br><span class="line">--batching_parameters_file &#x3D;“”    字符串如果非空，请从提供的文件名读取ascii BatchingParameters </span><br><span class="line">                                    protobuf，并使用包含的值代替默认值。</span><br><span class="line">--model_config_file &#x3D;“”           字符串如果非空，请从提供的文件名读取ascii ModelServerConfig</span><br><span class="line">                                    协议，然后在该文件中提供模型。此配置文件可用于指定要使用的</span><br><span class="line">                                    多个模型以及其他高级参数，包括非默认版本策略。 </span><br><span class="line">                                   （如果使用了--model_name和--model_base_path，则将被忽略。）</span><br><span class="line">--model_name &#x3D;“ default”          模型的字符串名称（如果设置了--model_config_file标志，则忽略</span><br><span class="line">--model_base_path &#x3D;“”             导出的字符串路径（如果设置了--model_config_file标志，</span><br><span class="line">                                    则忽略该字符串，否则为必需）</span><br><span class="line">--file_system_poll_wait_seconds &#x3D; 1 以秒为单位的两次新模型版本的文件系统每次轮询之间的间隔</span><br><span class="line">--flush_filesystem_caches&#x3D;true bool 如果为true（默认值），则在所有可服务对象的初始加载之后以及</span><br><span class="line">                                      随后的每个可服务对象重新加载之后（如果加载线程数为1），</span><br><span class="line">                                      将刷新文件系统缓存。如果在加载可服务对象之后访问模型文件，</span><br><span class="line">                                      则可以减少模型服务器的内存消耗，并以潜在的高速缓存未命中为                                       代价。</span><br><span class="line">--tensorflow_session_parallelism&#x3D;0  用于运行Tensorflow会话的线程数。默认情况下自动配置。请注意，</span><br><span class="line">                                      如果--platform_config_file为非空，则将忽略此选项。</span><br><span class="line">--ssl_config_file &#x3D;“”               字符串如果非空，请从提供的文件名读取ascii SSLConfig协议</span><br><span class="line">                                      并设置安全的gRPC通道</span><br><span class="line">--platform_config_file &#x3D;“”         字符串如果非空，请从提供的文件名读取ascii PlatformConfigMap </span><br><span class="line">                                      protobuf，然后使用该平台配置而不是Tensorflow平台。 </span><br><span class="line">                                      （如果使用，则--enable_batching将被忽略。）</span><br><span class="line">--per_process_gpu_memory_fraction&#x3D;0.00 float每个进程占用GPU内存空间的分数，</span><br><span class="line">                                         该值介于0.0和1.0之间（默认值为0.0）。如果为1.0，则服务</span><br><span class="line">                                         器将在服务器启动时分配所有内存;如果为0.0，</span><br><span class="line">                                         则Tensorflow将自动选择一个值。</span><br><span class="line">--saved_model_tags &#x3D;“ serve”        字符串对应于要从SavedModel加载的元图def的逗号分隔的标记集。</span><br><span class="line">--grpc_channel_arguments &#x3D;“”        字符串要传递给grpc服务器的参数的逗号分隔列表。 </span><br><span class="line">                                     （例如grpc.max_connection_age_ms &#x3D; 2000）</span><br><span class="line">--enable_model_warmup &#x3D; true bool   启用模型预热，该预热在加载时触发延迟初始化（例如TF优化），</span><br><span class="line">                                      以减少第一个请求的延迟。</span><br><span class="line">--version &#x3D; false bool              显示版本</span><br></pre></td></tr></table></figure><p><strong>客户端的编写</strong></p><p>基于Python编写客户端时，需要安装tensorflow_serving、grpc库包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> grpc</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os.path <span class="keyword">as</span> ops</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tensorflow_serving.apis <span class="keyword">import</span> predict_pb2, prediction_service_pb2_grpc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_server_grpc</span>(<span class="params">img_resized, server_url</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    用于向TensorFlow Serving服务请求推理结果的函数。</span></span><br><span class="line"><span class="string">    :param img_resized: 经过预处理的待推理图片数组，numpy array，shape：(h, w, 3)</span></span><br><span class="line"><span class="string">    :param server_url: TensorFlow Serving的地址加端口，str，如：&#x27;0.0.0.0:8500&#x27; </span></span><br><span class="line"><span class="string">    :return: 模型返回的结果数组，numpy array</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># Request.</span></span><br><span class="line">    channel = grpc.insecure_channel(server_url)</span><br><span class="line">    stub = prediction_service_pb2_grpc.PredictionServiceStub(channel)</span><br><span class="line">    request = predict_pb2.PredictRequest()</span><br><span class="line">    request.model_spec.name = <span class="string">&quot;resnet50_unet&quot;</span>  <span class="comment"># 模型名称，启动容器命令的model_name参数</span></span><br><span class="line">    request.model_spec.signature_name = <span class="string">&quot;serving_default&quot;</span>  <span class="comment"># 签名名称，刚才叫你记下来的</span></span><br><span class="line">    <span class="comment"># &quot;input_1&quot;是你导出模型时设置的输入名称，刚才叫你记下来的</span></span><br><span class="line">    request.inputs[<span class="string">&quot;input_1&quot;</span>].CopyFrom(</span><br><span class="line">        tf.make_tensor_proto(img_resized, shape=[<span class="number">1</span>, ] + <span class="built_in">list</span>(img_resized.shape)))</span><br><span class="line">    <span class="comment"># print(request)</span></span><br><span class="line">    </span><br><span class="line">    response = stub.Predict(request, <span class="number">5.0</span>)  <span class="comment"># 5 secs timeout</span></span><br><span class="line">    <span class="keyword">return</span> np.asarray(response.outputs[<span class="string">&quot;activation_49&quot;</span>].float_val) <span class="comment"># fc2为输出名称，刚才叫你记下来的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    img=cv2.imread([imgpath_xx],cv2.COLOR_BGR2RGB)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#预处理</span></span><br><span class="line">    res_image=cv2.resize(img,(<span class="number">1024</span>,<span class="number">512</span>))</span><br><span class="line">    res_image = res_image / <span class="number">255</span></span><br><span class="line">    res_image=res_image.astype(<span class="string">&#x27;float32&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#向tfs发送请求</span></span><br><span class="line">    port=<span class="string">&#x27;8500&#x27;</span></span><br><span class="line">    server_url = <span class="string">r&#x27;0.0.0.0:&#x27;</span>+port</span><br><span class="line">    response=request_server_grpc(res_image, server_url) <span class="comment">#调用服务端</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#处理返回结果</span></span><br><span class="line">    predict=response.copy()</span><br><span class="line">    <span class="comment">#....后处理</span></span><br></pre></td></tr></table></figure><h3 id="web服务"><a class="markdownIt-Anchor" href="#web服务"></a> Web服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TensorFlow模型的计算图，一般输入的类型都是张量，你需要提前把你的图像、文本或者其它数据先进行预处理，转换成张量才能输入到模型当中。而一般来说，这个数据预处理过程不会写进计算图里面，因此当你想使用TensorFlow Serving的时候，需要在客户端上写一大堆数据预处理代码，然后把张量通过gRPC发送到serving，最后接收结果。现实情况是你不可能要求每一个用户都要写一大堆预处理和后处理代码，用户只需使用简单POST一个请求，然后接收最终结果即可。因此，这些预处理和后处理代码必须由一个“中间人”来处理，这个“中间人”就是Web服务。</span><br></pre></td></tr></table></figure><p>可以使用Tornado来搭建web服务</p><h3 id="版本管理"><a class="markdownIt-Anchor" href="#版本管理"></a> 版本管理</h3><p><em>待完善</em></p><h2 id="应用例子"><a class="markdownIt-Anchor" href="#应用例子"></a> 应用例子</h2><blockquote><p>例子来源于美团技术团队<a href="https://tech.meituan.com/2018/10/11/tfserving-improve.html">基于TensorFlow Serving的深度学习在线预估</a></p></blockquote><p>该例子针对广告精排的业务场景，使用tfs进行模型部署，针对高速的推断进行逐步的优化，并突破现有tfs的束缚，解决模型切换的毛刺问题，使得tfs部署后在性能上满足业务场景</p><p><strong>性能优化措施</strong></p><ul><li><p>请求端优化：使用OpenMP多线程并行处理请求，时间从5ms降低到2ms</p></li><li><p>构建模型的ops优化：分析构建模型的ops中的耗时操作，将其分离出去，或者使用低阶API替代高阶API</p></li><li><p>XLA,JIT优化：优化Tensorflow的计算图，剪除荣誉的计算</p></li></ul><p><strong>模型切换毛刺问题</strong></p><p>模型切换时，大量的请求超时，原因有两个：一是更新、加载模型和处理请求的线程共用线程池，切换模型时无法处理请求；二是模型采用Lazy Initialization加载，第一次请求需要等待计算图初始化。</p><p>问题一的解决办法：</p><p>将<code>uint32 num_load_threads = 0; uint32 num_unload_threads = 0;</code>设置为1，</p><p>问题2的解决办法：</p><p>模型加载后进行一次预热</p><p><strong>参考资料</strong></p><p><a href="://blog.csdn.net/jeffery0207/article/details/86072456">Tensorflow Serving部署tensorflow、keras模型详解_jeffery0207的博客-CSDN博客</a><br /><a href="://zhuanlan.zhihu.com/p/52096200">TensorFlow Serving + Docker + Tornado机器学习模型生产级快速部署 - 知乎</a><br /><a href="://tensorflow.google.cn/tfx/serving/signature_defs?hl=en">SignatureDefs in SavedModel for TensorFlow Serving  |  TFX</a><br /><a href="://zhuanlan.zhihu.com/p/96917543">使用tensorflow serving部署keras模型（tensorflow 2.0.0） - 知乎</a><br /><a href="://tech.meituan.com/2018/10/11/tfserving-improve.html">基于TensorFlow Serving的深度学习在线预估 - 美团技术团队</a><br /><a href="://www.jianshu.com/p/afe80b2ed7f0">TensorFlow Serving入门 - 简书</a><br /><a href="://blog.csdn.net/weixin_40922744/article/details/102872607">TensorFlow Serving 入门教程（Windows）_I’m George 的博客-CSDN博客</a><br /><a href="://blog.csdn.net/leiflyy/article/details/110003671">TensorFlow Serving 使用 及 部署_Eric’s Blog-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;TensorFlow Serving是用于机器学习的灵活，高性能的服务系统，针对生产环境而设计。 TensorFlow服务 可以轻松部署新算法和实验，同时保持不变服务器体系结构和API。TensorFlow Serving开箱即用 与TensorFlow模型集成，但可以轻松扩展以服务于其他  模型类型&lt;/p&gt;</summary>
    
    
    
    <category term="深度学习" scheme="https://shaogui.life/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://shaogui.life/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="tensorflow" scheme="https://shaogui.life/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>Linux上利用gitee为Hexo配置图床服务</title>
    <link href="https://shaogui.life/2021/02/21/Hexo%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/"/>
    <id>https://shaogui.life/2021/02/21/Hexo%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</id>
    <published>2021-02-21T10:10:44.000Z</published>
    <updated>2023-04-08T12:45:08.307Z</updated>
    
    <content type="html"><![CDATA[<p>本文通过小书匠为hexo搭建图床服务，图床搭建在gitee中，国内访问速度可以</p><a id="more"></a><p>搭建的步骤主要分为两个步骤</p><h2 id="新建图床仓库并获取令牌"><a class="markdownIt-Anchor" href="#新建图床仓库并获取令牌"></a> 新建图床仓库并获取令牌</h2><p><strong>新建仓库</strong></p><p>打开gitee，新建一个<code>公开的</code>仓库，用于做图床的存储库</p><p><strong>获得令牌</strong></p><p>令牌运行应用自行上传图片到gitee，所以需要提前获得，在gitee个人设置选项找到<code>私人令牌</code>，按下图配置新建一个令牌</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044872.png" alt="image-20210221172720292" /></p><h2 id="配置markdown编辑器"><a class="markdownIt-Anchor" href="#配置markdown编辑器"></a> 配置Markdown编辑器</h2><h3 id="配置小书匠"><a class="markdownIt-Anchor" href="#配置小书匠"></a> 配置小书匠<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h3><p>打开小书匠的配置界面，选择绑定，添加一个<code>码云图床</code>，出现以下添加界面</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044149.png" alt="" /></p><h2 id="配置typora"><a class="markdownIt-Anchor" href="#配置typora"></a> 配置Typora<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2><p>打开Typora偏好设置，依次配置下面内容：</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044237.png" alt="image-20210221173149180" /></p><p>第5步需要下载<code>PicGo-Core</code>，耐心等到下载完成；</p><p>第6步配置文件按以下配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;current&quot;</span>: <span class="string">&quot;gitee&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;gitee&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gitee&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;branch&quot;</span>: <span class="string">&quot;master&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;customPath&quot;</span>: <span class="string">&quot;yearMonth&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;PicGo/&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;repo&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="comment">//用户名/仓库名称</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;xxxx&quot;</span> <span class="comment">// gitee上面的私人令牌</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;picgo-plugin-gitee-uploader&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件的<code>repo</code>在仓库的浏览地址找到</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044729.png" alt="image-20210221174346189" /></p><p>配置文件的<code>path</code>为仓库下的一个文件夹，<code>token</code>为第一步申请的</p><p>点击第7步前需要安装picgo的<code>gitee-uploader</code>插件，安装下面的命令安装<code>gitee-uploader</code>插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\%用户名%\AppData\Roaming\Typora\picgo\win64</span><br><span class="line">picgo.exe install gitee-uploader</span><br><span class="line">picgo.exe install super-prefix</span><br></pre></td></tr></table></figure><p>点击第7步，出现下面提示，则配置成功</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082045314.png" alt="image-20210221175128485" /></p><p>注意：在linux上已经试过用<code>PicGo-2.2.2.AppImage</code>配置<code>Typora</code>，但是出现一个难以忍受的bug，图片上传成功后居然不重命名，其实图片链接已经保存在粘贴板中，需要手动复制上去</p><p><strong>参考资料：</strong></p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/qq_39231769/article/details/96709675">无水印上传本地图片到网络获取地址+小书匠使用 +github和 七牛云 图床绑定–菜鸟小回</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/in_the_road/article/details/105733292">Typora自动上传图片配置，集成PicGo-Core，文件以时间戳命名</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文通过小书匠为hexo搭建图床服务，图床搭建在gitee中，国内访问速度可以&lt;/p&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Hexo" scheme="https://shaogui.life/tags/Hexo/"/>
    
    <category term="Next" scheme="https://shaogui.life/tags/Next/"/>
    
    <category term="博客" scheme="https://shaogui.life/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>编程中的项目、文件、变量命名探究</title>
    <link href="https://shaogui.life/2021/02/20/%E7%BC%96%E7%A0%81%E4%B8%AD%E5%90%84%E7%B1%BB%E5%91%BD%E5%90%8D%E6%96%B9%E5%BC%8F%E6%8E%A2%E7%B4%A2/"/>
    <id>https://shaogui.life/2021/02/20/%E7%BC%96%E7%A0%81%E4%B8%AD%E5%90%84%E7%B1%BB%E5%91%BD%E5%90%8D%E6%96%B9%E5%BC%8F%E6%8E%A2%E7%B4%A2/</id>
    <published>2021-02-20T01:45:34.000Z</published>
    <updated>2022-06-15T01:53:22.232Z</updated>
    
    <content type="html"><![CDATA[<p>命名，可以说是编码的第一步，从一个项目如何命令，一个文件如何命名，到一个类的命名，一个函数的命名都需要规范</p><a id="more"></a><h1 id="1项目的命名方式"><a class="markdownIt-Anchor" href="#1项目的命名方式"></a> 1.项目的命名方式</h1><p>统计了github上Google与Nvidia两家公司的部分的开源项目，发现他们的命名规则分为以下几类</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">Google</th><th style="text-align:center">Nvidia</th></tr></thead><tbody><tr><td style="text-align:center">全部小写</td><td style="text-align:center">tensorflow、tensorboard、tfjs</td><td style="text-align:center">deepops、aistore、libcudacxx</td></tr><tr><td style="text-align:center">小写+“-”</td><td style="text-align:center">model-card-toolkit、ngraph-bridge、tflite-support</td><td style="text-align:center">spark-rapids、framework-determinism、container-config、nvidia-gcp-samples</td></tr><tr><td style="text-align:center">首字母大写</td><td style="text-align:center">-</td><td style="text-align:center">TensorRT、TRTorch</td></tr><tr><td style="text-align:center">首字母大写+“-”</td><td style="text-align:center">-</td><td style="text-align:center">Reflex-Latency-Analyzer-Mouse-Database</td></tr><tr><td style="text-align:center">特殊含义的缩写（大写）</td><td style="text-align:center">-</td><td style="text-align:center">AMGX、DCGM、DALI</td></tr></tbody></table><blockquote><p>统计时间：2021.2.4</p></blockquote><p>从统计的数据来看，两家同时的开源项目命名以<code>全部小写</code>、<code>小写+“-”</code>为主，实际命名项目时，也建议使用这两种方式</p><h1 id="2python常见命名规"><a class="markdownIt-Anchor" href="#2python常见命名规"></a> 2.Python常见命名规</h1><blockquote><p>copy from <a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/#id16">Google 开源项目风格指南-Python命名</a></p></blockquote><p><strong>Python之父Guido推荐的规范</strong></p><table><thead><tr><th style="text-align:left">Type</th><th style="text-align:left">Public</th><th style="text-align:left">Internal</th><th>note</th></tr></thead><tbody><tr><td style="text-align:left">Modules</td><td style="text-align:left">lower_with_under</td><td style="text-align:left">_lower_with_under</td><td>模块</td></tr><tr><td style="text-align:left">Packages</td><td style="text-align:left">lower_with_under</td><td style="text-align:left"></td><td>包</td></tr><tr><td style="text-align:left">Classes</td><td style="text-align:left">CapWords</td><td style="text-align:left">_CapWords</td><td>类</td></tr><tr><td style="text-align:left">Exceptions</td><td style="text-align:left">CapWords</td><td style="text-align:left"></td><td>异常</td></tr><tr><td style="text-align:left">Functions</td><td style="text-align:left">lower_with_under()</td><td style="text-align:left">_lower_with_under()</td><td>函数</td></tr><tr><td style="text-align:left">Global/Class Constants</td><td style="text-align:left">CAPS_WITH_UNDER</td><td style="text-align:left">_CAPS_WITH_UNDER</td><td>常量</td></tr><tr><td style="text-align:left">Global/Class Variables</td><td style="text-align:left">lower_with_under</td><td style="text-align:left">_lower_with_under</td><td>变量</td></tr><tr><td style="text-align:left">Instance Variables</td><td style="text-align:left">lower_with_under</td><td style="text-align:left">_lower_with_under (protected) or __lower_with_under (private)</td><td>实例变量</td></tr><tr><td style="text-align:left">Method Names</td><td style="text-align:left">lower_with_under()</td><td style="text-align:left">_lower_with_under() (protected) or __lower_with_under() (private)</td><td>方法名</td></tr></tbody></table><h1 id="c常见命名规范"><a class="markdownIt-Anchor" href="#c常见命名规范"></a> C++常见命名规范</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">对于高质量的工程，一般会做到：</span><br><span class="line">1.代码简洁精炼，美观，可读性好，高效率，高复用，可移植性好，高内聚，低耦合，没有冗余，不符合这些原则，必须特别说明。</span><br><span class="line">    2.规范性，代码有规可循。特殊排版、特殊语法、特殊指令，必须特别说明。</span><br></pre></td></tr></table></figure><blockquote><p>摘录自：<a href="https://www.cnblogs.com/winslam/p/11147396.html">C++命名规范</a></p></blockquote><p>1.什么是低耦合、高内聚？<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p><code>低耦合</code>:耦合指的是元素与元素之间的连接或依赖程度，这里的元素包括功能、对象、系统、子系统、模块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：现有元素A，B,A依赖B完成，如果B出现问题或者经过修改，A元素就不能正常工作，那么说元素A、B之间耦合</span><br></pre></td></tr></table></figure><p><code>高内聚</code>：或称为功能内聚，指系统中元素职责的相关性和集中程度，如果元素有高度的相关职责，而没有其他工作，这就是高内聚</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：只需要元素A、B共同完成计算，就可以最终得到C，在元素A、B所在范围（函数、类、模块等）内，如果没有其他元素并且A、B不参与其他计算，则认为A、B元素所在范围高内聚。</span><br></pre></td></tr></table></figure><p><strong>通俗理解</strong></p><p>耦合越弱越好，内聚越强越好，最弱的模块就是通过一个主控模块协调N个模块进行协作，最终得到结果；最强的内聚体现在功能能不能拆分、就是是否原子化。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/liyuefeilong/article/details/50560564">个人总结的一些C/C++编码规范</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;命名，可以说是编码的第一步，从一个项目如何命令，一个文件如何命名，到一个类的命名，一个函数的命名都需要规范&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://shaogui.life/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="命名" scheme="https://shaogui.life/tags/%E5%91%BD%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Hexo安装Next主题</title>
    <link href="https://shaogui.life/2021/02/19/Hexo%E5%AE%89%E8%A3%85Next%E4%B8%BB%E9%A2%98/"/>
    <id>https://shaogui.life/2021/02/19/Hexo%E5%AE%89%E8%A3%85Next%E4%B8%BB%E9%A2%98/</id>
    <published>2021-02-19T13:10:44.000Z</published>
    <updated>2021-03-06T14:07:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>基于github pages完成博客搭建后，已经可以正常发文了，但是文字展示不美观，本文展示如何在Linux为Hexo博客安装Next主题，并进行详细配置</p><a id="more"></a><h2 id="安装next主题"><a class="markdownIt-Anchor" href="#安装next主题"></a> 安装Next主题</h2><p><strong>下载主题</strong></p><p>在博客的目录下，运行以下命令获得Next主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p><strong>更新主题</strong></p><p>运行以下命令即可更新主题，但这会覆盖原来的自定义修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next;git pull</span><br></pre></td></tr></table></figure><h2 id="配置next主题"><a class="markdownIt-Anchor" href="#配置next主题"></a> 配置Next主题</h2><p>配置博客涉及两个配置文件，一个路径是<code>[myblog]/_config.yml</code>和<code>[myblog]/theme/next/_config.yml</code>，前一个是站点配置，后一个是主题配置。下面就分别就这两个文件进行配置：</p><h3 id="配置站点_configyml"><a class="markdownIt-Anchor" href="#配置站点_configyml"></a> 配置站点_config.yml</h3><p>打开文件<code>[myblog]/_config.yml</code>，每个配置项按如下配置</p><h4 id="配置站点基本信息"><a class="markdownIt-Anchor" href="#配置站点基本信息"></a> 配置站点基本信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 年轻人起来冲</span><br><span class="line">subtitle: <span class="string">''</span></span><br><span class="line">description: <span class="string">'害怕失败是本能，勇敢面对才是本事'</span></span><br><span class="line">keywords:</span><br><span class="line">author: 绍桂</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure><h4 id="主题配置"><a class="markdownIt-Anchor" href="#主题配置"></a> 主题配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><h4 id="url配置"><a class="markdownIt-Anchor" href="#url配置"></a> URL配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/'</span></span><br><span class="line">url: https://shaogui.life/</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  trailing_html: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure><h4 id="翻页配置"><a class="markdownIt-Anchor" href="#翻页配置"></a> 翻页配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: 8</span><br><span class="line">pagination_dir: page</span><br></pre></td></tr></table></figure><h3 id="配置主题_configyml"><a class="markdownIt-Anchor" href="#配置主题_configyml"></a> 配置主题_config.yml</h3><p>根据 Hexo 官方的推荐，不要直接修改主题的配置文件</p><blockquote><p>The file should be placed in your site folder, both <code>yml</code> and <code>json</code> are supported. <code>theme</code> inside <code>_config.yml</code> must be configured for Hexo to read <code>_config.[theme].yml</code></p></blockquote><p>而是将配置文件复制到和<code>[myblog]/_config.yml</code>同目录下，并命名为：<code>_config.next.yml</code>，在该文件上填写<strong>自己需要自定义的内容</strong>。</p><h4 id="网站logo配置"><a class="markdownIt-Anchor" href="#网站logo配置"></a> 网站logo配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><h4 id="主题风格配置"><a class="markdownIt-Anchor" href="#主题风格配置"></a> 主题风格配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><h4 id="菜单栏配置"><a class="markdownIt-Anchor" href="#菜单栏配置"></a> 菜单栏配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure><p>注：||后面指的是图标，各个菜单实际显示的是中文，中英文对应配置文件位于<code>\themes\next\languages\zh-CN.yml</code>中，如果有其他菜单项可以在该文件配置其中文</p><h4 id="文章分类及标签"><a class="markdownIt-Anchor" href="#文章分类及标签"></a> 文章分类及标签<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h4><p>菜单栏中<code>categories</code>，<code>tags</code>，<code>about</code>点击后提示找不到页面，这时需要使用以下命令新建这三个页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>运行三个命令后，均在<code>source</code>目录下生成相应的文件夹，此时菜单栏中可以打开这些项，但是没有内容，需要配置各自的<code>index.md</code></p><p>打开<code>source/categories/index.md</code>，添加type项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2021-02-18 21:44:21</span><br><span class="line"><span class="built_in">type</span>: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>打开<code>source/tags/index.md</code>，添加type项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2021-02-18 21:44:21</span><br><span class="line"><span class="built_in">type</span>: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>编辑文章时，在开头加入<code>categories</code>，<code>tags</code>项即刻对文章进行分类及打标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: xxx</span><br><span class="line">date: 2020-06-01 23:47:44</span><br><span class="line">tags: [xx,xx]</span><br><span class="line">categories: xx</span><br></pre></td></tr></table></figure><h4 id="顶部加载条"><a class="markdownIt-Anchor" href="#顶部加载条"></a> 顶部加载条</h4><p><strong>安装插件到Next主题</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pace themes/next/<span class="built_in">source</span>/lib/pace</span><br></pre></td></tr></table></figure><p><strong>开启进度条</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line">pace:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure><h4 id="添加访问量"><a class="markdownIt-Anchor" href="#添加访问量"></a> 添加访问量</h4><p>修改<code>themes/next/layout/_partials/footer.swig</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"powered-by"</span>&gt;</span><br><span class="line">    {%- <span class="built_in">set</span> next_site = <span class="string">'https://theme-next.org'</span> %}</span><br><span class="line">    {%- <span class="keyword">if</span> theme.scheme !== <span class="string">'Gemini'</span> %}</span><br><span class="line">      {%- <span class="built_in">set</span> next_site = <span class="string">'https://'</span> + theme.scheme | lower + <span class="string">'.theme-next.org'</span> %}</span><br><span class="line">    {%- endif %}</span><br><span class="line">    {{- __(<span class="string">'footer.powered'</span>, next_url(<span class="string">'https://hexo.io'</span>, <span class="string">'Hexo'</span>, {class: <span class="string">'theme-link'</span>}) + <span class="string">' &amp; '</span> + next_url(next_site, <span class="string">'NexT.'</span> + theme.scheme, {class: <span class="string">'theme-link'</span>})) }}</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>以上修改为以下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"powered-by"</span>&gt;</span><br><span class="line">&lt;i class=<span class="string">"fa fa-user-md"</span>&gt;&lt;/i&gt;</span><br><span class="line">&lt;span id=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span><br><span class="line">本站访客数:&lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">&lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span><br><span class="line">本站访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="返回顶部按钮"><a class="markdownIt-Anchor" href="#返回顶部按钮"></a> 返回顶部按钮</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  sidebar: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  scrollpercent: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="修改底部标签样式"><a class="markdownIt-Anchor" href="#修改底部标签样式"></a> 修改底部标签样式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line">tag_icon: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="社交链接"><a class="markdownIt-Anchor" href="#社交链接"></a> 社交链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/WuShaogui || fab fa-github</span><br><span class="line">  E-Mail: wshglearn@163.com || fa fa-envelope</span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  icons_only: <span class="literal">false</span></span><br><span class="line">  transition: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="打赏配置"><a class="markdownIt-Anchor" href="#打赏配置"></a> 打赏配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line">reward_settings:</span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  animation: <span class="literal">true</span></span><br><span class="line">  comment: 坚持原创技术分享，您的支持将鼓励我继续创作！.</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.png</span><br><span class="line">  alipay: /images/alipay.png</span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure><h4 id="follow_me"><a class="markdownIt-Anchor" href="#follow_me"></a> Follow_me</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">follow_me:</span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class="line">  <span class="comment">#WeChat: /images/wechat_channel.jpg || fab fa-weixin</span></span><br><span class="line">  RSS: /atom.xml || fa fa-rss</span><br></pre></td></tr></table></figure><h4 id="github角标"><a class="markdownIt-Anchor" href="#github角标"></a> Github角标</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line">github_banner:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  permalink: https://github.com/WuShaogui</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure><h4 id="搜索功能"><a class="markdownIt-Anchor" href="#搜索功能"></a> 搜索功能</h4><p>搜索功能需要安装插件实现，使用npm管理器安装以下插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>在主题配置文件配置以下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  unescape: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  preload: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="扩增markdown的功能"><a class="markdownIt-Anchor" href="#扩增markdown的功能"></a> 扩增Markdown的功能<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h4><p>hexo默认的渲染插件marked功能比较少，比如不支持脚注功能，部署时，脚注会出错，可以通过安装更强的渲染插件实现功能扩展。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载原始markdown渲染插件</span></span><br><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装新的markdown渲染插件</span></span><br><span class="line">npm i @upupming/hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure><p>修改站点的配置文件<code>[myblog]/_config.yml</code>，增加以下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Markdown config</span></span><br><span class="line">markdown_it_plus:</span><br><span class="line">  render:</span><br><span class="line">    html: <span class="literal">true</span></span><br><span class="line">    xhtmlOut: <span class="literal">false</span></span><br><span class="line">    breaks: <span class="literal">true</span></span><br><span class="line">    linkify: <span class="literal">true</span></span><br><span class="line">    typographer: <span class="literal">true</span></span><br><span class="line">    quotes: <span class="string">'“”‘’'</span></span><br><span class="line">  plugins:</span><br><span class="line">    - markdown-it-abbr</span><br><span class="line">    - markdown-it-footnote</span><br><span class="line">  anchors:</span><br><span class="line">    level: 2</span><br><span class="line">    collisionSuffix: <span class="string">'v'</span></span><br><span class="line">    permalink: <span class="literal">true</span></span><br><span class="line">    permalinkClass: header-anchor</span><br><span class="line">    permalinkSide: <span class="string">'left'</span></span><br><span class="line">    permalinkSymbol: ¶</span><br></pre></td></tr></table></figure><p><code>plugins</code>指定需要扩展的功能，支持添加以下功能</p><ul><li><code>markdown-it-emoji</code>支持emoji，<code>:cat:</code>→`🐱</li><li><code>markdown-it-sub</code> 支持<code>H~2~O</code>→H2O</li><li><code>markdown-it-sup</code> 支持<code>X^2^</code>→X2</li><li><code>markdown-it-deflist</code> 支持自定义列表</li><li><code>markdown-it-abbr</code>支持<code>&lt;abbr&gt;</code>标签</li><li><code>markdown-it-footnote</code>支持引入参考文献。emmm就是上标数字，最后附上文献那种</li><li><code>markdown-it-ins</code>支持<code>++Inserted++</code> →Inserted， <code>~~Del~~ →</code>Del</li><li><code>markdown-it-mark</code>支持<code>==marked==</code>→inserted</li><li><code>markdown-it-katex</code><strong>支持katex公式</strong></li><li><code>markdown-it-toc-and-anchor</code>支持<code>@[toc]</code>生成目录</li></ul><p>使用以上扩展功能前，需使用以下命令安装该功能的插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install markdown-it-... --save</span><br></pre></td></tr></table></figure><p><strong>添加MathJax 数学公式支持</strong></p><p>在以上配置基础上，修改两个文件</p><h4 id="访客统计"><a class="markdownIt-Anchor" href="#访客统计"></a> 访客统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  total_visitors: <span class="literal">true</span></span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: <span class="literal">true</span></span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: <span class="literal">true</span></span><br><span class="line">  post_views_icon: fa fa-eye</span><br></pre></td></tr></table></figure><h4 id="阅读全文"><a class="markdownIt-Anchor" href="#阅读全文"></a> 阅读全文<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></h4><p>在文章中，使用标记<code>&lt;!-- more --&gt;</code>实现文章摘要功能，该标记前的内容为文章摘要，显示在首页上</p><h4 id="文章置顶"><a class="markdownIt-Anchor" href="#文章置顶"></a> 文章置顶<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></h4><p>两个步骤完成该操作</p><p><strong>更换插件</strong></p><p>通过以下命令更换支持置顶的插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p><strong>设置置顶标志</strong></p><p>打开文件：<code>/blog/themes/next/layout/_macro/post.swig</code>，在<code>&lt;div class="post-meta"&gt;</code>标签下插入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{% <span class="keyword">if</span> post.top %}</span><br><span class="line">   &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">   &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">   &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">{% endif %}</span><br></pre></td></tr></table></figure><p>往后写文章时，准备置顶的文章需要在Front-matter中添加<code>top: true</code></p><h4 id="文章字数统计"><a class="markdownIt-Anchor" href="#文章字数统计"></a> 文章字数统计</h4><p><strong>安装字数统计插件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure><p><strong>配置开启数字统计</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br><span class="line">  item_text_post: <span class="literal">true</span></span><br><span class="line">  item_text_total: <span class="literal">true</span></span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure><h4 id="文章内链接样式"><a class="markdownIt-Anchor" href="#文章内链接样式"></a> 文章内链接样式</h4><p>原始样式只是加一条下划线，为了更加明显显示链接，通过在文件<code>Blog/themes/next/source/css/_common/components/post/post.styl</code>添加以下样式实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a{</span><br><span class="line">  color: <span class="comment">#0593d3; //原始链接颜色</span></span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid <span class="comment">#0593d3; //底部分割线颜色</span></span><br><span class="line">  &amp;:hover {</span><br><span class="line">    color: <span class="comment">#fc6423; //鼠标经过颜色</span></span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid <span class="comment">#fc6423; //底部分割线颜色</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h4 id="文章结束标志"><a class="markdownIt-Anchor" href="#文章结束标志"></a> 文章结束标志</h4><p>通过3个步骤完成该优化</p><p><strong>新建结束文件</strong></p><p>在目录<code>Blog\themes\next\layout\_macro</code>新建文件<code>passage-end-tag.swig</code>，并添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    {% <span class="keyword">if</span> not is_index %}</span><br><span class="line">        &lt;div style=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;-------------本文结束&lt;i class=<span class="string">"fa fa-paw"</span>&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>配置结束文件至文章末尾</strong></p><p>打开文件<code>Blog\themes\next\layout\_macro\post.swig</code>，将以下代码添加到post-body之后，post-footer之前</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  {% <span class="keyword">if</span> not is_index %}</span><br><span class="line">    {% include <span class="string">'passage-end-tag.swig'</span> %}</span><br><span class="line">  {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>配置主题配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="文章添加阴影"><a class="markdownIt-Anchor" href="#文章添加阴影"></a> 文章添加阴影</h4><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>，向里面加入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post {</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><h4 id="文字底部评论"><a class="markdownIt-Anchor" href="#文字底部评论"></a> 文字底部评论</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid: xxxxxxxxxxxxxxxxx <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  appkey: xxxxxxxxxxxxxxxxx <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  notify: <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  verify: <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  placeholder: 留下你的评论吧 <span class="comment"># Comment box placeholder</span></span><br><span class="line">  avatar: mm <span class="comment"># Gravatar style</span></span><br><span class="line">  guest_info: nick,mail,link <span class="comment"># Custom comment header</span></span><br><span class="line">  pageSize: 10 <span class="comment"># Pagination size</span></span><br><span class="line">  language: <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  visitor: <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  comment_count: <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  recordIP: <span class="literal">true</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  serverURLs: <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure><h4 id="版权声明"><a class="markdownIt-Anchor" href="#版权声明"></a> 版权声明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: <span class="literal">true</span></span><br><span class="line">  post: <span class="literal">true</span></span><br><span class="line">  language:</span><br></pre></td></tr></table></figure><h4 id="侧边栏配置"><a class="markdownIt-Anchor" href="#侧边栏配置"></a> 侧边栏配置</h4><p>将菜单栏配置在左边还是右边，以及大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/sidebar</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  position: left</span><br><span class="line">  <span class="comment"># position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  width: 240</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically.</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  display: post</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar padding in pixels.</span></span><br><span class="line">  padding: 18</span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  offset: 12</span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  onmobile: <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line">avatar:</span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  url: /images/avatar.gif</span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  rounded: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  rotated: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="rss及rss侧边栏"><a class="markdownIt-Anchor" href="#rss及rss侧边栏"></a> RSS及RSS侧边栏</h4><p><strong>安装rss插件</strong></p><p>运行下面命令安装rss插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p><strong>配置rss功能</strong></p><p>在<code>_config.next.yml</code>中找到rss配置项，修改为以下形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><h4 id="设置头像"><a class="markdownIt-Anchor" href="#设置头像"></a> 设置头像</h4><p>无</p><h4 id="网站背景"><a class="markdownIt-Anchor" href="#网站背景"></a> 网站背景</h4><p>无</p><h4 id="动态背景"><a class="markdownIt-Anchor" href="#动态背景"></a> 动态背景</h4><p>略，暂不设置，需要消耗电脑资源，并且干扰阅读</p><h4 id="网站运行时间"><a class="markdownIt-Anchor" href="#网站运行时间"></a> 网站运行时间</h4><p>打开文件<code>themes/next/layout/_partials/footer.swig</code>，添加以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span id=<span class="string">"timeDate"</span>&gt;载入天数...&lt;/span&gt;&lt;span id=<span class="string">"times"</span>&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">createtime</span></span>() {</span><br><span class="line">        var grt= new Date(<span class="string">"03/04/2020 00:00:00"</span>);</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span><br><span class="line">        <span class="keyword">if</span>(String(hnum).length ==1 ){hnum = <span class="string">"0"</span> + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum = Math.floor(minutes); <span class="keyword">if</span>(String(mnum).length ==1 ){mnum = <span class="string">"0"</span> + mnum;}</span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum = Math.round(seconds); <span class="keyword">if</span>(String(snum).length ==1 ){snum = <span class="string">"0"</span> + snum;}</span><br><span class="line">        document.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"本站已安全运行 "</span>+dnum+<span class="string">" 天 "</span>;</span><br><span class="line">        document.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>;</span><br><span class="line">    }</span><br><span class="line">setInterval(<span class="string">"createtime()"</span>,250);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="添加网易云音乐"><a class="markdownIt-Anchor" href="#添加网易云音乐"></a> 添加网易云音乐</h4><p>获得单曲或者歌单的<code>外链播放器</code>，将代码添加到<code>themes/next/layout/_macro/sidebar.swig</code>下，以下是一个外链播放器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=330 height=86 src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=481853876&amp;auto=1&amp;height=66"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h4 id="添加彩色标签"><a class="markdownIt-Anchor" href="#添加彩色标签"></a> 添加彩色标签</h4><p>将标签页的标签打上颜色<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p><p>新建文件：<code>themes\next\layout\tag-color.swig</code>，写入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type="text/javascript"&gt;</span><br><span class="line">     var alltags = document.getElementsByClassName('tag-cloud-tags');</span><br><span class="line">     var tags = alltags[0].getElementsByTagName('a');</span><br><span class="line">     for (var i = tags.length - 1; i &gt;= 0; i--) {</span><br><span class="line">       var golden_ratio = 0.618033988749895;</span><br><span class="line">       var s = 0.5;</span><br><span class="line">       var v = 0.999;</span><br><span class="line">       var h = golden_ratio + Math.random()*0.8 - 0.5;</span><br><span class="line">       var h_i = parseInt(h * 6);</span><br><span class="line">       var f = h * 6 - h_i;</span><br><span class="line">       var p = v * (1 - s);</span><br><span class="line">       var q = v * (1 - f * s);</span><br><span class="line">       var t = v * (1 - (1 - f) * s);</span><br><span class="line">       var r, g, b;</span><br><span class="line">       switch (h_i) {</span><br><span class="line">          case 0:</span><br><span class="line">              r = v;</span><br><span class="line">              g = t;</span><br><span class="line">              b = p;</span><br><span class="line">              break;</span><br><span class="line">          case 1:</span><br><span class="line">              r = q;</span><br><span class="line">              g = v;</span><br><span class="line">              b = p;</span><br><span class="line">              break;</span><br><span class="line">          case 2:</span><br><span class="line">              r = p;</span><br><span class="line">              g = v;</span><br><span class="line">              b = t;</span><br><span class="line">              break;</span><br><span class="line">          case 3 :</span><br><span class="line">              r = p;</span><br><span class="line">              g = q;</span><br><span class="line">              b = v;</span><br><span class="line">              break;</span><br><span class="line">          case 4:</span><br><span class="line">              r = t;</span><br><span class="line">              g = p;</span><br><span class="line">              b = v;</span><br><span class="line">              break;</span><br><span class="line">          case 5:</span><br><span class="line">              r = v;</span><br><span class="line">              g = p;</span><br><span class="line">              b = q;</span><br><span class="line">              break;</span><br><span class="line">          default:</span><br><span class="line">              r = 1;</span><br><span class="line">              g = 1;</span><br><span class="line">              b = 1;</span><br><span class="line">        }</span><br><span class="line">       tags[i].style.background = "rgba("+parseInt(r*255)+","+parseInt(g*255)+","+parseInt(b*255)+","+0.5+")";</span><br><span class="line">     }</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .tag-cloud-tags{</span><br><span class="line">    text-align: center;</span><br><span class="line">    counter-reset: tags;</span><br><span class="line">  }</span><br><span class="line">  .tag-cloud-tags a{</span><br><span class="line">    display: inline-block;</span><br><span class="line">    border: 0px;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">    padding: 0px 10px;</span><br><span class="line">    margin: 8px;</span><br><span class="line">    color: rgba(34, 34, 34, 0.8);</span><br><span class="line">    </span><br><span class="line">  }</span><br><span class="line">/* 文字前添加相应的符号，content后的Unicode可以自定义*/</span><br><span class="line">  .tag-cloud-tags a:before{</span><br><span class="line">    font-family: 'Font Awesome 5 Free';</span><br><span class="line">    content: "\f02b";</span><br><span class="line">    font-weight: 900;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  .tag-cloud-tags a:hover{</span><br><span class="line">     box-shadow: 0px 5px 15px 0px rgba(0,0,0,.4);</span><br><span class="line">     transform: scale(1.1);</span><br><span class="line">     transition-duration: 0.15s;</span><br><span class="line">  }</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>打开文件：<code>theme/next/layout/page.swig</code>，修改节点<code>&lt;div class="tag-cloud-title"&gt;</code>的信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="post-body{%- if page.direction and page.direction.toLowerCase() === 'rtl' %} rtl{%- endif %}"&gt;</span><br><span class="line">       {%- if page.type === 'tags' %}</span><br><span class="line">         &lt;div class="tag-cloud"&gt;</span><br><span class="line">           &lt;div class="tag-cloud-title"&gt;</span><br><span class="line">             {{ _p('counter.tag_cloud', site.tags.length) }}</span><br><span class="line">           &lt;/div&gt;</span><br><span class="line">           &lt;div class="tag-cloud-tags"&gt;</span><br><span class="line">             {{ tagcloud({</span><br><span class="line">               min_font   : theme.tagcloud.min,</span><br><span class="line">               max_font   : theme.tagcloud.max,</span><br><span class="line">               amount     : theme.tagcloud.amount,</span><br><span class="line">               color      : false,</span><br><span class="line">               start_color: theme.tagcloud.start,</span><br><span class="line">               end_color  : theme.tagcloud.end})</span><br><span class="line">             }}</span><br><span class="line">           &lt;/div&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">       {% include 'tag-color.swig'%}</span><br></pre></td></tr></table></figure><p><strong>参考资料<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup><sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup><sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>：</strong></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.jianshu.com/p/4d37bc01290b">Hexo 添加分类及标签</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/qq_36667170/article/details/105846999">hexo markdown渲染器 @upupming/hexo-renderer-markdown-it-plus</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://blog.csdn.net/yueyue200830/article/details/104470646/">设置hexo首页只显示部分摘要（不显示全文）</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://blog.csdn.net/qwerty200696/article/details/79010629">hexo博客优化之文章置顶+置顶标签</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p><a href="https://blog.csdn.net/qq_39974578/article/details/114172260">给next添加彩色标签</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p><a href="http://jeffyang.top/Hexo/Hexo%E4%B8%BB%E9%A2%98Next%E7%BE%8E%E5%8C%96/">Hexo博客设置以及Next主题美化</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p></li><li id="fn7" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/129644138">hexo+next个性化配置</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p></li><li id="fn8" class="footnote-item"><p><a href="https://www.jianshu.com/p/9f0e90cc32c2">Hexo-NexT配置超炫网页效果</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;基于github pages完成博客搭建后，已经可以正常发文了，但是文字展示不美观，本文展示如何在Linux为Hexo博客安装Next主题，并进行详细配置&lt;/p&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Hexo" scheme="https://shaogui.life/tags/Hexo/"/>
    
    <category term="Next" scheme="https://shaogui.life/tags/Next/"/>
    
    <category term="博客" scheme="https://shaogui.life/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客环境搭建</title>
    <link href="https://shaogui.life/2021/02/18/%E5%9C%A8Linux%E4%B8%8A%E5%AE%8C%E6%88%90Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://shaogui.life/2021/02/18/%E5%9C%A8Linux%E4%B8%8A%E5%AE%8C%E6%88%90Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2021-02-18T07:00:44.000Z</published>
    <updated>2023-04-08T12:42:11.364Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍在Linux、Windows完成Hexo博客的搭建，包括安装和配置Hexo，将博客部署到github，使得可以通过github page的方式进行访问博客</p><a id="more"></a><h2 id="系统环境"><a class="markdownIt-Anchor" href="#系统环境"></a> 系统环境</h2><p>本系列文章所有操作在系统<code>Linux Mint 20 Cinnamon</code>及windows上完成，其他关联应用版本为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node</span><br><span class="line">npm</span><br><span class="line">hexo</span><br><span class="line">git</span><br></pre></td></tr></table></figure><h2 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装Hexo</h2><h3 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装nodejs</h3><p>Hexo是基于nodeJS编写的，所以需要安装nodeJs，npm是nodejs的包管理工具，新版本的nodejs包含该工具，不需要单独安装</p><p><strong>Linux安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nodejs</span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><p><strong>Windows安装</strong></p><ol><li><strong>安装nodejs</strong>:从<a href="https://nodejs.org/en/%E4%B8%8B%E8%BD%BDnodejs%E7%9A%84msi%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%8C%E5%87%BB%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9%E5%AE%89%E8%A3%85">https://nodejs.org/en/下载nodejs的msi安装文件，双击默认选项安装</a></li><li><strong>安装git</strong>:从<a href="https://git-scm.com/download/win%E4%B8%8B%E8%BD%BDgit%E7%9A%84exe%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%8C%E5%87%BB%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9%E5%AE%89%E8%A3%85">https://git-scm.com/download/win下载git的exe安装文件，双击默认选项安装</a></li></ol><h3 id="配置npm镜像"><a class="markdownIt-Anchor" href="#配置npm镜像"></a> 配置npm镜像<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h3><p>npm是nodeJs的包管理工具，用于从NPM服务器下载第三方包到本地使用或上传自己编写的包，但是国内直接使用npm的官方镜像往往较慢，因此建议使用<code>淘宝镜像</code>，可以通过两种方式达到这个目地：</p><ul><li><strong>更改npm的默认镜像</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前镜像地址</span></span><br><span class="line">npm get registry</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置为淘宝镜像</span></span><br><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org/</span><br><span class="line"></span><br><span class="line"><span class="comment">#还原为原始配置</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure><ul><li><strong>安装淘宝定制的cnpm工具</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装cnpm工具</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用cnpm工具</span></span><br><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure><h2 id="博客初始化"><a class="markdownIt-Anchor" href="#博客初始化"></a> 博客初始化</h2><h3 id="安装hexo-2"><a class="markdownIt-Anchor" href="#安装hexo-2"></a> 安装hexo</h3><p>通过npm工具安装hexo，使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="博客初始化-2"><a class="markdownIt-Anchor" href="#博客初始化-2"></a> 博客初始化</h3><p>使用hexo初始化博客，初始化文件夹为空或不存在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始化+安装npm</span></span><br><span class="line">hexo init myblog;<span class="built_in">cd</span> myblog;sudo npm install</span><br></pre></td></tr></table></figure><p>安装完成后，得到以下文件结构</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041145.png" alt="" /></p><h3 id="测试博客"><a class="markdownIt-Anchor" href="#测试博客"></a> 测试博客</h3><p>在新建的博客目录下，使用以下命令测试博客是否初始化完成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>浏览器打开：<a href="http://localhost:4000/%E5%90%8E%EF%BC%8C%E5%BE%97%E5%88%B0%E4%BB%A5%E4%B8%8B%E9%A1%B5%E9%9D%A2%EF%BC%8C%E8%A1%A8%E9%9D%A2%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%90%E5%8A%9F">http://localhost:4000/后，得到以下页面，表面博客初始化成功</a></p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041396.png" alt="" /></p><h2 id="发布博客到github-page"><a class="markdownIt-Anchor" href="#发布博客到github-page"></a> 发布博客到Github Page</h2><h3 id="配置本地及github"><a class="markdownIt-Anchor" href="#配置本地及github"></a> 配置本地及github</h3><p>为了将博客部署到github，需要在本地生成SSH key，并将公钥配置到github</p><h5 id="本地生成公钥及密钥"><a class="markdownIt-Anchor" href="#本地生成公钥及密钥"></a> 本地生成公钥及密钥</h5><p>使用以下命令，一直回车生成公钥和密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-kengen -t rsa -C <span class="string">&quot;yourmail&quot;</span></span><br></pre></td></tr></table></figure><p>生成之后的公钥及密钥保存在目录<code>~/.ssh</code>内，其中<code>id_rsa</code>为私钥，不可泄漏，id_rsa.pub为公钥，将配置到github上，上传代码时，公钥和私钥相互匹配，才能顺利上传代码。</p><h5 id="公钥配置到github"><a class="markdownIt-Anchor" href="#公钥配置到github"></a> 公钥配置到github</h5><p>登录github后，依次进入<code>Settings</code>-&gt;<code>SSH and GPG keys</code>，然后点击<code>New SSH key</code>，将公钥文件id_rsa.pub里面的内容全部填到<code>Key</code>上</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041223.png" alt="" /></p><h5 id="测试是否配置成功"><a class="markdownIt-Anchor" href="#测试是否配置成功"></a> 测试是否配置成功</h5><p>使用以下命令检查，配置是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="安装部署插件"><a class="markdownIt-Anchor" href="#安装部署插件"></a> 安装部署插件</h3><p>通过npm安装git插件，以便进行github部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="新建github-pages仓库"><a class="markdownIt-Anchor" href="#新建github-pages仓库"></a> 新建github pages仓库</h3><p>推送前需先新建一个用于存储博客的仓库，该仓库为用户的github page（GitHub Pages is a static site hosting service designed to host your  personal, organization, or project pages directly from a GitHub  repository）<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>，以下两个操作完成此步骤：</p><ol><li>新建一个公开（Public）仓库，仓库名为<code>你的用户名.github.io</code>；</li><li>进入仓库的<code>Settings</code>，找到Github Page，在<code>Source</code>选择分支，并保存</li><li>浏览器访问<code>https://[YourUserName].github.io/</code>，成功访问即配置成功（这可能需要科学上网）</li></ol><h3 id="设置博客部署仓库"><a class="markdownIt-Anchor" href="#设置博客部署仓库"></a> 设置博客部署仓库</h3><p>将远程仓库地址配置到博客配置文件中，部署时往此仓库推送，打开<code>_config.yml</code>文件，在最后找到Deployment配置项，按以下方式配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/[YourUserName]/[YourUserName].github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="推送博客到github-pages仓库"><a class="markdownIt-Anchor" href="#推送博客到github-pages仓库"></a> 推送博客到github pages仓库</h3><p>使用以下命令推送hexo博客到github page仓库上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean;hexo generate;hexo deploy</span><br></pre></td></tr></table></figure><p>在浏览器上再次访问<code>https://[YourUserName].github.io/</code>，出现以下画面表示成功</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041120.png" alt="" /></p><h2 id="绑定域名"><a class="markdownIt-Anchor" href="#绑定域名"></a> 绑定域名</h2><p>每次访问博客，均需使用<code>https://[YourUserName].github.io/</code>打开，本着<s>装逼</s>的原则，申请一个个人使用的域名，即可以便于记忆/宣传，又隐藏博客在github page的行为，代价是需要RMB（一年几十）。</p><h3 id="申请域名"><a class="markdownIt-Anchor" href="#申请域名"></a> 申请域名</h3><p>我是在腾讯云申请的域名，阿里云也可以通过申请，访问：<a href="https://dnspod.cloud.tencent.com/%EF%BC%8C%E6%90%9C%E7%B4%A2%E8%87%AA%E5%B7%B1%E8%AE%A1%E5%88%92%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%8C%E9%80%89%E6%8B%A9%E5%AE%8C%E6%88%90%E5%90%8E%E4%BB%98%E8%B4%B9%EF%BC%8C%E5%AE%8C%E6%88%90%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81%EF%BC%8B%E5%A4%87%E6%A1%88%EF%BC%8C%E5%8D%B3%E5%8F%AF%E4%BD%BF%E7%94%A8%E3%80%82">https://dnspod.cloud.tencent.com/，搜索自己计划使用的域名，选择完成后付费，完成实名认证＋备案，即可使用。</a></p><p>完成域名申请后，需配置域名的解析地址，按照以下方式添加两个记录</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041040.png" alt="image-20210218163454662" /></p><h3 id="绑定域名-2"><a class="markdownIt-Anchor" href="#绑定域名-2"></a> 绑定域名</h3><p>通过以下两个步骤完成域名的绑定</p><p><strong>1.配置Hexo博客</strong></p><p>在hexo/source目录下新建一个名为<code>CNAME</code>的文件，然后将申请的域名填写到里面</p><p><strong>2.配置Github Pages</strong></p><p>到仓库的Github Pages页面，在<code>Custom domain</code>配置申请的域名（注意：配置成功后不会立马生效）</p><p><img src="./.images/image-20210218165026184.png" alt="image-20210218165026184" /></p><p>在浏览器上通过申请的域名访问博客，如果成功，则配置成功！！！</p><h2 id="发文流程"><a class="markdownIt-Anchor" href="#发文流程"></a> 发文流程</h2><p>使用以下命令新建一个博文，然后使用markdwn格式写博文，再然后部署到github pages上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文件名.md&quot;</span></span><br></pre></td></tr></table></figure><h2 id="遇到的问题"><a class="markdownIt-Anchor" href="#遇到的问题"></a> 遇到的问题</h2><p>1.<code>sudo npm install -g hexo</code>遇到rollbackFailedOptional: verb npm-session<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p><p>原因：（1）网络原因；（2）未配置国内镜像服务器；</p><p>解决：配置npm使用淘宝镜像服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry http:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>参考资料<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup><sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup><sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup><sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>：</p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.runoob.com/nodejs/nodejs-npm.html">NPM 使用介绍</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/shangrila_kun/article/details/89633374">npm的镜像替换成淘宝</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://docs.github.com/en/enterprise/2.14/user/articles/what-is-github-pages">What is GitHub Pages?</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://blog.csdn.net/qq_34458791/article/details/82705345">npm install rollbackFailedOptional: verb npm-session</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html">使用hexo+github搭建免费个人博客详细教程</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p><a href="https://segmentfault.com/a/1190000017986794">超详细Hexo+Github Page搭建技术博客教程【持续更新】</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p></li><li id="fn7" class="footnote-item"><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p></li><li id="fn8" class="footnote-item"><p><a href="https://cloud.tencent.com/developer/article/1520557">这可能是迄今为止最全的hexo博客搭建教程</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍在Linux、Windows完成Hexo博客的搭建，包括安装和配置Hexo，将博客部署到github，使得可以通过github page的方式进行访问博客&lt;/p&gt;</summary>
    
    
    
    <category term="软件工具" scheme="https://shaogui.life/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Hexo" scheme="https://shaogui.life/tags/Hexo/"/>
    
    <category term="博客" scheme="https://shaogui.life/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>404</title>
    <link href="https://shaogui.life/2021/02/15/404/"/>
    <id>https://shaogui.life/2021/02/15/404/</id>
    <published>2021-02-15T02:28:10.000Z</published>
    <updated>2022-06-15T01:53:14.483Z</updated>
    
    
    <summary type="html">你来到了没有知识的荒原 :(</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>书摘：《从行动开始（与其花3小时想，不如花5分钟做。为你系统介绍在日本和美国广受欢迎的行为科学管理方法！）》-石田淳</title>
    <link href="https://shaogui.life/2021/02/11/%E4%B9%A6%E6%91%98_%E4%BB%8E%E8%A1%8C%E5%8A%A8%E5%BC%80%E5%A7%8B%EF%BC%88%E4%B8%8E%E5%85%B6%E8%8A%B13%E5%B0%8F%E6%97%B6%E6%83%B3%EF%BC%8C%E4%B8%8D%E5%A6%82%E8%8A%B15%E5%88%86%E9%92%9F%E5%81%9A%E3%80%82%E4%B8%BA%E4%BD%A0%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D%E5%9C%A8%E6%97%A5%E6%9C%AC%E5%92%8C%E7%BE%8E%E5%9B%BD%E5%B9%BF%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E8%A1%8C%E4%B8%BA%E7%A7%91%E5%AD%A6%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95%EF%BC%81%EF%BC%89-%E7%9F%B3%E7%94%B0%E6%B7%B3.hexo/"/>
    <id>https://shaogui.life/2021/02/11/%E4%B9%A6%E6%91%98_%E4%BB%8E%E8%A1%8C%E5%8A%A8%E5%BC%80%E5%A7%8B%EF%BC%88%E4%B8%8E%E5%85%B6%E8%8A%B13%E5%B0%8F%E6%97%B6%E6%83%B3%EF%BC%8C%E4%B8%8D%E5%A6%82%E8%8A%B15%E5%88%86%E9%92%9F%E5%81%9A%E3%80%82%E4%B8%BA%E4%BD%A0%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D%E5%9C%A8%E6%97%A5%E6%9C%AC%E5%92%8C%E7%BE%8E%E5%9B%BD%E5%B9%BF%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E8%A1%8C%E4%B8%BA%E7%A7%91%E5%AD%A6%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95%EF%BC%81%EF%BC%89-%E7%9F%B3%E7%94%B0%E6%B7%B3.hexo/</id>
    <published>2021-02-11T15:10:51.000Z</published>
    <updated>2022-06-15T01:53:18.385Z</updated>
    
    <content type="html"><![CDATA[<div class="douban-card-block"><a class="douban-card" href="https://book.douban.com/subject/26828557"><div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28858263.jpg');"></div><div class="douban-card-left"><div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28858263.jpg');"></div></div><div class="douban-card-right" style="line-height: 1.7;"><div class="douban-card-item"><span>书名: </span><strong>从行动开始</strong></div><div class="douban-card-item"><span>作者: </span><span>[日]石田淳</span></div><div class="douban-card-item"><span>出版年份: </span><span>2016-9</span></div><div class="douban-card-item"><span>评分: </span><span>7.1</span></div></div></a></div><style>.douban-card-block {display: flex;justify-content: center;align-items: center;width: 100%;max-height: 400px;}.douban-card {display: flex;margin: 30px 10px;padding: 15px;border-radius: 10px;position: relative;justify-content: center;align-items: center;overflow: hidden;color: antiquewhite;text-decoration: none;}.douban-card:hover {text-decoration: none;}.douban-card-bgimg {position: absolute;width: 115%;height: 115%;filter: blur(15px) brightness(0.6);background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;}.douban-card-left {position: relative;display: flex;flex-direction: column;align-items: center;}.douban-card-right {position: relative;display: flex;flex-direction: column;margin-left: 12px;font-size: 16px;font-family: 'Courier New', Courier, monospace;line-height: 1.3;color: antiquewhite;}.douban-card-item {margin-top: 4px;}</style><a id="more"></a><h2 id="自序"><a class="markdownIt-Anchor" href="#自序"></a> 自序</h2><blockquote><p>认为只要拥有坚强的意志，就能够比别人更加努力，就能更好地控制自己的感情，就能够成功，认为改变自己首先必须让自己变成一个意志坚强的人，这种想法本身就是错误的。也正因为你有这样的想法，所以你才一直都没有改变。</p></blockquote><blockquote><p>能够导出结果的只有“行动”。不管你有多么坚强的意志，如果没有行动的话仍然不会产生任何结果。反之，就算意志非常薄弱，但如果采取行动的话一样能够收获成功。明明只要将注意力都集中在简单的“行动”上就好了，可是你却将注意力集中在所谓抽象的“意志”上。</p></blockquote><blockquote><p>我们每个人都有“负面思考”的习惯，在这种习惯的影响下，我们总是把事情往坏的方向想，所以要想“凭借坚强的意志让事情走上正轨”是非常困难的。要记住，最重要的是结果，而能够导出结果的只有行动，与意志无关。</p></blockquote><h2 id="第一章你之所以难以改变的原因"><a class="markdownIt-Anchor" href="#第一章你之所以难以改变的原因"></a> 第一章你之所以难以改变的原因</h2><blockquote><p>在行动科学管理术的理论中，一切结果都是行动的积累。好的结果是好的行动不断重复带来的，而不断重复坏的行动只能带来坏的结果。所以，我们应该关注的不是“性格”和“态度”，而是“行动”。</p></blockquote><blockquote><p>一个打算戒烟的人一整天都没有吸烟，会认为自己的意志力很强，第二天他只吸了一根，却会立刻陷入“为什么我的意志力这么薄弱”的自责之中。</p></blockquote><blockquote><p>这种认知的偏差是人类特有的思维方式，其他动物并没有。</p></blockquote><blockquote><p>向别人展示的不是你坚强的意志；同样的，你也没有必要对自己展示坚强的意志。你只要取得结果就够了。而要想取得结果，必不可少的是行动。</p></blockquote><blockquote><p>与很久之后不确定的结果相比，能够立刻得到的结果对人类的行动会产生决定性的影响。明知道吃蛋糕会增加体重却仍然打算吃蛋糕，也是因为同样的理由。增加体重是几天之后的事，甚至有可能所增加的体重并没有想象中那么多。与之相比，“美味的满足”却是立刻而且确实能够获得的结果。所以人们才会选择吃蛋糕。</p></blockquote><blockquote><p>人类的思考从根本上就带有偏见，尤其是涉及“金钱”这个最应该理性对待的问题时，偏见会变得更加严重。</p></blockquote><blockquote><p>人类之所以不愿意接受确定的损失，是因为“不愿承认自己失败”。我们就是这样害怕失败。</p></blockquote><blockquote><p>据说每个人每天会出现700次自动思考。在这些思考之中有内容比较清晰的，也有意识模糊不清的，但基本上都是负面思考。也就是说，在你的大脑中每天会出现700条负面信息。</p></blockquote><blockquote><p>比如，你的邻居在街上与你擦肩而过但却没有打招呼。明明那个人只是没注意到你而已，但是你心里却会有“他是不是讨厌我啊？上个月我是不是得罪了他？”的想法……或者你在工作中只是出现了一点小问题，可你会想“哎呀，我又犯错误了。</p></blockquote><blockquote><p>我们要正确认识眼前的情况，然后设定好必须要做的事情。接着我们要思考什么是应该最先做的，按照先后顺序采取行动。如果出现问题，应该思考原因，然后正确应对。</p></blockquote><blockquote><p>人类是行动和意志不协调的麻烦的生物，那么我们作为“无法完全理性行动的人类”，要想为实现目标而改变自己，应该怎么做呢？如果还像以前一样企图凭意志的力量来控制自己，只会不断地失败。</p></blockquote><blockquote><p>当你想要实现某种目标，或者想要变成理想中的自己时，都应该把焦点放在“行动”上。只有行动起来，才会发现自己好的地方和坏的地方，以及应该改善的地方。至于改善的方案是否有效，是需要通过行动来进行判断的。</p></blockquote><h2 id="第二章戒除那些毁掉你人生的习惯"><a class="markdownIt-Anchor" href="#第二章戒除那些毁掉你人生的习惯"></a> 第二章戒除那些毁掉你人生的习惯</h2><blockquote><p>一个被“认知偏差”的臆想所束缚的人，在采取明确的行动之前，很容易产生许多乱七八糟的想法。</p></blockquote><blockquote><p>来说，“正念”就是将注意力全部集中在此刻，不被过去和未来所影响，只专注于眼前事物。</p></blockquote><blockquote><p>逃避一时的困难，将来只会给自己带来更大的麻烦。虽然道理很简单，但是很多人却仍然选择眼前的安逸。就好像很多人明明有重要的工作要做，但却把时间都浪费在浏览网页上一样。</p></blockquote><h2 id="第三章小心你深信不疑的陷阱"><a class="markdownIt-Anchor" href="#第三章小心你深信不疑的陷阱"></a> 第三章小心你“深信不疑”的陷阱</h2><blockquote><p>不安、猜疑等负面情绪，都是由我们大脑中的自动化思考所引发的，是非理性思维的不断强化。这时候我们往往会失去冷静的判断力，在面对重要的问题时做出错误的选择。</p></blockquote><blockquote><p>当你在人际交往中受到刺激时，请冷静地回想一下当时的状况，然后试着分析当时对话的内容。如果你能够将那些对话都写在纸上冷静地阅读一下，就会发现其实“并没有什么大不了的”。</p></blockquote><blockquote><p>谁也无法回到过去，所以也无法消除那些不愉快的往事。但是，已经过去的事根本没有消除的必要，因为过去已经不存在了。不管是多么不愉快的事，它们都只存在于我们的记忆之中，而并非存在于现实之中。所以，沉浸于过去的人相当于被不存在的东西束缚住了。</p></blockquote><blockquote><p>只要将注意力集中在“现在”的“现实”之上，就可以解决绝大多数的问题。甚至可以说，没有什么问题是这种方法不能解决的。反之，总是沉浸在过去之中的人，会经常出现许多问题。而且因为谁也无法回到过去，所以那些问题永远也无法得到解决。</p></blockquote><blockquote><p>不同的人对事物的认知方式存在差异，人们的认知大体可以分为“让自己感到轻松的认知”和“让自己感到辛苦的认知”两种。“让自己感到轻松的认知”建立在对眼前发生的事的冷静判断之上，而“让自己感到辛苦的认知”则是由对事实扭曲的认识和毫无根据的臆测所带来的。</p></blockquote><blockquote><p>总而言之，关键在于不要过分关注自己做不到的事。因为在我们的脑海中，一天浮现出700次的“自动化思考”几乎都是负面信息，而我们经常会将负面信息放大。</p></blockquote><blockquote><p>问题不在于“做不到”，而在于你“不肯原谅自己”。因为你不肯原谅自己，这种狭隘的态度会给你造成多余的压力，使你连本来能够做到的事情都做不到了。</p></blockquote><blockquote><p>开始”。你之所以一直无法改变，是因为你每次开始的时候都因为“认知偏差”而感觉自己“这次肯定也不行”。从今往后请原谅真实的自己，这样一来，你就可以对一切进行自我管理。</p></blockquote><blockquote><p>当发生某件事情的时候，应该只将意识集中在“眼前的事实”上，排除多余的印象、思考、喜恶，只接受其最真实的状态。这种方法被称为“正念”或者“ACT（Acceptance&amp;CommitmentTherapy）”，在心理和精神医疗领域都很被重视。</p></blockquote><blockquote><p>找出客观的原因，用正确的认知来应对，然后通过多次乘车来达到“就算坐车也不会肚子疼”的状态时，你才能彻底从苦痛之中解脱出来。这就是认知行为疗法。</p></blockquote><blockquote><p>用“正念”法来进行自我管理，就是让自己彻底面对现实。或许会有人觉得这是非常难的，但实际上这是非常简单的，因为我们只要不考虑事实以外的事情就好。人类总是习惯于逃避事实，特别是在事实让人不愉快的时候。</p></blockquote><blockquote><p>关键在于，愤怒和不安等负面情绪有时候是完全与“现在”和“现实”无关的。只要冷静地想一下就会发现，所有的负面情绪都是因为对过去的后悔和对未来的担忧而产生的。所以，只要敢于正视这些负面的情绪，就会发现其实事实并没有那么可怕。当你感觉自己将要被负面情绪吞噬的时候，千万不要放任负面情绪，而应该将意识集中在“现实”和“现在”。</p></blockquote><blockquote><p>事实上，并没有人会故意去轻视别人，但没有采取充分的应对措施，的确会使人产生被轻视的感觉。这正是“认知偏差”的典型案例。</p></blockquote><blockquote><p>如果将自己愤怒的原因归结于外在因素，那么就说明你被周围的环境和他人的言行所左右了。</p></blockquote><blockquote><p>如果你不能凭借自己的行动来改变现状，那么就无法从负面的情绪中摆脱出来。人在一帆风顺的时候，一旦稍微遇到点不如意的事就很容易自暴自弃。但是，就这样彻底松开方向盘真的对吗？</p></blockquote><blockquote><p>不要因为过去的事情而懊悔，不要因为对未来的不安而畏缩不前，更不要因为周围的环境而心存怨恨。只有把握“现在”和“现实”，你的人生才会变得更加灿烂。</p></blockquote><h2 id="第四章从小习惯开始"><a class="markdownIt-Anchor" href="#第四章从小习惯开始"></a> 第四章从小习惯开始</h2><blockquote><p>自己的幸福度，毫无疑问是由自己决定的。</p></blockquote><blockquote><p>如果不能搞清楚“对自己来说什么是幸福”和“我想要变成什么样的人”，那么你只能感到不满和不幸。</p></blockquote><blockquote><p>“行动科学管理术”认为，无法取得理想结果的原因只有两点：1.不知道应该怎么做2.虽然知道应该怎么做，但不知道如何坚持</p></blockquote><blockquote><p>“行动科学管理术”为了让人们能够在无法立刻得到“好的结果”的情况下仍然能够坚持行动，专门设计了许多“报酬”，但是这些报酬最好不涉及金钱，就算涉及也最好不要涉及高价的东西。</p></blockquote><blockquote><p>为了将那些能够取得好结果的行动变成习惯，并且彻底摆脱导致坏结果的行动，褒奖和成就感是不可忽视的。</p></blockquote><blockquote><p>改变自己并不意味着否定现在的自己，而是让现在的自己得到成长。所以，请不要讨厌现在的自己。只有现在的自己，才能够取得进步。</p></blockquote><blockquote><p>绝对不能自暴自弃。一定要相信自己，放松心情开始行动。</p></blockquote><blockquote><p>改变现在的自己，并不是让你改变人格，而是努力让现在的自己变得更加优秀。但改变不可能一蹴而就，而应该循序渐进。</p></blockquote><blockquote><p>如果因为勉强自己而失败，会导致认知出现巨大的偏差，把自己逼入穷途末路。事实上，不管多大的失败都不能证明你这个人一无是处，但认知的偏差却会让你给自己贴上失败者的标签。如果这样的情况重复出现，那你的人生就真的完蛋了。</p></blockquote><blockquote><p>为了尽可能地减轻我们在日常生活中出现的压力，应该排除模糊不清的因素，使一切都“可视化”。不要总是思考那些模糊不清的内容。</p></blockquote><blockquote><p>所谓“实况转播”，简单来说就是“将自己正在做的事情用语言文字的形式在脑海中确认一遍”。通过将自己的行动读给自己听，可以完全排除过去和将来的干扰，将意识完全集中于现在。</p></blockquote><blockquote><p>每天都努力工作却总是看不到头的日子会使人产生巨大的压力。人们会对工作越来越厌倦并最终放弃。</p></blockquote><h2 id="第五章避开陷阱"><a class="markdownIt-Anchor" href="#第五章避开陷阱"></a> 第五章避开陷阱</h2><blockquote><p>很多人认为压力与发生的事情有直接的联系。但实际上并不是“发生事情→产生压力”，而是“发生事情→个人认知→产生压力”，人类对所发生事情的“认知”才是产生压力的主要因素。如果认知出现偏差，即便只是一些无谓的小事也会产生多余的负面情绪，导致产生巨大的压力。</p></blockquote><blockquote><p>“正念法”可以让你的注意力完全集中在“现在”和“现实”之上，排除过去和未来对你的干扰。只要时刻将注意力完全集中在“现在发生的事情”上，在认识事物的时候就能够摘掉有色眼镜，不会使自己产生无谓的压力。</p></blockquote><blockquote><p>消除压力最重要的还是面对自我。与“行动科学管理术”类似的认知行为疗法也认为，不逃避压力，正视压力而采取行动才能够从根本上解决问题。</p></blockquote><blockquote><p>困扰你的问题，并不是因为你的性格导致的，更不是毅力能够解决的。只有正视现实并且采取行动，才是解决问题的不二法门。</p></blockquote><blockquote><p>要想战胜眼前的诱惑，首先你必须充分了解“人类很难坚持做任何事”（也就是说不要责备自己无法坚持），然后专门制定一套能够帮助自己坚持下去的方法。</p></blockquote><blockquote><p>只有以自己为基准在力所能及的范围内一点一点地改变，才能坚持行动。如果你真的想要改变自己，就不要被周围的价值观所左右，循序渐进地做自己想做的事，这才是最重要的。</p></blockquote><blockquote><p>不管面对多么困难的状况，都不要认为自己是个没用的人，因为这种想法是毫无意义的。自我贬低只会造成“认知偏差”。冷静客观地分析状况，寻找解决方法，然后实践这个方法，这样就能避免陷入毫无根据的“认知偏差”之中。不要冲动，保持理性。不要主观，保持客观。不要抽象，保持具体。</p></blockquote><blockquote><p>遇到问题的时候，只要从当事人视角转换到第三者视角，就能够调整心态，明白“现在应该做什么”。</p></blockquote><blockquote><p>绝对不要忘记，你想要实现什么目标，你想要变成什么样子，都是由现在的你决定的，而不是由世俗的价值观和流行的标准决定的。</p></blockquote><blockquote><p>人类总是背负着超出自己认知的思维负担，这会使人产生多余的思考。</p></blockquote><blockquote><p>坐禅也好，散步也好，甚至只是闭上眼睛也好。“现在，我要整理自己的感情，从“认知偏差”中摆脱出来，让意识回到现实。”只要这样想一想就足够了。在每天睡觉之前拿出5分钟来整理自己的感情，可以很好地减轻你的压力。如果不这样做，任凭由“认知偏差”产生的负面感情蔓延，那么你的未来恐怕也很难变好。</p></blockquote><h2 id="第六章认同自己"><a class="markdownIt-Anchor" href="#第六章认同自己"></a> 第六章认同自己</h2><blockquote><p>1.自己成功的经历：在此之前有过相同或者相似的成功经历。2.替代性经历：虽然自己没有经历过，但看别人成功，因此认为自己也能够成功。3.语言说服：即便自己对行动的成功毫无自信，但别人对你说“你能行”。4.情绪和生理的变化：由成就感和喜悦导致生理状态发生变化。当你想要做什么事的时候，可以利用上述四点来提高你的自我激励能力。</p></blockquote><blockquote><p>你之所以无法达成目标，想要改变却迟迟无法行动，就是因为你太过依赖“干劲”和“毅力”等抽象的东西。</p></blockquote><blockquote><p>如果感到不安却不去解决，自己总放不下心来。为了能够随心所欲地行动，为了能够变成更好的自己，为了构建出满意的人生，请多和自己交流沟通。</p></blockquote><blockquote><p>如果不能最大限度地利用自己的时间，那么你既不能达成目标，也无法改变自己。请将杂乱无章的项目整理清楚，把有限的时间和精力都集中在必要的行动上吧。</p></blockquote><blockquote><p>我们既想达成目标，让自己变得更好，又想最大限度地享受现在的快乐，关键在于在这两者之间找到一个平衡。找不到平衡的人，很难实现理想的人生。</p></blockquote><blockquote><p>我们的情绪很容易出现波动，尽管我们知道应该以自己作为判断的基准，但遇到实际情况时还是可能产生“认知偏差”。在感情混乱的情况下，我们会在不经意间以世俗或他人为标准对事物进行判断，结果陷入与事实不符的臆想之中。如果对这种偏差置之不理，那么你好不容易积累起来的好的习惯都将失去意义，人生的道路也会朝着错误的方向越走越远。</p></blockquote><blockquote><p>首先，人类很容易产生“认知偏差”，而“认知偏差”会妨碍你达成目标和改变自己。其次，为了实现你的目标，成为理想中的自己，你需要的不是坚强的意志，而是从小做起的行动。因为这些内容我都已经反复强调过，想必大家应该都已经理解了。从今往后请不要再重复同样的错误，更加自信地改变自己的人生吧。最后我还有一个请求，那就是不要说“从明天开始”。</p></blockquote><blockquote><p>你能够不以世俗的价值观为基准，而以自己为基准改变自己的人生；你能够从小的行动开始，踏实地积累和坚持；你能够专注于现实和现在；你会对这样的自己感到喜悦，并给予褒奖。这样的你将无所不能，你可以随心所欲地改变自己。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;douban-card-block&quot;&gt;
	&lt;a class=&quot;douban-card&quot; href=&quot;https://book.douban.com/subject/26828557&quot;&gt;
		&lt;div class=&quot;douban-card-bgimg&quot; style=&quot;background-image: url(&#39;https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28858263.jpg&#39;);&quot;&gt;&lt;/div&gt;
		&lt;div class=&quot;douban-card-left&quot;&gt;
			&lt;div class=&quot;douban-card-img&quot; style=&quot;background-image: url(&#39;https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28858263.jpg&#39;);&quot;&gt;&lt;/div&gt;
		&lt;/div&gt;
		&lt;div class=&quot;douban-card-right&quot; style=&quot;line-height: 1.7;&quot;&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;书名: &lt;/span&gt;&lt;strong&gt;从行动开始&lt;/strong&gt;&lt;/div&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;作者: &lt;/span&gt;&lt;span&gt;[日]石田淳&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;出版年份: &lt;/span&gt;&lt;span&gt;2016-9&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;评分: &lt;/span&gt;&lt;span&gt;7.1&lt;/span&gt;&lt;/div&gt;
		&lt;/div&gt;
	&lt;/a&gt;
&lt;/div&gt;
&lt;style&gt;
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: &#39;Courier New&#39;, Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
&lt;/style&gt;</summary>
    
    
    
    <category term="读书" scheme="https://shaogui.life/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
    <category term="读书" scheme="https://shaogui.life/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>书摘：《你的自律给你自由》-小椰子</title>
    <link href="https://shaogui.life/2021/02/09/%E4%B9%A6%E6%91%98_%E4%BD%A0%E7%9A%84%E8%87%AA%E5%BE%8B%E7%BB%99%E4%BD%A0%E8%87%AA%E7%94%B1-%E5%B0%8F%E6%A4%B0%E5%AD%90.hexo/"/>
    <id>https://shaogui.life/2021/02/09/%E4%B9%A6%E6%91%98_%E4%BD%A0%E7%9A%84%E8%87%AA%E5%BE%8B%E7%BB%99%E4%BD%A0%E8%87%AA%E7%94%B1-%E5%B0%8F%E6%A4%B0%E5%AD%90.hexo/</id>
    <published>2021-02-09T15:30:33.000Z</published>
    <updated>2022-06-15T01:53:18.480Z</updated>
    
    <content type="html"><![CDATA[<div class="douban-card-block"><a class="douban-card" href="https://book.douban.com/subject/30424251"><div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s29970134.jpg');"></div><div class="douban-card-left"><div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s29970134.jpg');"></div></div><div class="douban-card-right" style="line-height: 1.7;"><div class="douban-card-item"><span>书名: </span><strong>你的自律给你自由</strong></div><div class="douban-card-item"><span>作者: </span><span>小椰子</span></div><div class="douban-card-item"><span>出版年份: </span><span>2018-8</span></div><div class="douban-card-item"><span>评分: </span><span>5.8</span></div></div></a></div><style>.douban-card-block {display: flex;justify-content: center;align-items: center;width: 100%;max-height: 400px;}.douban-card {display: flex;margin: 30px 10px;padding: 15px;border-radius: 10px;position: relative;justify-content: center;align-items: center;overflow: hidden;color: antiquewhite;text-decoration: none;}.douban-card:hover {text-decoration: none;}.douban-card-bgimg {position: absolute;width: 115%;height: 115%;filter: blur(15px) brightness(0.6);background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;background-size: 100%;background-position: center;background-repeat: no-repeat;}.douban-card-img {position: relative;height: 130px;width: 80px;}.douban-card-left {position: relative;display: flex;flex-direction: column;align-items: center;}.douban-card-right {position: relative;display: flex;flex-direction: column;margin-left: 12px;font-size: 16px;font-family: 'Courier New', Courier, monospace;line-height: 1.3;color: antiquewhite;}.douban-card-item {margin-top: 4px;}</style><a id="more"></a><h2 id="你的不自律正在慢慢毁掉你"><a class="markdownIt-Anchor" href="#你的不自律正在慢慢毁掉你"></a> 你的不自律，正在慢慢毁掉你</h2><blockquote><p>我见过的最不求上进的人，他们为现状焦虑，又没有毅力践行决心去改变自己。三分钟热度，时常憎恶自己的不争气，坚持最多的事情就是坚持不下去。终日混迹社交网络，脸色蜡黄地对着手机和电脑的冷光屏，可以说上几句话的人却寥寥无几。他们以最普通的身份埋没在人群中，却过着最最煎熬的日子。</p></blockquote><blockquote><p>唯有自律，才是解决人生痛苦的根本途径。</p></blockquote><blockquote><p>许多人习惯将自己不自律的原因推卸给他人和外界环境</p></blockquote><blockquote><p>推卸责任的时候，可能感觉舒服和痛快，却永远无法进步，心智永远无法成熟。趋利避害、逃避责任是人类的天性，但是每个人的人生轨迹都是由自己主宰的。</p></blockquote><blockquote><p>推卸责任容易，坚持一件事很难。想要变得自律，必须从敢于承担责任开始。</p></blockquote><blockquote><p>假如我们像动物一样，听从欲望、逃避痛苦，我们并不是真的自由，因为我们成了欲望和冲动的奴隶。我们不是在选择，而是在服从。唯有自律，自律使我们与众不同，自律令我们活得更高级。</p></blockquote><h2 id="一个人开始废掉的三种迹象"><a class="markdownIt-Anchor" href="#一个人开始废掉的三种迹象"></a> 一个人开始废掉的三种迹象</h2><blockquote><p>在大城市里，搞废一个人的方式特别简单。给你一个安静狭小的空间，给你一根网线，最好再加一个外卖电话。好了，你开始废了。</p></blockquote><blockquote><p>低质量的长期宅，确实能改变一个人的心智、外貌，甚至是人生。</p></blockquote><blockquote><p>人喜欢在舒适熟悉的环境中待着。而这种舒适区一旦建立，你就会变得无比依赖，慢慢地爱上周围的墙，恋上舒适的小屋，从而不愿意飞出去看看，怕看到外面熙熙攘攘的世界。</p></blockquote><blockquote><p>一个人开始废掉的迹象之一，就是不再走出自己的舒适区。</p></blockquote><blockquote><p>一个人老去的标志，绝不是老成稳重、沉默寡言，而是不肯再尝试，不肯再容许自己置身不熟悉的境地。</p></blockquote><blockquote><p>当你停止了学习、故步自封，将自己囚禁在得过且过的牢笼中，那么你已经朝平庸迈进了一大步。</p></blockquote><blockquote><p>一个人开始废掉的迹象之二，便是沉溺于短期快感之中，不再做长期投入。</p></blockquote><blockquote><p>毁掉我们的不是我们所憎恨的东西，而恰恰是我们所热爱的东西。</p></blockquote><blockquote><p>任何时候，一个人都不应该做自己情绪的奴隶，不应该使一切行动都受制于自己的情绪，而应该反过来控制情绪。无论境况多么糟糕，你应该去努力支配你的环境，把自己从黑暗中拯救出来。</p></blockquote><blockquote><p>一个人开始废掉的迹象之三，是沦为情绪的奴隶。</p></blockquote><h2 id="二十几岁你凭什么穷得心安理得"><a class="markdownIt-Anchor" href="#二十几岁你凭什么穷得心安理得"></a> 二十几岁，你凭什么穷得心安理得</h2><blockquote><p>二十几岁的日子，应该是炙热的、丰富的、无所畏惧的。我只想跳脱出理所当然的平庸，拒绝我不愿妥协的一切。</p></blockquote><blockquote><p>二十几岁，穷并不可怕，但是千万不要穷得心安理得。</p></blockquote><h2 id="比赚钱更重要的是培养这三种思维方式"><a class="markdownIt-Anchor" href="#比赚钱更重要的是培养这三种思维方式"></a> 比赚钱更重要的是培养这三种思维方式</h2><blockquote><p>财富是一个人思考能力的产物。”唯有去连接更多的人和信息，突破自己的认知局限，转变自己的思维方式，进而转化成行动，才能让自己摆脱又穷又忙的窘境。</p></blockquote><h2 id="千万别让这三种心态害了你"><a class="markdownIt-Anchor" href="#千万别让这三种心态害了你"></a> 千万别让这三种心态害了你</h2><blockquote><p>现实生活中，我们总能看到一些安于现状的人。他们胆小而拘谨，害怕做出任何改变。就算机会摆在眼前，他们也会因为害怕而不敢向前一步。</p></blockquote><blockquote><p>生活并不会遵从某个人的愿望发展。改变随时有可能降临，但积极地面对改变却会让你发现更好的奶酪。</p></blockquote><blockquote><p>02</p></blockquote><blockquote><p>嫉妒为何物？自己不去努力，不去付诸行动，揪着对方的弱点不放，连自己也落得下作，这就叫嫉妒。</p></blockquote><blockquote><p>在我们的生活中，有多少人敢于抓住机会，推荐自己？我们的心态，更像成语“守株待兔”中的主人公，守着一个叫作“机会”的树桩，幻想着能够被机遇和好运砸中。</p></blockquote><blockquote><p>人生有时就像一场赛跑，任何的拖沓都可能导致结果的不理想。机遇总是稍纵即逝，没有人会等你，现实更不会迁就你。不要抱着“守株待兔”的心态，让失败和懊悔一步步向你逼近。</p></blockquote><h2 id="为什么你奋斗了那么久还是挤不进有钱阶层"><a class="markdownIt-Anchor" href="#为什么你奋斗了那么久还是挤不进有钱阶层"></a> 为什么你奋斗了那么久，还是挤不进“有钱阶层”</h2><blockquote><p>阻碍你通往财富自由的，不是你的原生家庭，也不是你不够努力，而是你的思维方式。</p></blockquote><blockquote><p>穷人总是倾向于得到一份稳定的薪水或计时工资。每个月的同一时间，有一笔固定的钱汇到他们的账户上，这能让他们有安全感。然而这份安全感也是有代价的，代价便是：凭着每个月稳定的固定工资，你永远无法实现财富自由。</p></blockquote><blockquote><p>富人，通常都有着自己的赚钱体系。或创业，自己成立公司，或成为某一领域不可替代的专家。他们往往早早就建立好了自己的系统，利用别人的时间赚钱。完成了初期的资本积累后，剩下的就是让钱生钱。房产增值、利息、股权收益……</p></blockquote><blockquote><p>如果你的目标是舒适，你就永远没有成为富人的机会。但如果你的目标是成为有钱人，那你终将会有大把舒适的机会。</p></blockquote><h2 id="有这种想法的人只会越过越穷"><a class="markdownIt-Anchor" href="#有这种想法的人只会越过越穷"></a> 有这种想法的人，只会越过越穷</h2><blockquote><p>穷人通常目光短浅、精神短视，恐惧未知、拒绝改变，因此重复做着错误的选择。</p></blockquote><blockquote><p>反观我们自身，有多少人会把轻松的事情留给今天的自己，把困难的事情留给明天？对于穷人来说更是如此。</p></blockquote><blockquote><p>贫穷，既是贫穷的原因，也是贫穷的结果。希望你我能从这四点贫穷的本质中获得启发，学会跳出局限性、用长远的眼光看待问题；积极拓宽获取知识的途径，明确自己的目标；克服拖延和懒惰，学会自控。</p></blockquote><h2 id="一个人有没有见识就藏在这三个细节里"><a class="markdownIt-Anchor" href="#一个人有没有见识就藏在这三个细节里"></a> 一个人有没有见识，就藏在这三个细节里</h2><blockquote><p>我始终相信，我读过的所有书都不会白读，它总会在未来日子的某一个场合帮助我表现得更出色，读书是可以给人以力量的，它更能给人快乐。</p></blockquote><blockquote><p>那些看似无用的诗词歌赋、历史人文，其实会潜藏到一个人的气质里、谈吐上。有见识的人，总会坚持阅读，不断刷新自己的眼界，挑战新的领域。所以他们才能气质如兰、口吐莲花，能对身边的事物都有着自己深刻的见解。</p></blockquote><blockquote><p>有见识的人，会从一个地方去到另一个地方，去感受不同文化的差异、不同思想的碰撞，让自己的视野和格局都得到进一步的提升。</p></blockquote><blockquote><p>旅行，不是单纯的“上车睡觉、下车拍照”，而是一种改变。去看日出日落、星辰大海，见天地、见众生、见自己，与自己进行深层次的交流。</p></blockquote><blockquote><p>缺见识，让多少人平庸一辈子。别总拘泥在你以为熟悉又舒适的小圈子里，世界从来不只是你身边的样子。</p></blockquote><h2 id="世界正在惩罚不爱思考的人"><a class="markdownIt-Anchor" href="#世界正在惩罚不爱思考的人"></a> 世界正在惩罚不爱思考的人</h2><blockquote><p>外表看起来勤奋，却忽略了更重要的精神上的思考。越来越多的人在逃避思考，希望能用战术上的勤奋，来掩饰战略的懒惰。</p></blockquote><blockquote><p>不爱思考的人，将自己有限的时间和精力都安排得满满当当，效果却不理想。不爱思考，你的勤奋和忙碌毫无价值。</p></blockquote><blockquote><p>我们刷着公众号、微博、今日头条、知乎，被刺激性的标题所吸引，打开正文后匆匆扫了两眼又马上关掉；占领着热搜榜的永远是明星八卦、丑闻爆料、矛盾纠葛，对个人成长毫无意义，最大的用处就是成为人们津津乐道的谈资；我们在游戏中寻找成就感，却不知自己的上升空间正被一点一点占据；我们越来越缺乏耐心去好好看完一本书，相对的，却收藏了越来越多篇“干货”，渴望通过一篇文章就能摆脱平庸、发家致富。</p></blockquote><blockquote><p>逃避思考、只顾当下的娱乐，也许会让我们暂时过得很轻松。然而，时间一长，你会发现：不爱思考的人，正在慢慢失去深度思考的能力，变得越来越肤浅、越来越缺乏内涵。</p></blockquote><blockquote><p>选择目标、找到重点，过滤掉不必要的信息，才能让你告别低水平勤奋。</p></blockquote><blockquote><p>我们的大脑，本质上是排斥深度思考的。一方面，深度思考要求投入大量的精力，另一方面，我们进行深度思考时，接收不到外界的刺激。</p></blockquote><blockquote><p>我们宁愿将碎片时间拿来愉悦自己，用各种不费脑的娱乐来取悦自己。</p></blockquote><blockquote><p>你想要学会深度思考，就去练习深度思考。即使刻意练习的过程中，会伴随着一定程度的痛苦。但当你一步一步接近自己的目标时，你会乐在其中，获得更高级的愉悦。</p></blockquote><blockquote><p>人生最终的价值在于觉醒和思考的能力，而不只在于生存。”如果你不想总是脑袋空空，带着混沌的大脑碌碌无为地度过一生，你应该拥有思考的能力。</p></blockquote><h2 id="你活得那么累为什么还生活在社会底层"><a class="markdownIt-Anchor" href="#你活得那么累为什么还生活在社会底层"></a> 你活得那么累，为什么还生活在社会底层</h2><blockquote><p>在这个快节奏的社会中，收获并不是与付出成正比的，而是与付出的稀缺性成正比。</p></blockquote><blockquote><p>一个人是否能够创造价值，决定其是否值钱；而一个人所拥有的能力是否稀缺，决定其能够值多少钱。</p></blockquote><blockquote><p>为什么你那么辛苦，却仍然生活在社会底层？决定你待遇的，不是你有多努力，甚至也不是你有多能干，而是你的位置有多不可取代，你的核心竞争力有多强，你有多不可复制。</p></blockquote><h2 id="别让你的精致仅仅是生活在朋友圈里"><a class="markdownIt-Anchor" href="#别让你的精致仅仅是生活在朋友圈里"></a> 别让你的精致，仅仅是生活在朋友圈里</h2><blockquote><p>不少人沉溺在他人对自我的评价里，因此费力地迎合着别人的喜好、刻意讨好，在朋友圈里营造着假象、发着违心的话语。</p></blockquote><blockquote><p>幸福是一种内心的稳定。当你开始关注自己、认真生活，你会发现，比起虚拟世界的点赞，每天都在进步的自己更值得期待。</p></blockquote><h2 id="未来的你会感谢现在自律的自己"><a class="markdownIt-Anchor" href="#未来的你会感谢现在自律的自己"></a> 未来的你，会感谢现在自律的自己</h2><blockquote><p>及时享乐，放纵自己的欲望，看上去活得随心所欲。但她却不知道：每一个不自律的行为，都会给她带来更大的痛苦。</p></blockquote><blockquote><p>不自律，让一个人在浑浑噩噩、随波逐流的日子里，毫无意义地耗费着生命。到头来，身体和意志力都在自我放纵中逐渐沉沦，一个人离毁灭也就不远了。</p></blockquote><blockquote><p>我们上班摸鱼、刷朋友圈，下班打游戏、看没有营养的网文和狗血电视剧。我们毫无顾忌地吃垃圾食品，放弃健身和有益的阅读。我们熬夜修仙，仿佛时间永远不够用，内心的空虚和迷茫却渐渐将我们吞噬。</p></blockquote><blockquote><p>年少时，我以为随心所欲才是自由。直到现在才明白，自律，才能带来真正的自由。</p></blockquote><blockquote><p>当自律成为一种习惯、一种生活方式，一个人的人格和智慧也会变得更加完善。</p></blockquote><blockquote><p>节制的本质就是认识自己。只有自律，才能让你洗尽铅华，遇见最本真的自己，收获最纯粹的快乐。</p></blockquote><blockquote><p>我不再暴躁地吃下很多东西，而是学会享受食物最原本的滋味。慢慢地咀嚼每一口米饭、每一根青菜，只要一点点美味就足以让我心满意足；我不再浮躁地追求别人拥有的东西，而是让心灵真正沉静下来，做些对自己来说最重要的事情；我开始倾听内心的声音，开始爱上了规律的生活。</p></blockquote><blockquote><p>那些活得极度不自律的人，大部分都作茧自缚，在堕落中慢慢沉沦。做欲望的奴隶看似轻松，到头来却只会给我们带来更大的痛苦。</p></blockquote><blockquote><p>不懂节制的人，总是在内疚、焦虑和无尽的悔恨中煎熬。而自律，才是唯一的救赎。月满则亏，水满则溢。节制，让自己更能珍惜生活中的每一寸感动，获得真正的喜悦。</p></blockquote><h2 id="毁掉你的不是高房价而是没有方向的自己"><a class="markdownIt-Anchor" href="#毁掉你的不是高房价而是没有方向的自己"></a> 毁掉你的不是高房价，而是没有方向的自己</h2><blockquote><p>没有方向的努力，不是投资自己，而是瞎忙活、花钱打水漂。看起来正能量无比，实际上毫无意义。除了感动自己，永远也不可能让你成为成功者，过上你想要的生活。</p></blockquote><blockquote><p>选对方向，比盲目前进更重要。投资自己也要讲究回报，正确地投资自己不单单是为了赚取金钱和所谓的房子，更重要的是让我们活得更有尊严、更有价值。</p></blockquote><h2 id="层次越低的人越喜欢花时间在这三件事上"><a class="markdownIt-Anchor" href="#层次越低的人越喜欢花时间在这三件事上"></a> 层次越低的人越喜欢花时间在这三件事上</h2><blockquote><p>层次越低的人，越喜欢花时间在娱乐八卦上。越来越多的人患上了网络依存症，对各类娱乐新闻上瘾、产生依赖，人云亦云，附和跟风，沉溺在虚拟的世界中不能自拔。</p></blockquote><blockquote><p>你的时间花在哪，你就会成为什么样的人。格局高的人，不会花太多时间在娱乐上。</p></blockquote><blockquote><p>层次越低的人，比起关注自己，越喜欢花更多的时间在关注他人上。</p></blockquote><blockquote><p>当一个人把他的精力和时间从关注外界转向关注自身的成长时，才能拥有更高的格局。</p></blockquote><blockquote><p>层次越低的人，越喜欢花时间在不重要不紧急的事上。</p></blockquote><h2 id="第3章圈子决定了你的层次"><a class="markdownIt-Anchor" href="#第3章圈子决定了你的层次"></a> 第3章圈子决定了你的层次</h2><blockquote><p>一辈子很长，要和有趣的人在一起。</p></blockquote><h2 id="人际交往中这样说话的人不可深交"><a class="markdownIt-Anchor" href="#人际交往中这样说话的人不可深交"></a> 人际交往中这样说话的人不可深交</h2><blockquote><p>对亲近的人挑剔是本能，但克服本能，做到对亲近的人不挑剔，则是种教养。</p></blockquote><blockquote><p>跟有同理心的人聊天。和这样的人说话，总是有如沐春风之感。同理心，又叫换位思考，是指站在对方立场设身处地思考的一种方式。有同理心的人，能够体会他人的情绪，理解他人的立场和感受。</p></blockquote><h2 id="边界感才是人与人之间最宝贵的品质"><a class="markdownIt-Anchor" href="#边界感才是人与人之间最宝贵的品质"></a> 边界感，才是人与人之间最宝贵的品质</h2><blockquote><p>真正成熟的人，在对待朋友的时候，懂得明确界限、自尊自爱。当界限感逐渐缺失，朋友间所有的东西都拿来共享，反而不利于关系的稳定和持续。</p></blockquote><blockquote><p>真正成熟的人，对待亲人的时候，懂得真诚沟通、保持各自的人格独立。很多人在试图维系亲人间的亲近感时，不自觉地放弃或者模糊了与亲人的界限，这样做无疑会损害彼此的关系。</p></blockquote><h2 id="判断一个人是否靠谱就看这三点"><a class="markdownIt-Anchor" href="#判断一个人是否靠谱就看这三点"></a> 判断一个人是否靠谱，就看这三点</h2><blockquote><p>真正靠谱的人，拥有很强的执行力，凡是答应别人的事就一定会做到。正因如此，我们才更愿意安心地把事情交给他，我们才会发自内心去信任他。</p></blockquote><blockquote><p>一个靠谱的人，为人处世坦荡磊落、问心无愧。这样的人，往往更容易得到信赖与尊重，人生更容易顺风顺水。</p></blockquote><blockquote><p>如果一件事情很烦琐，他会列出所有的细节，分解任务。如果一件事情很重要，他会预留出时间多检查几遍。如果一件事情可能有漏洞，他会尽可能地预想出每一种意外情况，事先想好补救措施。</p></blockquote><blockquote><p>在物欲横流、浮躁焦虑的现代社会，一个执行力强、做事磊落、喜欢未雨绸缪的人，更能带给我们稳妥和信赖。</p></blockquote><h2 id="这几种人会不断拖垮你一定要远离"><a class="markdownIt-Anchor" href="#这几种人会不断拖垮你一定要远离"></a> 这几种人会不断拖垮你，一定要远离</h2><blockquote><p>几乎99.9%的父母都会不自觉地对小孩进行情感勒索，这种情况只会让小孩越来越觉得跟父母相处是被迫的，也无法享受跟父母相处的快乐，甚至觉得跟父母通个电话都有压力。</p></blockquote><h2 id="人际交往中永远不要和这三类人纠缠"><a class="markdownIt-Anchor" href="#人际交往中永远不要和这三类人纠缠"></a> 人际交往中，永远不要和这三类人纠缠</h2><blockquote><p>生活只有10%是靠你创造的，而有90%则是看你如何去对待的。”我们一生的精力十分有限，不是每个人都值得你去浪费口舌。</p></blockquote><h2 id="什么样的朋友最值得你用心交"><a class="markdownIt-Anchor" href="#什么样的朋友最值得你用心交"></a> 什么样的朋友最值得你用心交</h2><blockquote><p>有趣的朋友在一起，他们在一念之间就能计划出一个令人惊喜的行程，喜欢即刻出发，喜欢未知的挑战；他们对生活充满好奇与热情，就像一个永不疲倦的小太阳，随时散发着正能量；他们有时脑洞奇大无比，有时又像小孩子般纯真，总是想尝试新鲜的事物。</p></blockquote><blockquote><p>有趣的人，他不是走进你的世界，而是为你打开一扇窗去参观他的世界。</p></blockquote><h2 id="一个人的涵养有多高看这三点就知道"><a class="markdownIt-Anchor" href="#一个人的涵养有多高看这三点就知道"></a> 一个人的涵养有多高，看这三点就知道</h2><blockquote><p>越有涵养的人，越喜欢在低调中修炼自己。低调的人，理性又不浮躁，谦虚却不卑微，不争强好胜、不事事张扬。</p></blockquote><blockquote><p>腹有诗书气自华。读书，才是体现一个人涵养高低的最好方式。</p></blockquote><blockquote><p>一个人的外表，会随着时间的流逝而悄然改变，唯有内在的涵养会历久弥新。</p></blockquote><h2 id="迷茫时培养这三种思维方式让自己增值"><a class="markdownIt-Anchor" href="#迷茫时培养这三种思维方式让自己增值"></a> 迷茫时，培养这三种思维方式让自己增值</h2><blockquote><p>所谓的绿灯思维便是，对自己接触到的新信息，保持一种开放的心态，不要带有任何偏见或先入为主。只要一有人提出任何想法或建议，你就要开始思考：为什么这个想法或建议是可行的。</p></blockquote><blockquote><p>学习不只是一段在脑子里完成的过程，只有当你真正将自己学会的东西变成实际行动时，你才是在真正地学习。</p></blockquote><h2 id="做对这三点一年时间快速提升学习和工作能力"><a class="markdownIt-Anchor" href="#做对这三点一年时间快速提升学习和工作能力"></a> 做对这三点，一年时间快速提升学习和工作能力</h2><blockquote><p>人最终要走上一条由自我意志推动的路。那种意志你可能一时看不清，却能感受到它和周围磕磕绊绊的摩擦。摩擦越剧烈，人就越痛苦。而你越痛苦，就越说明周遭环境和你的意志之间不匹配，所以你不得不改变你的处境。</p></blockquote><blockquote><p>一个人如果长期没有目标，得过且过，自然会对生活感到厌倦，容易精神疲乏，甚至造成忧郁、焦虑等症状。想要走出这种困境，首先应为自己订立生活目标。</p></blockquote><blockquote><p>对生活现状的不满意，是你想要进步的证据。年轻时的投资肯定能收回成本，只有不断学习下去，你才能遇见更好的自己。</p></blockquote><h2 id="每天早上六点起床你的人生赚了什么"><a class="markdownIt-Anchor" href="#每天早上六点起床你的人生赚了什么"></a> 每天早上六点起床，你的人生赚了什么</h2><blockquote><p>能控制早晨的人，方可控制人生。</p></blockquote><blockquote><p>你怎样度过一个早上，基本就怎样度过一生。</p></blockquote><h2 id="哪个瞬间会让你觉得读书真有用"><a class="markdownIt-Anchor" href="#哪个瞬间会让你觉得读书真有用"></a> 哪个瞬间会让你觉得读书真有用</h2><blockquote><p>读书的用处，不一定在于功成名就、荣华富贵，更重要的是提升了一个人的修养和谈吐，拓展了眼界和见识，让你拥有更多选择的权利，获得内心的平静。</p></blockquote><blockquote><p>读书让人拥有富足的心灵、无可比拟的气质。一个人的美貌会随着岁月的流逝而慢慢消失殆尽，而美好的气质却能够永存不朽。</p></blockquote><blockquote><p>读书的意义大概就是，用生活所感去读书，用读书所得去生活吧。</p></blockquote><blockquote><p>一日不读书，尘生其中；两日不读书，言语乏味；三日不读书，面目可憎。</p></blockquote><blockquote><p>你读过的书，暴露了你的人生层次。身处这样一个浮躁的时代，能坚持读书的人，更显可贵。而总有一天，你会发现，你读过的书、学过的知识会由量变到质变，进而给你的人生带来意想不到的改变。</p></blockquote><h2 id="坚持做这三件事活成自己想要的模样"><a class="markdownIt-Anchor" href="#坚持做这三件事活成自己想要的模样"></a> 坚持做这三件事，活成自己想要的模样</h2><blockquote><p>如果我们连续打了五个小时的游戏，或者连续逛了五个小时的网店、看了五个小时的电视剧，我们通常会产生一些罪恶感。这种罪恶感达到一定的阈值后，我们会开始暗示自己的大脑：要开始学习或工作了。</p></blockquote><blockquote><p>连续做五个小时的轻松、熟练、无关紧要的伪工作，却不会引起我们的罪恶感。虽然同样是浪费时间，但伪工作却会麻痹我们的大脑，让我们自欺欺人地以为我们在做的是正经事。</p></blockquote><blockquote><p>花在处理不重要的琐事上的时间，丝毫不能证明你的能力。当明白这个道理后，我开始拒绝做伪工作，过滤掉那些不必要、完全是消磨时间的工作，集中精力去做那些最重要的事。</p></blockquote><blockquote><p>为了不让自己脑袋变得越来越空，我一直坚持深度阅读。在阅读过程中，读到有感触的内容，有时候会摘抄进笔记本里，有时候会在旁边标注读书笔记。</p></blockquote><blockquote><p>静下心来读一本书，可以跨越时空，接触到那些最杰出的想法，体味最美妙的文笔。坚持深度阅读，让我学会了深度思考，遇到生活中的一些问题可以更加游刃有余地处理解决。</p></blockquote><blockquote><p>一心多用，很可能让我们的大脑受到伤害。一心多用，是对深度思考能力的摧残。</p></blockquote><blockquote><p>专注，是这个时代最稀缺又最重要的品质。</p></blockquote><blockquote><p>除非你去改变一些你每天都做的事情，否则，你的生活只能一如既往。成功的秘密就隐藏在你的日常行为中。</p></blockquote><h2 id="为什么有的女生活得像开了挂"><a class="markdownIt-Anchor" href="#为什么有的女生活得像开了挂"></a> 为什么有的女生活得像开了挂</h2><blockquote><p>每一个不自律的行为，都只会让自己离理想的状态越来越远。每一个开挂的人生背后，都是扎扎实实的努力和付出。</p></blockquote><blockquote><p>在人生的道路上，为追求真正属于自己的生活而竭尽全力，饱尝辛酸和痛苦的人生才是魅力的人生。</p></blockquote><blockquote><p>人生没有白走的路，每一步都算数。在漫长的岁月里，你是否为自己的生命注入了新的东西？还是依旧浑浑噩噩，羡慕着别人开挂般的人生，自己却不肯付出努力？</p></blockquote><h2 id="不摆脱这种思维模式将会毁掉你的一生"><a class="markdownIt-Anchor" href="#不摆脱这种思维模式将会毁掉你的一生"></a> 不摆脱这种思维模式，将会毁掉你的一生</h2><blockquote><p>悲观的人很容易放弃，常常陷入对自我的怀疑、批判之中。习惯性的悲观想法会导致更多不顺利的事降临到我们头上，而且这种想法会使我们很容易陷入抑郁状态，使我们不能发挥出原有的能力。</p></blockquote><blockquote><p>用悲观的思维模式看待人生的人，常常在开始做一件事情之前就想到种种失败的可能性。大量关于失败的悲观预想，会让一个人沉浸在挫败和痛苦之中。为了避开这些痛苦，悲观的人干脆不再尝试，不再付诸行动。这样只会导致失去更多的机会，失去从头再来的可能性，变得愈加平庸。</p></blockquote><blockquote><p>轻度的悲观可以让我们在做事之前三思，不会做出愚蠢的决定。但总是用悲观的思维模式去看待事物，我们永远不敢去尝试新事物，也不会知道我们的潜力有多大。</p></blockquote><h2 id="正确的思维方式比所谓的努力更重要"><a class="markdownIt-Anchor" href="#正确的思维方式比所谓的努力更重要"></a> 正确的思维方式，比所谓的努力更重要</h2><blockquote><p>世界并不是非对即错、非黑即白。单一思维会让我们思想僵化，缺乏创新。我们需要学习不陷入固有的思维模式，用更经济的方式解决问题。只有这样，才能跳出局限，以前所未有的新视角、新观点去认识事物。</p></blockquote><blockquote><p>省钱”的最高境界，就是投资自己。将自己的时间和精力花费在未来能够增值的事情上，才能让自己变得更值钱。</p></blockquote><blockquote><p>低端勤奋，不需要动脑，精疲力竭后，感动了自己，导致他们不可能提升自己，没办法让自己更值钱。</p></blockquote><blockquote><p>当你的勤奋不能转化为价值时，你的勤奋只是低端的勤奋。低端的勤奋，把自己感动得一塌糊涂，却收效甚微。</p></blockquote><h2 id="高层次的人生从来不在这三件事上节省"><a class="markdownIt-Anchor" href="#高层次的人生从来不在这三件事上节省"></a> 高层次的人生，从来不在这三件事上节省</h2><blockquote><p>不出时间运动的人，迟早会腾出时间来减肥；腾不出时间睡觉的人，迟早会腾出时间来生病。</p></blockquote><blockquote><p>高层次的人生，从来不在经营人脉这件事上节省。在这个时代，人脉带来大量的知识跨界，能够让你学得更快、视野更广、思考更全面。</p></blockquote><blockquote><p>只有跨出自己的舒适区，去接触自己的未知领域，不断地学习和改进，才是对自己最好的投资。</p></blockquote><blockquote><p>高层次的人生，从来不在投资自己这件事上节省。多读书，汲取优秀的人的思想；多旅行，变得更加豁达开朗；多培养挖掘自己的技能，让自己在职场中变得不可代替，这些都能帮助我们成为更好的人。</p></blockquote><h2 id="自律的人生开了挂"><a class="markdownIt-Anchor" href="#自律的人生开了挂"></a> 自律的人生开了挂</h2><blockquote><p>当一个人缺乏自律的时候，他做的事情总是在受习惯和诱惑的影响，要么就是被他人的思想观念所扰，几乎永远不可能去做内心真正渴望的事。你会发现：那些自律到极致的人，都拥有了开挂的人生。</p></blockquote><blockquote><p>自律的前期是兴奋的，中期是痛苦的，后期是享受的。但有没有发现，大部分人都在自律的中期——痛苦期徘徊太久，以至于把痛苦当作自律。</p></blockquote><blockquote><p>千万不要放纵自己，给自己找借口。对自己严格一点，时间长了，自律便成为一种习惯、一种生活方式，你的人格和智慧也因此变得更加完美。</p></blockquote><h2 id="这个不经意的坏习惯会让你越过越穷"><a class="markdownIt-Anchor" href="#这个不经意的坏习惯会让你越过越穷"></a> 这个不经意的坏习惯，会让你越过越穷</h2><blockquote><p>如果你确实很有钱，在高档商品上随便挥霍一点倒也无妨。但假如你还只是个想要致富的普通人，那么，这样的消费不可能让你成为有钱人，永远也不会。</p></blockquote><blockquote><p>坚持记账，可以让自己从日常开支中总结出规律，避免自己又在不经意间增加不必要的开支。更重要的是，可以通过记账培养自己的耐心，有规律地规划自己的生活。只有逼着自己看清在消费上的坏习惯，才能真正有所成长。</p></blockquote><blockquote><p>不合理的消费习惯，却只会让你在物质中迷失自我、无法掌控自己的人生。不要让这个不经意的坏习惯，导致你越来越穷。</p></blockquote><h2 id="越会赚钱的人越喜欢将时间花在这三件事上"><a class="markdownIt-Anchor" href="#越会赚钱的人越喜欢将时间花在这三件事上"></a> 越会赚钱的人，越喜欢将时间花在这三件事上</h2><blockquote><p>这个世界很残酷，努力不一定有结果，但是不努力一定没结果。人生，从来不怕大器晚成，怕的是一生平庸。希望年轻的我们，都能尽力而为，不要仅仅满足于现状。</p></blockquote><h2 id="三十岁之前请逼自己成为这种人"><a class="markdownIt-Anchor" href="#三十岁之前请逼自己成为这种人"></a> 三十岁之前，请逼自己成为这种人</h2><blockquote><p>在这个国度，只有不停奔跑，才能让你保持在原地。如果你要抵达另一个地方，你必须以双倍于现在的速度奔跑。只有掌控好时间的人，才能掌控自己的人生。</p></blockquote><blockquote><p>生活当中，有趣和好奇心是为了取悦自己，有意思和有用是为了取悦别人。</p></blockquote><blockquote><p>与摄入过多垃圾食品和含糖饮料一样，“无趣的生活”会导致细胞损伤，加速人体老化，进而缩短寿命。</p></blockquote><blockquote><p>“走出你的舒适区，去感受、去接触奇迹发生的地方，感受尴尬、感受嘲笑、感受冒险。”接触奇怪的事情或情境，接触狂野的想法，接触让你哆嗦的事情，接触奇怪的景色、全新的声音。相信我，会很有意思的。</p></blockquote><blockquote><p>当一个人缺乏自律的时候，他做的事情永远受到即时诱惑的影响，永远也不可能去做内心真正渴望的事情。</p></blockquote><h2 id="层次越低的人越喜欢拖延"><a class="markdownIt-Anchor" href="#层次越低的人越喜欢拖延"></a> 层次越低的人，越喜欢拖延</h2><blockquote><p>别把窘境迁怒于命运或别人，唯一可以抱怨的，只是不够努力的自己。</p></blockquote><blockquote><p>我们都因拖延而焦虑，却又在焦虑中拖延。</p></blockquote><blockquote><p>“人们拖沓的主要原因是恐惧。”我们总是担心被他人评判或者自我评判，害怕自己的不足被发现，害怕付出最大的努力还是做得不够好，害怕达不到要求。</p></blockquote><blockquote><p>学习新的知识、进行一项有挑战的工作，这类任务会让我们大脑的某个部分发出疼痛的信号，你会不由自主地想将任务滞后，选择“待会儿再说”。</p></blockquote><blockquote><p>在做一项重要任务的时候，找一个可以让你静下心来、集中精神的工作区域。</p></blockquote><blockquote><p>将一项大的、复杂的任务分解成简单、具体的步骤，按照步骤来完成，并且记录进度，最好找人监督你的成果。</p></blockquote><blockquote><p>逃避是可耻的，也并没有用，只有行动才是治疗拖延的最佳良药。</p></blockquote><h2 id="为什么叫你不要过度自律"><a class="markdownIt-Anchor" href="#为什么叫你不要过度自律"></a> 为什么叫你不要过度自律</h2><blockquote><p>其实，大多数人的意志力都很薄弱，因为自律只是一时的行为，而失控却是生活的常态。</p></blockquote><blockquote><p>自律需要大量的能量。每个人的自控力就像肌肉一样有限，它被使用之后会渐渐疲惫。如果你不让肌肉休息，你就会完全失去力量，就像运动员把自己逼到筋疲力尽一样。每次使用自控力都会有消耗，任何给你的身心带来压力的东西，都有可能摧毁你的意志力。</p></blockquote><blockquote><p>为什么自律会这么难？因为我一开始就给自己定了一个过高的目标，这个目标让我时刻处于压力环境下。当我们感到情绪低落、感到压力巨大时，大脑更容易受到诱惑。对我来说，那高脂肪、高糖分的“安慰”食物，比什么都能缓解我的压力，却也因此，摧毁了我的自控力。</p></blockquote><blockquote><p>在自律这件事情上，任何挫折都会引起这种恶性循环。你可能只因多喝了一杯酒、多玩了一局游戏，或者晚起了十分钟，就会陷入无限的自责中，为了安抚这种情绪，你会倾向于喝更多的酒、玩更多局游戏、干脆赖在床上不起来。导致更多堕落的行为并不是第一次的放弃，而是第一次放弃之后产生的羞耻感、罪恶感、失控感和绝望感。</p></blockquote><blockquote><p>我们都知道只有自律才能获得自由。但是过度自律却容易引起适得其反的效果。每个人的意志力都是有限的，一旦你将它消耗殆尽，你在诱惑面前就会毫无防备。</p></blockquote><h2 id="你对待生活的态度暴露了你的层次"><a class="markdownIt-Anchor" href="#你对待生活的态度暴露了你的层次"></a> 你对待生活的态度，暴露了你的层次</h2><blockquote><p>现在的我们，越来越习惯凑合和将就。拿工作忙当借口，吃着油腻的快餐、放弃健身和阅读，每天顶着黑眼圈浑浑噩噩地度过。</p></blockquote><blockquote><p>一个人专注于寻找生活中的美好、讲究生活情趣的过程，也就是提升自己、重塑身心的过程。</p></blockquote><blockquote><p>层次越高的人，越不喜欢将就。你越是将就，人生就越是不讲究。你</p></blockquote><blockquote><p>学会培养生活的情趣，可以从简单的小事开始：买一张柔软舒适的床，遵循早睡早起的生物钟；养几株充满生命力的盆栽，将房间布置得整洁干净；冰箱里塞满水果与蔬菜，每天为自己做一顿营养又健康的早餐；坚持锻炼身体，拒绝消极的情绪，学会将元气满满的微笑挂在嘴边。</p></blockquote><blockquote><p>生活会用平淡消磨掉我们的热情，唯有懂得为自己的生活增添乐趣，才能对未来充满希望。</p></blockquote><h2 id="不爱计较的人活得到底有多赚"><a class="markdownIt-Anchor" href="#不爱计较的人活得到底有多赚"></a> 不爱计较的人，活得到底有多赚</h2><blockquote><p>在这不停地计较得失中，我们忘了自己的初衷，忘了真正重要的事情。当一个人的注意力被计较和算计所占据，他的格局只会越来越小。</p></blockquote><blockquote><p>我们经常用“格局”来评判一个人。格局大的人，你会感觉他身上有宏大的气场，有广阔的眼界，有不俗的涵养。相反，格局小的人，只对眼前的蝇头小利感兴趣，凡事斤斤计较，内涵让人一望到底。</p></blockquote><blockquote><p>你在乎的、计较的，往往能反映出你的水平。格局越大、层次越高的人，反而计较得越少。</p></blockquote><h2 id="月薪多少钱才能给你想要的安全感"><a class="markdownIt-Anchor" href="#月薪多少钱才能给你想要的安全感"></a> 月薪多少钱，才能给你想要的安全感</h2><blockquote><p>人的一切痛苦，本质上都是对自己无能的愤怒。</p></blockquote><blockquote><p>我们追求经济独立，钱不是最终的目标，钱所带来的自由选择的权利才是。</p></blockquote><h2 id="从明天起做个不好相处的人"><a class="markdownIt-Anchor" href="#从明天起做个不好相处的人"></a> 从明天起，做个“不好相处”的人</h2><blockquote><p>很多人习惯去做一个体贴、顺从的人，却把握不好那个度，结果不知不觉把自己变成了别人眼中的老好人。身边的人有事没事都喜欢麻烦你，你来者不拒，然后遇到各种情况却总是让你先退让，而他们还对此习以为常甚至不以为然，结果就是事情都让你做了，亏也全让你吃了。</p></blockquote><blockquote><p>生活中，我们往往因为害怕失去别人，而不懂得拒绝。殊不知，不懂拒绝，毫无底线的妥协，会让自己失去更多。</p></blockquote><blockquote><p>心理学上有个专业术语，叫“阿伦森效应”，指的是人们最喜欢那些对自己的喜爱、奖励、赞扬不断增加的人或物，最不喜欢那些不断减少的人或物。当有人找你帮忙，你次次都没有拒绝，为自己树立了一个“老好人”的形象，对方也习惯了你的好，变得习以为常、不再感激。</p></blockquote><blockquote><p>过分的牺牲和忍让只会让身边的人越来越骄纵，带不来任何的感激之心。每个人都有自己的个性和原则，没有必要为了讨好别人而勉强自己去做不想做的事。</p></blockquote><blockquote><p>你一开始就太好说话，什么事情都答应，什么东西都给，什么错误都原谅，对方对你的心理预期值就会处于过高的位置，无论你做什么对方都觉得理所应当。只有先抑后扬，对方才会感到惊喜。</p></blockquote><h2 id="放弃你的沉没成本别再用不分手相互折磨"><a class="markdownIt-Anchor" href="#放弃你的沉没成本别再用不分手相互折磨"></a> 放弃你的沉没成本，别再用不分手相互折磨</h2><blockquote><p>一个成熟的人应该知道，你在做任何事情的时候都有沉没成本。有时候舍弃也是一种获得。希望你不要被已经成为过去的成本所束缚，连未来的美好时光都耽误了。</p></blockquote><h2 id="定期扔这三样东西会让你活得更高级"><a class="markdownIt-Anchor" href="#定期扔这三样东西会让你活得更高级"></a> 定期扔这三样东西，会让你活得更高级</h2><blockquote><p>如果你自己不强大，那些社交其实没有什么用。只有等价的交换，才能得到合理的帮助。</p></blockquote><blockquote><p>放弃无用的社交，把更多的时间留给自己和家人。专心做自己喜欢做的事，因为人生最曼妙的风景，是内心的淡定与从容。</p></blockquote><blockquote><p>对待诱惑，不要因为便宜就去买一些自己并不需要的东西，而是买一些质量上乘、真正适合自己的物品；对待生活，定期整理房间，丢掉不再适合自己的物品，人生就不会有那么多烦恼。</p></blockquote><blockquote><p>我们需要的是一种深度思考、适当放空、化繁为简的能力，这需要我们学会过滤多余的信息。</p></blockquote><h2 id="独处是一个成年人最好的奢侈品"><a class="markdownIt-Anchor" href="#独处是一个成年人最好的奢侈品"></a> 独处，是一个成年人最好的奢侈品</h2><blockquote><p>以前喜欢一个人，现在喜欢一个人。独处，是一个成年人最好的奢侈品。</p></blockquote><blockquote><p>拥有独处的能力，是一个人情感成熟的重要标志之一。</p></blockquote><blockquote><p>利用独处的时间为自己增值，才能把生活的点滴过成诗。真正拉开你与他人差距的，有时候恰恰就是独处的时光。</p></blockquote><blockquote><p>一个人最好的状态，无非是既能享受得了繁华，也能安顿一个人的时光。在这些时光里，愿我们终将与孤独握手言和，重新拥有对抗未知的勇气。</p></blockquote><h2 id="仪式感对我们来说到底有多重要"><a class="markdownIt-Anchor" href="#仪式感对我们来说到底有多重要"></a> 仪式感对我们来说到底有多重要</h2><blockquote><p>有时候，你觉得生活太粗糙，那是因为你没有想办法让它变得精致。只有仪式感，才能让你放大每一种情绪，让缱绻在岁月中的日常琐碎，变成充满感动的细水长流。</p></blockquote><blockquote><p>仪式是一件很重要的事情。喝牛奶时，你替我擦掉嘴边的白泡沫，是仪式；出门时，你把我的领带给调整好，是仪式；走路时，你蹲下来帮我系好鞋带，是仪式；逛街时，你记得我喜欢的衣服买来送给我，是仪式。</p></blockquote><blockquote><p>一个人上班的状态其实从穿着就能看出，如果穿得过于休闲，上班的状态也会比较轻松，可能会影响工作效率。这种仪式感，意味着对自我的严格要求，对每一个场合的尊重。</p></blockquote><blockquote><p>有仪式感的人生，才使我们切切实实有了存在感。不是为他人留下什么印象，而是自己的心在真切地感知生命，充满热忱地面对生活。</p></blockquote><blockquote><p>在漫长而无边的黑夜里，只有善待自己，才能让生活变得精致而丰盛。愿你我能感受平凡生活中的小确幸，重新拾起对未来的美好向往。</p></blockquote><h2 id="你的文化层次有多高看这三点就知道"><a class="markdownIt-Anchor" href="#你的文化层次有多高看这三点就知道"></a> 你的文化层次有多高，看这三点就知道</h2><blockquote><p>文化可以用四句话表达：根植于内心的修养；无需提醒的自觉；以约束为前提的自由；为别人着想的善良。</p></blockquote><blockquote><p>不管环境如何浮躁或如何荒芜，有文化的人已然可以丰富自己的内心，并从中获得安宁。他们习惯独处、懂得独处、渴望独处，在独处中思考、在独处中升华。一个有文化的人，不畏惧独处，更喜欢在独处中默默提升自己。</p></blockquote><h2 id="深到骨子里的教养是从不做这件事"><a class="markdownIt-Anchor" href="#深到骨子里的教养是从不做这件事"></a> 深到骨子里的教养，是从不做这件事</h2><blockquote><p>一个人最大的恶意，就是把自己的理解强加于别人，把所有的结果理所当然用自己的过程来解释，并一直认为自己是正确的。</p></blockquote><blockquote><p>这一生，太多人都是在负重前行。你永远都不会知道别人经历了什么，因此也不要妄自评价。</p></blockquote><blockquote><p>每个人各有自己的生活取向和价值选择，不要做他人生活的审判者。</p></blockquote><blockquote><p>深入骨髓的教养，是从不随意评价他人。</p></blockquote><blockquote><p>人生最曼妙的风景，是内心的淡定与从容。专注自身，你会拥有更广阔的天空。</p></blockquote><h2 id="有一种教养叫不给别人添麻烦"><a class="markdownIt-Anchor" href="#有一种教养叫不给别人添麻烦"></a> 有一种教养，叫“不给别人添麻烦”</h2><blockquote><p>有一种教养，就是力所能及地做好自己的事，不给别人添麻烦。</p></blockquote><blockquote><p>朋友之间，如果长时间不联系，感情容易变淡，想要维系，需要多联系、多走动。并不代表，要理所当然地麻烦别人，让别人为难还毫无自察之心。</p></blockquote><h2 id="情商高的人都有这三种特质"><a class="markdownIt-Anchor" href="#情商高的人都有这三种特质"></a> 情商高的人，都有这三种特质</h2><blockquote><p>情商高的本质，是懂得真心实意地站在对方角度着想。</p></blockquote><blockquote><p>情商高的人，不会将时间花在无用的批评上，而是会尽量设身处地地去想问题：他为什么这么做？怎样才能让他不这么做？这比批评和训斥要有效得多。</p></blockquote><blockquote><p>一个人的成就，情商占80%，专业技术、智商占20%。为人处世的能力，有时候比智力和工作能力更为重要。拥有良好的情商，才能建立起良好的人际关系，获得他人的尊重和认可。</p></blockquote><blockquote><p>情商高的人，一般拥有这三种特质：不会随意评判别人、善用利他思维、懂得倾听他人的意见。真正的高情商，不是靠钻研谈话技巧、说话技术就能够练成的，最重要的是拥有一颗懂得换位思考、设身处地地替别人着想的心。</p></blockquote><h2 id="聊天时的这三个细节真的很加分"><a class="markdownIt-Anchor" href="#聊天时的这三个细节真的很加分"></a> 聊天时的这三个细节，真的很加分</h2><blockquote><p>做一个善于倾听的人，鼓励别人谈论他们自己，这是让别人喜欢你的方式之一。</p></blockquote><blockquote><p>做一个会说话的人，首先就要多积累、多思考。只有不断地去接触和学习新事物，积累知识、整合知识，变成自己的东西，才能不断输出。</p></blockquote><blockquote><p>在聊天过程中，同理心才是最终的秘诀。当你认为别人的感受和你自己的一样重要时，气氛才会融洽。每个人都有表达的欲望和被认可的期待，聊天就是让这种欲望释放的时刻。</p></blockquote><h2 id="情商高的人从不说这四句话"><a class="markdownIt-Anchor" href="#情商高的人从不说这四句话"></a> 情商高的人，从不说这四句话</h2><blockquote><p>情商越高的人，越不会用语言暴力来伤害别人。如果你懂得适当地遣词造句，不至于引起口角、抵抗，造成对别人的伤害，你与他人冲突的可能性降低，压力自然也会大大减小。</p></blockquote><blockquote><p>一个高情商的人，必定能够体察自己的情绪，控制和管理自己的言语。学会退步忍让，凡事三思而后行，遇到矛盾冲突时，不要为一点小事大动肝火、随意指责。</p></blockquote><blockquote><p>柔软对话，也是一种力量的表现。一个人的高情商，根植于为他人着想的善良中，知道别人的不易、懂得用同理心换位思考，不会用语言伤人。</p></blockquote><h2 id="生活中的三个细节能出卖一个人的人品"><a class="markdownIt-Anchor" href="#生活中的三个细节能出卖一个人的人品"></a> 生活中的三个细节，能出卖一个人的人品</h2><blockquote><p>只有最亲的人才会无休止地包容你，这份包容不应该被肆无忌惮地挥霍。</p></blockquote><blockquote><p>一个人品极好的人，绝不会被戾气所控，因为他们的温柔与耐心已深入骨髓。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;douban-card-block&quot;&gt;
	&lt;a class=&quot;douban-card&quot; href=&quot;https://book.douban.com/subject/30424251&quot;&gt;
		&lt;div class=&quot;douban-card-bgimg&quot; style=&quot;background-image: url(&#39;https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s29970134.jpg&#39;);&quot;&gt;&lt;/div&gt;
		&lt;div class=&quot;douban-card-left&quot;&gt;
			&lt;div class=&quot;douban-card-img&quot; style=&quot;background-image: url(&#39;https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s29970134.jpg&#39;);&quot;&gt;&lt;/div&gt;
		&lt;/div&gt;
		&lt;div class=&quot;douban-card-right&quot; style=&quot;line-height: 1.7;&quot;&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;书名: &lt;/span&gt;&lt;strong&gt;你的自律给你自由&lt;/strong&gt;&lt;/div&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;作者: &lt;/span&gt;&lt;span&gt;小椰子&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;出版年份: &lt;/span&gt;&lt;span&gt;2018-8&lt;/span&gt;&lt;/div&gt;
			&lt;div class=&quot;douban-card-item&quot;&gt;&lt;span&gt;评分: &lt;/span&gt;&lt;span&gt;5.8&lt;/span&gt;&lt;/div&gt;
		&lt;/div&gt;
	&lt;/a&gt;
&lt;/div&gt;
&lt;style&gt;
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: &#39;Courier New&#39;, Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
&lt;/style&gt;</summary>
    
    
    
    <category term="读书" scheme="https://shaogui.life/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
    <category term="读书" scheme="https://shaogui.life/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>如何释放Linux存储空间</title>
    <link href="https://shaogui.life/2021/02/06/%E5%A6%82%E4%BD%95%E9%87%8A%E6%94%BELinux%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4/"/>
    <id>https://shaogui.life/2021/02/06/%E5%A6%82%E4%BD%95%E9%87%8A%E6%94%BELinux%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4/</id>
    <published>2021-02-06T01:45:34.000Z</published>
    <updated>2023-04-08T12:29:02.069Z</updated>
    
    <content type="html"><![CDATA[<p>由于服务器上存储空间即将用完，不得不需要释放新的空间，及挂载新的硬盘，本文展示如何在Linux查看硬盘情况，释放硬盘空间及挂载新的硬盘</p><a id="more"></a><h2 id="查看当前硬盘情况"><a class="markdownIt-Anchor" href="#查看当前硬盘情况"></a> 查看当前硬盘情况<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -lh</span><br></pre></td></tr></table></figure><p>查看当前挂载的硬盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p><strong>释放空间</strong></p><p>通过以下命令逐级搜索Linux目录，找出占用空间的最大的文件，将其删除或移除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du --max-depth=1 -lh</span><br></pre></td></tr></table></figure><h2 id="格式化分区"><a class="markdownIt-Anchor" href="#格式化分区"></a> 格式化分区</h2><p>在linux上挂载新硬盘前，尽量使用ext4格式，所以不是该格式的建议提前先格式化（格式化时需提前卸载硬盘）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1</span><br></pre></td></tr></table></figure><p>ext4格式的硬盘下，经常能看见 系统创建的lost+found的文件夹<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><ul><li>通常是未链接的文件（名字已经被删除），但是这些文件还被一些进程使用（数据没有删除），在突然关机时（内核panic或者突然断电）出现，这些文件系统会自动删除。</li><li>当因为软件或者硬件出现错误，导致文件系统不一致，也有可能把有问题的文件放到lost+found目录。它提供了恢复丢失文件的一种方法</li><li>如果你不小心删除了lost+found目录，不能使用mkdir命令创建lost+found目录，应该使用mklost+found命令创建它</li></ul><h2 id="挂载硬盘"><a class="markdownIt-Anchor" href="#挂载硬盘"></a> 挂载硬盘</h2><p>使用以下命令将新硬盘挂载到系统上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /mnt</span><br></pre></td></tr></table></figure><p><strong>开机挂载硬盘</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fatab</span><br></pre></td></tr></table></figure><p>在该文件内添加一行，指明待加载的硬盘<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082028616.png" alt="image-20210205155011394"></p><p>参数解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">要挂载的设备或伪文件系统：设备文件、LABEL(LABEL="")、UUID(UUID="")、伪文件系统名称(proc, sysfs)</span><br><span class="line">挂载点：指定的文件夹</span><br><span class="line">挂载选项：defaults</span><br><span class="line">转储频率：0：不做备份;1：每天转储;2：每隔一天转储</span><br><span class="line">自检次序：0：不自检；1：首先自检；一般只有rootfs才用1；</span><br></pre></td></tr></table></figure><h2 id="卸载磁盘"><a class="markdownIt-Anchor" href="#卸载磁盘"></a> 卸载磁盘</h2><p>通过以下命令卸载磁盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/sda1或/mnt</span><br></pre></td></tr></table></figure><p>查看分区的uuid<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure><p><strong>对挂载及挂载点的理解</strong><sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根文件系统之外的其他文件要想能够被访问，都必须通过“关联”至根文件系统上的某个目录来实现，此关联操作即为“挂载”，此目录即为“挂载点”,解除此关联关系的过程称之为“卸载”</span><br></pre></td></tr></table></figure><ol><li>挂载：根文件系统外通过关联至根文件系统上的某个目录来实现访问</li><li>挂载点：mount_point，用于作为另一个文件系统的访问入口</li></ol><p>挂载点必须满足以下要求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1) 事先存在；</span><br><span class="line">(2) 应该使用未被或不会被其它进程使用到的目录；</span><br><span class="line">(3) 挂载点下原有的文件将会被隐藏；</span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Linux下挂载机械硬盘(<a href="https://blog.csdn.net/m0_37407756/article/details/79529399">https://blog.csdn.net/m0_37407756/article/details/79529399</a>) <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/cheyunhua/p/14158174.html">Linux系统中根目录下或者新挂载的磁盘目录下有一个叫lost+found，它的作用是什么？</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://www.linuxidc.com/linux/2016-08/134666.htm">Linux基础知识之挂载详解（mount,umount及开机自动挂载）</a> <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://www.linuxprobe.com/partition-file-system.html">Linux查看分区文件系统类型的几种方法</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于服务器上存储空间即将用完，不得不需要释放新的空间，及挂载新的硬盘，本文展示如何在Linux查看硬盘情况，释放硬盘空间及挂载新的硬盘&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://shaogui.life/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://shaogui.life/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>在Linux上编译带CUDA(GPU)的OpenCV</title>
    <link href="https://shaogui.life/2021/02/05/%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91opencv%EF%BC%88%E5%B8%A6cuda%E6%A8%A1%E5%9D%97%EF%BC%89/"/>
    <id>https://shaogui.life/2021/02/05/%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91opencv%EF%BC%88%E5%B8%A6cuda%E6%A8%A1%E5%9D%97%EF%BC%89/</id>
    <published>2021-02-05T02:23:44.000Z</published>
    <updated>2023-04-08T14:02:28.382Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍编译包含cuda模块的opencv，可以在GPU上完成opencv的操作，加速opencv的处理速度，本文用于记录在Linux上编译opencv的过程、问题</p><a id="more"></a><p><strong>编译环境</strong>：</p><ul><li><p>系统：Ubuntu 16.04</p></li><li><p>显卡：RTX3090</p></li><li><p>cmake：3.19.3</p></li><li><p>gcc：6.5.0</p></li></ul><blockquote><p>注：cmake、gcc系统自带版本不是3.19.3、6.5.0，为解决cmake过程中文件下载问题，升级cmake到3.19.3，但是感觉没有作用；gcc原始是5.x.x，升级之后避免了一些错误，是有效的</p></blockquote><p><strong>软件依赖</strong>：</p><ul><li>cuda    11.1</li><li>cudnn  8.0.5</li></ul><p>默认在以上环境下，编译<code>opencv4.4.0</code>，包括C++和Python3的接口。（编译v4.4.0之前，使用v4.2.0进行编译，一直无法找到cudnn，可能是cuda及cudnn版本较高，较低版本的opencv还未适配，所以建议对opencv4.4.0及以上版本进行编译，类似经历出现在<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>）</p><h2 id="下载源码"><a class="markdownIt-Anchor" href="#下载源码"></a> 下载源码</h2><p>从<a href="https://github.com/opencv/opencv/tags">github</a>下载opencv4.4.0及opencv_contrib-4.4.0</p><p>解压后，将opencv_contrib-4.4.0放进opencv4.4.0目录下，并新建编译文件夹（build），文件目录结构如下：</p><p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082027619.png" alt="image-20210205104342803"></p><h2 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h2><blockquote><p>以下参考：<a href="https://medium.com/@sb.jaduniv/how-to-install-opencv-4-2-0-with-cuda-10-1-on-ubuntu-20-04-lts-focal-fossa-bdc034109df3">How to install OpenCV 4.2.0 with CUDA 10.1 on Ubuntu 20.04 LTS (Focal Fossa)</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更新系统</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译工具</span></span><br><span class="line">sudo apt install build-essential cmake pkg-config unzip yasm git checkinstall</span><br><span class="line"></span><br><span class="line"><span class="comment">#Image I/O libs</span></span><br><span class="line">sudo apt install libjpeg-dev libpng-dev libtiff-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Video/Audio Libs — FFMPEG, GSTREAMER, x264 and so on.</span></span><br><span class="line">sudo apt install libavcodec-dev libavformat-dev libswscale-dev libavresample-dev </span><br><span class="line">sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev </span><br><span class="line">sudo apt install libxvidcore-dev x264 libx264-dev libfaac-dev libmp3lame-dev libtheora-dev  </span><br><span class="line">sudo apt install libfaac-dev libmp3lame-dev libvorbis-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#OpenCore — Adaptive Multi Rate Narrow Band (AMRNB) and Wide Band (AMRWB) speech codec</span></span><br><span class="line">sudo apt install libopencore-amrnb-dev libopencore-amrwb-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Cameras programming interface libs</span></span><br><span class="line">sudo apt-get install libdc1394-22 libdc1394-22-dev libxine2-dev libv4l-dev v4l-utils </span><br><span class="line"><span class="built_in">cd</span> /usr/include/linux </span><br><span class="line">sudo ln -s -f ../libv4l1-videodev.h videodev.h </span><br><span class="line"></span><br><span class="line"><span class="comment">#GTK lib for the graphical user functionalites coming from OpenCV highghui module</span></span><br><span class="line">sudo apt-get install libgtk-3-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Python libraries for python3（本文安装至conda下，无次步骤）</span></span><br><span class="line">sudo apt-get install python3-dev python3-pip</span><br><span class="line">sudo -H pip3 install -U pip numpy</span><br><span class="line">sudo apt install python3-testresources</span><br><span class="line"></span><br><span class="line"><span class="comment">#Parallelism library C++ for CPU</span></span><br><span class="line">sudo apt-get install libtbb-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Optimization libraries for OpenCV</span></span><br><span class="line">sudo apt-get install libatlas-base-dev gfortran</span><br><span class="line"></span><br><span class="line"><span class="comment">#Optional libraries</span></span><br><span class="line">sudo apt-get install libprotobuf-dev protobuf-compiler </span><br><span class="line">sudo apt-get install libgoogle-glog-dev libgflags-dev </span><br><span class="line">sudo apt-get install libgphoto2-dev libeigen3-dev libhdf5-dev doxygen</span><br></pre></td></tr></table></figure><h2 id="cmake生成待编译文件"><a class="markdownIt-Anchor" href="#cmake生成待编译文件"></a> cmake生成待编译文件</h2><p>进入build目录下，执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE=RELEASE \</span><br><span class="line">-D CMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span> \</span><br><span class="line">-D CMAKE_C_COMPILER=/usr/bin/gcc-6 \</span><br><span class="line">-D INSTALL_PYTHON_EXAMPLES=ON \</span><br><span class="line">-D INSTALL_C_EXAMPLES=ON \</span><br><span class="line">-D OPENCV_ENABLE_NONFREE=ON \</span><br><span class="line">-D BUILD_opencv_python3=ON \</span><br><span class="line">-D WITH_CUDA=ON \</span><br><span class="line">-D WITH_CUDNN=ON \</span><br><span class="line">-D WITH_TBB=ON \</span><br><span class="line">-D OPENCV_DNN_CUDA=ON \</span><br><span class="line">-D ENABLE_FAST_MATH=1 \</span><br><span class="line">-D CUDA_FAST_MATH=1 \</span><br><span class="line">-D CUDA_ARCH_BIN=8.6 \</span><br><span class="line">-D WITH_CUBLAS=1 \</span><br><span class="line">-D OPENCV_GENERATE_PKGCONFIG=ON \</span><br><span class="line">-D OPENCV_EXTRA_MODULES_PATH=/home/xx/soft/opencv_gpu/opencv-4.4.0/opencv_contrib-4.4.0/modules \</span><br><span class="line">-D PYTHON3_EXECUTABLE=/home/xx/anaconda3/envs/py37/bin/python3.7m \</span><br><span class="line">-D PYTHON3_INCLUDE_DIR=/home/xx/anaconda3/envs/py37/include/python3.7m \</span><br><span class="line">-D PYTHON3_LIBRARY=/home/xx/anaconda3/envs/py37/lib/libpython3.7m.so \</span><br><span class="line">-D PYTHON3_NUMPY_INCLUDE_DIRS=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages/numpy/core/include \</span><br><span class="line">-D PYTHON3_PACKAGES_PATH=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages \</span><br><span class="line">-D PYTHON_DEFAULT_EXECUTABLE=/home/xx/anaconda3/envs/py37/bin/python3.7m \</span><br><span class="line">-D CUDNN_LIBRARY=/usr/<span class="built_in">local</span>/cuda/lib64/libcudnn.so.8.0.5 \</span><br><span class="line">-D CUDNN_INCLUDE_DIR=/usr/<span class="built_in">local</span>/cuda/include  \</span><br><span class="line">-D CUDA_CUDA_LIBRARY=/usr/<span class="built_in">local</span>/cuda/lib64/stubs/libcuda.so \</span><br><span class="line">-D OPENCV_PYTHON3_INSTALL_PATH=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages \</span><br><span class="line">-D WITH_WEBP=OFF \</span><br><span class="line">-D WITH_OPENCL=OFF \</span><br><span class="line">-D ETHASHLCL=OFF \</span><br><span class="line">-D ENABLE_CXX11=ON \</span><br><span class="line">-D BUILD_EXAMPLES=OFF \</span><br><span class="line">-D OPENCV_ENABLE_NONFREE=ON \</span><br><span class="line">-D WITH_OPENGL=ON \</span><br><span class="line">-D WITH_GSTREAMER=ON \</span><br><span class="line">-D WITH_V4L=ON \</span><br><span class="line">-D WITH_QT=OFF \</span><br><span class="line">-D BUILD_opencv_python3=ON \</span><br><span class="line">-D BUILD_opencv_python2=OFF \</span><br><span class="line">-D HAVE_opencv_python3=ON   ..</span><br></pre></td></tr></table></figure><p><strong>关键参数说明</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BUILD_opencv_python3：</span><br><span class="line">CUDA_ARCH_BIN:显卡算力,Nvidia官网查询，RTX3090对应8.6</span><br><span class="line">OPENCV_GENERATE_PKGCONFIG：生成pkg-config，这个务必打开，不然安装成功找不到opencv</span><br></pre></td></tr></table></figure><p>cmake后最终确认得到以下输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">-- General configuration <span class="keyword">for</span> OpenCV 4.4.0 =====================================</span><br><span class="line">Version control:               unknown</span><br><span class="line">-- </span><br><span class="line">Extra modules:</span><br><span class="line">  Location (extra):            /home/xx/soft/opencv_gpu/opencv-4.4.0/opencv_contrib-4.4.0/modules</span><br><span class="line">  Version control (extra):     unknown</span><br><span class="line">-- </span><br><span class="line">Platform:</span><br><span class="line">  Timestamp:                   2021-02-05T02:31:19Z</span><br><span class="line">  Host:                        Linux 4.15.0-133-generic x86_64</span><br><span class="line">  CMake:                       3.19.3</span><br><span class="line">  CMake generator:             Unix Makefiles</span><br><span class="line">  CMake build tool:            /usr/bin/make</span><br><span class="line">  Configuration:               RELEASE</span><br><span class="line">-- </span><br><span class="line">CPU/HW features:</span><br><span class="line">  Baseline:                    SSE SSE2 SSE3</span><br><span class="line">    requested:                 SSE3</span><br><span class="line">  Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX</span><br><span class="line">    requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX</span><br><span class="line">    SSE4_1 (17 files):         + SSSE3 SSE4_1</span><br><span class="line">    SSE4_2 (2 files):          + SSSE3 SSE4_1 POPCNT SSE4_2</span><br><span class="line">    FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX</span><br><span class="line">    AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX</span><br><span class="line">    AVX2 (31 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2</span><br><span class="line">    AVX512_SKX (7 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX</span><br><span class="line">-- </span><br><span class="line">C/C++:</span><br><span class="line">  Built as dynamic libs?:      YES</span><br><span class="line">  C++ standard:                11</span><br><span class="line">  C++ Compiler:                /usr/bin/c++  (ver 6.5.0)</span><br><span class="line">  C++ flags (Release):         -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-psabi -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG</span><br><span class="line">  C++ flags (Debug):           -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-psabi -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG</span><br><span class="line">  C Compiler:                  /usr/bin/gcc-6</span><br><span class="line">  C flags (Release):           -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-psabi -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG</span><br><span class="line">  C flags (Debug):             -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-psabi -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG</span><br><span class="line">  Linker flags (Release):      -Wl,--gc-sections -Wl,--as-needed  </span><br><span class="line">  Linker flags (Debug):        -Wl,--gc-sections -Wl,--as-needed  </span><br><span class="line">  ccache:                      NO</span><br><span class="line">  Precompiled headers:         NO</span><br><span class="line">  Extra dependencies:          m pthread cudart_static dl rt nppc nppial nppicc nppidei nppif nppig nppim nppist nppisu nppitc npps cublas cudnn cufft -L/usr/<span class="built_in">local</span>/cuda/lib64 -L/usr/lib/x86_64-linux-gnu</span><br><span class="line">  3rdparty dependencies:</span><br><span class="line">-- </span><br><span class="line">OpenCV modules:</span><br><span class="line">  To be built:                 alphamat aruco bgsegm bioinspired calib3d ccalib core cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev datasets dnn dnn_objdetect dnn_superres dpm face features2d flann freetype fuzzy gapi hdf hfs highgui img_hash imgcodecs imgproc intensity_transform line_descriptor ml objdetect optflow phase_unwrapping photo plot python3 quality rapid reg rgbd saliency sfm shape stereo stitching structured_light superres surface_matching text tracking ts video videoio videostab xfeatures2d ximgproc xobjdetect xphoto</span><br><span class="line">  Disabled:                    python2 world</span><br><span class="line">  Disabled by dependency:      -</span><br><span class="line">  Unavailable:                 cnn_3dobj cvv java js julia matlab ovis viz</span><br><span class="line">  Applications:                tests perf_tests apps</span><br><span class="line">  Documentation:               NO</span><br><span class="line">  Non-free algorithms:         YES</span><br><span class="line">-- </span><br><span class="line">GUI: </span><br><span class="line">  GTK+:                        YES (ver 3.18.9)</span><br><span class="line">    GThread :                  YES (ver 2.48.2)</span><br><span class="line">    GtkGlExt:                  NO</span><br><span class="line">  OpenGL support:              NO</span><br><span class="line">  VTK support:                 NO</span><br><span class="line">-- </span><br><span class="line">Media I/O: </span><br><span class="line">  ZLib:                        /usr/lib/x86_64-linux-gnu/libz.so (ver 1.2.8)</span><br><span class="line">  JPEG:                        /usr/lib/x86_64-linux-gnu/libjpeg.so (ver 80)</span><br><span class="line">  PNG:                         /usr/lib/x86_64-linux-gnu/libpng.so (ver 1.2.54)</span><br><span class="line">  TIFF:                        /usr/lib/x86_64-linux-gnu/libtiff.so (ver 42 / 4.0.6)</span><br><span class="line">  JPEG 2000:                   OpenJPEG (ver 2.4.0)</span><br><span class="line">  OpenEXR:                     build (ver 2.3.0)</span><br><span class="line">  HDR:                         YES</span><br><span class="line">  SUNRASTER:                   YES</span><br><span class="line">  PXM:                         YES</span><br><span class="line">  PFM:                         YES</span><br><span class="line">-- </span><br><span class="line">Video I/O:</span><br><span class="line">  DC1394:                      YES (2.2.4)</span><br><span class="line">  FFMPEG:                      YES</span><br><span class="line">    avcodec:                   YES (56.60.100)</span><br><span class="line">    avformat:                  YES (56.40.101)</span><br><span class="line">    avutil:                    YES (54.31.100)</span><br><span class="line">    swscale:                   YES (3.1.101)</span><br><span class="line">    avresample:                YES (2.1.0)</span><br><span class="line">  GStreamer:                   YES (1.8.3)</span><br><span class="line">  v4l/v4l2:                    YES (linux/videodev2.h)</span><br><span class="line">-- </span><br><span class="line">Parallel framework:            TBB (ver 4.4 interface 9002)</span><br><span class="line">-- </span><br><span class="line">Trace:                         YES (with Intel ITT)</span><br><span class="line">-- </span><br><span class="line">Other third-party libraries:</span><br><span class="line">  Lapack:                      YES (/usr/lib/libopenblas.so)</span><br><span class="line">  Eigen:                       YES (ver 3.2.92)</span><br><span class="line">  Custom HAL:                  NO</span><br><span class="line">  Protobuf:                    build (3.5.1)</span><br><span class="line">-- </span><br><span class="line">NVIDIA CUDA:                   YES (ver 11.1, CUFFT CUBLAS FAST_MATH)</span><br><span class="line">  NVIDIA GPU arch:             86</span><br><span class="line">  NVIDIA PTX archs:</span><br><span class="line">-- </span><br><span class="line">cuDNN:                         YES (ver 8.0.5)</span><br><span class="line">-- </span><br><span class="line">Python 3:</span><br><span class="line">  Interpreter:                 /home/xx/anaconda3/envs/py37/bin/python3.7m (ver 3.7.9)</span><br><span class="line">  Libraries:                   /home/xx/anaconda3/envs/py37/lib/libpython3.7m.so (ver 3.7.9)</span><br><span class="line">  numpy:                       /home/xx/anaconda3/envs/py37/lib/python3.7/site-packages/numpy/core/include (ver 1.19.2)</span><br><span class="line">  install path:                /home/xx/anaconda3/envs/py37/lib/python3.7/site-packages/cv2/python-3.7</span><br><span class="line">-- </span><br><span class="line">Python (<span class="keyword">for</span> build):            /home/xx/anaconda3/envs/py37/bin/python3.7m</span><br><span class="line">-- </span><br><span class="line">Java:                          </span><br><span class="line">  ant:                         NO</span><br><span class="line">  JNI:                         NO</span><br><span class="line">  Java wrappers:               NO</span><br><span class="line">  Java tests:                  NO</span><br><span class="line">-- </span><br><span class="line">Install to:                    /usr/<span class="built_in">local</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注：系统用户名使用<code>xx</code>替代</p></blockquote><h2 id="gcc编译"><a class="markdownIt-Anchor" href="#gcc编译"></a> gcc编译</h2><p>在build目录下执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j16</span><br></pre></td></tr></table></figure><blockquote><p>注：虽然直接make出问题的概率更小，但是为了加速编译速度，这里指使用16个多线程进行编译，这里多线程数量一般不大于CPU核心数，可以通过<code>nproc</code>命令查看CPU核心数。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p></blockquote><h2 id="安装到系统"><a class="markdownIt-Anchor" href="#安装到系统"></a> 安装到系统</h2><p>在build目录下执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h2 id="配置环境变量"><a class="markdownIt-Anchor" href="#配置环境变量"></a> 配置环境变量</h2><p>执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/bash -c <span class="string">'echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf.d/opencv.conf'</span></span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><p>如果想将opencv安装到Python，建议在cmake编译参数中使用<code>-D OPENCV_PYTHON3_INSTALL_PATH</code>指定安装目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-D OPENCV_PYTHON3_INSTALL_PATH=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages \</span><br></pre></td></tr></table></figure><h2 id="查看opencv是否安装成功"><a class="markdownIt-Anchor" href="#查看opencv是否安装成功"></a> 查看opencv是否安装成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg-config --modversion opencv</span><br><span class="line">pkg-config --libs opencv4</span><br></pre></td></tr></table></figure><h2 id="编译过程遇到的问题"><a class="markdownIt-Anchor" href="#编译过程遇到的问题"></a> 编译过程遇到的问题</h2><p>编译opencv主要有两个过程，cmake和make，错误主要出现在cmake阶段，根据出现的错误情况，主要分为以下几类</p><h3 id="下载失败"><a class="markdownIt-Anchor" href="#下载失败"></a> 下载失败</h3><p>cmake过程中，需要下载的文件会放在opencv4.4.0下的隐藏目录<code>.cache</code>下，如果下载失败，可以手动下载，放入相应目录解决。</p><p><strong>xfeatures2d</strong><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">boostdesc_bgm.i</span><br><span class="line">boostdesc_bgm_bi.i</span><br><span class="line">boostdesc_bgm_hd.i</span><br><span class="line">boostdesc_lbgm.i</span><br><span class="line">boostdesc_binboost_064.i</span><br><span class="line">boostdesc_binboost_128.i</span><br><span class="line">boostdesc_binboost_256.i</span><br><span class="line">vgg_generated_120.i</span><br><span class="line">vgg_generated_64.i</span><br><span class="line">vgg_generated_80.i</span><br><span class="line">vgg_generated_48.i</span><br></pre></td></tr></table></figure><p>进入opencv4.4.0下的隐藏目录<code>.cache/xfeatures2d</code>，执行以下命令解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> boostdesc</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_lbgm.i &gt; 0ae0675534aa318d9668f2a179c2a052-boostdesc_lbgm.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_binboost_256.i &gt; e6dcfa9f647779eb1ce446a8d759b6ea-boostdesc_binboost_256.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_binboost_128.i &gt; 98ea99d399965c03d555cef3ea502a0b-boostdesc_binboost_128.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_binboost_064.i &gt; 202e1b3e9fec871b04da31f7f016679f-boostdesc_binboost_064.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_bgm_hd.i &gt; 324426a24fa56ad9c5b8e3e0b3e5303e-boostdesc_bgm_hd.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_bgm_bi.i &gt; 232c966b13651bd0e46a1497b0852191-boostdesc_bgm_bi.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_bgm.i &gt; 0ea90e7a8f3f7876d450e4149c97c74f-boostdesc_bgm.i</span><br><span class="line"><span class="built_in">cd</span> vgg</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_120.i &gt; 151805e03568c9f490a5e3a872777b75-vgg_generated_120.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_64.i &gt; 7126a5d9a8884ebca5aea5d63d677225-vgg_generated_64.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_48.i &gt; e8d0dcd54d1bcfdc29203d011a797179-vgg_generated_48.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_80.i &gt; 7cd47228edec52b6d82f46511af325c5-vgg_generated_80.i</span><br></pre></td></tr></table></figure><blockquote><p>注：如何curl无法下载，可以通过浏览器挨个下载，并按照以上进行命名各文件</p></blockquote><p><strong>ippicv</strong></p><p>手动从<a href="https://link.jianshu.com/?t=https%3A%2F%2Fraw.githubusercontent.com%2FItseez%2Fopencv_3rdparty%2F81a676001ca8075ada498583e4166079e5744668%2Fippicv%2Fippicv_linux_20151201.tgz">github</a>下载，放入<code>.cache/ppicv</code>目录下</p><p>**face_landmark_model.dat **</p><p>手动从<a href="https://raw.githubusercontent.com/opencv/opencv_3rdparty/8afa57abc8229d611c4937165d20e2a2d9fc5a12/face_landmark_model.dat">github</a>下载，放入<code>.cache/data</code>目录下，注意文件名前部是该文件的md5值，可以通过命令<code>md5sum file</code>计算该值</p><h3 id="软件未安装not-found"><a class="markdownIt-Anchor" href="#软件未安装not-found"></a> 软件未安装（Not Found）</h3><p>此类错误比较简单，缺什么安装什么，比如安装过程中遇到以下缺失软件的解决办法</p><p><strong>tesserocr安装失败</strong><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libleptonica-dev libtesseract-dev</span><br><span class="line">python -m pip install tesserocr</span><br></pre></td></tr></table></figure><p><strong>lapacke.h缺失</strong><sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p><p>明明已经按照该软件，但是OpenBLAS一致没找到该文件，但是搜索文件发现该文件在<code>/usr/include/</code>下，只能手动拷贝<code>ls /usr/include/lapacke*</code>文件至<code>/usr/include/openblas/</code>目录下</p><p><strong>Could NOT find CUDNN: Found unsuitable version “…”, but required is at least “7.5” (found /usr/local/cuda-10.2/lib64/libcudnn.so)</strong></p><p>这是在编译opencv4.2.0时出现的错误，实际已经安装cudnn，也满足7.5以上的要求，但是就是找不，可以在cmake中加入参数：<code>-D CUDNN_VERSION='8.0'</code>解决<sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup>，但是后续还会遇到其他问题，编译opencv4.4.0时，该问题不再出现</p><p><strong>No package ‘gtk±3.0’ found</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libgtk-3-dev</span><br></pre></td></tr></table></figure><h2 id="卸载opencv"><a class="markdownIt-Anchor" href="#卸载opencv"></a> 卸载opencv</h2><p>通过源码安装的opencv，可以进入编译目录下（build）执行以下命令，卸载opencv</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make uninstall</span><br></pre></td></tr></table></figure><h2 id="使用cuda模块的简单例子"><a class="markdownIt-Anchor" href="#使用cuda模块的简单例子"></a> 使用cuda模块的简单例子</h2><p>查看opencv的cuda模块支持的功能，进入python终端，输入以下命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="built_in">dir</span>(cv2.cuda)</span><br><span class="line"><span class="built_in">dir</span>(cv2.cuda_GpuMat())</span><br></pre></td></tr></table></figure><p>例子：在GPU做resize</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#读取图片</span></span><br><span class="line">frame=cv2.imread(<span class="string">'test.jpg'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#上传到gpu进行处理</span></span><br><span class="line">gpu_frame=cv2.cuda_GpuMat()</span><br><span class="line">gpu_frame.upload(frame)</span><br><span class="line">print(gpu_frame.cudaPtr())</span><br><span class="line"></span><br><span class="line"><span class="comment">#resize</span></span><br><span class="line">gpu_resframe=cv2.cuda.resize(gpu_frame,(<span class="number">1024</span>,<span class="number">512</span>))</span><br><span class="line">cpu_resfram=gpu_resframe.download()</span><br><span class="line">print(cpu_resfram.shape)</span><br></pre></td></tr></table></figure><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/qq_33475105/article/details/111659692">Jetson Nano编译安装opencv4.3.0并使能cuDNN加速</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><a href="https://www.codenong.com/cs109055604/">Ubuntu20.04+GeForce RTX 2080 SUPER+cuda11.1+cudnn8.0.4+openCV4.4.0编译</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><a href="https://blog.csdn.net/zhongqli/article/details/112212072">Opencv-3.4.0编译时报错缺少boostdesc_bgm.i等文件</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://stackoverflow.com/questions/43486636/error-while-trying-to-install-tesserocr/">error while trying to install tesserocr</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p><a href="https://github.com/opencv/opencv/issues/9953">Building against OpenBLAS complains about missing lapacke.h</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文介绍编译包含cuda模块的opencv，可以在GPU上完成opencv的操作，加速opencv的处理速度，本文用于记录在Linux上编译opencv的过程、问题&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://shaogui.life/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="cuda" scheme="https://shaogui.life/tags/cuda/"/>
    
    <category term="opencv" scheme="https://shaogui.life/tags/opencv/"/>
    
    <category term="机器视觉" scheme="https://shaogui.life/tags/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
</feed>
