<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的目标检测习路线</title>
    <url>/2023/05/19/%E6%88%91%E7%9A%84%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p><img src="../source/Excalidraw/Drawing%202023-02-09%2015.44.06.excalidraw.png" alt="Drawing 2023-02-09 15.44.06.excalidraw" /></p>
<p>本文总结自己目前对 OCR 的认识，和学习过程</p>
<a id="more"></a>
<h1 id="什么是目标检测"><a class="markdownIt-Anchor" href="#什么是目标检测"></a> 什么是目标检测？</h1>
<ul>
<li><img src="../source/images/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-20230408141236.png" alt="" /></li>
<li>目标检测：精确的定位出图像中某一物体<strong>类别信息</strong>和<strong>所在位置</strong></li>
<li>2014年，基于候选区域 (two stage)的目标检测算法代表算法RCNN 发表，2015年基于回归 (one stage)的目标检测算法代表 YOLOv1 发表。前者往往准确度更高但速度上较慢，后者往往更快但准头略差一些，目前在向 one-satge、anchor-free 的方向发展</li>
</ul>
<h1 id="目标检测的疑问"><a class="markdownIt-Anchor" href="#目标检测的疑问"></a> “目标检测”的疑问</h1>
<ul>
<li><img src="../source/Excalidraw/Drawing%202023-03-14%2020.55.52.excalidraw.png" alt="Drawing 2023-03-14 20.55.52.excalidraw" /></li>
<li>以前不清楚目标检测的时候，老是对一个问题不明白：<strong>一张图片上目标数量不定，但神经网络的最后输出一定是定长的，那怎么预测一张图上的多个目标呢？</strong></li>
</ul>
<h1 id="检测目标检测的朴素想法"><a class="markdownIt-Anchor" href="#检测目标检测的朴素想法"></a> 检测目标检测的“朴素想法”</h1>
<ul>
<li><img src="../source/Excalidraw/Drawing%202023-03-16%2021.34.10.excalidraw.png" alt="Drawing 2023-03-16 21.34.10.excalidraw" /></li>
<li>就拿我们最熟悉的<strong>分类</strong>来说：已知分类模型的最后输出等于类别数量 (N)，而且计算损失的时候也是输出 (N)与 gt (N)等长度的向量计算，也就是说每个输出都参与损失的计算 (假设是多标签分类)</li>
<li>但是<strong>目标检测</strong>情况有点不一样，即图片上的目标数量是未知的，有2种思路去解决模型输出的问题：<strong>RCNN 系列</strong>：先生成能覆盖住目标<strong>大量的获选框</strong>，然后将网络输出固定为框的分类及定位预；<strong>YOLO 系列</strong>：直接输入全图，然后模型<strong>设计大量的输出</strong>，然后选择某些输出去监督网络的学习，最后过滤所有输出，找到预测框</li>
<li>无论是先生成大量获选框、还是设计大量的输出，都是为了使用“大数量”的输出确保覆盖目标数量不定的图片</li>
</ul>
<h1 id="目标检测常用的方法"><a class="markdownIt-Anchor" href="#目标检测常用的方法"></a> 目标检测常用的方法？</h1>
<ul>
<li><img src="../source/Excalidraw/Drawing%202023-03-15%2008.31.34.excalidraw.png" alt="Drawing 2023-03-15 08.31.34.excalidraw" /></li>
<li>two-stage：先找出目标的大量获选框，然后对获选框进行分类和回归，实现对目标的检测</li>
<li>one-stage：从最后的 featrue map 开始，在 grid 设置多个 anchor，然后对这些 anchor 进行分类和位置检测，实现对目标的检测</li>
<li>anchor-free：从最后的 featrue map 开始，直接用每个 grid 去学习目标的类别及 gt 框</li>
</ul>
<h1 id="目标检测的难点"><a class="markdownIt-Anchor" href="#目标检测的难点"></a> 目标检测的难点</h1>
<ol>
<li><strong>图片数据少</strong>：训练样本在尺度、角度、光照、位置等维度不够丰富，所以常使用数据增强，包括 CutMix、MixUp、Mosic 等</li>
<li><strong>BackBone 提取特征能力弱</strong>：BackBone 提取特征能力，决定检测的上限，依次使用 VGGNet (YOLOv1)-&gt;DarkNet 19 (YOLOv2)-&gt;DarkNet 53 (YOLOv3)-&gt;CSPDarkNet 53 (YOLOv4/v5)-&gt;RepVGG（YOLOv6）-&gt;E-ELAN（YOLOv7）</li>
<li><strong>Neck 特征整合能力弱</strong>：Neck 的特征整合能力是后续 Head 的基础，依次经历 FPN-&gt;PAN</li>
<li><strong>Head 解藕目标能力弱</strong>：开始时使用单 head 检测，但是由于图片上混淆大目标、小目标，发现多 head 对其进行分而治之的方法更有效</li>
<li><strong>样本分配不准确</strong>：多 head +多 anchor 的检测方式，导致模型有大量输出，如何将 gt 框准确分配到这些输出上，计算的损失能更有效监督网络学习，是比较难的问题。依次经历：静态分配 (位置、单 IOU 阈值、多 IOU 阈值、Shape)-&gt;动态分配（先计算损失再确定用那个检测器检测某个 gt），从正样本来说，依次经历单正样本、多正样本的过程</li>
<li><strong>损失函数不够准确</strong>：损失函数主要有 3 个，置信度损失和类别损失通常使用 L1 loss、交叉熵损失、focal loss；预测框损失改进比较多，依次是：L 1 loss (YOLOv1、YOLOv2、YOLOv3)-&gt;IOU loss（YOLOX）-&gt;GIOU loss (YOLOv5)-&gt;DIOU loss (YOLOv4)-&gt;CIOU loss (YOLOv7)-&gt;SIOU loss (YOLOv6)</li>
<li><strong>解析模型输出能力不强</strong>：目标检测模型大多都使用多 head 输出，如果还设置了 anchor，其输出的预测框远多于 gt 框，需要从这些预测框中解析出目标，依次经历 NMS-&gt;soft NMS-&gt;softer NMS</li>
</ol>
<h1 id="目标检测如何进行样本匹配"><a class="markdownIt-Anchor" href="#目标检测如何进行样本匹配"></a> 目标检测如何进行样本匹配？</h1>
<ul>
<li><img src="../source/Excalidraw/Drawing%202023-03-16%2023.06.28.excalidraw.png" alt="Drawing 2023-03-16 23.06.28.excalidraw" /></li>
<li><strong>静态分配</strong>：按照位置、IOU、Shape 提前将 gt 框分配到某个检测器，<strong>所有的 anchor-base+单头输出的 anchor-free</strong>，比如：YOLOv1-YOLOv5、SSD、RetinaNet、CornerNet、CenterNet、FOCS</li>
<li><strong>动态分配</strong>：根据模型输出和 gt 框的损失，选择损失小的去监督网络，<strong>多 head 输出 anchor-free</strong> 均使用这种方式，比如 YOLOX、YOLOF、YOLOv6、YOLOv7</li>
</ul>
<h1 id="如何解析模型输出"><a class="markdownIt-Anchor" href="#如何解析模型输出"></a> 如何解析模型输出？</h1>
<ul>
<li><strong>Two-satge</strong>：由于提取了大量的候选框，不需要复杂的解码，模型输出就是预测结果，需要使用 NMS 进一步过滤结果</li>
<li><strong>One-stage</strong>：该系列模型往往预测了每个 grid 的<strong>置信度</strong>，从这个置信度开始解析结果。(1)使用置信度阈值选定获选预测框；(2)根据选择的置信度位置拿到对应的分类打分、位置预测；(3)将置信度 x 分类打分作为分数，使用 IOU 阈值对所有选择出来的获选预测框进行 NMS</li>
<li><strong>anchor-free</strong>：该系列模型往往输出所有 grid 的 headmap，即对 grid 的分类打分，从这个打分开始解析模型输出。(1)选择 heatmap 上 topK 高的打分；(2)根据选择出来的位置确定目标的中心，然后拿出对应位置框其他属性 (宽高、中心到四边距离)；(3)以 heatmap 上的打分作为分数，，使用 IOU 阈值对所有选择出来的获选预测框进行 NMS</li>
</ul>
<h1 id="目标检测的评价指标"><a class="markdownIt-Anchor" href="#目标检测的评价指标"></a> 目标检测的评价指标？</h1>
<ul>
<li><img src="../source/Excalidraw/Drawing%202023-03-14%2020.11.25.excalidraw.png" alt="Drawing 2023-03-14 20.11.25.excalidraw" /></li>
<li>目标检测常使用 mAP 评价模型性能，注意：<strong>统计某类的 TP、FP、FN 时，是针对所有图片<mark style="background: #FFB8EBA6;">目标框</mark>预测结果进行，不针对具体图片</strong></li>
<li>mAP 是所有类别 AP 值的平均</li>
<li>每个 PR 区域是某个 IOU 阈值绘制的，并且这个 IOU 阈值已经由单阈值发展到多阈值</li>
</ul>
<h1 id="学习路线"><a class="markdownIt-Anchor" href="#学习路线"></a> 学习路线</h1>
<p><img src="../source/Excalidraw/Drawing%202023-02-09%2015.44.06.excalidraw.png" alt="Drawing 2023-02-09 15.44.06.excalidraw" /></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>我的语义分割学习路线</title>
    <url>/2023/05/15/%E6%88%91%E7%9A%84%E8%AF%AD%E4%B9%89%E5%88%86%E5%89%B2%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-14%2011.31.41.excalidraw.png" alt="Drawing 2023-02-14 11.31.41.excalidraw" /></p>
<p>本文总结自己目前对语义分割的认识，和学习过程</p>
<a id="more"></a>
<h1 id="什么是语义分割"><a class="markdownIt-Anchor" href="#什么是语义分割"></a> 什么是语义分割？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/%E5%AE%9E%E4%BE%8B%E5%88%86%E5%89%B2%E9%80%9A%E7%94%A8%E7%9F%A5%E8%AF%86-20230408143823.jpeg" alt="" /></li>
<li>语义分割是针对图片像素点的分类，1个像素的类别可以是单标签，也可以是多标签</li>
</ul>
<h1 id="语义分割原理"><a class="markdownIt-Anchor" href="#语义分割原理"></a> 语义分割原理</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-19%2022.02.18.excalidraw.png" alt="Drawing 2023-03-19 22.02.18.excalidraw" /></li>
<li>图片经过 CNN 提取特征后，得到的是分辨率变小的2D featrue map，通过上采样将 featrue map 的分辨率变大，然后预测每个 grid 的类别（可以是单标签预测，也可以是多标签）</li>
</ul>
<h1 id="语义分割难点"><a class="markdownIt-Anchor" href="#语义分割难点"></a> 语义分割难点</h1>
<ol>
<li><strong>分辨率下降</strong>：CNN提取的特征平移不变性，这对分类任务很有用，但是对分割来说，希望原图目标移动后，其特征的响应也在移动，因此分辨率下降导致最后featrue map包含位置信息少。通常使用“跳跃连接”解决，即将包含位置信息的高分辨率特征和包含语义信息的低分辨率融合解决</li>
<li><strong>感受野小</strong>：CNN下采样倍率一般比较小，所以随后featrue map上每个grid的感受野一般不大，这就意味着每个特征接收少部分其他像素的信息，这对大尺度的目标来说是非常不利的。通常使用“空洞卷积”解决，即在不加深网络的情况下提高感受野</li>
<li><strong>目标多尺度</strong>：图片存在多尺度的目标，如果仅使用一种分辨率去做最后分类，对其他分辨率效果不佳。通常使用多尺度特征融合来解决，比如PSP、ASPP模块</li>
<li><strong>依赖距离短</strong>：这和感受野的影响类似，但是即使感受野再大，也不能大过原图，所以像素之间的长程依赖还不够。通常使用“自注意力机制”去解决，比如构建特征的通道注意力、空间注意力去创建这种依赖</li>
</ol>
<h1 id="语义分割模型的种类"><a class="markdownIt-Anchor" href="#语义分割模型的种类"></a> 语义分割模型的种类</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-19%2022.20.10.excalidraw.png" alt="Drawing 2023-03-19 22.20.10.excalidraw" /></li>
<li><strong>金字塔模型</strong>：通过构建并融合多尺度特征，实现对不同尺度目标的分割，代表模型有 DeepLab 系列，PSPNet，DANet，APCNet</li>
<li><strong>编码器-解码器</strong>：使用 CNN 下采样提取特征，然后使用线性插值、反卷积、反池化操作实现上采样，并通过跳跃连接将高分辨率的位置信息联通到低分辨率的语义特征</li>
<li><strong>“自注意力”系列</strong>：通过引入“自注意力”机制，构建像素之间的远程连接，解决感受野解决不了的尺度问题</li>
</ul>
<h1 id="语义分割的上采样类型"><a class="markdownIt-Anchor" href="#语义分割的上采样类型"></a> 语义分割的上采样类型</h1>
<p>语义分割在还原分辨率时，通常使用上采样，不同的上采样在速度、精度有不同区别</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>线性插值</td>
<td>通过相邻的元素决定待插值点的值，如最近邻插值、线性插值、双3次线性插值</td>
<td>快速、无需学习</td>
<td>-</td>
</tr>
<tr>
<td>反池化</td>
<td>记录池化时的激活位置，上采样时直接将值赋值给这个位置</td>
<td>无需学习</td>
<td>需要额外存储记录激活；上采样效果不好</td>
</tr>
<tr>
<td>反卷积</td>
<td>通过反卷积上采样</td>
<td>可以被学习优化</td>
<td>增加模型计算，有网格效应</td>
</tr>
</tbody>
</table>
<h1 id="评价指标"><a class="markdownIt-Anchor" href="#评价指标"></a> 评价指标</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B8%B8%E8%A7%81%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87-20230408153654.png" alt="机器学习常见评价指标-20230408153654" /></p>
<ul>
<li>语义分割常使用 mIOU 作为统计指标，注意：<strong>统计某类 TP、FP、FN 指标时，是针对所有图片的所有<mark style="background: #BBFABBA6;">像素</mark>预测结果、而不是具体一张图片</strong></li>
<li>首先统计某个类别在所有图片上的累计 TP、FP、FN 像素数量、然后计算这个类别的 IOU ，再算所有类别的平均$$I o U=\frac{T P}{F P+T P+F N}$$</li>
</ul>
<h1 id="学习路线"><a class="markdownIt-Anchor" href="#学习路线"></a> 学习路线</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-14%2011.31.41.excalidraw.png" alt="Drawing 2023-02-14 11.31.41.excalidraw" /></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>我的人体姿态估计学习路线</title>
    <url>/2023/05/14/%E6%88%91%E7%9A%84%E4%BA%BA%E4%BD%93%E5%A7%BF%E6%80%81%E4%BC%B0%E8%AE%A1%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-13%2023.28.32.excalidraw.png" alt="Drawing 2023-04-13 23.28.32.excalidraw" /></p>
<p>本文总结自己目前对人体姿态估计的认识，和学习过程</p>
<a id="more"></a>
<h1 id="什么是人体姿态检测"><a class="markdownIt-Anchor" href="#什么是人体姿态检测"></a> 什么是人体姿态检测？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/%E5%85%B3%E9%94%AE%E7%82%B9%E6%A3%80%E6%B5%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-20230417230640.png" alt="" /></li>
<li><strong>在人体关节连接的所有姿势空间中搜索某个特定姿势，本质为关节点的定位</strong></li>
<li>点之间形成的连接必须很重要，这意味着并非所有点都可以形成一对。从一开始，HPE 的目标就是形成类似骨骼的人体表示，然后针对特定任务的应用对其进行进一步处理</li>
</ul>
<h1 id="人体姿态检测的方法"><a class="markdownIt-Anchor" href="#人体姿态检测的方法"></a> 人体姿态检测的方法 ？</h1>
<ul>
<li><strong>从上到下 (二阶段)</strong> ：主要包含两个部分，目标检测和单人人体骨骼关键点检测，对于目标检测算法，这里不再进行描述，而对于关键点检测算法，首先需要注意的是关键点局部信息的区分性很弱，即背景中很容易会出现同样的局部区域造成混淆，所以需要考虑较大的感受野区域；其次人体不同关键点的检测的难易程度是不一样的，对于腰部、腿部这类关键点的检测要明显难于头部附近关键点的检测，所以不同的关键点可能需要区别对待；最后自上而下的人体关键点定位依赖于检测算法的提出的 Proposals，会出现检测不准和重复检测等现象。如：CPM、CPN、RMPE</li>
<li><strong>从下到上 (单阶段)</strong> ：主要包含两个部分，关键点检测和关键点聚类，其中关键点检测和单人的关键点检测方法上是差不多的，区别在于这里的关键点检测需要将图片中所有类别的所有关键点全部检测出来，然后对这些关键点进行聚类处理，将不同人的不同关键点连接在一块，从而聚类产生不同的个体。如：PAFs</li>
</ul>
<h1 id="人体姿态检测的评价标准pck"><a class="markdownIt-Anchor" href="#人体姿态检测的评价标准pck"></a> 人体姿态检测的评价标准PCK？</h1>
<ul>
<li><strong>预测关键点与 GT 关键点的归一化距离，如果小于某个阈值，该关键点预测正确，否则失败，PCK 等于预测正确的比例</strong>，这个值和阈值有关，有 PCK@0.2 、 PCKh@0.5 ，PCK 用于 2D 和 3D ，值越高越好</li>
<li>PCK 值是针对一个人的关键点来说的，也就说<strong>不存在预测结果多于 gt 的问题，或者说这个问题在计算 PCK 前已经解决</strong>，计算多人的 PCK 值是所有人 PCK 值的平均</li>
<li>1）<strong>计算某个关键点的的 PCK 值</strong>：即以下公式，其中 i 表示 id=i 的关键点，k 表示第 k 个阈值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>T</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">T^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span> ，p 表示第 p 个行人，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示第 p 个人的 id=1 的预测关键点与 GT 关键点之间的欧式距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>d</mi><mi>p</mi><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">d_p^{def}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2322159999999998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 是第 p 个人的尺度因子，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>k</mi></msub><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo>:</mo><mn>0.001</mn><mo>:</mo><mn>0.1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">T_k \in [0:0.001:0.1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 表示人工设定的阈值<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>C</mi><msubsup><mi>K</mi><mi>i</mi><mi>k</mi></msubsup><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mi>p</mi></munder><mi>δ</mi><mo stretchy="false">(</mo><mfrac><msub><mi>d</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub><msubsup><mi>d</mi><mi>p</mi><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></msubsup></mfrac><mo>≤</mo><msub><mi>T</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>p</mi></munder><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">PCK_i^k=\dfrac{\sum_p\delta(\frac{d_{pi}}{d_p^{def}}\leq T_k)}{\sum_p1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2093860000000003em;vertical-align:-1.1218180000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.087568em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.0941399999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.993428em;"><span style="top:-2.5042000000000004em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9797142857142856em;"><span style="top:-2.3412571428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29762857142857146em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.70414em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218180000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>2）<strong>计算 PCK 值</strong>：所有人所有关键点的 PCK 值的平均是模型的 PCK 值<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>C</mi><msubsup><mi>K</mi><mrow><mi>m</mi><mi>e</mi><mi>a</mi><mi>n</mi></mrow><mi>k</mi></msubsup><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mi>p</mi></munder><munder><mo>∑</mo><mi>i</mi></munder><mi>δ</mi><mo stretchy="false">(</mo><mfrac><msub><mi>d</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub><msubsup><mi>d</mi><mi>p</mi><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></msubsup></mfrac><mo>≤</mo><msub><mi>T</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>p</mi></munder><munder><mo>∑</mo><mi>i</mi></munder><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">PCK^k_{mean}=\dfrac{\sum_p\sum_i\delta(\frac{d_{pi}}{d_p^{def}}\leq T_k)}{\sum_p\sum_i1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2093860000000003em;vertical-align:-1.1218180000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.087568em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.0941399999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.993428em;"><span style="top:-2.5042000000000004em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9797142857142856em;"><span style="top:-2.3412571428571427em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-2.9836857142857145em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29762857142857146em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.70414em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218180000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>不同的数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>d</mi><mi>p</mi><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">d_p^{def}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2322159999999998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 计算方法不同，MPII 中是以头部长度（头部矩形框的左上点与右下点的欧式距离）作为归一化参考，即 <strong>PCKh</strong></li>
</ul>
<h1 id="人体姿态检测的评价标准oks"><a class="markdownIt-Anchor" href="#人体姿态检测的评价标准oks"></a> 人体姿态检测的评价标准Oks？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230505085804.png" alt="" /></li>
<li>PCK 仅通过归一化的欧式距离就决定关键点的预测准确度，OKs 在此基础上，加入关键点的标注难易偏差。上图是两个关键点的 OKS 值，</li>
<li>以下公式是 OKs 指标，其中 p 表示第 p 个行人，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">p^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.019104em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span> 表示第 p 个行人的关键点 i，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是第 p 个行人的关键点 i 的预测位置与 GT 位置的欧式距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><msup><mi>p</mi><mi>i</mi></msup></msub><mo>=</mo><mn>1</mn><mtext>、</mtext><msub><mi>v</mi><msup><mi>p</mi><mi>i</mi></msup></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">v_{p^i}=1、v_{p^i}=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7518279999999999em;vertical-align:-0.321268em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5148400000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.321268em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.004598em;vertical-align:-0.321268em;"></span><span class="mord">1</span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5148400000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.321268em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 表示关键点无遮挡且标注、有遮挡且标注，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">S_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示第 p 个行人的尺度因子，其值为行人检测框 (w, h)面积平方根 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>p</mi></msub><mo>=</mo><msqrt><mrow><mi>w</mi><mi>h</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">S_p=\sqrt{wh}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.10777999999999999em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">h</span></span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示类型为 i 的关键点归一化因子，<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mi>K</mi><msub><mi>S</mi><mi>p</mi></msub><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mi>i</mi></munder><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">{</mo><mo>−</mo><msubsup><mi>d</mi><mrow><mi>p</mi><mi>i</mi></mrow><mn>2</mn></msubsup><mi mathvariant="normal">/</mi><mn>2</mn><msubsup><mi>S</mi><mi>p</mi><mn>2</mn></msubsup><msubsup><mi>σ</mi><mi>i</mi><mn>2</mn></msubsup><mo stretchy="false">}</mo><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub><mo>&gt;</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>i</mi></munder><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub><mo>&gt;</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">OKS_p=\dfrac{\sum_i exp\{-d_{pi}^2/2S_p^2\sigma_i^2\}\delta(v_{pi}&gt;0)}{\sum_i\delta(v_{pi}&gt;0)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.58459em;vertical-align:-0.9857100000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5988799999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">{</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9857100000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 这个因子是通过对所有的样本的 GT 关键点由人工标注与真实值存在的标准差， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>  越大表示此类型的关键点越难标注。coco 数据集统计出17类关键点的归一化因子：{鼻子：0.026，眼睛：0.025，耳朵：0.035，肩膀：0.079，手肘：0.072，手腕：0.062，臀部：0.107，膝盖：0.087，脚踝：0.089}</li>
</ul>
<h1 id="人体姿态检测的评价标准map"><a class="markdownIt-Anchor" href="#人体姿态检测的评价标准map"></a> 人体姿态检测的评价标准mAp？</h1>
<ul>
<li>OKS 在物体检测中扮演的角色与 IoU 的作用相同。它是根据预测点和由人的比例对地面实况点之间的距离计算得出的。论文常出现以下指标 AP50（OKS = 0.50 的 AP）、AP（OKS 在[0.5:0.05:0.95]10 个位置的 AP 值）</li>
<li><strong>单人姿态估计 AP：</strong> 计算出 groundtruth 与检测得到的关键点的相似度<strong>oks</strong>为一个标量，然后人为的给定一个阈值<strong>T</strong>，然后可以通过所有图片的<strong>oks</strong>计算<strong>AP</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>P</mi><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mi>p</mi></munder><mi>δ</mi><mo stretchy="false">(</mo><mi>o</mi><mi>k</mi><msub><mi>s</mi><mi>p</mi></msub><mo>&gt;</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>p</mi></munder><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">AP=\dfrac{\sum_p\delta(oks_p&gt;T)}{\sum_p1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.697636em;vertical-align:-1.1218180000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.575818em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.825818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218180000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li><strong>多人姿态估计 AP：</strong> 1）如果采用的检测方法是自顶向下，先把所有的人找出来再检测关键点，那么其<strong>AP</strong>计算方法如同<strong>单人姿态估计 AP</strong>；2）如果采用的检测方法是自底向上，先把所有的关键点找出来然后再组成人。假设一张图片中有 M 个人，预测出 N 个人，由于不知道预测出的<strong>N</strong>个人与 groundtruth 中的<strong>M</strong>个人的一一对应关系，因此需要计算 groundtruth 中每一个人与预测的<strong>N</strong>个人的<strong>oks</strong>，那么可以获得一个大小为_M_×_N_的矩阵，矩阵的每一行为 groundtruth 中的一个人与预测结果的<strong>N</strong>个人的<strong>oks</strong>，然后找出每一行中<strong>oks</strong>最大的值作为当前<strong>GT</strong>的<strong>oks</strong>。最后每一个<strong>GT</strong>行人都有一个标量<strong>oks</strong>，然后人为的给定一个阈值<strong>T</strong>，然后可以通过所有图片中的所有行人计算<strong>AP</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>P</mi><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mi>m</mi></munder><munder><mo>∑</mo><mi>p</mi></munder><mi>δ</mi><mo stretchy="false">(</mo><mi>o</mi><mi>k</mi><msub><mi>s</mi><mi>p</mi></msub><mo>&gt;</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>m</mi></munder><munder><mo>∑</mo><mi>p</mi></munder><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">AP=\dfrac{\sum_m\sum_p\delta(oks_p&gt;T)}{\sum_m\sum_p1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.697636em;vertical-align:-1.1218180000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.575818em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.825818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218180000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="学习路线"><a class="markdownIt-Anchor" href="#学习路线"></a> 学习路线</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-13%2023.28.32.excalidraw.png" alt="Drawing 2023-04-13 23.28.32.excalidraw" /></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>我的实例分割学习路线</title>
    <url>/2023/05/13/%E6%88%91%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%88%86%E5%89%B2%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2013.39.58.excalidraw.png" alt="Drawing 2023-03-22 13.39.58.excalidraw" /></p>
<p>本文总结自己目前对实例分割 的认识，和学习过程</p>
<a id="more"></a>
<h1 id="什么是实例分割"><a class="markdownIt-Anchor" href="#什么是实例分割"></a> 什么是实例分割？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2010.13.11.excalidraw.png" alt="Drawing 2023-03-22 10.13.11.excalidraw" /></li>
<li>目标检测针对的是目标，语义分割针对的是像素，而实例分割针对的是实例。所谓实例就是一个不管类别、不管是否连续的 1 个目标</li>
<li>上图是对一张图上 3 类 4 个实例的分割示意图，最后的输出结果是<strong>每个实例的语义分割图</strong></li>
</ul>
<h1 id="实例分割的原理"><a class="markdownIt-Anchor" href="#实例分割的原理"></a> 实例分割的原理？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2010.27.55.excalidraw.png" alt="Drawing 2023-03-22 10.27.55.excalidraw" /></li>
<li><strong>Two-satge</strong>：既然实例分割是针对实例的语义分割，最直接的办法就是先找出单个实例的区域，然后对这个区域进行语义分割即可</li>
<li><strong>one-stage</strong>：不找实例的区域，而是针对每个 grid 生成 1 个语义分割预测，通过后处理获得实例的类别及分割结果</li>
</ul>
<h1 id="实例分割的方法"><a class="markdownIt-Anchor" href="#实例分割的方法"></a> 实例分割的方法？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2009.38.03.excalidraw.png" alt="Drawing 2023-03-22 09.38.03.excalidraw" /></li>
<li><mark style="background: #FF5582A6;">two-satge</mark>：类似于目标检测的 two-satge 模型，即<strong>先检测出目标的获选框，然后对候选框进行语义分割和位置回归</strong></li>
<li><mark style="background: #FFB86CA6;">one-stage</mark>：类似于目标检测的 one-stage 模型，即<strong>先通过 grid 确保这个位置有目标，然后对这个位置进行位置回归 (目标检测)或者 mask 生成 (实例分割)</strong></li>
<li>two-stage 的方法原始直接，但是对重叠目标的 Mask 预测比较麻烦，而且速度较慢；one-stage 类似 YOLO 系列的思想，速度较快</li>
</ul>
<h1 id="评价指标"><a class="markdownIt-Anchor" href="#评价指标"></a> 评价指标</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-14%2020.11.25.excalidraw.png" alt="Drawing 2023-03-14 20.11.25.excalidraw" /></li>
<li>和目标检测一样，实例分割使用 mAP 评价模型性能，注意：<strong>统计某类的 TP、FP、FN 时，是针对所有图片的<mark style="background: #FF5582A6;">实例</mark>预测结果进行，不针对具体图片</strong></li>
<li>AP 是指某个类别预测情况的平均精准率，mAP 指所有类别 AP 的平均</li>
<li>AP 可以通过求解 PR 曲线下的面积得到，求解方式包括11个点和矩形求解</li>
<li>每个 PR 区域是某个 IOU 阈值绘制的，并且这个 IOU 阈值已经由单阈值发展到多阈值</li>
</ul>
<h1 id="two-stage"><a class="markdownIt-Anchor" href="#two-stage"></a> two-stage</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2013.46.18.excalidraw.png" alt="Drawing 2023-03-22 13.46.18.excalidraw" /></li>
<li>自上而下的实例分割方法，首先按获取候选框，然后在此基础上进行目标框回归和 Mask 生成</li>
<li><strong>Mask RCNN</strong>：使用 RPN 获得候选框、使用 Faster RCNN 预测目标类别、使用 FCN 生成 Mask</li>
<li><strong>PAN</strong>：通过在 FPN 的基础上引入 bottom-up 路径，让底层信息更快传递到高层，其思想和 Mask RCNN 一致</li>
</ul>
<h1 id="one-stage"><a class="markdownIt-Anchor" href="#one-stage"></a> One-stage</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2013.47.15.excalidraw.png" alt="Drawing 2023-03-22 13.47.15.excalidraw" /></li>
<li>自下而上的实例分割方法类似 YOLO 系列将每个 grid 看作 1 个目标，这类实例分割方法将每个 grid 视为一个实例，并为每个 grid 预测 1 个 Mask</li>
<li><strong>SOLO</strong>：输出包含 2 个分支，一个是 heatmap 分支，判定该 grid 是否包含实例，另一个分支是为该 grid 生成 Mask</li>
<li><strong>SOLOv2</strong>：在 SOLOv1 的基础上，将 Mask 分支解藕卷积核生成、卷积特征生成 2 个分支，监督网络学习卷积核，使得网络能动态学习实例的特征</li>
</ul>
<h1 id="学习路线"><a class="markdownIt-Anchor" href="#学习路线"></a> 学习路线</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2013.39.58.excalidraw.png" alt="Drawing 2023-03-22 13.39.58.excalidraw" /></li>
</ul>
<ol>
<li><a href="MaskRCNN.md">MaskRCNN</a>：在 Faster RCNN 的基础上增加 FCN 分支，提出 ROIAlign 对齐 ROI 下采样</li>
<li><a href="PAN.md">PAN</a>：类似 MaskRCNN 过程，BackBone 使用 PAN 进行特征融合，最后融合所有尺度目标进行目标定位与分割</li>
<li><a href="yolact.md">yolact</a>：首先生成一批 prototype mask，然后目标分支生成一组权重，加权得到每个 grid 的分割结果</li>
<li><a href="SOLO.md">SOLO</a>：首先 Category 分支对 grid 进行分类，然后 Mask 分支生成每个 grid 的分割，实际使用通过解藕头构建 Mask 分支</li>
<li><a href="SOLOv2.md">SOLOv2</a>：将 SOLO 的 Mask 生成分支解藕为<strong>掩码核预测分支</strong>和掩码特征学习分支，分别负责生成卷积核和需要卷积的特征映射</li>
<li><a href="yolactplusplus.md">yolactplusplus</a>：基本和 yolact 类似，生成更多 anchor 、重新生成的 Mask scoreing 分支</li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>实例分割</tag>
      </tags>
  </entry>
  <entry>
    <title>我的图片分类习路线</title>
    <url>/2023/05/10/%E6%88%91%E7%9A%84%E5%9B%BE%E7%89%87%E5%88%86%E7%B1%BB%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-09%2023.12.59.excalidraw.png" alt="Drawing 2023-02-09 23.12.59.excalidraw" /></p>
<p>本文总结自己目前对图片分类的认识，和学习过程</p>
<a id="more"></a>
<h1 id="什么是图片分类"><a class="markdownIt-Anchor" href="#什么是图片分类"></a> 什么是图片分类</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/KsBct79-DSURag2WJ5nxSJoo1Hx8ednwNpc1z3s9abE4UO2dKzlX6Lq0R-32jdqeRE4djUQ-ppUwv5uuKwxTpc19AMjmRWXQrnUPaKAvcjwQssWFFwPBK7iWrho6mzqk.png" alt="" /></p>
<p><strong>判断图像中包含物体的类别，如果期望判别多种物体则称为多目标分类</strong></p>
<h1 id="图片分类的原理"><a class="markdownIt-Anchor" href="#图片分类的原理"></a> 图片分类的原理</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-20%2022.35.20.excalidraw.png" alt="Drawing 2023-03-20 22.35.20.excalidraw" /></p>
<ol>
<li>输入一张图片，经过 CNN 提取特征后，最后输出这张图在所有类别上的概率</li>
<li>CNN提取特征之后通常是(BCHW)的输出，因为分类是全局结果，所以需要去掉HW，通常做法是全局池化，得到(BC),然后接Linear输出类别打分</li>
</ol>
<h1 id="cnn-网络设计原则"><a class="markdownIt-Anchor" href="#cnn-网络设计原则"></a> CNN 网络设计原则</h1>
<p>在 CNN 架构设计上，经常修改哪些指标去提升网络性能？</p>
<ul>
<li><strong>网络的宽度 width</strong>：每层卷积的输出通道数</li>
<li><strong>网络的深度 depth</strong>：网络的层数</li>
<li><strong>网络的分辨率 resolution</strong>：输入图像的分辨率大小</li>
<li><strong>网络的增长率 growth</strong>：随着层数的增加，每层卷积输出通道数的增长比例</li>
<li><strong>网络的特征复用</strong>：如 DenseNet 可以使用更浅的网络，更少的参数，提升特征复用，达到与深度网络相当的性能</li>
<li><strong>高效特征融合</strong>：InceptionNet的split-transforms-merge模式，将输入分别使用不同的转换分支提取特征，然后将多个分支的结果进行合并实现特征融合</li>
<li><strong>上下文依赖</strong>：通过类似SENet的方式构建像素之间的上下文依赖</li>
</ul>
<h1 id="图片分类方法"><a class="markdownIt-Anchor" href="#图片分类方法"></a> 图片分类方法</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-09%2023.12.59.excalidraw.png" alt="Drawing 2023-02-09 23.12.59.excalidraw" /></p>
<ol start="2">
<li><strong>基础 CNN</strong>：从深度、宽度探索 CNN 的特性</li>
<li><strong>残差网络</strong>：卷积神经网络半边天，使得深层网络训练成为可能</li>
<li><strong>轻量化网络</strong>：研究 CNN 部署到移动设备的可能</li>
<li><strong>注意力机制</strong>：将空间注意力，时间注意力引入到CNN</li>
</ol>
<h1 id="评价指标"><a class="markdownIt-Anchor" href="#评价指标"></a> 评价指标</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-20%2022.38.00.excalidraw.png" alt="Drawing 2023-03-20 22.38.00.excalidraw" /></p>
<ol>
<li>分类模型的评价指标，第一步是<strong>以图片为单位，以类别为横纵座标</strong>计算其结果的混淆矩阵，然后根据混淆矩阵求准确率、AP 值</li>
<li><strong>准确率</strong>：等于混淆矩阵对角线位置值之和/图片数量</li>
<li><strong>AP 值</strong>：每设置一次分类打分阈值，求得一个混淆矩阵，然后计算得到类别的 AP 值，遍历所有阈值，计算得到所有类别 AP 值</li>
</ol>
<h1 id="学习路线"><a class="markdownIt-Anchor" href="#学习路线"></a> 学习路线</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-09%2023.12.59.excalidraw.png" alt="Drawing 2023-02-09 23.12.59.excalidraw" /></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>我的OCR学习路线</title>
    <url>/2023/05/10/%E6%88%91%E7%9A%84OCR%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-11%2018.42.57.excalidraw.png" alt="Drawing 2023-04-11 18.42.57.excalidraw" /></p>
<p>本文总结自己目前对 OCR 的认识，和学习过程</p>
<a id="more"></a>
<h1 id="什么是-ocr"><a class="markdownIt-Anchor" href="#什么是-ocr"></a> 什么是 OCR ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FOTS-20230409214506.png" alt="" /></li>
<li>OCR （Optical Character Recognition，光学字符识别）指将打字、手写或印刷文本的图像电子或机械转换为机器编码文本的过程</li>
<li><strong>文本检测 (Text detection)</strong> ：<strong>检测文本的所在位置和范围及其布局</strong>，可以使用传统的 ROI 提取实现，也可使用目标检测去实现，如 Faster R-CNN，[[FCN]]</li>
<li><strong>文本识别 (Text recognition)</strong>：<strong>对文本内容进行识别</strong>，将图像中的文本信息转化为文本信息</li>
<li><strong>文本定位 (Text Spotting)</strong> ：分文本检测 (Text detection) 文本识别 (Text recognition)统一到一起的简称</li>
</ul>
<h1 id="ocr-的方法"><a class="markdownIt-Anchor" href="#ocr-的方法"></a> OCR 的方法？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-11%2018.42.57.excalidraw.png" alt="Drawing 2023-04-11 18.42.57.excalidraw" /></li>
<li><strong>文本检测 (Text detection)</strong> ：其实就是检测文本行<strong>实例</strong>，可以使用目标检测的方法，也可使用语义分割的方法</li>
<li><strong>文本识别 (Text recognition)</strong> ：这个是 OCR 的重点，主要有 3 条路线</li>
<li><strong>文本定位 (Text Spotting)</strong> ：分为两种，但阶段和双阶段</li>
</ul>
<h1 id="评价指标-字符评价"><a class="markdownIt-Anchor" href="#评价指标-字符评价"></a> 评价指标-字符评价</h1>
<ul>
<li>以字符 （文字和标点符号） 为单位的统计和分析，适用于通用印刷体、手写体类非结构化数据的OCR应用评测</li>
<li><strong>字符召回率</strong>：预测正确的字符总数占<strong>总符号</strong>的比例</li>
<li><strong>字符准确率</strong>：预测正确的字符占<strong>总测试结果</strong>的比例</li>
<li><strong>F-socre</strong>：字符召回率和字符准确率的综合评价指标</li>
</ul>
<h1 id="评价指标-文本段评价"><a class="markdownIt-Anchor" href="#评价指标-文本段评价"></a> 评价指标-文本段评价</h1>
<ul>
<li>以字段为单位的统计和分析，适用于卡证类、票据类等结构化程度较高的 OCR 应用评测</li>
<li><strong>字段召回率</strong>：完全识别准确的字段总数占<strong>总字段</strong>的比例</li>
<li><strong>字段准确率</strong>：完全识别准确的字段占<strong>总测试结果</strong>的比例</li>
<li><strong>最小编辑距离</strong>：编辑距离是针对二个字符串（例如英文字）的差异程度的量化量测，通过替换、插入、删除，将预测结果修正为gt所需操作步骤，最小编辑距离表示最少操作步数</li>
<li><strong>全图编辑距离</strong>：整个文本段的编辑距离</li>
<li><strong>归一化编辑距离</strong>: 编辑距离除以字符串长度</li>
</ul>
<h1 id="学习路线"><a class="markdownIt-Anchor" href="#学习路线"></a> 学习路线</h1>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2014.25.52.excalidraw.png" alt="Drawing 2023-03-22 14.25.52.excalidraw" /></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>OCR</tag>
      </tags>
  </entry>
  <entry>
    <title>transformer：Attention Is All You Need</title>
    <url>/2021/12/22/transformer%EF%BC%9AAttention%20Is%20All%20You%20Need/</url>
    <content><![CDATA[<p>为了解决RNN在序列数据上感受野不足和无法并行训练的问题的问题，Transformer被提出。Transformer 由且仅由 self-Attenion 和 Feed Forward Neural Network 组成，训练时一次输入所有时间步，构建所有时间步之间的注意力，不用考虑方向，不考虑长度</p>
<a id="more"></a>
<h1 id="什么是-transformer"><a class="markdownIt-Anchor" href="#什么是-transformer"></a> 什么是 transformer ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/transformer-20230520093948.png" alt="" /></li>
<li><strong>RNN</strong>：相关算法只能从左向右依次计算或者从右向左依次计算，时间片 t 的计算依赖时间片 t-1，限制模型能力；并且对于长程依赖问题，LSTM 虽然能缓解，但是不能解决</li>
<li><strong>Transformer</strong>：抛弃了传统的 CNN 和 RNN，整个网络结构完全是由 Attention 机制组成。更准确地讲，Transformer 由且仅由 self-Attenion 和 Feed Forward Neural Network 组成，训练时一次输入所有时间步，构建所有时间步之间的注意力，不用考虑方向，不考虑长度</li>
</ul>
<h1 id="transformer-的数据流过程"><a class="markdownIt-Anchor" href="#transformer-的数据流过程"></a> Transformer 的数据流过程？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-05-06%2015.00.05.excalidraw.png" alt="Drawing 2023-05-06 15.00.05.excalidraw" /></li>
<li>假设有一个翻译任务需要学习，将阿拉伯语 (ich mochte ein bier)翻译成英语 (S i want a beer)，其在 transformer 的数据流向如上图</li>
<li><strong>制作源语言词库 src_vocab、目标语言词库 tgt_vocab</strong>：对要翻译的句子进行分词，假设只包含这两句话时，两个词库制作如图。其中 P 表示 padding，用于补充那些长度不够 5 的句子，S 表示开始，E 表示结束。实际使用时，src_vocab 和 tgt_vocab 的长度通常不一样</li>
<li><strong>获得输入的 embedding</strong>：根据源语言词库 src_vocab、目标语言词库 tgt_vocab 的长度，分别生成 encoder 输入 embedding 查询表 src_emb (5,512)、decoder 输入 embedding 查询表 tgt_emb (7,512)，根据 encoder 输入 (1,5) 构建输入 embedding (5，512)，根据 decoder 输入 (1,5)构建输入 embedding (5，512)</li>
<li><strong>生成位置 embedding</strong>：根据 encoder 、decoder 的输入长度生成 N+1的位置 embedding 查询表 pos 1、pos2，encoder+1 是为了表示 padding 的位置，decoder +1 是为了表示 start 的位置。位置 embedding 只要确定 N 的数量，其生成的 embedding 唯一，这里 encoder 、decoder 的输入都是 5，所以其位置 embedding 都是 (6,512)</li>
<li><strong>生成最终输入 embedding</strong>：输入 embedding+位置 embedding 即可，直接对应位置相加即可</li>
<li><strong>生成标签</strong>：decoder 解码时理论上是输入前一时刻的输出，比如 t 时刻 decoder 输出是 i，那么 t+1 decoder 就是 i。但是实际上 transformer 使用<strong>Teacher Forcing</strong>训练，直接拿 GT 的下一时刻作为标签即可，所以 t 时刻 decoder 输入 i 时，期望其输出 want，当输入是 <code>S i want a beer</code> 时，对应标签是 <code>i want a beer E</code></li>
</ul>
<h1 id="transformer-的网络结构"><a class="markdownIt-Anchor" href="#transformer-的网络结构"></a> transformer 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/transformer-20230408151650.png" alt="transformer-20230408151650" /></li>
<li><strong>Encoder</strong>：由 N (N=6)个完全相同的 layer 堆叠而成，每层有两个子层。第一层是 MSA (multi-head self-attention)机制，第二层是一个简单的、位置全连接的 FFN (Feed Forward Neural Network)前馈神经网络。在两个子层的每一层后采用残差连接，接着进行 layer normalization，即每个子层的输出是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi><mi>N</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>S</mi><mi>u</mi><mi>b</mi><mi>l</mi><mi>a</mi><mi>y</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LayerNorm(x+Sublayer(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li>
<li><strong>Decoder</strong>：由 N (N=6)个完全相同的 layer 堆叠而成，除了每个编码器层中的两个子层之外，解码器还插入第三个子层，该子层对编码器堆栈的输出执行 multi-head attention 操作，与 encoder 相似，在每个子层的后面使用了残差连接，之后采用了 layer normalization。修改了 decoder stack 中的 self-attention 子层，以防止当前位置信息中被添加进后续的位置信息。这种掩码与偏移一个位置的输出 embedding 相结合，确保对第 i 个位置的预测只能依赖小于 i 的已知输出</li>
</ul>
<h1 id="transformer-的-positional-encoding位置编码"><a class="markdownIt-Anchor" href="#transformer-的-positional-encoding位置编码"></a> transformer 的 Positional Encoding（位置编码）？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/transformer-20230408151516.png" alt="transformer-20230408151516" /></li>
<li>下图是20字 (行)的位置编码实例，词嵌入大小为512 (列)。你可以看到它从中间分裂成两半。这是因为左半部分的值由一个函数 (使用正弦)生成，而右半部分由另一个函数 (使用余弦)生成。然后将它们拼在一起而得到每一个位置编码向量</li>
<li>在没有 Position embedding 的 Transformer 模型并不能捕捉序列的顺序，交换单词位置后 attention map 的对应位置数值也会进行交换，并不会产生数值变化，即没有词序信息。所以这时候想要将词序信息加入到模型中</li>
<li>现在的 Transformer 架构还没有提取序列顺序的信息，这个信息对于序列而言非常重要，如果缺失了这个信息，可能我们的结果就是：所有词语都对了，但是无法组成有意义的语句，通过在 encoder 和 decoder 堆栈底部的输入嵌入中添加“Positional Encoding (位置编码)”</li>
<li>位置编码 embedding 和输入 embedding 都是 (x，512 )，可以进行相加，其中输入 embedding 通过 embedding Layer 实现，而位置编码 embedding 通过三角函数获得以下公式实现。其中 pos 表示 token 的位置，设 token 的数量是 L，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mo>∈</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2...</mn><mo separator="true">,</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">pos\in 0,1,2...,L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mn>255</mn></mrow><annotation encoding="application/x-tex">i\in 0,1,...,255</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span></span> 为向量的某一维度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub><mo>=</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">d_{model}=512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><msub><mi>E</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mo separator="true">,</mo><mn>2</mn><mi>i</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>1000</mn><msup><mn>0</mn><mrow><mn>2</mn><mi>i</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>t</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><msub><mi>E</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mo separator="true">,</mo><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>1000</mn><msup><mn>0</mn><mrow><mn>2</mn><mi>i</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>t</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}PE_{(pos,2i)}&amp;=sin(pos/10000^{2i/d_{motel}})\\\\ PE_{(pos,2i+1)}&amp;=cos(pos/10000^{2i/d_{motel}})\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.6960000000000015em;vertical-align:-2.0980000000000008em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5980000000000003em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.5619999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0980000000000008em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5980000000000003em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord">/</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.5619999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord">/</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0980000000000003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="comment">#-&gt; 根据源语言库表长度及隐向量大小构建每个单词的Embedding</span></span><br><span class="line">self.src_emb = nn.Embedding(<span class="number">5</span>, <span class="number">512</span>) <span class="comment"># [1,5]--&gt;（1，5，512）</span></span><br><span class="line"><span class="comment">#-&gt; 创建位置Embedding</span></span><br><span class="line"><span class="comment">#首先创建每个位置关于隐向量长度的查询表，创建源语言库表长度+1的表格，1表示start符号的位置Embedding--&gt;(6,512)</span></span><br><span class="line">postion_embedding_init = get_sinusoid_encoding_table(<span class="number">5</span> + <span class="number">1</span>, <span class="number">512</span>)</span><br><span class="line"><span class="comment"># from_pretrained表示加载创建好的Embedding，freeze只加载不训练</span></span><br><span class="line">self.pos_emb = nn.Embedding.from_pretrained(postion_embedding_init,freeze=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 单词的Embedding+单词的位置的Embedding = Encoder输入</span></span><br><span class="line">enc_outputs = self.src_emb(enc_inputs) + self.pos_emb(torch.LongTensor([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>]])) <span class="comment"># （1，5，512）+ （1，5，512）=（1，5，512）</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="additive-attention-dot-product-multi-plicative-attention-的区别"><a class="markdownIt-Anchor" href="#additive-attention-dot-product-multi-plicative-attention-的区别"></a> additive attention、dot-product (multi-plicative) attention 的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-31%2021.00.04.excalidraw.png" alt="Drawing 2023-03-31 21.00.04.excalidraw" /></li>
<li><strong>additive attention</strong>：原始的 seq2seq 加注意力机制就是使用这个 additive attention，假设 C 是 encoder 编码得到的向量，解码时不是直接将这个向量输入到所有时刻，而是先经过注意力加权，加权的得到是[x，Ca]，然后连接 Linear 得到 decoder 的输入。由于 Linear 是线性转换，可以认为是加性加权</li>
<li><strong>Dot-Product Attention</strong>：设一个句子的长度为 S，单词 embedding 空间的维度为 D，那么一个句子就会被编码为一个大小为 S×D 的矩阵。使用三个大小为 D×d 的权重矩阵 Wq, Wk, Wv 与之相乘，会得到为三个大小为 S×d 的编码矩阵 Q, K, V， <strong>Q 代表着需要编码的词的信息， K 代表着句子中其它词的信息，相乘后得到句子中其它词的权重值； V 代表着每个位置单词蕴含的语义信息</strong></li>
<li>加型注意力机制和点乘注意力机制有着相同的计算复杂度，但点乘注意力机制运算可以使用高度优化的并行矩阵乘法代码，会更快也更节省空间</li>
</ul>
<h1 id="transformer-注意力的构建"><a class="markdownIt-Anchor" href="#transformer-注意力的构建"></a> transformer 注意力的构建？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/transformer-20230408151804.png" alt="" /></li>
<li><strong>Attention 机制</strong>：transformer 使用<strong>Scaled Dot-Product Attention</strong>构建注意力，它通过1个 query 和 1组 key-value 对映射到一个输出，其中Q代表着需要编码的词的信息， K代表着句子中其它词的信息，相乘后得到句子中其它词的权重值； V代表着每个位置单词蕴含的语义信息，在被加权求和后作为待编码词的编码 $$\operatorname{Atention}(Q,K,V)=\operatorname{softmax}(\dfrac{QK^T}{\sqrt{d_k}})V$$</li>
<li><strong>Multi-Head Attention (MHA)</strong>：设一个句子的长度为 S，单词 embedding 空间的维度为 D，那么一个句子就会被编码为一个大小为 S×D 的矩阵。使用三个大小为 D×d 的 Linear 权重与之相乘，会得到为三个大小为 S×d 的编码矩阵 Q, K, V，<strong>所谓多头注意力机制</strong>，就是将 n 个这样得到的编码进行拼接，得到大小为 S×[d,…, d] (其中 d 的个数为 n )的矩阵。多头注意力的引入既丰富了注意力，也降低了构建注意力的成本</li>
<li><strong>encoder-decoder Attention</strong>：transformer的1个block包含1个encoder和1个decoder，两部分除了各自构建Multi-Head Attention外，还在encoder与decoder之间构建注意力。构建时，以 encoder输出作为KV和Q(gt序列)一起输入到decoder构建，注意：KV的序列长度和Q的序列长度不一定相等</li>
<li><strong>对比 <code>Seq2Seq</code> 过程</strong>：Q 包含待生成的句子相关信息，相当于解码器隐藏层状态 h；K，V 则来自编码器，与编码器输出的 C 类似</li>
</ul>
<h1 id="transformer-注意力的构建的数据流过程"><a class="markdownIt-Anchor" href="#transformer-注意力的构建的数据流过程"></a> transformer 注意力的构建的数据流过程？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-05-06%2022.35.49.excalidraw.png" alt="Drawing 2023-05-06 22.35.49.excalidraw" /></li>
<li>Step 1：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">QK^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035771em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 产生注意力矩阵，大小为 (5,5)，表示输入的 5 个 token 之间的注意力。如果是 MMSA，这一步还会增加一个 Mask 的过程，用于屏蔽前一时刻后面时刻，比如 decoder 构建i的注意力时，不能让 i 感知到后一时刻的 want。所以 Mask 是一个上三角都是1，下三角都是0的5x5矩阵，用于乘上 Q^K 之后的注意力矩阵</li>
<li>Step 2：使用 softmax 归一化注意力矩阵</li>
<li>Step 3：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>^</mo></mover><mo>=</mo><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup><mi>V</mi></mrow><annotation encoding="application/x-tex">\hat x=QK^TV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.035771em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 得到加权后的特征</li>
<li>Step 4：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo>+</mo><mover accent="true"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">x=x+\hat x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 残差连接得到最后输出</li>
<li>以上步骤是单头注意力的构建过程，如果是多头，先对隐向量表示进行分组，然后各组之间构建单头注意力，最后合并结果输出</li>
</ul>
<h1 id="transformer-的-position-wise-feed-forward-networks-ffn-部分"><a class="markdownIt-Anchor" href="#transformer-的-position-wise-feed-forward-networks-ffn-部分"></a> transformer 的 (Position-wise feed-forward networks, FFN) 部分？</h1>
<ul>
<li><strong>基于位置的前馈网络</strong>，是两个 1 D 卷积，主要对特征进行变换，过程是 （1，5，512）-&gt;（1，2048，5）-&gt;（1，512，5）-&gt;（1，5，512），最后使用 LayerNorm 和残差连接</li>
<li>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PoswiseFeedForwardNet</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">       <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">       attention 结构中的 FeedForward 组件, 由2个1x1的卷积形成</span></span><br><span class="line"><span class="string">       &quot;&quot;&quot;</span></span><br><span class="line">       <span class="built_in">super</span>(PoswiseFeedForwardNet, self).__init__()</span><br><span class="line">       <span class="comment">##内核大小为1的两个卷积。输入和输出的维度为 d_&#123;model&#125; =512，内层的维度为 d_&#123;ff&#125; =2048。</span></span><br><span class="line">       <span class="comment"># conv1和conv2卷积模型初始化， 输入的channel变化, d_model--&gt;d_ff --&gt;d_model</span></span><br><span class="line">       self.conv1 = nn.Conv1d(in_channels=d_model, out_channels=d_ff, kernel_size=<span class="number">1</span>)</span><br><span class="line">       self.conv2 = nn.Conv1d(in_channels=d_ff, out_channels=d_model, kernel_size=<span class="number">1</span>)</span><br><span class="line">       <span class="comment"># 层归一化,模型更加稳定</span></span><br><span class="line">       self.layer_norm = nn.LayerNorm(d_model)</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, inputs</span>):</span></span><br><span class="line">       <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">       输出的形状应该是不变的，和输入的形状相同</span></span><br><span class="line"><span class="string">       :param inputs: torch.Size([1, 5, 512])</span></span><br><span class="line"><span class="string">       :return:  返回维度是[1, 5, 512]，</span></span><br><span class="line"><span class="string">       &quot;&quot;&quot;</span></span><br><span class="line">       residual = inputs <span class="comment"># [1, 5, 512]</span></span><br><span class="line">       <span class="comment"># torch.Size([1, 512, 5])-&gt;torch.Size([1, 512, 5]) -&gt; torch.Size([1, 2048, 5])</span></span><br><span class="line">       output = nn.ReLU()(self.conv1(inputs.transpose(<span class="number">1</span>, <span class="number">2</span>)))</span><br><span class="line">       <span class="comment"># [1, 2048, 5] -&gt; .Size([1, 512, 5])-&gt;torch.Size([1, 5, 512])</span></span><br><span class="line">       output = self.conv2(output).transpose(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">       <span class="comment"># 残差部分和层归一化 [1, 5, 512]+torch.Size([1, 5, 512])-&gt;torch.Size([1, 5, 512])</span></span><br><span class="line">       new_output = self.layer_norm(output + residual)</span><br><span class="line">       <span class="keyword">return</span> new_output</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="transformer-的-layer-normalization"><a class="markdownIt-Anchor" href="#transformer-的-layer-normalization"></a> transformer 的 Layer normalization？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-05-05%2016.14.36.excalidraw.png" alt="Drawing 2023-05-05 16.14.36.excalidraw" /></li>
<li>这里区别于 BN，BN 沿着每个 C (通道数量) 进行做归一化，<strong>针对不同样本的同一特征做操作</strong>，而 Layer normalization 是沿**每个 N (时间步)进行归一化</li>
<li>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LayerNorm</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, features, eps=<span class="number">1e-6</span></span>):</span></span><br><span class="line"><span class="built_in">super</span>(LayerNorm, self).__init__()</span><br><span class="line">self.a_2 = nn.Parameter(torch.ones(features))</span><br><span class="line">self.b_2 = nn.Parameter(torch.zeros(features))</span><br><span class="line">self.eps = eps</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line"><span class="comment"># 统计每个样本所有维度的值，求均值和方差</span></span><br><span class="line"><span class="comment"># 相当于变成[bsz*max_len, hidden_dim], 然后再转回来</span></span><br><span class="line">mean = x.mean(-<span class="number">1</span>, keepdim=<span class="literal">True</span>) <span class="comment"># mean: [bsz, max_len, 1]</span></span><br><span class="line">std = x.std(-<span class="number">1</span>, keepdim=<span class="literal">True</span>) <span class="comment"># std: [bsz, max_len, 1]</span></span><br><span class="line"><span class="keyword">return</span> self.a_2 * (x - mean) / (std + self.eps) + self.b_2</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="transformer-的-mask-过程"><a class="markdownIt-Anchor" href="#transformer-的-mask-过程"></a> transformer 的 Mask 过程？</h1>
<ul>
<li>Mask 表示掩码，它对某些值进行掩盖，使其在参数更新时不产生效果。Transformer 模型里面涉及两种 mask，分别是 padding mask 和 sequence mask</li>
<li><strong>padding mask</strong>：在所有的 scaled dot-product attention 里面用到，因为每个批次输入序列长度是不一样的也就是说，为了对齐在较短的序列后面填充 0，后续没必要在这些位置构建注意力，所以需要屏蔽。具体的做法是，<strong>在这些位置的值加上一个非常大的负数 (负无穷)，经过 softmax，这些位置的概率就会接近0</strong></li>
<li><strong>sequence mask</strong>：只有在 decoder 的 self-attention 里面用到，其目的就是为了在预测未来数据时把这些未来的数据屏蔽掉，防止数据泄露。如果我们非要去串行执行 training，seq mask 其实就不需要了。具体做法是<strong>产生一个上三角矩阵，上三角的值全为 1，下三角的值全是0，对角线也是 0</strong>，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">QK^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035771em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 计算完成后，使用该矩阵的某一行去盖住 label，使得 softmax 的值趋向0如预测第一个词时，decoder 输入是&lt;S&gt;，后续需要盖住，直接乘上矩阵第一行即可</li>
</ul>
<h1 id="transformer-如何训练"><a class="markdownIt-Anchor" href="#transformer-如何训练"></a> transformer 如何训练？</h1>
<ul>
<li>transformer 训练一次输入2个张量，encoder 输入和 decoder 输入，其中 encoder 输入是待执行自注意力的序列，输出 k、v，decoder 输入 gt 序列，中途产生 q，用于与 k、v 构建交叉注意力，最终输出下一个序列，这也是模型输出</li>
<li><strong>decoder输入输出</strong>：以翻译“我爱中国”为例，encoder输入是“我爱中国”的embedding，decoder输入是&quot;&lt;s&gt; I love “，标签是&quot;I love china”，注意：这是一次性输入&quot;&lt;s&gt; I love &quot;3个序列，也是一次性输出&quot;I love china&quot;3个序列</li>
<li><strong>decoder的Mask</strong>：decoder输入不能让前面的序列看到后面的序列，比如构建I的注意力时，不能让他看见love(因为这是让他预测的，不能直接给答案)，所以构建注意力时，需要使用Mask矩阵过滤QK^T后的矩阵，decoder根据mask将对应位置的值设置为无穷小，这样在计算softmax时，会使其失去作用（趋近于0），进而在与v相乘时，也就忽略了v中对应的“love”和“you”的部分</li>
<li><strong>transformer并行训练</strong>：训练不像RNN训练时，必须拿到前一序列的预测结果，再预测下一个序列，因此可以被并行训训练</li>
</ul>
<h1 id="transformer-如何预测"><a class="markdownIt-Anchor" href="#transformer-如何预测"></a> transformer 如何预测？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-31%2023.21.57.excalidraw.png" alt="Drawing 2023-03-31 23.21.57.excalidraw" /></li>
<li>transformer 推理一次输入2个张量，encoder 输入和 decoder 输入，其中 encoder 输入是待执行自注意力的序列，输出 k、v，decoder 输入 gt 序列，中途产生 q，用于与 k、v 构建交叉注意力，最终输出下一个序列，这也是模型输出</li>
<li><strong>Decoder输入输出</strong>：以翻译“我爱中国”为例，encoder输入是“我爱中国”的embedding，</li>
<li>decoder首先输入是&quot;&lt;s&gt;&quot;，得到输出O1(可能等于love)后，将&quot;O1&quot;再次输入decoder，输出O2(可能等于china)，一直以此循环，知道模型输出结束符</li>
<li><strong>Shifted Right</strong>：当前时刻输出作为下一时刻 decoder 的输入的过程</li>
</ul>
<h1 id="transformer-各部分耗时比较"><a class="markdownIt-Anchor" href="#transformer-各部分耗时比较"></a> Transformer 各部分耗时比较？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/home-20230411183757-2.png" alt="" /></li>
<li>当模型大了后，真正消耗算力（FLOPS）的，还是 MLP（FFN），自注意力（attn）和多头（MHA）只占小部分</li>
</ul>
<h1 id="transformer-的并行性体现在哪里"><a class="markdownIt-Anchor" href="#transformer-的并行性体现在哪里"></a> Transformer 的并行性体现在哪里？</h1>
<ul>
<li>RNN 之所以不支持并行化是因为它天生是个时序结构，t 时刻依赖 t-1时刻的输出，而 t-1时刻又依赖 t-2时刻，如此循环往前</li>
<li><strong>Encoder 训练、推理并行</strong>：在构建 multi-head 隐向量注意力时，有对隐向量进行分组，在分组内构建全局注意力，分组之间不影响，所以分组之间的注意力可以并行构建</li>
<li><strong>Decoder 训练并行、推理不并行</strong>：训练阶段的 Decoder，如果使用<strong>teacher force</strong>训练方式，不用获取上一时刻输出即可训练，此时可以进行并行化，但是在测试阶段，因为我们没有正确的目标语句，t 时刻的输入必然依赖 t-1时刻的输出，这时跟之前的 seq2seq 就没什么区别了。</li>
</ul>
<h1 id="transformer-的-mha-如何实现并行计算的"><a class="markdownIt-Anchor" href="#transformer-的-mha-如何实现并行计算的"></a> Transformer 的 MHA 如何实现并行计算的？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230505142606.png" alt="" /></li>
<li>在构建 multi-head 隐向量注意力时，有对隐向量进行分组，在分组内构建全局注意力，分组之间不影响，所以分组之间的注意力可以并行构建</li>
</ul>
<h1 id="mha-的时间复杂度计算"><a class="markdownIt-Anchor" href="#mha-的时间复杂度计算"></a> MHA 的时间复杂度计算？</h1>
<ul>
<li>MHA 的计算过程是 Q (b, n, l)与 K (b, m, l)做矩阵点乘，得到注意力矩阵 (b, n, m)，对于矩阵的每个位置，需要做 l 次乘法，所以时间复杂度是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi><mo>×</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">n\times m\times l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span></li>
</ul>
<h1 id="transformer-的注意力矩阵含义"><a class="markdownIt-Anchor" href="#transformer-的注意力矩阵含义"></a> Transformer 的注意力矩阵含义？</h1>
<ul>
<li>以 Pytorch 为例，输入到 transformer 的序列有两个，分别是 src、tgt，其中 src 可以是 (S, E)或 (N, S, E)，tgt 是 (T, E)或 (N, T, E)，，其中 S 是源序列长度、T 是目标序列长度、N 是 batch size、E 是特征长度</li>
<li>假设是 src (S, E)与 tgt (T, E)构建矩阵时，则其注意力矩阵大小是 (T, S); 假设是 src (N, S, E)与 tgt (N, T, E)构建矩阵时，构建注意力时，取出某个 batch 计算，N 个 batch 得到注意力矩阵是 (N, T, E)</li>
<li><strong>总结</strong>：1)注意力矩阵是目标序列与源序列之间的关系，目标序列与源序列长度可以不相等；2)多个batch size构建注意力时，只在某个batch内构建注意力，不涉及跨batch；3)从目标序列来看，输入(N, T, E)，输出也是(N, T, E)，相当于拿Q去查询得到定长的输出</li>
</ul>
<h1 id="transformer-为什么-q-k-使用不同的权重矩阵生成为何不能使用同一个值进行自身的点乘"><a class="markdownIt-Anchor" href="#transformer-为什么-q-k-使用不同的权重矩阵生成为何不能使用同一个值进行自身的点乘"></a> Transformer 为什么 Q K 使用不同的权重矩阵生成，为何不能使用同一个值进行自身的点乘？</h1>
<ul>
<li>这里的 Q、K 使用不同权重矩阵生成的意思是，当 encoder 输入 QKV 时，Q=K=V，在计算 QK 前，需要先经过权重矩阵计算，所以问题是为什么不直接进行 QK 计算注意力矩阵<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo><mi>V</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><msub><mi>W</mi><mi>q</mi></msub><msubsup><mi>W</mi><mi>k</mi><mi>T</mi></msubsup><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo stretchy="false">)</mo><mi>V</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}Attention(Q,K,V)=softmax(\frac{QK^T}{\sqrt{d_k}})V\\ Attention(Q,K,V)=softmax(\frac{QW_qW_k^TK^T}{\sqrt{d_k}})V \end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.319038em;vertical-align:-1.409519em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.909519em;"><span style="top:-3.973611em;"><span class="pstrut" style="height:3.153565em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.089473em;"><span style="top:-2.5864385em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622307142857143em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222307142857144em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17776928571428574em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span><span style="top:-2.2820460000000002em;"><span class="pstrut" style="height:3.153565em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.153565em;"><span style="top:-2.5864385em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622307142857143em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222307142857144em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17776928571428574em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.214em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.409519em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li><strong>说法 1</strong>：使用 Q、K 不相同可以保证在不同空间进行投影，增强了表达能力，提高了泛化能力。如果 QK 相等，那么 QK 计算得到的矩阵是对称矩阵，这样 self-attention 就退化成一个 point-wise 线性映射，对于注意力上的表现力不够强</li>
<li><strong>说法 2</strong>：BETR 证明即使 Q=K，也不影响结果</li>
</ul>
<h1 id="transformer-在-qk之后为什么要进行归一化"><a class="markdownIt-Anchor" href="#transformer-在-qk之后为什么要进行归一化"></a> Transformer 在 QK之后，为什么要进行归一化？</h1>
<ul>
<li><strong>在输入数量较大时，softmax将几乎全部的概率分布都分配给了最大值对应的标签</strong>。也就是说<strong>极大的点积值将整个 softmax 推向梯度平缓区，使得收敛困难</strong>，<strong>梯度消失为0，造成参数更新困难</strong></li>
</ul>
<h1 id="transformer-在-qk之后softmax-对哪一维度进行计算含义是什么"><a class="markdownIt-Anchor" href="#transformer-在-qk之后softmax-对哪一维度进行计算含义是什么"></a> Transformer 在 QK之后，softmax 对哪一维度进行计算？含义是什么？</h1>
<ul>
<li>对最后一维计算 softmax 值，对某个 Q 上的序列来说，表示所有 K 上序列对其的注意力，累加在一起等于 1</li>
</ul>
<h1 id="transformer-进行-mha-时每个-head-的-token-的隐变量长度变为-ln_head"><a class="markdownIt-Anchor" href="#transformer-进行-mha-时每个-head-的-token-的隐变量长度变为-ln_head"></a> Transformer 进行 MHA 时，每个 head 的 token 的隐变量长度变为 L/n_head?</h1>
<ul>
<li>Transformer 的多头注意力看上去是借鉴了 CNN 中同一卷积层内使用多个卷积核的思想，原文中使用了 8 个 head，在同一“multi-head attention”层中，输入均为“KQV”，<strong>同时</strong>进行注意力的计算，彼此之前<strong>参数不共享</strong>，最终将结果<strong>拼接</strong>起来，这样可以允许模型在<strong>不同的表示子空间里学习到相关的信息</strong></li>
<li><strong>总结</strong>：希望每个注意力头，只关注最终输出序列中一个子空间，互相<strong>独立</strong>。其核心思想在于，抽取到更加丰富的<strong>特征信息</strong></li>
</ul>
<h1 id="为什么在进行-softmax-之前需要对-attention-进行-scaled"><a class="markdownIt-Anchor" href="#为什么在进行-softmax-之前需要对-attention-进行-scaled"></a> 为什么在进行 softmax 之前需要对 attention 进行 scaled？</h1>
<ul>
<li><strong>在输入数量较大时，softmax 将几乎全部的概率分布都分配给了最大值对应的标签</strong>。也就是说极大的点积值将整个 softmax 推向梯度平缓区，使得收敛困难，<strong>梯度消失为0，造成参数更新困难</strong></li>
</ul>
<h1 id="transformer-在哪里做了权重共享为什么可以做权重共享好处是什么"><a class="markdownIt-Anchor" href="#transformer-在哪里做了权重共享为什么可以做权重共享好处是什么"></a> Transformer 在哪里做了权重共享，为什么可以做权重共享？好处是什么？</h1>
<ul>
<li><strong>Encoder 和 Decoder 间的 Embedding 层权重共享</strong>：源语言和目标语言是不一样的，但它们可以共用一张大词表，对于两种语言中共同出现的词（比如：数字，标点等等）可以得到更好的表示，而且对于Encoder和Decoder，<strong>嵌入时都只有对应语言的embedding会被激活</strong>，因此是可以共用一张词表做权重共享的</li>
<li><strong>Decoder 中 Embedding 层和 FC 层权重共享</strong>：Embedding 层参数维度是：(v, d)，FC 层参数维度是：(d, v)，其中v是词表大小，d是embedding维度，转置后直接共用</li>
</ul>
<h1 id="如何将-trasformer-应用到计算机视觉"><a class="markdownIt-Anchor" href="#如何将-trasformer-应用到计算机视觉"></a> 如何将 trasformer 应用到计算机视觉？</h1>
<ul>
<li>身心兼备：所谓“身心兼备”，就是使用 trasformer 的结果，将计算机视觉问题转为序列学习问题。对于一张图片，每4x4相邻的像素为一个 Patch，然后在 channel 方向展平（flatten）。假设输入的是 RGB 三通道图片，那么每个 patch 就有4x4=16个像素，然后每个像素有 R、G、B 三个值所以展平后是16x3=48，所以通过 Patch Partition 后图像 shape 由 [H, W, 3]变成了[H/4, W/4, 48]，如 vit、SETR、DETR 等</li>
<li>只取灵魂：所谓“只取灵魂”，就是只使用自注意力机制，不使用trasformer结构，如OCRNet</li>
</ul>
<h1 id="transformer-rnn-cnn-网络的区别"><a class="markdownIt-Anchor" href="#transformer-rnn-cnn-网络的区别"></a> Transformer 、RNN、CNN 网络的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/transformer-20230408151724.png" alt="" /></li>
<li><strong>复杂度</strong>：self-attention layer 用常数次 O ( 1 ) 的操作连接所有位置，而 recurrent layer 需要O (n)顺序操作。在计算复杂度方面，当序列长度 N 小于表示维度 D 时，self-attention layers 比 recurrent layers 更快。为了提高包含很长序列的任务的计算性能，可以仅在以输出位置为中心，半径为r的的领域内使用self-attention</li>
<li><strong>并行化</strong>：Transformer 可以并行训练，RNN 必须挨个时间步训练</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/nocml/article/details/103082600">Transformer(一)–论文翻译：Attention Is All You Need 中文版_transformer论文翻译_吕秀才的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/366993073">additive attention与dot-product attention - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/368243631">Transformer的模型和代码解析 - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/487766088">为什么Transformer要用LayerNorm？ - 知乎</a></li>
<li><a href="https://blog.csdn.net/qq_44766883/article/details/112008655">机器学习-31-Transformer详解以及我的三个疑惑和解答_transformer不收敛_迷雾总会解的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/157884112">1分钟|聊聊Transformer的并行化 - 知乎</a></li>
<li><a href="https://blog.csdn.net/qq_42599237/article/details/123383691">https://blog.csdn.net/qq_42599237/article/details/123383691</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/97451231">https://zhuanlan.zhihu.com/p/97451231</a></li>
<li><a href="https://www.zhihu.com/question/593941226">transformer为什么有利于并行计算？ - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/319339652">transformer中为什么使用不同的K 和 Q， 为什么不能使用同一个值？ - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/369075515">在测试或者预测时，Transformer里decoder为什么还需要seq mask？ - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/350369171">transformer中multi-head attention中每个head为什么要进行降维？ - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/347678607#:~:text=%E4%B8%BA%E4%BB%80%E4%B9%88%20Transformer%20%E9%9C%80%E8%A6%81%20positional%20encoding%20%EF%BC%9F%20%E5%9C%A8%E6%B2%A1%E6%9C%89,Position%20embedding%20%E7%9A%84%20Transformer%20%E6%A8%A1%E5%9E%8B%E5%B9%B6%E4%B8%8D%E8%83%BD%E6%8D%95%E6%8D%89%E5%BA%8F%E5%88%97%E7%9A%84%E9%A1%BA%E5%BA%8F%EF%BC%8C%E4%BA%A4%E6%8D%A2%E5%8D%95%E8%AF%8D%E4%BD%8D%E7%BD%AE%E5%90%8E%20attention%20map%20%E7%9A%84%E5%AF%B9%E5%BA%94%E4%BD%8D%E7%BD%AE%E6%95%B0%E5%80%BC%E4%B9%9F%E4%BC%9A%E8%BF%9B%E8%A1%8C%E4%BA%A4%E6%8D%A2%EF%BC%8C%E5%B9%B6%E4%B8%8D%E4%BC%9A%E4%BA%A7%E7%94%9F%E6%95%B0%E5%80%BC%E5%8F%98%E5%8C%96%EF%BC%8C%E5%8D%B3%E6%B2%A1%E6%9C%89%E8%AF%8D%E5%BA%8F%E4%BF%A1%E6%81%AF%E3%80%82">如何理解Transformer论文中的positional encoding，和三角函数有什么关系？ - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/613407791">Bert/Transformer 被忽视的细节（或许可以用来做面试题） - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>Segment Anything</title>
    <url>/2023/05/20/Segment%20Anything/</url>
    <content><![CDATA[<p>SAM通过transformer将点、框、Mask、文本等prompt和图片进行编码学习，可以实现对图片任意目标的分割</p>
<a id="more"></a>
<h1 id="什么是-sam"><a class="markdownIt-Anchor" href="#什么是-sam"></a> 什么是 SAM ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAM-3.png" alt="" /></li>
<li>a)SAM 利用“图片-分割提示”实现对图片上任意目标的分割，分割提示包括：点、框、Mask、文本</li>
<li>b) SAM 首先利用 prompt encoder 编码&quot;分割提示&quot;，利用 image encoder 编码“图片”，然后通过 Mask decoder 解析输出 Mask</li>
<li>c)SAM 利用数据驱动去做模型训练，模型输出结果后再输入模型训练</li>
</ul>
<h1 id="sam-的网络结构"><a class="markdownIt-Anchor" href="#sam-的网络结构"></a> SAM 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAM.png" alt="" /></li>
<li><strong>image encoder</strong>：类似 VIT 的过程，输入 image (1,3, H, W), 输出 image_embedding (1, C, H/16, W/16)，即 (1, HW/256, C)的 tokens 表示</li>
<li><strong>mask</strong>：mask prompt，直接和image_embedding相加即可</li>
<li><strong>prompt encoder</strong>：包含3种提示的编码过程，其中点、框按位置被编码为Pos embedding(1,N,C)，文本通过clip模型被编码为Pos embedding(1,M,C)</li>
<li><strong>mask decoder</strong>：根据image_embedding和prompt encoder输出，结合IOU tokens(1,1,C)和mask tokens(1,P,C)，解析出目标mask(1,1+P+N+M, H/16, W/16)和iou(1,1+P+N+M)</li>
</ul>
<h1 id="sam-的-image-encoder"><a class="markdownIt-Anchor" href="#sam-的-image-encoder"></a> SAM 的 image encoder？</h1>
<ul>
<li>类似 VIT 的 encoder 过程，输入 image (1,3, H, W), 输出 image_embedding (1, C, H/16, W/16)，即 (1, HW/256, C)的 tokens 表示</li>
<li>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> image_encoder=ImageEncoderViT(..)</span><br><span class="line"> <span class="comment"># batched_input=&#123;List,List&#125; -&gt; torch.Size([2, 3, 1024, 1024])</span></span><br><span class="line"> input_images = torch.stack([preprocess(x[<span class="string">&quot;image&quot;</span>]) <span class="keyword">for</span> x <span class="keyword">in</span> batched_input], dim=<span class="number">0</span>) </span><br><span class="line"><span class="comment"># torch.Size([2, 3, 1024, 1024]) -&gt; torch.Size([2, 256, 64, 64])</span></span><br><span class="line"> image_embeddings = image_encoder(input_images)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="sam-的-prompt-encoder"><a class="markdownIt-Anchor" href="#sam-的-prompt-encoder"></a> SAM 的 prompt encoder?</h1>
<ul>
<li>包含3种提示的编码过程，其中点、框按位置被编码为 Pos embedding (1, N, C)，文本通过 clip 模型被编码为 Pos embedding (1, M, C)，最终输出（1,N+M,C )的稀疏编码sparse_embeddings</li>
<li><strong>point&amp;box</strong>：每个点编码为1个 pos embedding，每个 box 编码为2个 pos embedding（box 被两个点定义）<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> embed_dim=<span class="number">256</span></span><br><span class="line"> num_point_embeddings: <span class="built_in">int</span> = <span class="number">4</span>  <span class="comment"># pos/neg point + 2 box corners</span></span><br><span class="line"> point_embeddings = [nn.Embedding(<span class="number">1</span>, embed_dim) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_point_embeddings)]</span><br><span class="line"> point_embeddings = nn.ModuleList(point_embeddings)</span><br><span class="line"> not_a_point_embed = nn.Embedding(<span class="number">1</span>, embed_dim)	</span><br><span class="line"><span class="comment"># point prompt</span></span><br><span class="line">points = points + <span class="number">0.5</span>  <span class="comment"># Shift to center of pixel  </span></span><br><span class="line"><span class="comment"># 根据点位置points，在输入(1024,1024)的基础上生成pos embedding</span></span><br><span class="line"> point_embedding = pe_layer.forward_with_coords(points, input_image_size) <span class="comment">#torch.Size([1,3,2])+(1024,1024)-&gt;torch.Size([1,3,256])</span></span><br><span class="line"> <span class="comment"># 点有3类，-1表示非嵌入点，此时不使用pos embedding，0表示正样本点，1表示负样本点</span></span><br><span class="line">point_embedding[labels == -<span class="number">1</span>] = <span class="number">0.0</span></span><br><span class="line"> point_embedding[labels == -<span class="number">1</span>] += not_a_point_embed.weight</span><br><span class="line"> point_embedding[labels == <span class="number">0</span>] += point_embeddings[<span class="number">0</span>].weight</span><br><span class="line"> point_embedding[labels == <span class="number">1</span>] += point_embeddings[<span class="number">1</span>].weight</span><br><span class="line"><span class="comment"># box prompt</span></span><br><span class="line"> boxes = boxes + <span class="number">0.5</span>  <span class="comment"># Shift to center of pixel</span></span><br><span class="line"> coords = boxes.reshape(-<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>) <span class="comment"># 一个框肯定2个点</span></span><br><span class="line"> corner_embedding = pe_layer.forward_with_coords(coords, input_image_size)</span><br><span class="line"> corner_embedding[:, <span class="number">0</span>, :] += point_embeddings[<span class="number">2</span>].weight <span class="comment">#框第一个点</span></span><br><span class="line"> corner_embedding[:, <span class="number">1</span>, :] += point_embeddings[<span class="number">3</span>].weight <span class="comment">#框第二个点</span></span><br><span class="line"><span class="comment"># 汇总point、box编码</span></span><br><span class="line">sparse_embeddings = torch.empty((<span class="number">1</span>, <span class="number">0</span>, embed_dim))</span><br><span class="line">sparse_embeddings = torch.cat([sparse_embeddings, point_embeddings], dim=<span class="number">1</span>)</span><br><span class="line">sparse_embeddings = torch.cat([sparse_embeddings, box_embeddings], dim=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><strong>text</strong>：通过CLIP模型将文本编码到(1,M,C)</li>
</ul>
<h1 id="sam的mask-prompt如何处理"><a class="markdownIt-Anchor" href="#sam的mask-prompt如何处理"></a> SAM的mask prompt如何处理？</h1>
<ul>
<li>mask利用CNN输出和image_embedding(1,C,H/16,W/16)一样大小的编码，后续直接相加</li>
<li></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mask_downscaling = nn.Sequential(</span><br><span class="line">    nn.Conv2d(<span class="number">1</span>, mask_in_chans // <span class="number">4</span>, kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">    LayerNorm2d(mask_in_chans // <span class="number">4</span>),</span><br><span class="line">    activation(),</span><br><span class="line">    nn.Conv2d(mask_in_chans // <span class="number">4</span>, mask_in_chans, kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">    LayerNorm2d(mask_in_chans),</span><br><span class="line">    activation(),</span><br><span class="line">    nn.Conv2d(mask_in_chans, embed_dim, kernel_size=<span class="number">1</span>),</span><br><span class="line">)</span><br><span class="line">mask_input_size = (<span class="number">4</span> * image_embedding_size[<span class="number">0</span>], <span class="number">4</span> * image_embedding_size[<span class="number">1</span>])</span><br><span class="line">no_mask_embed = nn.Embedding(<span class="number">1</span>, embed_dim)	 </span><br><span class="line"><span class="keyword">if</span> masks <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    dense_embeddings = self._embed_masks(masks) <span class="comment"># 利用CNN生成mask embedding</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    dense_embeddings = self.no_mask_embed.weight.reshape(<span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>).expand(</span><br><span class="line">        bs, -<span class="number">1</span>, self.image_embedding_size[<span class="number">0</span>], self.image_embedding_size[<span class="number">1</span>]</span><br><span class="line">    ) <span class="comment"># 随机初始化生成mask embedding</span></span><br></pre></td></tr></table></figure>
<h1 id="sam-的-mask-decoder"><a class="markdownIt-Anchor" href="#sam-的-mask-decoder"></a> SAM 的 mask decoder?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAM-4.png" alt="" /></li>
<li><strong>输入</strong>:image_embedding(1, C, H/16, W/16)、image_embedding大小的位置编码image_pe(1, C, H/16, W/16)、稀疏提示编码sparse_prompt_embeddings(1, N, C)、密集提示编码dense_prompt_embeddings(1,C,H/16, W/16)</li>
<li><strong>(1)tansformer整合所有编码</strong>:将image_embedding+dense_prompt_embeddings视为transformer encoder的k,image_pe视为pos embedding,sparse_prompt_embeddings视为decoder的q，并且参考VIT的class_token，不直接使用sparse_prompt_embeddings输出作为最终结果，而是另外生成1个iou token和P个mask token作为最终结果，所以输入transformer decoder的token变为(1,1+P+N,C)，经过transformer后decoder和encoder分别输出hs(1,1+P+N,C), src(1,HW/256,C)；<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> num_multimask_outputs=<span class="number">3</span></span><br><span class="line">transformer_dim=<span class="number">256</span></span><br><span class="line"> iou_token = nn.Embedding(<span class="number">1</span>, transformer_dim)</span><br><span class="line"> num_mask_tokens = num_multimask_outputs + <span class="number">1</span></span><br><span class="line"> mask_tokens = nn.Embedding(num_mask_tokens, transformer_dim)</span><br><span class="line"> <span class="comment"># Concatenate output tokens</span></span><br><span class="line"> output_tokens = torch.cat([iou_token.weight, mask_tokens.weight], dim=<span class="number">0</span>) <span class="comment"># torch.Size([5, 256])</span></span><br><span class="line"> output_tokens = output_tokens.unsqueeze(<span class="number">0</span>).expand(sparse_prompt_embeddings.size(<span class="number">0</span>), -<span class="number">1</span>, -<span class="number">1</span>) <span class="comment"># torch.Size([1, 5, 256])</span></span><br><span class="line"> tokens = torch.cat((output_tokens, sparse_prompt_embeddings), dim=<span class="number">1</span>) <span class="comment"># torch.Size([1, 12, 256])</span></span><br><span class="line"> <span class="comment"># Expand per-image data in batch direction to be per-mask</span></span><br><span class="line"> src = torch.repeat_interleave(image_embeddings, tokens.shape[<span class="number">0</span>], dim=<span class="number">0</span>) <span class="comment"># torch.Size([1, 256, 64, 64]) -》torch.Size([1, 256, 64, 64])</span></span><br><span class="line"> src = src + dense_prompt_embeddings <span class="comment"># torch.Size([1, 256, 64, 64])+torch.Size([1, 256, 64, 64])</span></span><br><span class="line"> pos_src = torch.repeat_interleave(image_pe, tokens.shape[<span class="number">0</span>], dim=<span class="number">0</span>) <span class="comment"># torch.Size([1, 256, 64, 64])</span></span><br><span class="line"> b, c, h, w = src.shape</span><br><span class="line"> <span class="comment"># Run the transformer torch.Size([1, 256, 64, 64])，torch.Size([1, 256, 64, 64])，torch.Size([1, 12, 256])</span></span><br><span class="line"> hs, src = transformer(src, pos_src, tokens) <span class="comment"># torch.Size([1, 12, 256]) torch.Size([1, 4096, 256]) = q,k</span></span><br><span class="line"> iou_token_out = hs[:, <span class="number">0</span>, :] <span class="comment"># torch.Size([1, 256])</span></span><br><span class="line"> mask_tokens_out = hs[:, <span class="number">1</span> : (<span class="number">1</span> + num_mask_tokens), :] <span class="comment"># torch.Size([1, 4, 256])</span></span><br></pre></td></tr></table></figure>
</li>
<li><strong>(2)生成Mask预测</strong>：取hs的第1-P个token作为预测结果mask_tokens_out，src经过反卷积上采样4倍，输出upscaled_embedding(1,HW/16,C’)，mask_tokens_out经过MLP操作，将隐变量长度变为C’,即输出hyper_in(1,P,C’)，hyper_in与upscaled_embedding点乘后输出masks(1,P,HW/16)，表示p个mask<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.output_upscaling = nn.Sequential(</span><br><span class="line">    nn.ConvTranspose2d(transformer_dim, transformer_dim // <span class="number">4</span>, kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">    LayerNorm2d(transformer_dim // <span class="number">4</span>),</span><br><span class="line">    activation(),</span><br><span class="line">    nn.ConvTranspose2d(transformer_dim // <span class="number">4</span>, transformer_dim // <span class="number">8</span>, kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>),</span><br><span class="line">    activation(),</span><br><span class="line">)</span><br><span class="line">self.output_hypernetworks_mlps = nn.ModuleList(</span><br><span class="line">    [MLP(transformer_dim, transformer_dim, transformer_dim // <span class="number">8</span>, <span class="number">3</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.num_mask_tokens)])	  </span><br><span class="line"><span class="comment"># Upscale mask embeddings and predict masks using the mask tokens</span></span><br><span class="line">src = src.transpose(<span class="number">1</span>, <span class="number">2</span>).view(b, c, h, w) <span class="comment"># torch.Size([1, 256, 64, 64])</span></span><br><span class="line">upscaled_embedding = self.output_upscaling(src) <span class="comment"># torch.Size([1, 256, 64, 64]) -》torch.Size([1, 32, 256, 256])</span></span><br><span class="line">hyper_in_list: List[torch.Tensor] = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.num_mask_tokens):</span><br><span class="line">    hyper_in_list.append(self.output_hypernetworks_mlps[i](mask_tokens_out[:, i, :])) <span class="comment"># torch.Size([1, 32])x4</span></span><br><span class="line">hyper_in = torch.stack(hyper_in_list, dim=<span class="number">1</span>) <span class="comment"># torch.Size([1, 4, 32])</span></span><br><span class="line">b, c, h, w = upscaled_embedding.shape <span class="comment"># torch.Size([1, 32, 256, 256])</span></span><br><span class="line"><span class="comment"># 运算符@表示矩阵的点乘</span></span><br><span class="line">masks = (hyper_in @ upscaled_embedding.view(b, c, h * w)).view(b, -<span class="number">1</span>, h, w) <span class="comment"># torch.Size([1, 4, 32]) @ torch.Size([1, 32, 256, 256]) -&gt; torch.Size([1, 4, 256, 256])</span></span><br></pre></td></tr></table></figure>
</li>
<li><strong>(3)生成 IOU 预测</strong>：取 hs 的第1个 token 作为预测结果 iou_token_out，然后使用 MLP 将隐变量长度变为 P，表示 P 个mask 的 iou 预测<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">iou_prediction_head = MLP(transformer_dim, iou_head_hidden_dim, num_mask_tokens, iou_head_depth)</span><br><span class="line"><span class="comment"># Generate mask quality predictions</span></span><br><span class="line">iou_pred = iou_prediction_head(iou_token_out) <span class="comment"># torch.Size([1,256]) -&gt; torch.Size([1, 4])	  </span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="sam-如何直接分割所有目标"><a class="markdownIt-Anchor" href="#sam-如何直接分割所有目标"></a> SAM 如何直接分割所有目标？</h1>
<ul>
<li>以原图所有cell作为point prompt输入，输出Mask和iou后，通过iou阈值过滤mask,得到所有目标的mask</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/621040230">模型方法—真的分割任何东西(Segment Anything) - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
        <tag>分割</tag>
      </tags>
  </entry>
  <entry>
    <title>TOOD：Task-aligned One-stage Object Detection</title>
    <url>/2023/04/26/TOOD%EF%BC%9ATask-aligned%20One-stage%20Object%20Detection/</url>
    <content><![CDATA[<p>通过设计新的预测头 T-Head 和样本对齐损失 (TAL)，实现分类、定位分支的对齐，使得两个分支的最佳锚框更加接近。这样可以减少“低分类概率+准确位置预测”、“高概率预测+不太准确预测”这两种情况目标的漏检</p>
<a id="more"></a>
<h1 id="什么是-tood"><a class="markdownIt-Anchor" href="#什么是-tood"></a> 什么是 TOOD ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/TOOD-20230514144236.png" alt="" /></li>
<li><strong>TSS (Training Sample Selection)</strong>：<strong>由于分类和定位的学习机制不同，两个任务学习到的特征的空间分布可能不同，当使用两个单独的分支进行预测时，会导致一定程度的错位</strong>，如图“result”栏第一行所示，其中红色、绿色块表示分类、回归的最佳锚点，TSS 检测器识别“餐桌”对象时，分类锚点位置向上偏离真实最佳中心（甚至达到披萨的中心），目标检测锚点位置向下偏离真实最佳中心</li>
<li><strong>TOOD</strong>：通过设计新的预测头 T-Head 和样本对齐损失 (TAL)，实现分类、定位分支的对齐，使得两个分支的最佳锚框更加接近 (Score/IOU 从上往下看，确实调整了激活中心)。这样可以减少“低分类概率+准确位置预测”、“高概率预测+不太准确预测”这两种情况目标的漏检 (因为这两类目标可能被 NMS 过滤，TOOD 对齐后，这类目标变成“高分类概率+准确位置预测”)</li>
</ul>
<h1 id="tood-的网络结构"><a class="markdownIt-Anchor" href="#tood-的网络结构"></a> TOOD 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/TOOD-20230514144326.png" alt="" /></li>
<li>T-head 首先对 FPN 特征进行预测，然后 TAL 对这两个任务给出一个一致性的度量，最后 T-head 会自动的调整分类输出和定位输出</li>
</ul>
<h1 id="tood-的-task-aligned-head-t-head"><a class="markdownIt-Anchor" href="#tood-的-task-aligned-head-t-head"></a> TOOD 的 Task-aligned Head (T-Head)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/TOOD-20230514144347.png" alt="" /></li>
<li><strong>a)Paraller head</strong>：直接基于 FPN 特征输出每个 grid 的分类概率和 box 预测</li>
<li><strong>b) Task-algined head (T-Head)</strong>：首先使用 TAP 对 FPN 特征进行<strong>对齐</strong>，然后输出每个 grid 的分类概率和 box 预测</li>
<li><strong>c）Task-algined predictor (TAP)</strong>：基于 FPN 特征，如果输出对齐后的分类 heatmap，则输出 (H, W, 80)，如果输出对齐后的定位特征，则输出 (H, W, 4)，图示将两个过程融合在一张图上，实际包含两个结构</li>
</ul>
<h1 id="tood-的-t-head-和-tap"><a class="markdownIt-Anchor" href="#tood-的-t-head-和-tap"></a> TOOD 的 T-Head 和 TAP?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/TOOD-20230514144347.png" alt="" /></li>
<li>T-head 和 TAP 的目标是对齐分类、定位两个分支的锚框位置</li>
<li><strong>计算 M/O</strong>：按照以下公式从 FPN 特征计算得到，其中 M (H, W, 1) 用于对齐分类 headmap，O (H, W, 8) 用于对齐定位 headmap，<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>M</mi><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>n</mi><msub><mi>v</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>n</mi><msub><mi>v</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>O</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>n</mi><msub><mi>v</mi><mn>4</mn></msub><mo stretchy="false">(</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>n</mi><msub><mi>v</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mi>i</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{gathered}M=\sigma(c o n v_{2}(\delta(c o n v_{1}(X^{i n t e r})))) \\O=conv_4(\delta(conv_3(X^{inter})))\end{gathered}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.069328em;vertical-align:-1.284664em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.784664em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-2.375336em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.284664em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><strong>对齐分类 headmap</strong>：基于 M 调整即可<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>P</mi><mrow><mi>a</mi><mi>l</mi><mi>i</mi><mi>g</mi><mi>n</mi><mi>n</mi></mrow></msup><mo>=</mo><msqrt><mrow><mi>P</mi><mo>×</mo><mi>M</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">P^{alignn}=\sqrt{P\times M}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.10612500000000002em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.933875em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-2.893875em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10612500000000002em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><strong>对齐定位 headmap</strong>: 原始定位输出是 (H, W, 4)，结合 O (H, W, 8)输出对齐后的位置，8 是因为用于定位的 4 个输出都有 x, y 两个方向的调整。公式可知，8 的偶数位置通道用于计算 i，奇数位置通道用于计算 j<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>B</mi><mrow><mi>a</mi><mi>l</mi><mi>i</mi><mi>g</mi><mi>n</mi><mi>n</mi></mrow></msup><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>B</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mn>2</mn><mo>×</mo><mi>c</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>j</mi><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mn>2</mn><mo>×</mo><mi>c</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B^{alignn}(i,j,c)=B(i+O(i,j,2\times c),j+O(i,j,2\times c+1),c)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
<h1 id="tood-的样本分配策略"><a class="markdownIt-Anchor" href="#tood-的样本分配策略"></a> TOOD 的样本分配策略?</h1>
<ul>
<li><strong>Anchor 对齐度量</strong>：根据分类的预测概率 s 和定位预测 IOU 计算以下值，该值表示预测与 gt 的相近程度，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 是自定义参数，控制两者占比<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>t</mi><mo>=</mo><msup><mi>s</mi><mi>α</mi></msup><mo>×</mo><msup><mi>u</mi><mi>β</mi></msup></mrow><annotation encoding="application/x-tex">t=s^\alpha\times u^\beta
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><strong>样本分配</strong>：对于每个 gt，我们选择 m 个具有最大 t 值的 anchor 作为正样本点，其余的为负样本</li>
</ul>
<h1 id="tood-的损失函数-tal"><a class="markdownIt-Anchor" href="#tood-的损失函数-tal"></a> TOOD 的损失函数 (TAL)？</h1>
<ul>
<li><strong>分类损失</strong>：为了显式的增加对齐的 anchor 的得分，减少不对齐的 anchor 的得分，用 t 来代替正样本 anchor 的标签。我们发现，当α和β变换导致正样本的标签变小之后，模型无法收敛，因此，因此使用了归一化的 t，这个归一化有两个性质：1）确保可以有效学习困难样本，2）保持原来的排序。最终借鉴 focal loss 的思想得到分类损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{cls}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msub></msubsup><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>t</mi><mo>^</mo></mover><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>p</mi><mi>a</mi></mrow></msub></msubsup><mi mathvariant="normal">∣</mi><msub><mover accent="true"><mi>t</mi><mo>^</mo></mover><mi>i</mi></msub><mo>−</mo><msub><mi>s</mi><mi>i</mi></msub><msup><mi mathvariant="normal">∣</mi><mi>γ</mi></msup><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>t</mi><mo>^</mo></mover><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mi>g</mi></mrow></msub></msubsup><msup><msub><mi>s</mi><mi>j</mi></msub><mi>γ</mi></msup><mi>B</mi><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>j</mi></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}L_{cls\_pos}=\sum\limits_{i=1}^{N_{pos}}BCE(s_i,\hat{t}_i) \\ L_{cls}=\sum_{i=1}^{N_{pa}}|\hat{t}_{i}-s_{i}|^{\gamma}BCE(s_{i},\hat{t}_{i})+\sum_{j=1}^{N_{nameg}}{s_{j}}^{\gamma}BCE(s_{j},0),\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.0477479999999995em;vertical-align:-1.7738739999999993em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.273874em;"><span style="top:-4.273874em;"><span class="pstrut" style="height:3.6366560000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6366560000000003em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-4.058325em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.275754000000001em;"><span class="pstrut" style="height:3.6366560000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.020451em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2421200000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.020451em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2421200000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7738739999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li><strong>定位损失</strong>：使用归一化的 t 来对 GIoU loss 进行了加权<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow></msub></munderover><msub><mover accent="true"><mi>t</mi><mo>^</mo></mover><mi>i</mi></msub><msub><mi>L</mi><mrow><mi>G</mi><mi>I</mi><mi>o</mi><mi>U</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>b</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>b</mi><mo>ˉ</mo></mover><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{reg}=\sum_{i=1}^{N_{pos}}\hat{t}_{i}L_{GIoU}(b_{i},\bar{b}_{i})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2143250000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9366560000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.4083250000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
<h1 id="tood-的-t-head-和-tal-的作用"><a class="markdownIt-Anchor" href="#tood-的-t-head-和-tal-的作用"></a> TOOD 的 T-Head 和 TAL 的作用？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/TOOD-20230514144549.png" alt="" /></li>
<li><strong>由于分类和定位的学习机制不同，两个任务学习到的特征的空间分布可能不同，当使用两个单独的分支进行预测时，会导致一定程度的错位</strong>，第一行可以看出分类、定位的最佳定位位置都是分开的，所以其 Score 和 IOU 都是偏低的</li>
<li>使用 T-Head 和 TAL 后，分类、定位的最佳定位位置非常接近，其 Score 和 IOU 都更高</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/405271228">[论文解读]51.1AP，TOOD: Task-aligned One-stage Object Detection - 知乎</a></li>
<li><a href="https://www.cnblogs.com/wxkang/p/15658375.html">ICCV2021 | TOOD：任务对齐的单阶段目标检测 - CV技术指南（公众号） - 博客园</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOv7：Trainable bag-of-freebies sets new state-of-the-art for real-time object detectors</title>
    <url>/2023/04/18/YOLOv7%EF%BC%9ATrainable%20bag-of-freebies%20sets%20new%20state-of-the-art%20for%20real-time%20object%20detectors/</url>
    <content><![CDATA[<p>YOLOv7通过扩展高效聚合网络(E-ELAN)、一致性的模型缩放策略、模型重参数化和动态标签分配，实现更高的精度</p>
<a id="more"></a>
<h1 id="什么是-yolov7"><a class="markdownIt-Anchor" href="#什么是-yolov7"></a> 什么是 YOLOv7?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142002.png" alt="YOLOv7-20230408142002" /></li>
<li>YOLOv7 是 YOLO 系列新一代的实时目标检测算法，通过扩展高效聚合网络(E-ELAN)、一致性的模型缩放策略、模型重参数化和动态标签分配，实现更高的精度</li>
<li>YOLOv7仍然是一种anchor base的目标检测算法、采用多head检测、动态样本分配</li>
</ul>
<h1 id="yolov7的网络结构"><a class="markdownIt-Anchor" href="#yolov7的网络结构"></a> YOLOv7的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142002-1.png" alt="" /></li>
<li>YOLOv7 由 2 个部分组成，backbone 和 head，其中 head 包含 neck 部分</li>
<li>输入640x640 的图片，得到 3 层不同 size 的特征，然后经过 RepVGG block 和 conv，最后输出目标的类别、置信度和边框进行</li>
<li>YOLOv7 采用 3 个检测 head，每个网格使用 3 种 anchor</li>
</ul>
<h1 id="yolov7网络结构的backbone部分"><a class="markdownIt-Anchor" href="#yolov7网络结构的backbone部分"></a> YOLOv7网络结构的backbone部分？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142003.png" alt="" /></li>
<li><strong>CBS：</strong> 主要是由 Conv+BN+SiLU，颜色表示卷积使用不同的 size、stride <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142004.png" alt="" /></li>
<li><strong>ELAN：</strong> 由多个 CBS 组成，其输入输出特征大小保持不变，通道数在开始的两个 CBS 会有变化，后面的几个输入通道都是和输出通道保持一致的，经过最后一个 CBS 输出为需要的通道 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142004-1.png" alt="" /></li>
<li><strong>MP：</strong> 主要是分为 Maxpool 和 CBS , 其中 MP1 和 MP2 主要是通道数的比变化 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142004-2.png" alt="" /></li>
</ul>
<h1 id="yolov7网络结构的head部分"><a class="markdownIt-Anchor" href="#yolov7网络结构的head部分"></a> YOLOv7网络结构的head部分？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142005.png" alt="" /></li>
<li>head 其实就是一个 PAN 的结构，和之前的 YOLOv4，YOLOv5一样。首先对于 backbone 最后输出的 32 倍降采样特征图 C5，然后经过 SPPCSP ，通道数从 1024 变为 512。先按照 topdown 和 C4、C3 融合，得到 P3、P4 和 P5；再按 bottom-up 去和 P4、P5 做融合</li>
</ul>
<h1 id="yolov7的一致性的模型缩放策略"><a class="markdownIt-Anchor" href="#yolov7的一致性的模型缩放策略"></a> YOLOv7的一致性的模型缩放策略？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142005-1.png" alt="YOLOv7-20230408142005-1" /></li>
<li>模型缩放是一种放大或缩小己经设计好的模型，使其适合不同的计算设备的方法</li>
<li>模型缩放法通常使用不同的缩放因子，如<strong>分辨率</strong>（输入图像的大小）、<strong>深度</strong>（层数）、<strong>宽度</strong>（通道数）和<strong>阶段</strong>（特征金字塔的数量），从而在网络参数的数量、计算量、推理速度和精度方面达到良好的权衡</li>
<li>目前几乎所有的模型缩放方法都是独立分析单个缩放因子的，甚至复合缩放类别中的方法也是独立优化缩放因子的，当这些模型的深度被缩放时，将改变某些层的输入宽度。<strong>对于基于级联的模型，不能单独分析每个比例因子，必须一起考虑。以按比例放大深度为例，这样的操作将导致过渡层的输入通道和输出通道之间的比率变化，这可能会导致模型的硬件使用量减少</strong></li>
<li>当我们缩放计算块的深度因子时，还必须计算该块的输出通道的变化。然后，我们将对过渡层执行相同变化量的宽度因子缩放</li>
</ul>
<h1 id="yolov7的扩展高效聚合网络e-elan"><a class="markdownIt-Anchor" href="#yolov7的扩展高效聚合网络e-elan"></a> YOLOv7的扩展高效聚合网络(E-ELAN)?</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142006.png" alt="YOLOv7-20230408142006" /></p>
</li>
<li>
<p>图 (b) 中 CSPVoVNet 的设计是 VoVNet 的一种变体。CSPVoVNet 的架构除了考虑上述基本设计问题外，还分析了梯度路径，以使不同层的权重能够学习到更多样化的特征。上述梯度分析方法使推理更快、更准确</p>
</li>
<li>
<p>图 © 中的 ELAN 考虑了以下设计策略——“如何设计一个高效的网络？”。他们得出了一个结论：通过控制最短最长的梯度路径，更深的网络可以有效地学习和收敛</p>
</li>
<li>
<p>E-ELAN 对基数 (Cardinality) 做了扩展 (Expand)、乱序 (Shuffle)、合并 (Merge cardinality)，能在不破坏原始梯度路径的情况下，提高网络的学习能力。使用组卷积来扩展计算块的通道和基数。将对计算层的所有计算块应用相同的组参数和通道乘数。然后，每个计算块计算出的特征图会根据设置的组参数 g 被打乱成 g 个组，然后将它们连接在一起。此时，每组特征图的通道数将与原始架构中的通道数相同。最后，添加 g 组特征图来执行合并基数</p>
</li>
</ul>
<h1 id="yolov7的模型重参数化方法"><a class="markdownIt-Anchor" href="#yolov7的模型重参数化方法"></a> YOLOv7的模型重参数化方法？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142006-1.png" alt="YOLOv7-20230408142006-1" /></li>
<li>块级重参数化在训练期间将模块拆分为多个相同或不同的模块分支，在推理期间将多个分支模块集成为完全等效的模块</li>
<li>YOLOv7 发现 RepConv 中的 id 连接破坏了 ResNet 中的残差和 DenseNet中的连接，因此当具有残差或级联的卷积层被重参数化的卷积代替时，应该不使用 indentity 连接</li>
</ul>
<h1 id="yolov7的样本匹配方法"><a class="markdownIt-Anchor" href="#yolov7的样本匹配方法"></a> YOLOv7的样本匹配方法？</h1>
<ul>
<li>YOLOv7正负样本匹配前一部分与yolov5的一样后面加了simOTA来精确筛选</li>
</ul>
<h1 id="yolov7的损失函数"><a class="markdownIt-Anchor" href="#yolov7的损失函数"></a> YOLOv7的损失函数？</h1>
<ul>
<li>YOLOv5一样的损失函数</li>
</ul>
<h1 id="什么是sppcspc"><a class="markdownIt-Anchor" href="#什么是sppcspc"></a> 什么是SPPCSPC？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv7-20230408142007.png" alt="" /></li>
<li>YOLOv7中使用的SPP结构，在COCO数据集上表现优于SPPF  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SPPCSPC</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line"><span class="comment"># CSP https://github.com/WongKinYiu/CrossStagePartialNetworks</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, c1, c2, n=<span class="number">1</span>, shortcut=<span class="literal">False</span>, g=<span class="number">1</span>, e=<span class="number">0.5</span>, k=(<span class="params"><span class="number">5</span>, <span class="number">9</span>, <span class="number">13</span></span>)</span>):</span></span><br><span class="line">    <span class="built_in">super</span>(SPPCSPC, self).__init__()</span><br><span class="line">    c_ = <span class="built_in">int</span>(<span class="number">2</span> * c2 * e)  <span class="comment"># hidden channels</span></span><br><span class="line">    self.cv1 = Conv(c1, c_, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    self.cv2 = Conv(c1, c_, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    self.cv3 = Conv(c_, c_, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">    self.cv4 = Conv(c_, c_, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    self.m = nn.ModuleListnn.MaxPool2d(kernel_size=x, stride=<span class="number">1</span>, padding=x // <span class="number">2</span>) <span class="keyword">for</span> x <span class="keyword">in</span> k])</span><br><span class="line">    self.cv5 = Conv(<span class="number">4</span> * c_, c_, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    self.cv6 = Conv(c_, c_, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">    self.cv7 = Conv(<span class="number">2</span> * c_, c2, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">    x1 = self.cv4(self.cv3(self.cv1(x)))</span><br><span class="line">    y1 = self.cv6(self.cv5(torch.catx1] +m(x1) <span class="keyword">for</span> m <span class="keyword">in</span> self.m], <span class="number">1</span>)))</span><br><span class="line">    y2 = self.cv2(x)</span><br><span class="line">    <span class="keyword">return</span> self.cv7(torch.cat((y1, y2), dim=<span class="number">1</span>))</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
        <tag>one-stage</tag>
      </tags>
  </entry>
  <entry>
    <title>HSSN：Deep Hierarchical Semantic Segmentation</title>
    <url>/2023/04/11/HSSN%EF%BC%9ADeep%20Hierarchical%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>HSSN抛弃传统的每个像素进行扁平分类的思想，在借鉴层次聚类的想法后，在网络输出端增加&quot;类别树&quot;约束，使得网络学习到的特征更加鲁棒</p>
<a id="more"></a>
<h1 id="什么是-hssn"><a class="markdownIt-Anchor" href="#什么是-hssn"></a> 什么是 HSSN？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HSSN-20230408143142.png" alt="HSSN-20230408143142" /></li>
<li>人类能够在观察中识别结构化关系，使我们能够将复杂的场景分解为更简单的部分，并在多个层次上抽象视觉世界。然而，人类感知的这种分层推理能力在当前的语义分割文献中仍然在很大程度上没有得到探索。现有工作通常知道扁平化标签，并专门针对每个像素预测目标类</li>
<li>在本文中，我们讨论了分层语义分割（HSS），它旨在根据类层次结构对视觉观察进行结构化的像素级描述。我们设计了 HSSN，这是一个通用的 HSS 框架，解决了这项任务中的两个关键问题：i）如何有效地使现有的与层次结构无关的分段网络适应 HSS 设置，以及 ii）如何利用层次结构信息来规范 HSS 网络学习</li>
<li>了解决第1个问题，HSSN直接将HSS视为一个像素级多标签分类问题，因此相比于现在的分割模型只引入了极小的改动，对于第2个问题，HSSN网络首先将探索语义层次作为训练目标，这将会迫使分割结果遵从语义结构，同时，通过施加类别间的边缘约束，HSSN将会对像素映射空间进行重新构造，最终产生更好的像素表示并提升模型的效果</li>
</ul>
<h1 id="hssn-的网络结构"><a class="markdownIt-Anchor" href="#hssn-的网络结构"></a> HSSN 的网络结构？</h1>
<ul>
<li><strong>Hierarchical Semantic Segmentation Networks</strong>：这一部分确保了类别的连贯性以及一致性（推测在取类别最大值的时候会做一些额外的处理，来确保所有取到的最大值都处于同一个类别树的分支上保证类别的连贯，但是作者在正文中没给出）</li>
<li><strong>Hierarchy-Aware Segmentation Learning</strong>：
<ul>
<li><strong>pixel-wise hierarchical segmentation learning strategy</strong>：像素级层次分割学习策略，确保预测能够在层次关系上保持一致
<ul>
<li>每个像素分配的标签都应该具有层次上的一致性，因此需要遵守以下的两个原则 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HSSN-20230408143142-1.png" alt="HSSN-20230408143142-1" /></li>
<li><strong>Tree-Min Loss</strong>：如果子节点是对的，就取概率最小的节点路径（保证子节点要比父节点概率小，这条路径还没到当前的节点，也保证了之前的路径最短），如果子节点是错的，就取概率最大的节点路径（因为是错的取最大，最大最小一样的概率很小，所以就能够防止在这条路径上走下去，另外这条路径已经包括了当前的节点，或者说这条路径的最后一个节点就是当前这个节点）。相比于直接使用BCE Loss，Tree-Min Loss得出的score能确保完全符合作者设定的两个限制条件，并能够加大对不符合条件预测的惩罚</li>
<li><strong>Focal Tree-Min Loss</strong>：受到focal Loss的启发，作者在其中增加了调节因子，以便能够对困难的例子更好的学习</li>
</ul>
</li>
<li><strong>pixel-wise hierarchical representation learning strategy</strong>：像素级层次表示学习策略，确保在表示空间中能够将不同类别的表示有效地重构，从而学习到更好的表示。类似于对比学习，作者会挑选标准图、正样本、负样本三张图作为一组，通过多组计算损失，里面的参数 m 会迫使正负样本的距离超过 m <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HSSN-20230408143143.png" alt="HSSN-20230408143143" /></li>
</ul>
</li>
</ul>
<h1 id="hssn-如何更新预测分数的"><a class="markdownIt-Anchor" href="#hssn-如何更新预测分数的"></a> HSSN 如何更新预测分数的？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HSSN-20230408143143-1.png" alt="HSSN-20230408143143-1" /></li>
<li>上图是计算图像某一个像素点类别时画出的树状图，图（a）中将正确的分类路径用红色标注出来，错误的用蓝色标注（实心代表 positive class，空心代表 negative class），图（b）则显示了相对应的 BCE 损失，作者将两个不合理的点单独做了标注（在数字上添加了方框），可以看到在使用 BCE Loss 时，第二层节点的损失是差不多的，图（c）则采用了作者的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>L</mi><mrow><mi>t</mi><mi>m</mi></mrow></msup></mrow><annotation encoding="application/x-tex">L^{tm}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span></span> 损失（后面会提到，这个损失可以保证在计算时让每个点都符合作者给出的两个限制条件），能够成功地在不同类别上显示出区分性，保证模型训练的层次结构较为合理</li>
<li>假设模型直接输出是 s，更新后是 p，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">A_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">C_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 代表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的父集和子类集，第二行也可以更新为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>v</mi></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_v=max(s_u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，按照以下公式更新得到图 c 的新分数<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><msub><mi>p</mi><mi>v</mi></msub><mo>=</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">A</mi><mi>v</mi></msub></mrow></munder><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if</mtext><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>v</mi></msub><mo>=</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">C</mi><mi>v</mi></msub></mrow></munder><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">C</mi><mi>v</mi></msub></mrow></munder><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if</mtext><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}\quad p_v=\min\limits_{u\in\mathcal{A}_v}(s_u)&amp;\text{if}\hat{l}_v=1,\\ 1-p_v=\min\limits_{u\in\mathcal{C}_v}(1-s_u)=1-\max\limits_{u\in\mathcal{C}_v}(s_u)&amp;\text{if}\hat{l}_v=0,\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.7048620000000003em;vertical-align:-1.6024310000000002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.102431em;"><span style="top:-4.102431em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.05834em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.05834em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6024310000000002em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.102431em;"><span style="top:-4.102431em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6024310000000002em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li><strong>总结</strong>：在父节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span> 往下辨别子节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 时，如果子节点是对的，就取概率最小的节点路径（保证子节点要比父节点概率小，这条路径还没到当前的节点，也保证了之前的路径最短），如果子节点是错的，就取概率最大的节点路径（因为是错的取最大，最大最小一样的概率很小，所以就能够防止在这条路径上走下去，另外这条路径已经包括了当前的节点，或者说这条路径的最后一个节点就是当前这个节点）</li>
</ul>
<h1 id="hssn-如何强制预测符合类别层次关系的"><a class="markdownIt-Anchor" href="#hssn-如何强制预测符合类别层次关系的"></a> HSSN 如何强制预测符合类别层次关系的？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HSSN-20230408143143.png" alt="HSSN-20230408143143" /></li>
<li>挑选标准图、正样本、负样本三张图作为一组，通过多组计算损失，里面的参数 m 会迫使正负样本的距离超过 m，从而使得损失为0<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">T</mi><mi mathvariant="normal">T</mi></mrow></msup><mo stretchy="false">(</mo><mi mathvariant="bold-italic">i</mi><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>+</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>−</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">{</mo><mo stretchy="false">⟨</mo><mi mathvariant="bold-italic">i</mi><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>+</mo></msup><mo stretchy="false">⟩</mo><mo>−</mo><mo stretchy="false">⟨</mo><mi mathvariant="bold-italic">i</mi><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>−</mo></msup><mo stretchy="false">⟩</mo><mo>+</mo><mi>m</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">}</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathcal{L}^{\mathrm{TT}}(\boldsymbol{i},\boldsymbol{i}^+,\boldsymbol{i}^-)=\max\{\langle\boldsymbol{i},\boldsymbol{i}^+\rangle-\langle\boldsymbol{i},\boldsymbol{i}^-\rangle+m,0\},
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span><span class="mord mathrm mtight">T</span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104491em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mopen">⟨</span><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.104491em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">}</span><span class="mpunct">,</span></span></span></span></span></p>
</li>
</ul>
<h1 id="hssn-的-tml-损失函数"><a class="markdownIt-Anchor" href="#hssn-的-tml-损失函数"></a> HSSN 的 TML 损失函数？</h1>
<ul>
<li><strong>Tree-Min Loss</strong>：如果子节点是对的，就取概率最小的节点路径（保证子节点要比父节点概率小，这条路径还没到当前的节点，也保证了之前的路径最短），如果子节点是错的，就取概率最大的节点路径（因为是错的取最大，最大最小一样的概率很小，所以就能够防止在这条路径上走下去，另外这条路径已经包括了当前的节点，或者说这条路径的最后一个节点就是当前这个节点）。相比于直接使用 BCE Loss，Tree-Min Loss 得出的 score 能确保完全符合作者设定的两个限制条件，并能够加大对不符合条件预测的惩罚<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi mathvariant="script">L</mi><mrow><mi mathvariant="monospace">T</mi><mi mathvariant="monospace">M</mi></mrow></msup><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>v</mi><mo>∈</mo><mi mathvariant="script">V</mi></mrow></munder><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>v</mi><mo>∈</mo><mi mathvariant="script">V</mi></mrow></munder><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">A</mi><mi>v</mi></msub></mrow></munder><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>−</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">C</mi><mi>v</mi></msub></mrow></munder><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\mathcal{L}^{\mathtt{TM}}(p)&amp;=\sum\limits_{v\in\mathcal{V}}-\hat{l}_v\log(p_v)-(1-\hat{l}_v)\log(1-p_v),\\ &amp;=\sum\limits_{v\in\mathcal{V}}-\hat{l}_v\log(\min_{u\in\mathcal{A}_v}(s_u))-\\ &amp;(1-\hat{l}_v)\log(1-\max_{u\in\mathcal{C}_v}(s_u)).\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.445733em;vertical-align:-3.4728665em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9728665em;"><span style="top:-5.9728665em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.840777em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathtt mtight">T</span><span class="mord mathtt mtight">M</span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span><span style="top:-3.3011554999999997em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"></span></span><span style="top:-0.7215695000000002em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4728665em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9728665em;"><span style="top:-5.9728665em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">V</span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-3.3011554999999997em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">V</span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord">−</span></span></span><span style="top:-0.7215695000000002em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.05834em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4728665em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><strong>Focal Tree-Min Loss</strong>：受到 focal Loss 的启发，作者在其中增加了调节因子，以便能够对困难的例子更好的学习<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">T</mi><mi mathvariant="normal">M</mi></mrow></msup><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>v</mi><mo>∈</mo><mi mathvariant="script">P</mi></mrow></munder><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>v</mi></msub><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mi>v</mi></msub><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>v</mi><mo>∈</mo><mi mathvariant="script">V</mi></mrow></munder><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mo><mi mathvariant="normal">min</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">A</mi><mi>v</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mo><mi mathvariant="normal">min</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi>A</mi><mi>v</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>l</mi><mo>^</mo></mover><mi>v</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">C</mi><mi>v</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>u</mi><mo>∈</mo><msub><mi mathvariant="script">C</mi><mi>v</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>s</mi><mi>u</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\mathcal{L}^{\mathrm{TM}}(p)=\sum\limits_{v\in\mathcal{P}}-\hat{l}_v(1-p_v)^\gamma\log(p_v)-(1-\hat{l}_v)(p_v)^\gamma\log(1-p_v),\\ =\sum\limits_{v\in\mathcal{V}}-\hat{l}_v(1-\operatorname*{min}_{u\in\mathcal{A}_v}(s_u))^\gamma\log(\operatorname*{min}_{u\in A_v}(s_u))-(1-\hat{l}_v)(\max_{u\in\mathcal{C}_v}(s_u))^\gamma\log(1-\max_{u\in\mathcal{C}_v}(s_u)),\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.9591719999999997em;vertical-align:-1.7295859999999998em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.229586em;"><span style="top:-4.271706em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span><span class="mord mathrm mtight">M</span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.750005em;"><span style="top:-2.105664em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">P</span></span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.021706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.29212em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.750005em;"><span style="top:-2.105664em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">V</span></span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.021706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mop"><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.05834em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.05834em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7295859999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="hssn-的-ttl-损失函数"><a class="markdownIt-Anchor" href="#hssn-的-ttl-损失函数"></a> HSSN 的 TTL 损失函数？</h1>
<ul>
<li>挑选标准图、正样本、负样本三张图作为一组，通过多组计算损失，里面的参数 m 会迫使正负样本的距离超过 m，从而使得损失为0<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">T</mi><mi mathvariant="normal">T</mi></mrow></msup><mo stretchy="false">(</mo><mi mathvariant="bold-italic">i</mi><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>+</mo></msup><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>−</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">{</mo><mo stretchy="false">⟨</mo><mi mathvariant="bold-italic">i</mi><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>+</mo></msup><mo stretchy="false">⟩</mo><mo>−</mo><mo stretchy="false">⟨</mo><mi mathvariant="bold-italic">i</mi><mo separator="true">,</mo><msup><mi mathvariant="bold-italic">i</mi><mo>−</mo></msup><mo stretchy="false">⟩</mo><mo>+</mo><mi>m</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">}</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathcal{L}^{\mathrm{TT}}(\boldsymbol{i},\boldsymbol{i}^+,\boldsymbol{i}^-)=\max\{\langle\boldsymbol{i},\boldsymbol{i}^+\rangle-\langle\boldsymbol{i},\boldsymbol{i}^-\rangle+m,0\},
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span><span class="mord mathrm mtight">T</span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104491em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mopen">⟨</span><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.104491em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">i</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.854491em;"><span style="top:-3.14616em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">}</span><span class="mpunct">,</span></span></span></span></span></p>
</li>
</ul>
<p>参考：<br />
<a href="https://zhuanlan.zhihu.com/p/551064469">Papers - Deep Hierarchical Semantic Segmentation - 知乎</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>EAST：An Efficient and Accurate Scene Text Detector</title>
    <url>/2023/03/25/EAST%EF%BC%9AAn%20Efficient%20and%20Accurate%20Scene%20Text%20Detector/</url>
    <content><![CDATA[<p>EAST基于FCN输出，对每个grid进行文本行预测，可实现旋转矩形框、任意四边形框的预测</p>
<a id="more"></a>
<h1 id="什么是-east"><a class="markdownIt-Anchor" href="#什么是-east"></a> 什么是 EAST ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EAST-20230408144126.png" alt="EAST-20230408144126" /></li>
<li>（a）、（b）、（c）、（d）都是几种常见 stat-of-the-art 的文本检测过程，算法思想遵循之前 two-stage 的方法，一般都需要先提出候选框，过滤后对剩下的候选框要进行回归操作得出更精细的边框信息，然后再合并候选框等</li>
<li><strong>EAST</strong>基于 FCN 输出特征，类似 anchor-free 的目标检测模型，预测每个 grid 的代表的文本行信息，然后使用 NMS（非极大值抑制）合并预测后的信息，可实现矩形、选择矩阵和四边形的文本检测，不能实现弯曲文本的检测</li>
</ul>
<h1 id="east-的网络结构"><a class="markdownIt-Anchor" href="#east-的网络结构"></a> EAST 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EAST-20230408144126-1.png" alt="EAST-20230408144126-1" /></li>
<li><strong>FCN 特征提取</strong>：通过<strong>特征提取</strong>和<strong>特征融合</strong>两个步骤，最后取 C 2 特征输入预测头</li>
<li><strong>预测结果的输出层</strong>：假设 C 2 特征大小为 CHW，对于 HW 的每个 grid 输出 2 个分支，第一个分支是置信度 (1)，第二个分支是框位置，框位置如果是旋转矩形，则输出 4 (xyxy)+1（angle），如果是任意的四边形, 则输出 8 (xy * 4)</li>
</ul>
<h1 id="east-的标签分配"><a class="markdownIt-Anchor" href="#east-的标签分配"></a> EAST 的标签分配？</h1>
<ul>
<li>检测 head 没有设置 anchor，直接按映射位置确定正样本，文本行比较大，可以按照多正样本匹配</li>
</ul>
<h1 id="east-的标签生成"><a class="markdownIt-Anchor" href="#east-的标签生成"></a> EAST 的标签生成？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EAST-20230408144127.png" alt="EAST-20230408144127" /></li>
<li><strong>垂直或水平矩阵框 (AABB)</strong>：只需要 4 个值就可描述；<strong>旋转矩形框 (RBOX)</strong> ： AABB 的基础上增加角度，共 5 个值描述；<strong>任意四边形（QUAD）</strong>：需要 4 个点 8 个值去描述</li>
</ul>
<h1 id="east-的损失函数"><a class="markdownIt-Anchor" href="#east-的损失函数"></a> EAST 的损失函数？</h1>
<ul>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>L</mi><mi mathvariant="normal">s</mi></msub><mo>+</mo><msub><mi>λ</mi><mi mathvariant="fraktur">g</mi></msub><msub><mi>L</mi><mi mathvariant="fraktur">g</mi></msub></mrow><annotation encoding="application/x-tex">L=L_\mathrm{s}+\lambda_\mathfrak{g}L_\mathfrak{g} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9767819999999999em;vertical-align:-0.282342em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18273799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathfrak mtight">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.282342em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18273799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathfrak mtight">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.282342em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><strong>分割损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">L_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong>：使用 blance 的交叉熵</li>
<li><strong>位置损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">L_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></strong>：直接使用 L 1 或者 L 2 损失去回归文本区域将导致损失偏差朝更大更长, 所以使用 IOU loss 监督 AABB 或 RBOX 类型框的位置；对于 QUAD 类型的回归框，使用尺度归一化的 smooth L 1 损失</li>
</ul>
<h1 id="east-如何解析模型输出"><a class="markdownIt-Anchor" href="#east-如何解析模型输出"></a> EAST 如何解析模型输出</h1>
<ul>
<li>模型输出包括 2 部分，1）score map：检测框的置信度，1 个参数；2）text boxes：对于检测形状为 RBOX，检测框的位置（x, y, w, h）+旋转角度 (angle)，5 个参数；对于检测形状为 QUAD，则输出任意四边形检测框的位置坐标，(x 1, y 1), (x 2, y 2), (x 3, y 3), (x 4, y 4)，8 个参数</li>
<li>取 topK 的 score map 对应的预测框，然后采用 Locality-Aware NMS 过滤这些预测框，得到最终结果</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://cloud.tencent.com/developer/article/1542875">05. OCR学习路径之文本检测（下）EAST算法简介 - 腾讯云开发者社区-腾讯云</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>文本检测</tag>
      </tags>
  </entry>
  <entry>
    <title>SAST：A Single-Shot Arbitrarily-Shaped Text Detector based on Context Attended Multi-Task Learning</title>
    <url>/2023/03/16/SAST%EF%BC%9AA%20Single-Shot%20Arbitrarily-Shaped%20Text%20Detector%20based%20on%20Context%20Attended%20Multi-Task%20Learning/</url>
    <content><![CDATA[<p>属于EAST的演进版本，还是类似 anchor-free 的方式预测文本行，除了输出 grid 的 score +边框预测外，还输出更多的文本实例信息，比如 grid 到实例矩形四角、中心点、四边的距离，使得SAST可以检测弯曲文本行、中间有间隔的文本行</p>
<a id="more"></a>
<h1 id="什么是-sast"><a class="markdownIt-Anchor" href="#什么是-sast"></a> 什么是 SAST ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAST-20230410204412.png" alt="" /></li>
<li>属于 <a href="EAST.md">EAST</a> 的演进版本，还是类似 anchor-free 的方式预测文本行，但是除了输出 grid 的 score +边框预测外，还输出更多的文本实例信息，比如 grid 到实例矩形四角、中心点、四边的距离</li>
<li>每个 grid 更加复杂的输出，可以让 SAST 检测更为复杂场景下的文本行，比如弯曲文本行、中间有间隔的文本行</li>
</ul>
<h1 id="sast-的网络结构"><a class="markdownIt-Anchor" href="#sast-的网络结构"></a> SAST 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAST-20230410204443.png" alt="" /></li>
<li><strong>Featrue Extractor</strong>：BackBone 部分，通过类似 SegNet 的过程提取特征</li>
<li><strong>CABs</strong>：交叉注意力模块，用于整合 BackBone 的特征</li>
<li><strong>TCL map (1 xHxW)</strong>: grid 属于文本中心线像素点的概率</li>
<li><strong>TCO map (2 xHxW)</strong>: 文本中心点偏置，grid 距其所属的文本实例矩形框中心的 xy 方向距离</li>
<li><strong>TVO map (8 xHxW)</strong>: 文本四顶点偏置，grid 距其所属的文本实例矩形框四顶点的 xy 方向距离</li>
<li><strong>TBO map (4 xHxW)</strong>: 文本边界偏置，grid 距其所属的文本实例上下边界框的 xy 方向距离</li>
</ul>
<h1 id="sast-的-cab-模块"><a class="markdownIt-Anchor" href="#sast-的-cab-模块"></a> SAST 的 CAB 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAST-20230410204535.png" alt="" /></li>
<li>交叉注意力模块，用于整合 BackBone 的特征，该模块分为上下两部分，上部分构建水平方向注意力，下部分构建垂直方向注意力，整合水平方向注意力和垂直方向注意力得到<strong>全局注意力</strong></li>
</ul>
<h1 id="sast-样本制作"><a class="markdownIt-Anchor" href="#sast-样本制作"></a> SAST 样本制作？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAST-20230410204602.png" alt="" /></li>
<li><strong>a). TCL map (1 xHxW)</strong>：文本中心线区域，文本行上下边界收缩 20%后得到的区域，而左右边界仍保持不变</li>
<li><strong>b). TBO map (4 xHxW)</strong>：文本边界偏置，首先计算斜率 k 1 (v 1, v 2)与斜率 k 1 (v 4, v 3)的平均值，对于一个给定的点 P 0，可容易地计算出斜率为 (k 1+k 2)/2、过点 P 0 的直线，由此该直线与线段 (v 1, v 4)和线段 (v 2, v 3)的交点 P 1 与 P 2 很容易得出，故 P 0 的上下边界点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{upper}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{lower}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的坐标可由线段比例关系得到，整理得到 P 0 点到四边距离的 TBO 为{<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mn>0</mn><mi>x</mi></msubsup><mo>−</mo><msubsup><mi>P</mi><mn>1</mn><mi>x</mi></msubsup></mrow><annotation encoding="application/x-tex">P_0^x-P_1^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.931438em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.931438em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>、 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mn>0</mn><mi>x</mi></msubsup><mo>−</mo><msubsup><mi>P</mi><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi></mrow><mi>x</mi></msubsup></mrow><annotation encoding="application/x-tex">P_0^x-P_{lower}^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.931438em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9664379999999999em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span> 、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mn>2</mn><mi>y</mi></msubsup><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mi>y</mi></msubsup></mrow><annotation encoding="application/x-tex">P_2^y-P_0^y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.048608em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.433692em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.048608em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.433692em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>P</mi><mrow><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi></mrow><mi>y</mi></msubsup><mo>−</mo><msubsup><mi>P</mi><mn>0</mn><mi>y</mi></msubsup></mrow><annotation encoding="application/x-tex">P_{upper}^y-P_0^y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.066438em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.048608em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.433692em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span></span></span></span>}</li>
<li><strong>c). TVO map (8 xHxW)</strong>：文本顶点偏置，文本最小矩形框按根据一定规则由文本标注信息计算得到，计算文本中心区域中某像素点到文本矩形框四顶点的直线距离（包括 x 方向和 y 方向），所以共计给每个 grid 生成 8 个 TVO 预测</li>
<li><strong>d). TCO map (2 xHxW)</strong>：文本中心点偏置，计算文本中心区域内某像素点到文本最小矩形框中心点的距离 (x 方向和 y 方向)</li>
</ul>
<h1 id="sast-的损失函数"><a class="markdownIt-Anchor" href="#sast-的损失函数"></a> SAST 的损失函数？</h1>
<ul>
<li></li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub><mo>=</mo><msub><mi>λ</mi><mn>1</mn></msub><msub><mi>L</mi><mrow><mi>t</mi><mi>c</mi><mi>l</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mn>2</mn></msub><msub><mi>L</mi><mrow><mi>t</mi><mi>c</mi><mi>o</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mn>3</mn></msub><msub><mi>L</mi><mrow><mi>t</mi><mi>v</mi><mi>o</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mn>4</mn></msub><msub><mi>L</mi><mrow><mi>t</mi><mi>b</mi><mi>o</mi></mrow></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">L_{total}=\lambda_1L_{tcl}+\lambda_2L_{tco}+\lambda_3L_{tvo}+\lambda_4L_{tbo},
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p>
<ul>
<li><strong>(1) TCL map:</strong> 使用 Minimizing the Dice loss 作为分割 loss, 用于描述两个轮廓的相似程度</li>
<li><strong>(2) TVO/TCO/TBO:</strong> 使用 Smooth L 1 Loss 作为几何图 geometry map 的回归 loss</li>
</ul>
<h1 id="解析-sast-的输出-1-生成文本实例"><a class="markdownIt-Anchor" href="#解析-sast-的输出-1-生成文本实例"></a> 解析 SAST 的输出 1-生成文本实例？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAST-20230410204913.png" alt="" /></li>
<li><strong>a)</strong> <strong>根据 TCL 获得文本实例包含的像素点-&gt;文本行 Mask</strong>，阈值过滤将置信率低于某值的假阳性像素点剔除，得到合适的 TCL map;</li>
<li><strong>b) 根据 TVO+NMS 获得文本实例-&gt;文本矩形框</strong>：将经过处理的 TCL map 中每个像素点，根据 TVO 文本实例顶点偏置图，得到对应的文本矩形框四顶点坐标，并进行非最大值抑制 NMS，得到所需的文本实例矩形框及其中心点</li>
<li><strong>b+c=d) 根据 TCO 合并文本实例-&gt;文本行 Mask</strong> ：计算 TCL 中属于文本的像素点的所属文本实例的几何中心点，该中心点将作为低层级像素信息，当步骤 c 计算所得的几何中心点与步骤 b 所得矩形框中心点重合或相近时，该像素点将被归类给步骤 b 中矩形框对应的文本实例，通过此步骤重新合并断开的文本行</li>
</ul>
<h1 id="解析-sast-的输出-2-生成文本边框"><a class="markdownIt-Anchor" href="#解析-sast-的输出-2-生成文本边框"></a> 解析 SAST 的输出 2-生成文本边框？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SAST-20230410204412.png" alt="" /></li>
<li><strong>a)</strong> 前面解析得到的文本实例</li>
<li><strong>b)</strong> 对文本中心线采样，采样点的间距相同，则得到的采样点数目与文本线的长度有关，故称之为自适应采样</li>
<li><strong>c)</strong> 根据文本边界偏置图 TBO 所提供的信息，计算文本中心线的采样点上的上下边界定位点</li>
<li><strong>d)</strong> 将步骤 b 所得的边界定位点按照从左上角开始的顺时针方向依次进行连接，得到最终的文本边界框</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_37546096/article/details/102909850">SAST : Single-Shot Arbitrarily-Shaped Text Detector论文阅读笔记_text center line sampling_litchi9854的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>文本检测</tag>
      </tags>
  </entry>
  <entry>
    <title>FOTS：Fast Oriented Text Spotting with a Unified Network</title>
    <url>/2023/03/13/FOTS%EF%BC%9AFast%20Oriented%20Text%20Spotting%20with%20a%20Unified%20Network/</url>
    <content><![CDATA[<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304092146678.png" alt="" /></p>
<p>第一个<strong>端到端</strong>解决文本识别的模型，相比较两阶段的文本定位方法，它的检测速度更快，基本思路是通过文本检测分支实现文本行区域的提取，然后通过 RoIRotate 模块实现文本行的“摆正”，最后使用 CRNN+CTC 的模式实现文本行的字符识别</p>
<a id="more"></a>
<h1 id="什么是-fots"><a class="markdownIt-Anchor" href="#什么是-fots"></a> 什么是 FOTS ？</h1>
<ul>
<li>第一个<strong>端到端</strong>解决文本识别的模型，相比较两阶段的文本定位方法，它的检测速度更快，基本思路是通过文本检测分支实现文本行区域的提取，然后通过 RoIRotate 模块实现文本行的“摆正”，最后使用 CRNN+CTC 的模式实现文本行的字符识别</li>
<li>RoIRotate 模块要通过仿射变换转换文本区域，所以 FOTS 只能识别文字中心在一个线上的文本行，无法处理弯曲文本行</li>
</ul>
<h1 id="fots-的网络结构"><a class="markdownIt-Anchor" href="#fots-的网络结构"></a> FOTS 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304092146065.png" alt="" /></li>
<li><strong>shared convolutions</strong>：使用 Resnet 搭建，首先使用下采样，然后使用反卷积上采样，并且使用类似 SegNet 的高分辨率连接到低分辨率的连接</li>
<li><strong>文本检测分支</strong>：使用类似 anchor-free 的目标检测方式，将 shared convolutions 的每个 grid 视为文本行中心，然后预测其文本行的宽高</li>
<li><strong>RoIRotate</strong>：根据文本检测分支的输出+shared convolutions 输出，将文本行转为横向文本</li>
<li><strong>文字识别分支</strong>：基于 CRNN+CTC 的方式学习和识别文本行</li>
</ul>
<h1 id="fots-的-shared-convolutions-模块"><a class="markdownIt-Anchor" href="#fots-的-shared-convolutions-模块"></a> FOTS 的 shared convolutions 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FOTS-20230409194643.png" alt="" /></li>
<li>首先通过 ResNet 提取特征，然后通过反卷积上采样，类似 SegNet 一样中间使用残差连接，最后输出 C 2 特征</li>
</ul>
<h1 id="fots-的文本检测分支"><a class="markdownIt-Anchor" href="#fots-的文本检测分支"></a> FOTS 的文本检测分支？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-09%2020.21.26.excalidraw.png" alt="Drawing 2023-04-09 20.21.26.excalidraw" /></li>
<li>使用类似 anchor-free 的目标检测方式，将 shared convolutions 的每个 grid 视为文本行中心，然后预测其文本行的宽高</li>
<li>假设 shared convolutions 输出是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">C\times H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的特征，文本检测分支输出 3 个分支，分别表示文本行的得分、该 grid 到四边的距离和该文本行的旋转角度</li>
</ul>
<h1 id="fots-的-roirotate-模块"><a class="markdownIt-Anchor" href="#fots-的-roirotate-模块"></a> FOTS 的 RoIRotate 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FOTS-20230409194714.png" alt="" /></li>
<li>使用目标检测的后处理获得文本行，根据文本行的宽高及旋转角得到四个角点的位置，假设四个点是 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)、(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)、(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">x_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">y_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)、(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">x_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">y_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)，现在要将这个区域转到 (0,0)起点，宽高 (wh)的区域，可以通过仿射变换实现</li>
<li>仿射变换矩阵需要变换前后的 3 对点求得，不妨取 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)-&gt;(0,0)、(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)-&gt;（w, 0）、(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">x_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">y_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)-&gt;(w, h)，求取方法是调用 opencv 的 getAffineTransform 函数即可，仿射矩阵变换后，文本的中心线平行 x 轴</li>
</ul>
<h1 id="fots-的文字识别分支"><a class="markdownIt-Anchor" href="#fots-的文字识别分支"></a> FOTS 的文字识别分支？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CRNN-20230408144101.png" alt="" /></li>
<li>文字识别是在 RoIRotate 模块输出的基础上进行的，就是得到平行文本行的基础上进行的，其过程有 4 个</li>
<li><strong>CNN 提取特征</strong>：使用轻量化网络 MobileNetv 3，其中输入图像的高度统一设置为 32，宽度可以为任意长度，经过 CNN 网络后，特征图的高度缩放为 1</li>
<li><strong>双向 LSTM（BiLSTM）对特征序列进行预测</strong>：学习序列中的每个特征向量并输出预测标签分布。这里其实相当于把特征向量的宽度视为 LSTM 中的时间维度</li>
<li><strong>全连接层分类</strong>：使用全连接层对每个序列进行 N+1 类别预测，获取模型的预测结果</li>
<li><strong>CTC</strong>：解码模型输出的预测结果，得到最终输出</li>
</ul>
<h1 id="fots-的损失函数"><a class="markdownIt-Anchor" href="#fots-的损失函数"></a> FOTS 的损失函数？</h1>
<ul>
<li>网络的损失分为两部分，即文本行识别损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{detect}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 、文本行字符识别损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{recog}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，通过参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\lambda_{recog}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 控制两者的权重<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>L</mi><mrow><mi mathvariant="bold">d</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">t</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">t</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mrow><mi mathvariant="bold">r</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">g</mi></mrow></msub><msub><mi>L</mi><mrow><mi mathvariant="bold">r</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L=L_{\mathbf{detect}}+\lambda_{\mathbf{recog}}L_{\mathbf{recog}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">d</span><span class="mord mathbf mtight">e</span><span class="mord mathbf mtight">t</span><span class="mord mathbf mtight">e</span><span class="mord mathbf mtight">c</span><span class="mord mathbf mtight">t</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16110799999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">r</span><span class="mord mathbf mtight">e</span><span class="mord mathbf mtight">c</span><span class="mord mathbf mtight">o</span><span class="mord mathbf mtight" style="margin-right:0.01597em;">g</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16110799999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">r</span><span class="mord mathbf mtight">e</span><span class="mord mathbf mtight">c</span><span class="mord mathbf mtight">o</span><span class="mord mathbf mtight" style="margin-right:0.01597em;">g</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/sol_data12/article/details/113501530">场边文字检测——FOTS模型详解及其代码实现_ManManMan池的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/195248125">[论文笔记] FOTS - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>文本定位</tag>
      </tags>
  </entry>
  <entry>
    <title>文本检测之DB和DB++</title>
    <url>/2023/03/12/%E6%96%87%E6%9C%AC%E6%A3%80%E6%B5%8B%E4%B9%8BDB%E5%92%8CDB++/</url>
    <content><![CDATA[<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091513112.png" alt="" /></p>
<p>本文介绍两个文本检测模型： DB 及它的升级版本 DB++，主要的原理就是将“二值化”的过程做成网络可学习、可微分的一个模块，然后向网络中插入这个模块自适应去学习二值化阈值，最终预测文字区域的一个核心部分，然后再通过公式放大这个核心部分，得到目标区域</p>
<a id="more"></a>
<h1 id="什么是-db"><a class="markdownIt-Anchor" href="#什么是-db"></a> 什么是 DB ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091513112.png" alt="" /></li>
<li><strong>传统意义二值化</strong>：基于分割的文本检测算法其流程如图2中的蓝色箭头所示。在传统方法中得到分割结果之后采用一个<strong>固定阈值</strong>得到二值化的分割图</li>
<li><strong>DB 二值化</strong>：如图2中红色箭头所示的，通过网络去预测图片每个位置处的阈值，而不是采用一个固定的值，这样就可以很好将背景与前景分离出来，但是这样的操作会给训练带来梯度不可微的情况，对此对于二值化提出了一个叫做 <strong>Differentiable Binarization 模块</strong>来解决</li>
</ul>
<h1 id="db-的网络结构"><a class="markdownIt-Anchor" href="#db-的网络结构"></a> DB 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091633772.png" alt="" /></li>
<li><strong>BackBone</strong>：可以使用类似 resnet 下采样 5 次，得到 5 个层次的特征</li>
<li><strong>FPN 类似结构</strong>：对 C4、C3、C2 特征采样类似 FPN 的连接，输出时是 C5、 F4、F3、F2 一共 4 个层次的特征</li>
<li><strong>DB 模块</strong>：以 probability map 减去 threshold map (T) 差值，输入到 DB 模块进行可微的二值化学习</li>
</ul>
<h1 id="db-的可微的二值化模块-db"><a class="markdownIt-Anchor" href="#db-的可微的二值化模块-db"></a> DB 的“可微的二值化模块 (DB)”？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091634515.png" alt="" /></li>
<li>上图 a、b、c 分别是标准二值化与可微二值化输出、可微二值化对正样本的梯度，可微二值化对负样本的梯度，k 是放大倍数</li>
<li><strong>标准二值化 (SB)</strong>：通过预先设置的阈值 t 去对概率图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 二值化<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>B</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mspace width="1em"/><msub><mi>P</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>&gt;</mo><mo>=</mo><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mspace width="1em"/><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">B_{i,j}=\begin{cases}1\quad P_{i,j}&gt;=t\\ 0\quad otherwise\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">t</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li><strong>可微二值化 (DB)</strong>：借鉴 sigmoid 输出输出，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>−</mo><mi>T</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></mrow><annotation encoding="application/x-tex">P_{i,j}-T{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></span> 作为 sigmoid 输入，并 K 扩大输出，使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>B</mi><mo>^</mo></mover><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{B}_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.232878em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 趋向 0 或 1，即通过学习每个位置的阈值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{i, j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 对概率图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{i, j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 二值化<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>B</mi><mo>^</mo></mover><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mo><mi>exp</mi><mo>⁡</mo></mo><mrow><mo>−</mo><mi>k</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>−</mo><msub><mi>T</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{B}_{i, j}=\dfrac{1}{1+\exp^{-k (P_{i, j}-T_{i, j})}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.232878em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.23595em;vertical-align:-0.9145099999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2799300000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">exp</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8300699999999999em;"><span style="top:-3.0050700000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9145099999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li><strong>正负样本梯度比较</strong>：DB 改进性能的原因可以通过梯度的反向传播来解释，可知正负样本的梯度被 k 放大<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>l</mi><mo lspace="0em" rspace="0em">+</mo></msub><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mo lspace="0em" rspace="0em">−</mo></msup><mi>k</mi><mi>x</mi></mrow></mfrac><mspace width="1em"/><mo>=</mo><mo>&gt;</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mo lspace="0em" rspace="0em">+</mo></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>k</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>k</mi><mi>x</mi></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>l</mi><mo lspace="0em" rspace="0em">−</mo></msub><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mo lspace="0em" rspace="0em">−</mo></msup><mi>k</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">)</mo><mspace width="1em"/><mspace width="1em"/><mo>=</mo><mo>&gt;</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mo lspace="0em" rspace="0em">−</mo></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mi>k</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}l_{+}=-log\frac{1}{1+e^{-}k x}\quad =&gt;  \frac{\partial l_{+}}{\partial x}=-k f(x)e^{-k x}\\\\ l_{-}=-log(1-\frac{1}{1+e^{-}k x})\quad\quad =&gt;  \frac{\partial l_{-}}{\partial x}=k f(x)\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.38154em;vertical-align:-2.9407700000000006em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4407699999999997em;"><span style="top:-5.44077em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.531439999999999em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"></span></span><span style="top:-1.4999999999999993em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9407700000000006em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="db-的自适应阈值"><a class="markdownIt-Anchor" href="#db-的自适应阈值"></a> DB 的自适应阈值？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091635325.png" alt="" /></li>
<li>a、b、c、d 分别是原图、probability map、无监督的 threshold map、有监督的 threshold map</li>
<li>c 图表明即使没有对 threshold map 监督，其结果也会表现出突出显示文本边界区域。这表明如果加入类似边界的监督，以提供更好的指导，d 图的结果证明了这一点</li>
</ul>
<h1 id="db-的标签生成过程"><a class="markdownIt-Anchor" href="#db-的标签生成过程"></a> DB 的标签生成过程？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091635472.png" alt="" /></li>
<li><strong>probability map</strong>：使用 Vatti clipping algorithm 将 G 缩减到 Gs（蓝线内部），A 是面积，r 是 shrink ratio，设置为0.4，L 是周长 $$D=\dfrac{A(1-r^2)}{L}$$</li>
<li><strong>threshold map</strong>：使用生成 probability map 一样的方法，向外进行扩张，得到绿线和蓝线中间的区域，根据到红线的距离制作标签</li>
<li><strong>binary map</strong>：蓝色标注线以内</li>
</ul>
<p>总结：以上 3 个标签的值范围</p>
<table>
<thead>
<tr>
<th>-</th>
<th>蓝线以内</th>
<th>蓝蓝绿之间</th>
<th>其他</th>
</tr>
</thead>
<tbody>
<tr>
<td>probability map</td>
<td>1</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>threshold map</td>
<td>0.3</td>
<td>越靠近红线 0.7，越远离红线 0.</td>
<td>0.3</td>
</tr>
<tr>
<td>binary map</td>
<td>1</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table>
<p><strong><mark style="background: #FF5582A6;">从上面标签制作可知，DB 没有直接去学习文本的边缘（图红线），而是去学习比文本边缘更小的区域 (图绿线)，我觉得这点是除了&quot;可微二值化模块&quot;外，尤其需要关注的地方。这里说一下自己的理解</mark></strong></p>
<h1 id="db-为什么不直接学习文本外轮廓而是学习轮廓缩小的轮廓"><a class="markdownIt-Anchor" href="#db-为什么不直接学习文本外轮廓而是学习轮廓缩小的轮廓"></a> DB 为什么不直接学习文本外轮廓，而是学习轮廓缩小的轮廓？</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091649041.png" alt="Drawing 2023-04-09 15.43.02.excalidraw" /></p>
</li>
<li>
<p>上图是两种学习路线下的 probability map、threshold map 及他们学习的 binary map，其中红线是直接学习文本边缘（下文称直觉模式），绿线学习文本边缘小一圈的轮廓（下文称 DB 模式）</p>
</li>
<li>
<p><strong>观察 probability map</strong>，“直觉模式”比 DB 模式范围更大，这对极度弯曲的小文本是不友好的，可以想象文本在 C2特征已经辨别不出弯曲，更小的学习区域可以有更强的能力</p>
</li>
<li>
<p><strong>观察 threshold map</strong>，因为文本行占据了图片大部分区域，所以“直觉模式”主要优化背景到 0.7， threshold map 计算 L1 损失，相比较 DB 模式大部分优化背景到 0.3，“直觉模式”更难优化</p>
</li>
<li>
<p><strong>观察 binary map</strong>：除了和优化 threshold map 同样的问题外，由于“直觉模式”对文本行内、外的梯度大小一样，说明两个区域优化权重一样。而 DB 模式内部梯度比外部梯度更大，相当于增大正样本的梯度权重</p>
</li>
<li>
<p><strong>总结</strong>：“直觉模式”比 DB 模式更难优化，而且 DB 模式对弯曲小文本性能更好</p>
</li>
</ul>
<h1 id="db-的损失函数"><a class="markdownIt-Anchor" href="#db-的损失函数"></a> DB 的损失函数？</h1>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">L_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 probability map 的 loss，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">L_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 binary map 的 loss，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">L_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 threshold map 的 loss，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 设置为1和10，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">L_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">L_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 使用交差熵计算损失<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>L</mi><mi>s</mi></msub><mo>+</mo><mi>α</mi><mo>×</mo><msub><mi>L</mi><mi>b</mi></msub><mo>+</mo><mi>β</mi><mo>×</mo><msub><mi>L</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">L=L_s+\alpha\times L_b+\beta\times L_t
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">S_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示使用 OHEM 进行采样，正负样本的比例为1：3, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">L_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 使用 L 1 loss，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">R_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示绿线内的区域，<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mi>t</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><msub><mi>R</mi><mi>d</mi></msub></mrow></munder><mi mathvariant="normal">∣</mi><msubsup><mi>y</mi><mi>i</mi><mo>∗</mo></msubsup><mo>−</mo><msubsup><mi>x</mi><mi>i</mi><mo>∗</mo></msubsup><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">L_t=\sum_{i\in R_d}|y_i^*-x_i^*|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.450201em;vertical-align:-1.400196em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p>
</li>
</ul>
<h1 id="db-如何解析输出的"><a class="markdownIt-Anchor" href="#db-如何解析输出的"></a> DB 如何解析输出的？</h1>
<ul>
<li>在推理阶段，可以使用 binary map 或者 probability map</li>
<li><strong>使用 binary map</strong>：需要 probability map+threshold map 两个分支计算得到，其结果就是文本实例</li>
<li><strong>使用 probability map</strong>：不需要 threshold map、binary map 分支，直接按照 Vatti clipping algorithm 公式还原回去即可，即1)使用0.3的阈值进行二值化；2)将 pixel 连接成不同的文本实例；3)将文本实例进行扩张，得到最终的文本框<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>D</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mfrac><mrow><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mi>r</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo stretchy="false">)</mo></mrow><msup><mi>L</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mfrac></mrow><annotation encoding="application/x-tex">D^{&#x27;}=\dfrac{A^{&#x27;}(1-r^{&#x27;})}{L^{&#x27;}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-2.99248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30548em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.61948em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.76698em;"><span style="top:-2.789em;margin-right:0.05em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>使用第二种方法，网络计算更少，论文使用第二种方法</li>
</ul>
<h1 id="db-的网络结构-2"><a class="markdownIt-Anchor" href="#db-的网络结构-2"></a> DB++ 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091649944.png" alt="" /></li>
<li><strong>BackBone</strong>：可以使用类似 resnet 下采样 5 次，得到 5 个层次的特征</li>
<li><strong>ASF 模块</strong>：ASF 特征融合模块其实就是 FPN，只不过在此基础上增加Spatial Attention</li>
<li><strong>DB 模块</strong>：和 DB 一样，以 probability map 减去 threshold map (T) 差值，输入到 DB 模块进行可微的二值化学习</li>
</ul>
<h1 id="db的自适应多尺度特征融合模块-asf"><a class="markdownIt-Anchor" href="#db的自适应多尺度特征融合模块-asf"></a> DB++的自适应多尺度特征融合模块 ASF ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304091650873.png" alt="" /></li>
<li><strong>输入输出</strong>：输入是 BackBone 4 个层次的特征，输出是经过加权的特征</li>
<li><strong>Spatial Attention</strong>：对特征加空间注意力，使用空间（沿通道方向）进行池化，得到注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">1\times H\times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>文本检测</tag>
      </tags>
  </entry>
  <entry>
    <title>CNN之结构重参数化</title>
    <url>/2023/03/06/CNN%E4%B9%8B%E7%BB%93%E6%9E%84%E9%87%8D%E5%8F%82%E6%95%B0%E5%8C%96/</url>
    <content><![CDATA[<h1 id="什么是结构重参数化"><a class="markdownIt-Anchor" href="#什么是结构重参数化"></a> 什么是结构重参数化？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005953.png" alt="" /></li>
<li>我们知道模型要变好，就必须构建得更加复杂，但是这来这带来一个坏处，就是模型部署的耗时会增长，这两者是相互矛盾的，<strong>结构从参数化</strong>就是两者都可以做到，在训练的时候，通过复杂的神经网络去训练，提升模型的性能，但是在推理的时候，我通过对模型结构的重参数化生成了一个更加精简的结构，使推理的时候速度更快</li>
<li><strong>RepVGG 的结构重参数化过程</strong>：上图是左边是训练时的卷积网络，右边通过对结构进行重参数化，得到一个只有 1 个分支的结构，因此可以做到训练时提升性能，推理时提升速度</li>
<li><strong>结构从参数化的基本原理</strong>：<strong>卷积的可加性</strong>，对于同一个输入，只要其扫描频率一致（相同的通道数、kernel size、stride、padding），其卷积可过程可以融合。如下公式 1 是一个实数乘特征图和乘卷积是等效的，公式 2卷积核 F1 与 F2 可以被融合为 1 个卷积，卷积核为 (F1+F2)</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>⊗</mo><mo stretchy="false">(</mo><mi>p</mi><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>I</mi><mo>⊗</mo><mi>F</mi><mo stretchy="false">)</mo><mspace width="1em"/></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>⊗</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>I</mi><mo>⊗</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>I</mi><mo>⊗</mo><mo stretchy="false">(</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msup><mi>F</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mspace width="1em"/></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}I\otimes(pF)=p(I\otimes F) \quad&amp;(1)\\I\otimes F^{(1)}+I\otimes F^{(2)}=I\otimes(F^{(1)}+F^{(1)})\quad&amp;(2)\end{matrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4480000000000004em;vertical-align:-0.9740000000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.474em;"><span style="top:-3.634em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span></span></span><span style="top:-2.3859999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9740000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.474em;"><span style="top:-3.634em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-2.3859999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9740000000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="acnet-的网络结构"><a class="markdownIt-Anchor" href="#acnet-的网络结构"></a> ACNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005292.png" alt="" /></li>
<li>上图左边展示 3 个分支的卷积融合为一个等效卷积的过程；右边是卷积融合的过程，主要包括融合 BN (BN fusion) 和融合分支 (branch fusion)两个步骤</li>
<li><strong>融合 BN (BN fusion)</strong> ：所有 BN 对输入操作一样，不改变输入分辨率，所以利用卷积的线性可加性，将 BN 的过程融合进卷积</li>
<li><strong>融合分支 (branch fusion)</strong>：同样利用卷积的线性可加性，将多分支的卷积融合为 1个卷积</li>
</ul>
<h1 id="repvgg-如何进行结构重参数化"><a class="markdownIt-Anchor" href="#repvgg-如何进行结构重参数化"></a> RepVGG 如何进行“结构重参数化”？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005549.png" alt="" /></li>
<li>1.<strong>卷积层参数</strong>：上图是 REP-VGG 块的结构重参数化过程。为了易于可视化，我们假设 C2 = C1 = 2，因此3×3层具有四个3×3矩阵，而1×1层的核为2×2矩阵</li>
<li>2.<strong>BN 层参数</strong>：(1)可知 BN 层为每个通道的数据进行规范化，每个通道需要 4 个参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>，输入通道 2 个则有 8 个参数；(2) 当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 均为 0 时，规范化后的数据还是原来的值，这可以用于模拟 identity 路径</li>
<li>3.<strong>融合卷积与 BN 层</strong>：(1)最难理解的是虚线红框部分，由原来的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 1 \times 1\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 3 \times 3\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> ，也就是单个卷积核由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3\times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，这是通过在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 四周补 0 做到的，因为补 0 后得到的卷积和是不变的；(2) 类似 [[ACNet#^udwpgu|ACNet的网络结构]]的过程，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的部分参数用于重构卷积核的值，部分参数组合成卷积的偏置值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，并且每个通道 1 个值 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005037.png" alt="" /></li>
<li>4.<strong>利用卷积的可加性，融合多路径</strong>：对应同 size 卷积核的，可以利用卷积的可加性，将卷积融合，具体来说是卷积核矩阵对应相加，偏置值对应相加</li>
</ul>
<h1 id="dbb-的网络结构"><a class="markdownIt-Anchor" href="#dbb-的网络结构"></a> DBB 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082005802.png" alt="" /></li>
<li>参考 [[GoogleNetv1]] 的 Inception block 的概念，结合结构重参数划的理论，设计了 DBB block</li>
<li>每个 DBB block 包含 4 个并行的路径，推理时融合成 1 个路径</li>
</ul>
<h1 id="dbb-的-6-种模块可以等价转为单个卷积"><a class="markdownIt-Anchor" href="#dbb-的-6-种模块可以等价转为单个卷积"></a> DBB 的 6 种模块可以等价转为单个卷积？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082006464.png" alt="" /></li>
<li>
<ol>
<li>Conv-BN 合并：经典的卷积层融合 BN 层的结构</li>
</ol>
</li>
<li>
<ol start="2">
<li>并行合并：参考ACNet的网络结构，卷积核可线性相加</li>
</ol>
</li>
<li>
<ol start="3">
<li>串行合并：参考ACNet的网络结构，卷积核可线性相加</li>
</ol>
</li>
<li>
<ol start="4">
<li>并行拼接：参考ACNet的网络结构，卷积核 kernel size 保持不变，数量是两个分支相加</li>
</ol>
</li>
<li>
<ol start="5">
<li>平均池化转换：平均池化很像卷积核的过程，只不过是求和后加平均而已，直接对卷积核的值除 KxK，后面得到的卷积和就是 AVG 后的值了</li>
</ol>
</li>
<li>
<ol start="6">
<li>多尺度卷积合并：参考ACNet的网络结构，同一将卷积核扩充为 KxK，再进行融合</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>CNN</tag>
        <tag>结构重参数化</tag>
      </tags>
  </entry>
  <entry>
    <title>ConvNeXt V2：Co-designing and Scaling ConvNets with Masked Autoencoders</title>
    <url>/2023/02/20/ConvNeXt%20V2%EF%BC%9ACo-designing%20and%20Scaling%20ConvNets%20with%20Masked%20Autoencoders/</url>
    <content><![CDATA[<p>ConvNeXtv2借鉴掩码自编码器（MAE），在 ConvNeXt 的基础上引入全卷积掩码自编码器 (FCMAE)，但是发现 MLP 层存在潜在的特征崩溃问题，为了解决这个问题，该研究提出添加一个全局响应归一化层（Global Response Normalization layer，GRN）来增强通道间的特征竞争</p>
<a id="more"></a>
<ul>
<li>什么是 ConvNeXtv2 ？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXtv2-20230505210037.png" alt="" /></li>
<li>ConvNeXtv2借鉴掩码自编码器（MAE），在 ConvNeXt 的基础上引入全卷积掩码自编码器 (FCMAE)，但是发现 MLP 层存在潜在的特征崩溃问题，为了解决这个问题，该研究提出添加一个全局响应归一化层（Global Response Normalization layer，GRN）来增强通道间的特征竞争</li>
<li>ConvNeXtv2 表明监督学习中重复使用监督学习中的固定架构设计可能不是最佳方法，可以使用部分自监督+监督</li>
</ul>
</li>
<li>ConvNeXtv2 的全卷积掩码自编码器 (FCMAE)？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXtv2-20230505210038.png" alt="" /></li>
<li>参考 <a href="K31-transformer/MAE.md">MAE</a> 的原理，将 encoder 和 decoder 的 vit 部分换成卷积，然后使用稀疏卷积替换 mask token。即原始的输入信号被随机 mask，输入 Encoder，希望 Encoder + Decoder 的输出预测 mask 掉的部分</li>
<li><strong>Encoder</strong>：使用 ConvNeXt，在预训练期间，将卷积替换为稀疏卷积，这使得模型只能在可见数据点上操作；在微调阶段，稀疏卷积层可以转换回标准卷积，而不需要额外的处理</li>
<li><strong>Decoder</strong>：使用 1 个 ConvNeXt Block，总体上形成了非对称的 Encoder-Decoder 体系结构，因为 Encoder 更重，且具有分层架构</li>
</ul>
</li>
<li>ConvNeXtv2 的自监督性能？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXtv2-20230505210039.png" alt="" /></li>
<li>将 FCMAE 与监督学习进行比较。有监督训练 100 Epochs 精度是82.7%，有监督训练 300 Epochs 精度是83.8%，FCMAE 进行 800和100个 Epoch 的预训练和微调结果是 83.7%。说明 FCMAE 预训练提供了比随机基线更好的初始化 (82.7→83.7)</li>
</ul>
</li>
<li>ConvNeXtv2 的全局响应标准化 (Global Response Normalization, GRN)?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXtv2-20230505210040.png" alt="" /></li>
<li>GRN 通过求实例在每个通道的权重，增强通道间的特征竞争，避免出现特征崩溃。图 1是 ConvNeXtv2 应用 GRN 后，可以看出每个通道都有响应，不像 ConvNeXtv1 某些通道已经不响应</li>
<li>根据实验发现，当应用 GRN 时，LayerScale 不是必要的并且可以被删除，如图 2 所示</li>
<li>图 3 是不同层的规范化层的特征余弦距离，余弦距离越大，特征越保持，可以看出 ConvNeXtv 2的特征一直在保持，更 Vit MAE 类似</li>
</ul>
</li>
<li>全局响应标准化（GRN）的计算过程？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-05-05%2016.29.31.excalidraw.png" alt="Drawing 2023-05-05 16.29.31.excalidraw" /></li>
<li><strong>规范化</strong>：传统的规范化层是求出均值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span></span></span></span> 与方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>，然后使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>X</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>σ</mi></mrow><annotation encoding="application/x-tex">\hat X_i=(X_i-\mu)/\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0967699999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> 进行规范化，而 GRN 只需要求出权重 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，然后使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>X</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><msub><mi>X</mi><mi>i</mi></msub><mo>×</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">\hat X_i=X_i\times w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0967699999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 规范化</li>
<li><strong>规范化值</strong>：这里的 w 是实例在所有实例上的权重，如图对于 (B, HW, C)输入的特征，先求 (B1, C1)实例上的 L2 范数，该实例的 L2 范数在所有实例 L2 范数的比例即等于 w</li>
<li><strong>校准数据</strong>：不同于 BN 使用公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>=</mo><mi>γ</mi><mo>×</mo><msub><mover accent="true"><mi>X</mi><mo>^</mo></mover><mi>i</mi></msub><mo>+</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">X_i=\gamma\times\hat X_i+\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0967699999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 校准数据，GRN 使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>=</mo><mi>γ</mi><mo>×</mo><msub><mover accent="true"><mi>X</mi><mo>^</mo></mover><mi>i</mi></msub><mo>+</mo><mi>β</mi><mo>+</mo><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i=\gamma\times\hat X_i+\beta+X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0967699999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 校准数据，相当于引入一个残差连接</li>
</ul>
</li>
<li>ConvNeXtv2 的损失函数？
<ul>
<li>遵循 MAE 的做法，使用重建目标和真值之间的 Mean Squared Error, MSE Loss，作为 Reconstruction target。损失函数仅应用于 masked patches</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOv6：A Single-Stage Object Detection Framework for Industrial Applications</title>
    <url>/2023/02/10/YOLOv6%EF%BC%9AA%20Single-Stage%20Object%20Detection%20Framework%20for%20Industrial%20Applications/</url>
    <content><![CDATA[<p>YOLOv6基于RepVGG设计了可重参数化、更高效的骨干网络</p>
<a id="more"></a>
<h1 id="什么是-yolov6"><a class="markdownIt-Anchor" href="#什么是-yolov6"></a> 什么是 YOLOv6?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv6-20230408141952.png" alt="" /></li>
<li>1）受到硬件感知神经网络设计思想的启发，基于 RepVGG 设计了可重参数化、更高效的骨干网络 EfficientRep、RepPAN</li>
<li>2）优化设计了更简洁有效 YOLOv6 的解耦头，在维持精度的同时，进一步降低了一般解耦头带来的额外延时开销</li>
<li>3）在训练策略上，我们采用 Anchor-free无锚范式，同时 SimOTA标签分配策略、SIOUloss边界框回归损失来进一步提高检测精度</li>
</ul>
<h1 id="yolov6的网络结构"><a class="markdownIt-Anchor" href="#yolov6的网络结构"></a> YOLOv6的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv6-20230408141952-1.png" alt="" /></li>
<li>1）受到硬件感知神经网络设计思想的启发，基于 RepVGG 设计了可重参数化、更高效的骨干网络 EfficientRep、RepPAN</li>
<li>2）优化设计了更简洁有效YOLOv6的解耦头，在维持精度的同时，进一步降低了一般解耦头带来的额外延时开销</li>
</ul>
<h1 id="yolov6的解耦头"><a class="markdownIt-Anchor" href="#yolov6的解耦头"></a> YOLOv6的解耦头?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv6-20230408141954.png" alt="" /></li>
<li>YOLOv5检测头是通过分类和回归分支融合共享的方式来实现的，而 YOLOX的检测头则是将分类和回归分支进行解耦，同时新增了两个额外的 3x3 的卷积层，虽然提升了检测精度，但一定程度上增加了网络延时</li>
<li>在 YOLOv6 中，采用了解耦头结构，并对其进行了精简设计。采用 Hybrid Channels 策略重新设计了一个更高效的解耦头结构，在维持精度的同时降低了延时，缓解了解耦头中 3x3 卷积带来的额外延时开销</li>
</ul>
<h1 id="什么是-efficientrep"><a class="markdownIt-Anchor" href="#什么是-efficientrep"></a> 什么是 EfficientRep？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv6-20230408141955.png" alt="" /></li>
<li>基于以上 Rep 算子设计了一个高效的 Backbone。相比于 YOLOv5采用的 CSP-Backbone，该 Backbone 能够高效利用硬件（如 GPU）算力的 同时，还具有较强的表征能力</li>
</ul>
<h1 id="什么是-reppan"><a class="markdownIt-Anchor" href="#什么是-reppan"></a> 什么是 RepPAN？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv6-20230408141955-1.png" alt="" /></li>
<li>基于硬件感知神经网络设计思想，为 YOLOv6 设计了一个更有效的特征融合网络结构RepPAN</li>
<li>基于PAN拓扑方式，用RepBlock替换了YOLOv5中使用的CSP-Block，同时对整体 Neck 中的算子进行了调整，目的是在硬件上达到高效推理的同时，保持较好的多尺度特征融合能力</li>
</ul>
<h1 id="什么是simsppf"><a class="markdownIt-Anchor" href="#什么是simsppf"></a> 什么是SimSPPF？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv6-20230408141956.png" alt="" /></li>
<li>YOLOv6提出的模块，感觉SPPF只差了一个激活函数，简单测试了一下，单个ConvBNReLU速度要比ConvBNSiLU快18%</li>
</ul>
<h1 id="yolov6-的-simota-标签分配策略"><a class="markdownIt-Anchor" href="#yolov6-的-simota-标签分配策略"></a> YOLOv6 的 SimOTA 标签分配策略？</h1>
<ul>
<li>为了获得更多高质量的正样本，YOLOv6 引入了 SimOTA 动态分配正样本，进一步提高检测精度，YOLOv5 的标签分配策略是基于 Shape 匹配，并通过跨网格匹配策略增加正样本数量，从而使得网络快速收敛，但是该方法属于静态分配方法，并不会随着网络训练的过程而调整</li>
<li>在YOLOX中，OT又简化为动态的top-k策略进行分配，也就是得到一个近似解的策略：动态样本匹配(SimOTA)。YOLOv6也沿用这个标签分配的方法</li>
</ul>
<p>参考:</p>
<ol>
<li><a href="https://blog.csdn.net/weixin_43694096/article/details/126354660">空间金字塔池化改进 SPP / SPPF / SimSPPF / ASPP / RFB / SPPCSPC / SPPFCSPC_空洞空间卷积池化金字塔_迪菲赫尔曼的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
        <tag>one-stage</tag>
      </tags>
  </entry>
  <entry>
    <title>ConvNeXt：A ConvNet for the 2020s</title>
    <url>/2023/02/03/ConvNeXt%EF%BC%9AA%20ConvNet%20for%20the%202020s/</url>
    <content><![CDATA[<p>针对目前火热的 transformer，ConvNeXt 认为不是卷积固有的劣势导致的 CNN 性能比 transformer 差，而是 CNN 的设计不充分导致的</p>
<a id="more"></a>
<ul>
<li>什么是 ConvNeXt ？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXt-20230505210019.png" alt="" /></li>
<li>针对目前火热的 transformer，ConvNeXt 认为不是卷积固有的劣势导致的 CNN 性能比 transformer 差，而是 CNN 的设计不充分导致的</li>
<li>ConvNeXt 基于 ResNet50，并根据过去十年中的新最佳实践和发现对其进行迭代改进，使得 CNN 的性能超过transformer</li>
</ul>
</li>
<li>ConvNeXt 优化“宏观设计”？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXt-20230505210020.png" alt="" /></li>
<li><strong>stage ratio</strong>：众所周知 resnet50有4个由若干个 block 堆叠出的 stage，每个 stage 的 block 数量不太相同，作者将堆叠次数按照 Swin-T (1,1,3,1)来设计，ResNet 50 由 (3,4,6,3)调整为 (3,3,9,3)</li>
<li><strong>patchify stem</strong>：将 stem 更改为 Patchify，即 ResNet50 开头的 7 x 7 卷积（stride=4）、3 x 3 最大池化（stride=4）-&gt;4 x 4（stride=4）</li>
<li>stage ratio 相当于加深原始 resnet50，带来效果最明显</li>
</ul>
</li>
<li>ConvNeXt 优化“参考 ResNetXt”？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXt-20230505210021.png" alt="" /></li>
<li>ResNetXt 对 BottleNeck 中的 3x3 卷积层采用分组卷积来减少 FLOPS。 在 ConvNext 中使用depth-wise convolution</li>
</ul>
</li>
<li>ConvNeXt 优化“参考倒残差 Inverted Bottleneck”？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXt-20230505210022.png" alt="" /></li>
<li>resnet 里 block 的设计是先1x1卷积降维，之后再用1x1卷积升维，形成一个瓶颈层。而 Transformer 块的一个重要设计是，它会产生一个<strong>反向瓶颈</strong>(b)，ConvNeXt 将 b 的 3 x 3 提前，</li>
</ul>
</li>
<li>ConvNeXt 优化“使用大卷积核”？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXt-20230505210023.png" alt="" /></li>
<li>参考 Swin-T 中使用了7x7的窗口，ConvNeXt 将 Inverted Bottleneck 的 3 x 3 卷积替换成 7 x 7，为了降低计算量把 dw conv 放到了 Inverted Bottleneck 的开头，最终结果相近</li>
</ul>
</li>
<li>ConvNeXt 优化“微观设计”？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ConvNeXt-20230505210024.png" alt="" /></li>
<li><strong>ReLU-&gt;GELU</strong>：GELU 可以被认为是 ReLU 的一个更平滑的变体，最近的 transformer 中被使用，ConvNet 使用后性能保持不变</li>
<li><strong>更少激活函数</strong>：Transformer 和 ResNet 块之间的一个小区别是 Transformer 的激活功能较少，根据这一思路消除将 ResNet Block 的 3 个 RELU 激活改为 1 个 GELU 激活</li>
<li><strong>更少 BN 层</strong>：Transformer块通常也有较少的规范化层。在这里，我们移除了两个BatchNorm层，<strong>在conv 1×1层之前只留下一个BN层</strong></li>
<li><strong>BN-&gt;LN</strong>：BatchNorm 是 ConvNets 中的一个重要组成部分，因为它提高了收敛性，减少了过度拟合，在原始 ResNet 中直接用 LN 代替 BN 将导致次优性能。在对网络架构和训练技术进行修改后，在这里重新使用 LN 代替 BN，性能稍好一些</li>
<li><strong>分离下采样层</strong>：在 ResNet 中，下采样是通过 stride=2 conv 完成的。 Transformers（以及其他卷积网络）也有一个单独的下采样模块。 作者删除了 stride=2 并在三个 conv 之前添加了一个下采样块，为了保持训练期间的稳定性在，在下采样操作之前需要进行归一化</li>
</ul>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_37541097/article/details/122556545">ConvNeXt网络详解_太阳花的小绿豆的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/458016349">ConvNeXt：全面超越Swin Transformer的CNN - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/511477312">使用PyTorch复现ConvNext：从Resnet到ConvNext的完整步骤详解 - 知乎</a></li>
<li><a href="https://blog.csdn.net/qq_41917697/article/details/122997809">CNN卷积神经网络之ConvNeXt_球场书生的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>PP-LiteSeg：A Superior Real-Time Semantic Segmentation Model</title>
    <url>/2023/01/28/PP-LiteSeg%EF%BC%9AA%20Superior%20Real-Time%20Semantic%20Segmentation%20Model/</url>
    <content><![CDATA[<p>为搭建一个轻量化的语义分割网络，PP-LiteSeg 设计了灵活轻便的 encoder 模块、统一的注意力模块和高效的金字塔特征融合模块</p>
<a id="more"></a>
<h1 id="什么是-pp-liteseg"><a class="markdownIt-Anchor" href="#什么是-pp-liteseg"></a> 什么是 PP-LiteSeg ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PP-LiteSeg-20230408143341.png" alt="PP-LiteSeg-20230408143341" /></li>
<li>为搭建一个轻量化的语义分割网络，PP-LiteSeg 设计了灵活轻便的 encoder 模块、统一的注意力模块和高效的金字塔特征融合模块</li>
</ul>
<h1 id="pp-liteseg-的网络结构"><a class="markdownIt-Anchor" href="#pp-liteseg-的网络结构"></a> PP-LiteSeg 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PP-LiteSeg-20230408143341.png" alt="PP-LiteSeg-20230408143341" /></li>
<li><strong>Flexible and Lightweight Decoder</strong>(FLD)：灵活轻便的 encoder 模块，用于提取图片的特征，主要特点是通道数不增反减</li>
<li><strong>Unified Attention Fusion Module</strong>(UAFM)：使用 2 种空间注意力和通道注意力，构建输入特征的空间之间以及通道之间的关系</li>
<li><strong>Simple Pyramid Pooling Module</strong>(SPPM)：简单的特征融合模块，它减少了中间通道和输出通道，消除了Shortcut，并用一个add操作替换了concat操作</li>
</ul>
<h1 id="pp-liteseg-的-flexible-and-lightweight-decoder-fld"><a class="markdownIt-Anchor" href="#pp-liteseg-的-flexible-and-lightweight-decoder-fld"></a> PP-LiteSeg 的 Flexible and Lightweight Decoder (FLD)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PP-LiteSeg-20230408143412.png" alt="PP-LiteSeg-20230408143412" /></li>
<li>一般来说，<strong>编码器</strong>利用一系列分成几个阶段的层来提取层次特征。对于从 low-level 到 high-level 的特征，通道的数量逐渐增加，特征的空间尺寸逐渐减小</li>
<li><strong>解码器</strong>也有几个阶段，负责对 low-level 到 high-level 的特征融合和上采样特征，为了提高解码器的效率，FLD逐渐将特征的通道从high-level减少到low-level层次</li>
</ul>
<h1 id="pp-liteseg-的-unified-attention-fusion-module-uafm"><a class="markdownIt-Anchor" href="#pp-liteseg-的-unified-attention-fusion-module-uafm"></a> PP-LiteSeg 的 Unified Attention Fusion Module (UAFM)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PP-LiteSeg-20230408143413.png" alt="PP-LiteSeg-20230408143413" /></li>
<li>输入特征被表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{hight}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>l</mi><mi>o</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{low}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{hight}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是深层模块的输出，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>l</mi><mi>o</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{low}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是编码器的对应模块。请注意，它们有相同的通道数量</li>
<li>UAFM 首先利用双线性插值操作将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{hight}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 上采样到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>l</mi><mi>o</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{low}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 相同大小，而上采样特征记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{up}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。然后，注意力模块以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{up}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>l</mi><mi>o</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{low}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为输入，产生权重 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></li>
<li>注意，注意力模块可以是一个插件，如空间注意力模块、通道注意力模块等</li>
</ul>
<h1 id="pp-liteseg-的-simple-pyramid-pooling-module-sppm"><a class="markdownIt-Anchor" href="#pp-liteseg-的-simple-pyramid-pooling-module-sppm"></a> PP-LiteSeg 的 Simple Pyramid Pooling Module (SPPM)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PP-LiteSeg-20230408143414.png" alt="PP-LiteSeg-20230408143414" /></li>
<li>与原始的 金字塔池化模块（PPM） 相比，SPPM 减少了中间通道和输出通道，删除了 shortcut，并用 add 操作替换了 cat 操作。因此，SPPM 更有效，也更适合用于实时模型</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/540851314">PP-LiteSeg：轻量级实时语义分割模型 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/506936919">高精度轻量级图像分割SOTA模型PP-LiteSeg重磅开源！ - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>GhostNetV2：Enhance Cheap Operation with Long-Range Attention</title>
    <url>/2023/01/13/GhostNetV2%EF%BC%9AEnhance%20Cheap%20Operation%20with%20Long-Range%20Attention/</url>
    <content><![CDATA[<p>GhostNetV2在GhostNetV1的基础上，提出新的注意力机制，用于捕获长距离的空间信息，在精度和推理速度之间获得更好的平衡</p>
<a id="more"></a>
<ul>
<li>什么是 GhostNetv2 ？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GhostNetv2-20230408140227.png" alt="" /></li>
<li>GhostNetv1通过将标准卷积分解为2个过程，减少了计算量，但是其特征表示能力下降，GhostNetv2则通过引入注意力来解决</li>
<li>如果构建特征的自注意力，需要构建 HWxHW 大小的注意力矩阵，这对轻量化模型是有害的，借鉴 CBAM 的 SAM 模块，直接构建其 HW 大小的<strong>空间注意力</strong>矩阵，同时为了轻量化，通过分解卷积去构建，最终得到 DFC 注意力构建模块</li>
</ul>
</li>
<li>GhostNetv2 的 G-bootleneck?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GhostNetv2-20230408140228.png" alt="GhostNetv2-20230408140228" /></li>
<li>GhostNetv2修改了 G-bootleneck，输入特征时，第一个 Ghost Module 变为并行生成特征及特征注意力，注意力加权特征后再给后续模块</li>
</ul>
</li>
<li>GhostNetv2 的“双解藕密集连接注意力“模块?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GhostNetv2-20230408140228-1.png" alt="" /></li>
<li>GhostNetv2没有直接构建 HWxHW 大小的注意力矩阵，而是依次在水平方向、垂直方向构建注意力，获得全局注意力，其构建注意力的复杂度由 O (HWxHW)变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>H</mi><mn>2</mn></msup><mi>W</mi><mo>+</mo><mi>H</mi><msup><mi>W</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(H^2W+HW^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>SE Block：输入 hwc，直接使用1x1卷积，生成大小为 hw 的注意力矩阵，c 的每个通道共用这个注意力矩阵</li>
<li>DFC：输入hwc，使用分组卷积+分解卷积，生成大小为hwc的注意力矩阵，每个通道有自己的注意力矩阵</li>
</ul>
</li>
</ul>
<p><strong>参考资料</strong></p>
<ol>
<li><a href="https://blog.csdn.net/ooooocj/article/details/128994836">GhostNet v2（NeurIPS 2022 Spotlight）原理与代码解析_ghostnet源码解析_00000cj的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>人工神经网络(ANN)的理解</title>
    <url>/2023/01/10/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C(ANN)%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p>本文用于解释最基础的神经网络-感知机的原理，它是后续 CNN、RNN 的基础，CNN 只是在感知机的概念加入“局部连接”的思想，每个局部执行的还是加权和；RNN 只是给每个隐藏层加一个隐状态</p>
<p>本文按照：感知机-&gt;多层感知机-&gt;全连接层-&gt;人工神经网络的步骤去理解 Linear 层</p>
<a id="more"></a>
<h1 id="什么是感知机-perceptron"><a class="markdownIt-Anchor" href="#什么是感知机-perceptron"></a> 什么是感知机 (Perceptron)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-26%2010.55.05.excalidraw.png" alt="Drawing 2023-03-26 10.55.05.excalidraw" /></li>
<li><strong>一种用于单类别分类监督学习的算法</strong>，输入一组特征向量，然后通过一组等长权重计算线性加权和，最后通过判别函数输出结果。如果使用以下判别函数，则是一个二元分类器</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">sign</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>∗</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x)=\operatorname{sign}(w * x+b)=\left\{\begin{array}{ll} +1 &amp; x \geq 0 \\ -1 &amp; x&lt;0 \end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm">i</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">n</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">+</span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>感知机模拟的是人的神经细胞，单个神经细胞有 2 种状态，激活与不激活，当信号总量超过某个阈值时，该神经细胞处于激活状态，否则不激活，激活时向其他连接的神经元传递信息</li>
</ul>
<p>一个感知机包含等于输入数据长度的权重 w 和 1 个偏置 b（因为输出是 1），所谓感知，就是利用权重对所有输入进行加权和操作。接下来同时使用多个感知机去感知输入，就构成“单层感知机 (SLP)”</p>
<h1 id="什么是单层感知机-slp"><a class="markdownIt-Anchor" href="#什么是单层感知机-slp"></a> 什么是单层感知机 (SLP)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-26%2010.55.05.excalidraw.png" alt="Drawing 2023-03-26 10.55.05.excalidraw" /></li>
<li>所谓单层感知机，就是<strong>由感知机组成的一层网络，没有多层感知机的 hidden layer，每个感知机连接都连接所有输入</strong>，注意：感知机本身可以理解为只有 1 个节点的单层感知机</li>
</ul>
<p>除了在单层使用多个感知机外，还可以使用多层感知机，每层感知机的输入是前一层前一层感知机的输出，由此出现“多层感知机 (MLP)”</p>
<h1 id="什么是多层感知机-mlp"><a class="markdownIt-Anchor" href="#什么是多层感知机-mlp"></a> 什么是多层感知机 (MLP)?</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-26%2010.55.05.excalidraw.png" alt="Drawing 2023-03-26 10.55.05.excalidraw" /></p>
</li>
<li>
<p><strong>将多个单层感知机堆叠起来，其中每个感知机机与所有输入或者所有感知机输出连接，输入层与输出层之间的所有层是隐藏层</strong></p>
</li>
<li>
<p>MLP 至少由 3 层感知机组成，即<strong>输入层、隐藏层、输出层</strong></p>
</li>
</ul>
<h1 id="感知机-单层感知机-多层感知机的区别"><a class="markdownIt-Anchor" href="#感知机-单层感知机-多层感知机的区别"></a> 感知机、单层感知机、多层感知机的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C(ANN)-20230408150310.png" alt="人工神经网络(ANN)-20230408150310" /></li>
<li><strong>感知机 (Perceptron)</strong>：左图是一个 2 输入的感知机模型，经过参数加权累加和后，其值在一个<strong>平面</strong>上</li>
<li><strong>单层感知机 (SLP)</strong>：中图是一个 2 输入、包含 3 个输出节点的单层感知机，经过参数加权累加和后输出，输出是超平面</li>
<li><strong>多层感知机 (MLP)</strong>：多个单层感知机组成，至少包括 1 层隐藏层，输出结果是多个多个<strong>超平面</strong>的组合</li>
<li><strong>感知机无论叠加多少层，只要没使用<mark style="background: #FF5582A6;">非线性激活函数</mark>，其结果都是线性可分的，无法处理非线性问题</strong></li>
</ul>
<p>但是使用任意个、任意层感知机都是线性函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Wx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的线性叠加，其处理的问题都是线性可分的，但是对于线性不可分问题无法解决</p>
<h1 id="什么是线性可分"><a class="markdownIt-Anchor" href="#什么是线性可分"></a> 什么是线性可分？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-26%2014.23.58.excalidraw.png" alt="Drawing 2023-03-26 14.23.58.excalidraw" /></li>
<li><strong>线性可分</strong>：计算所有样本的凸包，如果凸包内值包含 1 个类别，就是线性可分，本质就是数据可以被有限个超平面区分，在 2D 数据上就是被有限个直线做划分</li>
<li><strong>线性不可分</strong>：计算所有样本的凸包，如果凸包内值包含 2 个类别以上，则是非线性可分</li>
</ul>
<p>日常构建网络时，都是使用 <code>torch.Linear</code> 去构建全连接层，它和感知机是什么关系呢，实际上它是确定输入维度、输出维度的单层感知机</p>
<h1 id="什么是全连接层-fully-connected-layer"><a class="markdownIt-Anchor" href="#什么是全连接层-fully-connected-layer"></a> 什么是全连接层 (Fully Connected Layer)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-26%2015.29.48.excalidraw.png" alt="Drawing 2023-03-26 15.29.48.excalidraw" /></li>
<li>其实<strong>就是单层的感知机</strong>，任意一个感知机都与所有输入连接形成，定义时需要指定输入数据维度和感知机数量，其中感知机的数量等于输出的维度</li>
<li><strong>参数量</strong>：每个感知机都与输入一一相连，加上偏置，共用参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi mathvariant="normal">P</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">m</mi></mrow><mtext>linear </mtext></msub><mo>=</mo><msub><mi>C</mi><mtext>in </mtext></msub><mo>×</mo><msub><mi>C</mi><mtext>out </mtext></msub><mo>+</mo><msub><mi>C</mi><mtext>out </mtext></msub></mrow><annotation encoding="application/x-tex">\mathrm{Param}_{\text {linear }}=C_{\text {in }} \times C_{\text {out }}+C_{\text {out }}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">P</span><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm">a</span><span class="mord mathrm">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">linear </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">in </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">out </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">out </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><strong>计算量</strong>：全连接层的<strong>每个输出</strong>需要经过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{in}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的乘法和加法运算，没考虑 bias 需要减1，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>L</mi><mi>O</mi><msub><mi>P</mi><mtext>linear </mtext></msub><mo>=</mo><mo stretchy="false">(</mo><mn>2</mn><mo>×</mo><msub><mi>C</mi><mtext>in </mtext></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>C</mi><mtext>out </mtext></msub><mo>×</mo><mi>B</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">F L O P_{\text {linear }}=(2 \times C_{\text {in }}) \times C_{\text {out }} \times Batchsize</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">linear </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">in </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">out </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal">e</span></span></span></span></li>
<li>Pytorch 可以使用接口快速定义该层<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=torch.randn([<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">fc = torch.nn.Linear(in_features = <span class="number">2</span>, out_features = <span class="number">3</span>)</span><br><span class="line">y=fc(x) // y=[<span class="number">1</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>单层感知机加上激活函数，就可以构建人工神经网络 (ANN)</p>
<h1 id="什么是人工神经网络-ann"><a class="markdownIt-Anchor" href="#什么是人工神经网络-ann"></a> 什么是人工神经网络 (ANN) ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MenuqjAChEyAwrQdOWJoWi4FHpKQ551d1d2kcUoW7jknzv9F_i4-MHztszxy1H4fPSoqPKdjNO51C3mZKtlppVQljk-iYKTbFmNPxm19CYwxSlf0o6oMtwmI4Uq1ma2p.gif" alt="" /></li>
<li>ANN 其实就是在多层感知器的基础上引入&quot;非线性&quot;激活函数，使得 ANN 可以模拟函数逼近器的作用，用于学习数据特征</li>
<li>缺点：1）随着图像大小的增加，可训练参数增多；2）会丢失图像的空间特征；3）处理序列数据无法记忆历史信息</li>
<li>Pytorch 可以堆叠多层的&quot;FC+relu&quot;层实现<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=torch.randn([<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">fc = torch.nn.Linear(in_features = <span class="number">2</span>, out_features = <span class="number">3</span>)</span><br><span class="line">y=fc(x) // y=[<span class="number">1</span>,<span class="number">3</span>]</span><br><span class="line">y=torch.nn.functional.relu(y)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://luweikxy.gitbook.io/machine-learning-notes/artificial-neural-network#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8">ANN人工神经网络 - machine-learning-notes</a></li>
<li><a href="https://en.wikipedia.org/wiki/Multilayer_perceptron">Multilayer perceptron - Wikipedia</a></li>
<li><a href="https://www.cnblogs.com/lgdblog/p/6858832.html">线性可分 与线性不可分 - Amazing_Man - 博客园</a></li>
<li><a href="https://www.zhihu.com/question/593941226">transformer为什么有利于并行计算？ - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>ANN</tag>
        <tag>Linear</tag>
      </tags>
  </entry>
  <entry>
    <title>CILP：Learning Transferable Visual Models From Natural Language Supervision</title>
    <url>/2022/12/20/CILP%EF%BC%9ALearning%20Transferable%20Visual%20Models%20From%20Natural%20Language%20Supervision/</url>
    <content><![CDATA[<p>CLIP 通过<strong>文本-图像对</strong>实现对模型预训练，上图是是 3 个文本-图像对，每个文本-图像对由一段文本+一张图片表示，文本描述了这个图片的内容（对象类别），CLIP 模型收集**4亿（400 million）<strong>个</strong>文本-图像对</p>
<a id="more"></a>
<h1 id="什么是-cilp"><a class="markdownIt-Anchor" href="#什么是-cilp"></a> 什么是 CILP ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CILP-20230510223614.png" alt="" /></li>
<li><strong>Contrastive Language-Image Pre-training (CLIP)</strong> 是一个联通文本和图像的模型，比如输入图片和提示文本，模型输出图片类别</li>
<li>CLIP 通过<strong>文本-图像对</strong>实现对模型预训练，上图是是 3 个文本-图像对，每个文本-图像对由一段文本+一张图片表示，文本描述了这个图片的内容（对象类别），CLIP 模型收集**4亿（400 million）<strong>个</strong>文本-图像对</li>
</ul>
<h1 id="cilp-的网络结构"><a class="markdownIt-Anchor" href="#cilp-的网络结构"></a> CILP 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CILP-20230510215531.png" alt="" /></li>
<li>CLIP 模型包含两部分，即<strong>文本编码器 (Text Encoder)</strong> 和<strong>图像编辑器 (Image Encoder)</strong>，Text Encoder 选择的是 Text Transformer 模型；Image Encoder 选择了两种模型，一是基于 CNN 的 ResNet（对比了不同层数的 ResNet），二是基于 Transformer 的 ViT</li>
<li><strong>编码器作用</strong>：假设一次输入 N 个文本对，N 个文本首先经过<strong>文本编码器 (Text Encoder)</strong> ，输出 [<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>T</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>T</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>T</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">T_1,T_2,T_3,...,T_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>]，每个文本的输出是长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">d_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的向量，对应的 N 个图片经过<strong>图像编辑器 (Image Encoder)</strong>，输出[<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>I</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">I_1,I_2,I_3,...,I_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>]，每张图片输出也是长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">d_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的向量</li>
<li><strong>自监督训练</strong>：得到[<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>T</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>T</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>T</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">T_1,T_2,T_3,...,T_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>]和[<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>I</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">I_1,I_2,I_3,...,I_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>]两两组合构成一个矩阵，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">I_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 匹配，否则不匹配，将匹配的文本-图片对标记为正样本，共计 N 个，不匹配的文本-图像对标记为负样本，共计 N^2-N 个。通过正负样本可训练Text Encoder和Image Encoder</li>
<li><strong>损失函数</strong>：对于每个文本-图片对的输出，其都是长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的向量，计算损失时通过余弦相似度计算损失即可，对于匹配的文本-图片对，其损失越小越好，对于不匹配的文本图片对，其损失越大越好，即<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>I</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>T</mi><mi>j</mi></msub><msub><mo stretchy="false">)</mo><mrow><mo stretchy="false">(</mo><mi>i</mi><mo mathvariant="normal">≠</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>I</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>T</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">min(\sum_{i=1}^N\sum_{j=1}^N(I_i\cdot T_j)_{(i\neq j)}-\sum_{i=1}^N(I_i\cdot T_i))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
<h1 id="文本编码器和图像编码器为什么只输出一维特征"><a class="markdownIt-Anchor" href="#文本编码器和图像编码器为什么只输出一维特征"></a> 文本编码器和图像编码器为什么只输出一维特征?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CILP-20230510222400.png" alt="" /></li>
<li><strong>编码器输出</strong>：对于每个文本-图片对，正常 N 个长度为 S 的文本输入 transformer，其输出是 (N, S, di)，同理图片输出应该是 (N, S’, dt)，如果只输出 (N, di)或 (N, dt)，那就是类似 Vit 的情况，增加一个 class token 汇总所有 tokens 的信息，或者平均所有的 S 作为输出；</li>
<li><strong>输出映射</strong>：即使文本编码器输出 (N, di)，图片编码器输出 (N, dt)，最后一维还是长度不一样的，此时分别学习一个 W_i（di, de）、W_t（dt, de）的嵌入，与前面两个输出点乘都得到长度为 (n, de)的输出，然后才能计算模型输出的余弦相似度损失</li>
<li>输出映射相当于 transformer 的 decoder 的输入，可以认为是文本或图片的 quies 查询向量，找出有用特征计算损失</li>
</ul>
<h1 id="cilp-的-zero-shot-分类"><a class="markdownIt-Anchor" href="#cilp-的-zero-shot-分类"></a> CILP 的 zero-shot 分类？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CILP-20230510222948.png" alt="" /></li>
<li><strong>生成类别特征</strong>：根据所迁移的数据集将所有类别转换为文本。这里以 Imagenet 有1000类为例，我们得到了1000个文本：<code>A photo of &#123;label&#125;</code>。我们将这1000个文本全部输入 Text Encoder 中，得到1000个编码后的向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>N</mi><mo>=</mo><mn>1000</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_i(i=1,2,...,N)(N=1000)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span> , 这被视作文本特征</li>
<li><strong>生成图片特征</strong>：将需要分类的图像（单张图像）输入 Image Encoder 中，得到这张图像编码后的向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">I_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><strong>计算余弦相似度</strong>：将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">I_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与得到的1000个文本特征分别计算余弦相似度。找出1000个相似度中最大的那一个（上图中对应的为 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">T_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），那么评定要分类的图片与第三个文本标签（dog）最匹配，即可将其分类为狗</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/521151393">详解CLIP (一) | 打通文本-图像预训练实现ImageNet的zero-shot分类，比肩全监督训练的ResNet50/101 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
        <tag>zero-shot</tag>
        <tag>分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Res2Net：A New Multi-scale Backbone Architecture</title>
    <url>/2022/12/11/Res2Net%EF%BC%9AA%20New%20Multi-scale%20Backbone%20Architecture/</url>
    <content><![CDATA[<p>基于ResNeXt，将输入特征进行分组，并在不同分支之间设计不同深度的卷积，以实现不同分支不同感受野的目标，最终可以提升网络对多尺度目标的兼容性</p>
<a id="more"></a>
<ul>
<li>
<p>什么是 Res2Net ？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Res2Net-20230408140838.png" alt="Res2Net-20230408140838" /></li>
<li>ResNet ResNeXt的基础上引入多尺度特征的概念，使得模型可以提取多尺度的特征</li>
</ul>
</li>
<li>
<p>Res2Net的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Res2Net-20230408140838.png" alt="Res2Net-20230408140838" /></li>
<li>输入设计不同的分支，分支之间可以进行沟通，每个分支深度不同，感受野不同，最终模型可以适应不同尺度的目标</li>
</ul>
</li>
<li>
<p>Res2Net的SE模块？</p>
<ul>
<li>对每个 Res2Net 基本块输出进行整合，即主要对下图 U 进行处理，利用系数 scale 来使网络<strong>自适应的减弱或增强该通道的特征</strong></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/taYYMHaWnuxGjmZ1BtUTMDhK9McB4Co8J9DqT6Q4fevfybs5Rv-qCkJYr0Xpc-4Nf_8rMa_lmmzD0mbjALS4i2y6KyJ1DDCXdhBOTz0KseK2-7Rc2qxRKYYK0_JjeoAO.png" alt="" /></li>
</ul>
</li>
<li>
<p>Res2Net与ResNet的关系?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Res2Net-20230408140838.png" alt="Res2Net-20230408140838" /></li>
<li>上图左边ResNet的基础结构，Res2Net将其中3x3卷积替换为右边分组卷积(Group Convolution) ，即将1x1之后的特征图划分为s组，每组n/s个特征图，如果s=1，Res2Net变为ResNet</li>
<li>通过Res2NetSE模块 ，使得Res2Net比ResNet更容易聚焦在目标上</li>
</ul>
</li>
<li>
<p>Res2Net 如何添加多尺度特征?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Res2Net-20230408140907.png" alt="Res2Net-20230408140907" /></li>
<li>将输入特征分成了几组。一组滤波器首先从一组输入特征图中提取要素。然后将上一组的输出特征图与另一组输入特征图一起发送到下一组滤波器。此过程重复几次，直到处理完所有输入特征图。最后，将所有组的特征图连接(concat)并送到另个1×1滤波器，以完全融合信息。沿着输入特征图到输出特征图任何可能路径，当通过3×3滤波器时，等效感受野都会增加，<strong>由于组合效应，得到许多等效特征尺度</strong></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOF：You Only Look One-level Feature</title>
    <url>/2022/11/15/YOLOF%EF%BC%9AYou%20Only%20Look%20One-level%20Feature/</url>
    <content><![CDATA[<p>YOLOv3-YOLOv5均是采用FPN的多尺度特征(C3-C7)做目标预测，YOLOF则反其道而一种仅用一个尺度(C5)就能达到多级检测的方法</p>
<a id="more"></a>
<h1 id="什么是yolof"><a class="markdownIt-Anchor" href="#什么是yolof"></a> 什么是YOLOF?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOF-20230408141709.png" alt="YOLOF-20230408141709" /></li>
<li>YOLOv3-YOLOv5均是采用FPN的多尺度特征(C3-C7)做目标预测，YOLOF则反其道而一种仅用一个尺度(C5)就能达到多级检测的方法</li>
<li>YOLOF通DilatedEncoder模块结构扩大感受野，实现多尺度融合的效果；通Uniform matching正负样本分配确保正负样本被均匀分配</li>
</ul>
<h1 id="yolof的网络结构"><a class="markdownIt-Anchor" href="#yolof的网络结构"></a> YOLOF的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOF-20230408141710.png" alt="YOLOF-20230408141710" /></li>
<li><strong>Backbone</strong>： 采用经典的ResNet和ResNeXt，选取的特征图是C5，通道数为2048且下采样率为32</li>
<li><strong>Encoder</strong>：使DilatedEncoder模块，包含4个具有不同系数(2、4、6、8)的空洞卷积残差块</li>
<li><strong>Decoder</strong>： RetinaNet类似，它包含两个并行的head分支，用于目标分类和边框回归任务， 为回归分支的每个anchor增加一个隐式的objectness（没有直接监督），最终的分类置信度由分类分支的输出和objectness得分相乘得到</li>
</ul>
<h1 id="yolof的dilatedencoder模块"><a class="markdownIt-Anchor" href="#yolof的dilatedencoder模块"></a> YOLOF的DilatedEncoder模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOF-20230408141711.png" alt="YOLOF-20230408141711" /></li>
<li><strong>目标检测的多尺度融合</strong>：主要使空间金字塔池化(SpatialPyramidPooling,SPP)、特征金字塔网络(FeaturePyramidNetwork,FPN)、PAN等模块进行，但是 YOLOF 的出发点就是不采用任何的融合方法，所以不使用这些结构</li>
<li><strong>融合多尺度特征后做单 head 预测</strong>：位于多尺度特征融合与 DilatedEncoder 模块之间，这种方法相比较 DilatedEncoder 更为复杂，分支越多，推理速度越慢 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOF-20230408141711-1.png" alt="" /></li>
<li><strong>YOLOF</strong>利用空洞卷积搭建一个具有多个感受野的模块，他串联 4 个具有不同系数 (2、4、6、8) 的空洞卷积，并结合残差连接将两种不同感受野结合起来。C5 的特征经过 DilatedEncoder 模块后，得到的 P5 包含多个感受野下的特征</li>
</ul>
<h1 id="yolof-的-uniformmatcher正样本分配"><a class="markdownIt-Anchor" href="#yolof-的-uniformmatcher正样本分配"></a> YOLOF 的 UniformMatcher正样本分配？</h1>
<ul>
<li>一<strong>般基于IOU的标签分配方法，使得大物体匹配很多的anchor，小物体相对较少</strong>，这在多级检测的可以缓解这个问题，但是对于YOLOF单级检测就不行了</li>
<li>为了解决正负样本分配问题的方法，对于给定的target，计算他与所有anchor的L1距离，保留topk的结果，再结合IOU&gt;0.15筛选得到每个target的anchor。理想情况下，每个target都公平匹配上K个样本</li>
<li>在训练阶段，为了保证训练的稳定，YOLOF在 Max-IoU 匹配之后，设置 IoU 阈值以忽略大 IoU (&gt;0.7) 负锚和小 IoU (&lt;0.15) 正锚。比如当前标签是猫，网络预测了一个狗的标签（负样本，因为预测得不对），而这个狗的框和猫的真实框的IoU超过了0.7，那我们就忽略它的类别损失，不去回归。这种在训练过程中的动态调整有助于稳定YOLOF的训练，可以提升性能</li>
</ul>
<h1 id="yolof的anchor的设置"><a class="markdownIt-Anchor" href="#yolof的anchor的设置"></a> YOLOF的anchor的设置？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOF-20230408141712.png" alt="" /></li>
<li>YOLOF 最终只采用了面积为 32、64、128、256、512 这 5种大小的配置，且每一种配置下的长宽比仅是 1：1，没有 RetinaNet中的 1：3 和 3：1 这些长方形配置</li>
</ul>
<h1 id="yolof-的损失函数"><a class="markdownIt-Anchor" href="#yolof-的损失函数"></a> YOLOF 的损失函数？</h1>
<ul>
<li>类别损失：Focal loss</li>
<li>位置损失：GIoU loss</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
      </tags>
  </entry>
  <entry>
    <title>MAE：Masked Autoencoders Are Scalable Vision Learners</title>
    <url>/2022/11/13/MAE%EF%BC%9AMasked%20Autoencoders%20Are%20Scalable%20Vision%20Learners/</url>
    <content><![CDATA[<p>在深度学习模型中，通常会通过 BackBone 提取特征，这些 BackBone 通常使用大量的人工标注数据训练得到，但是人工标注成本很高，能不能在没有标注数据的情况下，训练得到一个预训练模型呢？MAE 通过自监督方法训练得到 BackBone 模型，MAE 开发了一种非对称编码器-解码器结构，其中的编码器仅对可见的 patch 子集进行操作，而轻量级解码器则从潜在表示和 mask token 重建原始图像。对输入图像的高比例（例如 75%）进行 mask 会产生一项困难且有意义的自监督任务</p>
<a id="more"></a>
<h1 id="什么是掩码自编码器-mae"><a class="markdownIt-Anchor" href="#什么是掩码自编码器-mae"></a> 什么是掩码自编码器 (MAE) ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230506134447.png" alt="" /></li>
<li>在深度学习模型中，通常会通过 BackBone 提取特征，这些 BackBone 通常使用大量的人工标注数据训练得到，但是人工标注成本很高，能不能在没有标注数据的情况下，训练得到一个预训练模型呢？</li>
<li>MAE 通过自监督方法训练得到 BackBone 模型，MAE 开发了一种非对称编码器-解码器结构，其中的编码器仅对可见的 patch 子集进行操作，而轻量级解码器则从潜在表示和 mask token 重建原始图像。对输入图像的高比例（例如 75%）进行 mask 会产生一项困难且有意义的自监督任务</li>
</ul>
<h1 id="mae-的网络结构"><a class="markdownIt-Anchor" href="#mae-的网络结构"></a> MAE 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230506134447.png" alt="" /></li>
<li>首先将input image切分为patches，执行mask操作，然后只把可见的patches送入encoder中，再将encoder的输出（latent representations）以及mask tokens作为轻量级decoder的输入，decoder重构整张image</li>
<li><strong>encoder</strong>：一个标准的 ViT 结构，只把可见的 patches 送入 encoder 中，编码器输出 token 后，结合 mask tokens 组成完整的全套 token (encoder 和 decoder 处理的 token 数量一致)</li>
<li><strong>decoder</strong>：也是一个 vit 结构，目的是执行图像重建任务，将 mask tokens 和 encoder 的输出作为输入，加上位置编码。decoder 的最后一层是 linear projection，输出通道数量和一个 patch 内的 pixel 数量相同（方便重构），然后再 reshape，重构 image</li>
<li>MAE 中 decoder 的设计并不重要，因为预训练结束之后，只保留 encoder，decoder 只需要完成预训练时的图像重构任务，encoder 用于下游任务</li>
</ul>
<h1 id="mae-的不同-mask-ratio-大小对预训练-微调的影响"><a class="markdownIt-Anchor" href="#mae-的不同-mask-ratio-大小对预训练-微调的影响"></a> MAE 的不同 Mask ratio 大小对预训练、微调的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MAE-20230507121754.png" alt="" /></li>
</ul>
<h1 id="mae-使用-mask-token-对预训练-微调的影响"><a class="markdownIt-Anchor" href="#mae-使用-mask-token-对预训练-微调的影响"></a> MAE 使用 Mask token 对预训练、微调的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230508092748.png" alt="" /></li>
<li>实验表明，encoder 如果接收 mask tokens，performance 甚至会降低14%，因此 encoder 只接收 visible tokens，既能提升性能，又能降低计算量加速训练</li>
</ul>
<h1 id="mae-不同深度-宽度的decoder-对-encoder-输出泛化性的影响"><a class="markdownIt-Anchor" href="#mae-不同深度-宽度的decoder-对-encoder-输出泛化性的影响"></a> MAE 不同深度、宽度的decoder 对 encoder 输出泛化性的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230508092124.png" alt="" /></li>
<li><strong>深度</strong>：MAE decoder 的深度对 linear probing 影响非常大，可以从65.5提升到73.5，这是由于 MAE 预训练使用像素级重构任务，而 linear probing classifier 执行的是分类任务，两者之间有一个明显的 gap，表明 encoder 输出特征不够抽象。实验显示 8 blocks 的 decoder 使得 encoder 的 <strong>latent representation</strong> 的语义信息最抽象，更适合分类任务</li>
<li><strong>宽度</strong>：MAE decoder 的宽度也有类似结论，实验结果显示 512 的宽度性能最佳</li>
</ul>
<h1 id="mae-使用不同重建策略对预训练-微调的影响"><a class="markdownIt-Anchor" href="#mae-使用不同重建策略对预训练-微调的影响"></a> MAE 使用不同重建策略对预训练、微调的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MAE-20230507121352.png" alt="" /></li>
</ul>
<h1 id="mae-使用不同的目标重建策略"><a class="markdownIt-Anchor" href="#mae-使用不同的目标重建策略"></a> MAE 使用不同的目标重建策略？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230508092946.png" alt="" /></li>
<li>MAE 最终目标构建策略使用的是像素级别的重建（pixel），作者还和 BEiT 那种预测 token 的方式以及 PCA 的方式</li>
<li>可以发现，预测归一化像素值的方式最强，其次，BEiT 那种预测 token 的玩法也不差</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/528720386">​一文看尽MAE最新进展！恺明的MAE已经提出大半年，目前发展如何？ - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/446761025">MAE(Masked Autoencoders) - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/439554945">别再无聊地吹捧了，一起来动手实现 MAE(Masked Autoencoders Are Scalable Vision Learners) 玩玩吧！ - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>自监督</tag>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>SVTR：Scene Text Recognition with a Single Visual Model</title>
    <url>/2022/10/25/SVTR%EF%BC%9AScene%20Text%20Recognition%20with%20a%20Single%20Visual%20Model/</url>
    <content><![CDATA[<p>传统的文本识别算法是CNN+RNN，但是由于LSTM的效率较低，很多移动设备对LSTM的加速效果并不好，所以在实际的应用场景中也存在诸多限制，SVTR利用swin transformer替代构建局部和全局混合块，提取多尺度的特征，使得不需要RNN去构建序列依赖也能实现更好的效果</p>
<a id="more"></a>
<h1 id="什么是-svtr"><a class="markdownIt-Anchor" href="#什么是-svtr"></a> 什么是 SVTR ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SVTR-20230410205058.png" alt="" /></li>
<li>a-d 代表 4 类文本识别模型，分别是传统 CRNN+CTC、CNN/多头自注意力模型+多头注意力、视觉语言模型、SVTR</li>
<li>传统的文本识别算法是CNN+RNN，但是由于LSTM的效率较低，很多移动设备对LSTM的加速效果并不好，所以在实际的应用场景中也存在诸多限制，SVTR利用swin transformer替代构建局部和全局混合块，提取多尺度的特征，使得不需要RNN去构建序列依赖也能实现更好的效果</li>
</ul>
<h1 id="svtr-的网络结构"><a class="markdownIt-Anchor" href="#svtr-的网络结构"></a> SVTR 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SVTR-20230410205119.png" alt="" /></li>
<li><strong>输入</strong>：输入是已经检测好的文本区域</li>
<li><strong>Patch Embedding</strong>：对输入图像序列化，看图输出是（H/4, W/4），所以取输入的 4 x 4 区域作为一个 token，但是这里又做个改变，通过两层 CBR 取重叠的 3 x 3 卷积对其进行两次下采样，也可得到输出</li>
<li><strong>Mixing Block</strong>：对输入的 tokens 加自注意力机制，输入输出均是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>w</mi><mo>×</mo><msub><mi>d</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">hw\times d_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><strong>mergin</strong>：将 tokens 转为卷积输入的 4 D 形式，并使用卷积对其进行下采样，输入是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>w</mi><mo>×</mo><msub><mi>d</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">hw\times d_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，输出是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>h</mi><mn>2</mn></mfrac><mo>×</mo><mi>w</mi><mo>×</mo><msub><mi>d</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\frac {h} {2}\times w\times d_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><strong>Combing</strong>：使用&quot;自适应全局平均池化&quot;将高度 H 变为1，然后对每个 tokens 的隐变量变换 (D2-&gt;D3)</li>
</ul>
<h1 id="svtr-的-patch-embedding"><a class="markdownIt-Anchor" href="#svtr-的-patch-embedding"></a> SVTR 的 Patch Embedding？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SVTR-20230410205206.png" alt="" /></li>
<li>已知 swin 是直接使用一个步长为4的4×4卷积进行无重叠的 patch embedding，而svtr则是使用两个步长为2的3×3卷积进行有重叠的patch embedding（延续的CNN的作风，感受野更大，提取局部信息的表达能力也会比swin的patch embedding要好）</li>
</ul>
<h1 id="svtr-的-mixing-block"><a class="markdownIt-Anchor" href="#svtr-的-mixing-block"></a> SVTR 的 Mixing Block？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SVTR-20230410205244.png" alt="" /></li>
<li>上图 (a)、（b）分别表示 Global Mixing、Local Mixing</li>
<li><strong>Global Mixing</strong>：类似 transformer ，在全部 tokens 上构建自注意力，首先特征图经过线性变换投影到三个空间，然后 q 矩阵和 k 矩阵的转置进行矩阵乘法、softmax 操作得到 attention 矩阵，最后和 v 矩阵进行矩阵乘法得到输出</li>
<li><strong>Local Mixing</strong>：类似 swin-transformer，在一个固定窗口建立自注意力，这样可以降低计算成本同时获取更多局部注意力。注意：swin 是通过 reshape 这种类似的方式来进行滑窗，并将不同的窗口累加到通道维度上，而 SVTR 则是直接使用值为0的 mask 操作。SVTR 这种做法和 swin 相比，计算复杂度还是比较高</li>
</ul>
<h1 id="svtr-和-swin-transformer-的区别"><a class="markdownIt-Anchor" href="#svtr-和-swin-transformer-的区别"></a> SVTR 和 swin-transformer 的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SVTR-20230410205649.png" alt="" /></li>
<li>svtr 是一个三级逐步下采样的网络（和 swin transformer 一样，下采样三次），和 CNN 架构一样，由 block + 下采样模块组成</li>
<li>其 block 模块和普通的 swin 中的 block 模块一致，都是 self-attention + mlp。不同的是，SVTR 中 self-attention 的方式和 swin 的滑动窗口有一定的差异</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/522545062">SVTR论文学习 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/540738873">《SVTR: Scene Text Recognition with a Single Visual Model》解读 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>文字识别</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOv5-nopaper</title>
    <url>/2022/10/21/YOLOv5-nopaper/</url>
    <content><![CDATA[<p>在YOLOv4的基础上添加了一些新的改进思路，网络做成了可选择配置的方式</p>
<a id="more"></a>
<h1 id="什么是yolov5"><a class="markdownIt-Anchor" href="#什么是yolov5"></a> 什么是YOLOv5?</h1>
<ul>
<li>在YOLOv4的基础上添加了一些新的改进思路，网络做成了可选择配置的方式，分为<strong>Yolov5s、Yolov5l、Yolov5s、Yolo5x 等版本</strong></li>
<li><strong>输入端：</strong> 在模型训练阶段，提出了一些改进思路：Mosaic数据增强、自适应锚框计算、自适应图片缩放</li>
<li><strong>基准网络：</strong> 融合其它检测算法中的一些新思路，主要包括：Focus结构、快速金字塔池化(SpatialPyramidPooling-Fast,SPPF)</li>
<li><strong>Neck 网络：</strong> 目标检测网络在 BackBone 与最后的 Head 输出层之间往往会插入一些层，Yolov5 中添加特征金字塔网络(FeaturePyramidNetwork,FPN)、PANet</li>
<li><strong>Head 输出层：</strong> 输出层的锚框机制与 YOLOv4相同，主要改进的是训练时的损失函 深度学习的损失函数#^fnaag1|GIOU loss，以及预测框筛选目标检测基础知识#^lgcpjg|DIOU-NMS</li>
</ul>
<h1 id="yolov5的网络结构"><a class="markdownIt-Anchor" href="#yolov5的网络结构"></a> YOLOv5的网络结构?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141932.png" alt="" /></li>
<li><strong>输入</strong>：608x608   输出多尺度预测结果：19x19/38x38/76x76</li>
<li>网络中的 1、2、3、4、5、6 分别时组成 YOLOv5 的基础组件，即：CBL 模块、Res 模块、CSP1_X、CSP1_X、Focus 结构、SPPF</li>
<li>YOLOv5 使用了 2 类 CSPNet 结构，CSP1_X 和 CSP2_X，前者用于 BackBone，由 CBL+Res+Concate 组成，后者用于 Neck，由卷积+Res+Concate 组成</li>
</ul>
<h1 id="yolov5的focus结构"><a class="markdownIt-Anchor" href="#yolov5的focus结构"></a> YOLOv5的Focus结构？</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141933.png" alt="" /></p>
</li>
<li>
<p>和YOLOv2使用传递层（passthroughlayer）相似，通过slice操作来对输入图片进行裁剪。原始输入图片大小为608 * 608 * 3，经过Slice与Concat操作之后输出一个304 * 304 * 12的特征映射；接着经过Conv层</p>
</li>
<li>
<p>Focus结构可以扩大感受野，提升对大尺度目标的预测能力</p>
</li>
</ul>
<h1 id="什么是快速金字塔池化spatial-pyramid-pooling-fast-sppf结构"><a class="markdownIt-Anchor" href="#什么是快速金字塔池化spatial-pyramid-pooling-fast-sppf结构"></a> 什么是快速金字塔池化(Spatial Pyramid Pooling - Fast, SPPF)结构?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141934.png" alt="" /></li>
<li>YOLOv5改空间空间金字塔池化(SpatialPyramidPooling,SPP)得到，主要思想是：将输入串行通过多个不同大小的MaxPool，然后做进一步融合，两者的作用是一样的，但后者效率更高</li>
<li>SPPF 结构是将输入串行通过多个 5x5 大小的 MaxPool 层，这里需要注意的是串行两个 5x5 大小的 MaxPool 层是和一个 9x9 大小的 MaxPool 层计算结果是一样的，串行三个 5x5 大小的 MaxPool 层是和一个 13x13 大小的 MaxPool 层计算结果是一样的</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SPPF</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">  <span class="comment"># Spatial Pyramid Pooling - Fast (SPPF) layer for YOLOv5 by Glenn Jocher</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, c1, c2, k=<span class="number">5</span></span>):</span>  <span class="comment"># equivalent to SPP(k=(5, 9, 13))</span></span><br><span class="line">	  <span class="built_in">super</span>().__init__()</span><br><span class="line">	  c_ = c1 // <span class="number">2</span>  <span class="comment"># hidden channels</span></span><br><span class="line">	  self.cv1 = Conv(c1, c_, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">	  self.cv2 = Conv(c_ * <span class="number">4</span>, c2, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">	  self.m = nn.MaxPool2d(kernel_size=k, stride=<span class="number">1</span>, padding=k // <span class="number">2</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">	  x = self.cv1(x)</span><br><span class="line">	  <span class="keyword">with</span> warnings.catch_warnings():</span><br><span class="line">		  warnings.simplefilter(<span class="string">&#x27;ignore&#x27;</span>)  <span class="comment"># suppress torch 1.9.0 max_pool2d() warning</span></span><br><span class="line">		  y1 = self.m(x)</span><br><span class="line">		  y2 = self.m(y1)</span><br><span class="line">		  <span class="keyword">return</span> self.cv2(torch.cat((x, y1, y2, self.m(y2)), <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<h1 id="什么是bottleneckcsp"><a class="markdownIt-Anchor" href="#什么是bottleneckcsp"></a> 什么是BottleneckCSP？</h1>
<ul>
<li>Bottleneck结构CSPNet结合，形成 CSP瓶颈层</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141935.png" alt="" />  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">BottleneckCSP</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line"><span class="comment"># CSP Bottleneck https://github.com/WongKinYiu/CrossStagePartialNetworks</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, c1, c2, n=<span class="number">1</span>, shortcut=<span class="literal">True</span>, g=<span class="number">1</span>, e=<span class="number">0.5</span></span>):</span>  <span class="comment"># ch_in, ch_out, number, shortcut, groups, expansion</span></span><br><span class="line">	<span class="built_in">super</span>(BottleneckCSP, self).__init__()</span><br><span class="line">	c_ = <span class="built_in">int</span>(c2 * e)  <span class="comment"># hidden channels</span></span><br><span class="line">	self.cv1 = Conv(c1, c_, k=<span class="number">1</span>)</span><br><span class="line">	self.cv2 = nn.Conv2d(c1, c_, kernel_size=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">	self.cv3 = nn.Conv2d(c_, c_, kernel_size=<span class="number">1</span>, bias=<span class="literal">False</span>)</span><br><span class="line">	self.cv4 = Conv(<span class="number">2</span> * c_, c2, k=<span class="number">1</span>)</span><br><span class="line">	self.bn = nn.BatchNorm2d(<span class="number">2</span> * c_)  <span class="comment"># applied to cat(cv2, cv3)</span></span><br><span class="line">	self.act = nn.LeakyReLU(<span class="number">0.1</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">	self.m = nn.Sequential([Bottleneck(c_, c_, shortcut, g, e=<span class="number">1.0</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">	y1 = self.cv3(self.m(self.cv1(x)))</span><br><span class="line">	y2 = self.cv2(x)</span><br><span class="line">	<span class="keyword">return</span> self.cv4(self.act(self.bn(torch.cat((y1, y2), dim=<span class="number">1</span>))))</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="yolov5的自适应锚框计算原理"><a class="markdownIt-Anchor" href="#yolov5的自适应锚框计算原理"></a> YOLOv5的自适应锚框计算原理？</h1>
<ul>
<li>在开始训练之前对数据集核查，计算此数据集针对默认锚定框的最佳召回率，当最佳召回率大于或等于0.98，则不需要更新锚定框；如果最佳召回率小于0.98，则需要重新计算此数据集的锚定框</li>
<li>1）载入数据集，得到数据集中所有数据的wh</li>
<li>2）将每张图片中wh的最大值等比例缩放到指定大小img_size，较小边也相应缩放</li>
<li>3）将bboxes从相对坐标改成绝对坐标（乘以缩放后的wh）</li>
<li>4）筛选bboxes，保留wh都大于等于两个像素的bboxes</li>
<li>5）使K-Means聚类得到n个anchors（K-Means算法涉及一个白化操作）</li>
<li>6）使遗传算法随机对 anchors 的 wh 进行变异，如果变异后效果变得更好（使用 anchor_fitness 方法计算得到的 fitness（适应度）进行评估）就将变异后的结果赋值给 anchors，如果变异后效果变差就跳过，默认变异1000次</li>
</ul>
<h1 id="yolov5的自适应图片缩放原理"><a class="markdownIt-Anchor" href="#yolov5的自适应图片缩放原理"></a> YOLOv5的自适应图片缩放原理？</h1>
<ul>
<li>训练阶段―
<ul>
<li>直接按比例缩放并填充 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141935-1.png" alt="" /></li>
</ul>
</li>
<li>测试阶段―
<ul>
<li><strong>第一步：计算缩放比例</strong> <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141936.png" alt="" /></li>
<li>第二步：计算缩放后的尺寸 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141936-1.png" alt="" /></li>
<li>第三步：计算黑边填充数值，网络进行了5倍下采样，网络填充部分能被32整除的部分到最后也是背景，不被32整除部分可能参与预测 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141936-2.png" alt="" /></li>
<li>注意： YOLOv3与YOLOv4中默认填充的数值是(0,0,0)，而YOLOv5中默认填充的数值是(114,114,114)</li>
</ul>
</li>
</ul>
<h1 id="yolov5正样本的匹配策略"><a class="markdownIt-Anchor" href="#yolov5正样本的匹配策略"></a> YOLOv5正样本的匹配策略？</h1>
<ul>
<li>YOLOv5使用3种方法增加正样本数量</li>
<li>1）<strong>跨anchor预测：</strong> 不同于IOU匹配，yolov5采用基于宽高比例的匹配策略，GT框和先验框宽高相除得ratio1，先验框与GT的宽高相除得到ratio2，取ratio1和ratio2的最大值作为最后的宽高比，该宽高比和设定阈值（默认为4）比较，小于设定阈值的anchor则为匹配到的anchor” <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141937.png" alt="" /></li>
<li>2）<strong>跨grid预测：</strong> GT框中心点处于grid1中，grid1被选中，为了增加增样本，grid1的上下左右grid为候选网格，因为GT中心点更靠近grid2和grid3，grid2和grid3也作为匹配到的网格，根据上步的anchor匹配结果，GT与anchor2、anchor3相匹配，因此GT在当前层匹配到的正样本有6个，分别为： grid1_anchor2，grid1_anchor3，grid2_anchor2，grid2_anchor3，grid3_anchor2， grid3_anchor3 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141937-1.png" alt="" /></li>
<li>3）<strong>跨分支预测：</strong> 假设一个GT框可以和2个甚至3个预测分支上的anchor匹配，则这2个或3个预测分支都可以预测该GT框， 即一个GT框可以由多个预测分支来预测，重复anchor匹配和grid匹配的步骤，可以得到某个GT 匹配到 的所有正样本</li>
</ul>
<h1 id="yolov5损失函数"><a class="markdownIt-Anchor" href="#yolov5损失函数"></a> YOLOv5损失函数？</h1>
<ul>
<li><strong>分类损失：</strong> 采用的二值交叉熵损失BCELoss，注意只计算<strong>正样本</strong>的分类损失</li>
<li><strong>obj 损失：</strong> 采用的依然是 BCE loss，注意这里的 obj 指的是网络预测的目标边界框与 GT Box 的CIoU loss。这里计算的是<strong>所有样本</strong>的 obj 损失</li>
<li><strong>定位损失：</strong> 采用的是 GIoU loss，注意只计算<strong>正样本</strong>的定位损失</li>
<li>三个预测特征层（P3, P4, P5）上的obj损失采用不同的权重。在源码中，针对预测小目 标的预测特征层（P3）采用的权重是4.0，针对预测中等目标的预测特征层（P4）采用的权重是1.0，针 对预测大目标的预测特征层（P5）采用的权重是0.4</li>
</ul>
<h1 id="yolov5不同深度对应的5种网络结构"><a class="markdownIt-Anchor" href="#yolov5不同深度对应的5种网络结构"></a> YOLOv5不同<strong>深度</strong>对应的5种网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141938.png" alt="" /></li>
</ul>
<h1 id="yolov5不同宽度对应的5种网络结构"><a class="markdownIt-Anchor" href="#yolov5不同宽度对应的5种网络结构"></a> YOLOv5不同<strong>宽度</strong>对应的5种网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv5-20230408141938-1.png" alt="" /></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
        <tag>one-stage</tag>
      </tags>
  </entry>
  <entry>
    <title>Swin Transformer：Hierarchical Vision Transformer using Shifted Windows</title>
    <url>/2022/10/11/Swin%20Transformer%EF%BC%9AHierarchical%20Vision%20Transformer%20using%20Shifted%20Windows/</url>
    <content><![CDATA[<p>为解决原始transformer在全局上构建注意力的成本巨大问题，Swin Transformer引入WIndows的概念，在每个Windows内构建全局注意力，使得成本由平方变为线性。同时借鉴CNN的层次特征，设计多层次的transformer block，提取图像的多尺度特征</p>
<a id="more"></a>
<h1 id="什么是-swin-trasformer"><a class="markdownIt-Anchor" href="#什么是-swin-trasformer"></a> 什么是 swin-trasformer?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/swin-transformer-20230408152156.png" alt="swin-transformer-20230408152156" /></li>
<li>原始的 vit 构建全局注意力，在 patch 数量多的情况下，其构建成本很高，因此 swin-trasformer 引入<strong>locality 思想</strong>，对无重合的 <strong>window 区域内进行 self-attention 计算</strong>，并且为了不同 windows 的交流，设计了<strong>滑窗操作</strong></li>
<li>同时，借鉴 CNN 的层次化的思想构建层次的 trasformer</li>
<li>这种层级式的结构不仅非常灵活，可以提供各个尺度的特征信息，它的<strong>计算复杂度是随着图像大小而线性增长</strong>，而不是平方级增长</li>
</ul>
<h1 id="swin-trasformer-的结构"><a class="markdownIt-Anchor" href="#swin-trasformer-的结构"></a> swin-trasformer 的结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/swin-transformer-20230408152157.png" alt="swin-transformer-20230408152157" /></li>
<li>整个模型采取层次化的设计，一共包含4个 Stage，每个 stage 都会<strong>缩小输入特征图的分辨率</strong>，像 CNN 一样逐层扩大感受野</li>
<li><strong>Patch Embedding</strong>：将图片切成一个个Patch，并嵌入到Embedding</li>
<li><strong>Linear Embedding</strong>：将输入 (B, S, 48)转为 (B, S, C)</li>
<li><strong>Patch Merging</strong>：在每个 Stage 一开始<strong>降低图片分辨率</strong>，输出隐变量长度还是 2C，采用的方法是类似 YOLOv5 的输入，间隔采样 H, W，使得各缩小2倍，此时通道维度会变成原先的4倍，再通过一个全连接层再调整通道维度为 2C</li>
<li><strong>Swin Transformer Block</strong>：使用 Transformer 的 encoder 部分构建&quot;windows&quot;内所有 patch 的注意力</li>
</ul>
<h1 id="swin-trasformer-的-patch-merging-模块"><a class="markdownIt-Anchor" href="#swin-trasformer-的-patch-merging-模块"></a> swin-trasformer 的 Patch Merging 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/swin-transformer-20230408152158.png" alt="" /></li>
<li>采用的方法是类似 YOLOv5 的输入，间隔采样 H, W，使得各缩小2倍，此时通道维度会变成原先的4倍，再通过一个全连接层再调整通道维度为 2C</li>
</ul>
<h1 id="swin-trasformer-的-swin-transformer-block"><a class="markdownIt-Anchor" href="#swin-trasformer-的-swin-transformer-block"></a> swin-trasformer 的 Swin Transformer Block？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/swin-transformer-20230408152158-1.png" alt="swin-transformer-20230408152158-1" /></li>
<li>Swin Transformer Block 包含 2 部分，即窗口多头自注意层（window multi-head self-attention, W-MSA）和移位窗口多头自注意层（shifted-window multi-head self-attention, SW-MSA）</li>
<li><strong>窗口多头自注意层（W-MSA）</strong>：传统的 Transformer 都是基于全局来计算注意力的，因此计算复杂度十分高。而 Swin Transformer 则将注意力的计算限制在每个窗口内，进而减少了计算量<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mi>l</mi></msup><mo>=</mo><mrow><mi mathvariant="normal">W</mi><mo>−</mo><mi mathvariant="normal">M</mi><mi mathvariant="normal">S</mi><mi mathvariant="normal">A</mi></mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">N</mi></mrow><mo stretchy="false">(</mo><msup><mi mathvariant="bold">z</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><msup><mi mathvariant="bold">z</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi mathvariant="bold">z</mi><mi>l</mi></msup><mo>=</mo><mrow><mi mathvariant="normal">M</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">P</mi></mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">N</mi></mrow><mo stretchy="false">(</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mi>l</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mi>l</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\hat{\mathbf{z}}^{l}=\mathrm{W-MSA}(\mathrm{LN}(\mathbf{z}^{l-1}))+\mathbf{z}^{l-1}\\ \mathbf{z}^{l}=\mathrm{MLP}(\mathrm{LN}(\mathbf{\hat{z}}^{l}))+\mathbf{\hat{z}}^{l}\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5159960000000003em;vertical-align:-1.0079980000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.507998em;"><span style="top:-3.65889em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathrm">M</span><span class="mord mathrm">S</span><span class="mord mathrm">A</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.3520019999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathrm">M</span><span class="mord mathrm">L</span><span class="mord mathrm">P</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathbf">z</span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2875em;"><span class="mord mathbf">^</span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.946888em;"><span style="top:-3.16078em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathbf">z</span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2875em;"><span class="mord mathbf">^</span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.946888em;"><span style="top:-3.16078em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0079980000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li><strong>移位窗口多头自注意层（SW-MSA）</strong>：为了保证<strong>不重叠窗口之间有联系</strong>，采用了<strong>shifted window self-attention</strong>的方式<strong>重新计算一遍窗口偏移之后的自注意力</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>=</mo><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">W</mi><mo>−</mo><mi mathvariant="normal">M</mi><mi mathvariant="normal">S</mi><mi mathvariant="normal">A</mi></mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">N</mi></mrow><mo stretchy="false">(</mo><msup><mi mathvariant="bold">z</mi><mi>l</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><msup><mi mathvariant="bold">z</mi><mi>l</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi mathvariant="bold">z</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>=</mo><mrow><mi mathvariant="normal">M</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">P</mi></mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">L</mi><mi mathvariant="normal">N</mi></mrow><mo stretchy="false">(</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><msup><mover accent="true"><mi mathvariant="bold">z</mi><mo>^</mo></mover><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}\hat{\mathbf{z}}^{l+1}=\mathrm{SW-MSA}(\mathrm{LN}(\mathbf{z}^{l}))+\mathbf{z}^{l}\\ \mathbf{z}^{l+1}=\mathrm{MLP}(\mathrm{LN}(\mathbf{\hat{z}}^{l+1}))+\mathbf{\hat{z}}^{l+1}\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5159960000000003em;vertical-align:-1.0079980000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.507998em;"><span style="top:-3.65889em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathrm">S</span><span class="mord mathrm" style="margin-right:0.01389em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathrm">M</span><span class="mord mathrm">S</span><span class="mord mathrm">A</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.3520019999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathrm">M</span><span class="mord mathrm">L</span><span class="mord mathrm">P</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">L</span><span class="mord mathrm">N</span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathbf">z</span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2875em;"><span class="mord mathbf">^</span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468879999999998em;"><span style="top:-3.16078em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathbf">z</span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2875em;"><span class="mord mathbf">^</span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468879999999998em;"><span style="top:-3.16078em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0079980000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="swin-trasformer-的-w-msa-模块"><a class="markdownIt-Anchor" href="#swin-trasformer-的-w-msa-模块"></a> swin-trasformer 的 W-MSA 模块?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/swin-transformer-20230408152159.png" alt="" /></li>
<li>左侧普通的 Multi-head Self-Attention（MSA）模块，计算 feature map 中的每个像素（或称作 token，patch）所有注意力。右侧 Windows Multi-head Self-Attention（W-MSA）模块，首先将 feature map 按照 MxM（M=2）大小划分成一个个 Windows，然后单独对每个 Windows 内部进行 Self-Attention</li>
</ul>
<h1 id="swin-trasformer-的-w-msa-模块的相对位置编码"><a class="markdownIt-Anchor" href="#swin-trasformer-的-w-msa-模块的相对位置编码"></a> swin-trasformer 的 W-MSA 模块的“相对位置编码”？</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/swin-transformer-20230408152200.png" alt="" /></p>
</li>
<li>
<p>WindowAttention 与传统的 Attention 主要区别是在原始计算 Attention 的公式中的 Q, K 时<strong>添加一个可学习的相对位置参数 B</strong></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>M</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup><mi mathvariant="normal">/</mi><msqrt><mi>d</mi></msqrt><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Attention(Q,K,V)=SoftMax(QK^T/\sqrt{d}+B)V
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.231095em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">d</span></span></span><span style="top:-2.941095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.058904999999999985em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p>
</li>
<li>
<p>假设 window_size = 2*2即每个窗口有4个 token ，在计算 self-attention 时，每个 token 都要与所有的 token 计算 QK 值，如图2所示，当位置1的 token 计算 self-attention 时，要计算位置1与位置 (1,2,3,4)的 QK 值，即以位置1的 token 为中心点，中心点位置坐标 (0,0)，其他位置计算与当前位置坐标的偏移量</p>
</li>
</ul>
<h1 id="swin-trasformer-的-sw-msa-模块"><a class="markdownIt-Anchor" href="#swin-trasformer-的-sw-msa-模块"></a> swin-trasformer 的 SW-MSA 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-06%2020.23.58.excalidraw.png" alt="Drawing 2023-04-06 20.23.58.excalidraw" /></li>
<li>上图首先绘制了 W-MSA 在 2 x 2 的 patch 上构建注意力示意图，然后通过 Shifted Windows 操作，在新的 2 x 2  patch 构建注意力</li>
<li><strong>Shifted Windows</strong>：W-MSA 在每个色块内构建全局注意力，如[1,2,3,4]，[5,6,7,8]，首先 patch 往左上角移动 M/2 个单位，然后通过下移、右移，得到新的 patch 矩阵</li>
<li><strong>SW-MSA</strong>：Shifted Windows 完成后，根据原始 patch 是否相邻构建注意力，比如对于第一个窗的[4,7,10,13]在原始 patch 矩阵上相邻，所以构建无 Mask 的 4 x 4 的注意力矩阵，而[8,3,14,9]只能在[8,3]、[14,9]之间构建注意力，得到有 Mask 的4 x 4 的注意力矩阵</li>
<li>通过移位重新构建注意力，可以让原始不同 Windows 之间得到交流，比如 W-MSA 上[4,7]没有构建注意力，而 SW-MSA 构建了它们之间的注意力，这类似 CNN，网络变深，感受野不断增强</li>
</ul>
<h1 id="swin-trasformer-的-sw-msa-模块的-mask-生成"><a class="markdownIt-Anchor" href="#swin-trasformer-的-sw-msa-模块的-mask-生成"></a> swin-trasformer 的 SW-MSA 模块的 Mask 生成？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-06%2021.43.11.excalidraw.png" alt="Drawing 2023-04-06 21.43.11.excalidraw" /></li>
<li>经过 SW-MSA 模块时，每个 Windows 内不完全是构建全局注意力，这就需要使用 Mask 去掉那些不需要的位置，总体上 Shifted Windows 得到的 Windows 分为 4 种，每种 Mask 矩阵对应如上</li>
<li>**如何使用 Mask 呢？**即在得到 QK^T 的指之后，将其乘上 Mask，对哪些无需计算注意力的位置赋予无穷小，使得 softmax 后趋向0</li>
</ul>
<h1 id="swin-trasformer-与-vit-的区别"><a class="markdownIt-Anchor" href="#swin-trasformer-与-vit-的区别"></a> swin-trasformer 与 vit 的区别？</h1>
<ul>
<li><strong>patch</strong>：swin-trasformer 的大小是 4 x 4，vit 是 16 x 16，不过 swin-trasformer 是指一个窗口内的</li>
<li><strong>emdedding</strong>：swin-trasformer 可选加，因为在计算 Attention 的时候做了一个<strong>相对位置编码</strong></li>
<li><strong>cls_token</strong>：swin-trasformer 直接拿所有 token 的平均，作为 cls_token，而不是像 vit 使用单独的位置</li>
</ul>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/zhe470719/article/details/123395256">【深度学习】论文阅读：（ICCV-2021））Swin Transformer_swint模块,让swin-transformer 的使用变得和cnn一样方便快捷_sky_柘的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/qq_37541097/article/details/121119988">Swin-Transformer网络结构详解_swin transformer_太阳花的小绿豆的博客-CSDN博客</a></li>
<li><a href="https://github.com/MaoQiankun97/swin_transformer/tree/main">GitHub - MaoQiankun97/swin_transformer: SwinTransformer pytorch实现</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/542675669">Swin Transformer中的mask机制 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>OAA：Online Attention Accumulation for Weakly Supervised Semantic Segmentation</title>
    <url>/2022/10/04/OAA%EF%BC%9AOnline%20Attention%20Accumulation%20for%20Weakly%20Supervised%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>OAA是一个弱监督语义分割网络，通过设计OAA模块，在训练过程中不断累积CAM，这比单纯使用最后一次的CAM更能体现物体轮廓</p>
<a id="more"></a>
<h1 id="什么是-oaa"><a class="markdownIt-Anchor" href="#什么是-oaa"></a> 什么是 OAA ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OAA-20230408143247.png" alt="OAA-20230408143247" /></li>
<li>弱监督的语义分割一般从 类别激活映射图 (Class Activation Mapping,CAM)生成图片的 mask，OAA 发现在训练的不同阶段，CAM 响应的位置有差异，如果把不同训练阶段得到 CAM 融合在一起，会不会比只取最后阶段的 CAM 效果好？本文由此提出。</li>
<li><strong>个人理解</strong>：分类网络一般使用交叉熵学习，把“是”的概率推向 1，“否”的概率推向 0，比如刚开始区分养和人，需要养、人的全身特征，最后收敛羊只需要判断有角即可，所以训练过程，网络关注的地方越来越高度抽象集中，但是这样的 CAM 对语义分割来说，起步越来越差，所以积累不同阶段 CAM，获得更好起点成为可能</li>
<li>上图 a 是原图，b-d 是不同阶段的 CAM 图，可以看出，其 CAM 区域越来越包含整个目标，e 是最后的融合 CAM，它比 b-d 更体现目标的 mask 区域</li>
</ul>
<h1 id="oaa-的网络结构"><a class="markdownIt-Anchor" href="#oaa-的网络结构"></a> OAA 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OAA-20230408143248.png" alt="OAA-20230408143248" /></li>
<li><strong>backbone</strong>：VGG-16</li>
<li><strong>OAA</strong>：用于累积不同 epoch 的 CAM</li>
</ul>
<h1 id="oaa-的-oaa-模块"><a class="markdownIt-Anchor" href="#oaa-的-oaa-模块"></a> OAA 的 OAA 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OAA-20230408143248.png" alt="OAA-20230408143248" /></li>
<li>假设 class-aware convolutional layer 的输出是 F，首先使用 RELU 对其进行归一化处理</li>
<li>第一个 epoch 的 CAM (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>) 用于初始化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">M_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，第二个 epoch 则是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">M_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">A_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其按照以下公式更新<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>M</mi><mi>t</mi></msub><mo>=</mo><mi>A</mi><mi>F</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_t= AF (M_{t-1},A_t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>OAA 不断使用上述公式融合，AF 的操作其实是 element-wise maximum operation，即取两个矩阵所以位置最大的激活值<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>M</mi><mi>t</mi></msub><mo>=</mo><mi>A</mi><mi>F</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>A</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_t= AF (M_{t-1},A_t)=max (M_{t-1},A_t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
<h1 id="oaa-的-oaa-如何训练"><a class="markdownIt-Anchor" href="#oaa-的-oaa-如何训练"></a> OAA 的 OAA +如何训练？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OAA-20230408143314.png" alt="OAA-20230408143314" /></li>
<li>OAA 的缺点在于有些目标区域的 attention values 很低，不足以被分类模型加强，对于这种情况，我们提出一个新的 loss 函数，把 cumulative attention maps 作为监督信息，去训练一个 attention module 以进一步改善 OAA，我们称之为 OAA+</li>
<li>具体来讲，我们将 cumulative attention maps 作为 soft labels。每个 attention value 被视作当前点属于目标类别的概率，去掉 GAP 和分类层，得到 integral attention model，将输入图像得到当前的 attention maps，cumulative attention maps 和 attention maps 计算多标签交叉熵损失</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>弱监督</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOX：Exceeding YOLO Series in 2021</title>
    <url>/2022/09/23/YOLOX%EF%BC%9AExceeding%20YOLO%20Series%20in%202021/</url>
    <content><![CDATA[<p>YOLOX 抛YOLOv4、YOLOv5众多的 tricks，基 YOLOv3，解耦头 (decoupled head)+Free anchor 设计目标检测网络</p>
<a id="more"></a>
<h1 id="什么是-yolox"><a class="markdownIt-Anchor" href="#什么是-yolox"></a> 什么是 YOLOX?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOX-20230408142014.png" alt="" /></li>
<li>YOLOX 抛 YOLOv4、YOLOv5众多的 tricks，基 YOLOv3，解耦头 (decoupled head)+Free anchor 设计目标检测网络</li>
<li>除此之外，通动态样本匹配(SimOTA)动态决定预测框的正负，并根据正负样本计算损失</li>
</ul>
<h1 id="yolox的网络结构"><a class="markdownIt-Anchor" href="#yolox的网络结构"></a> YOLOX的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOX-20230408142015.png" alt="" /></li>
<li><strong>输入端：</strong> Mosaic数据增强、Mixup数据增强</li>
<li><strong>BackBone 主干网络：</strong> 和 YOLOv3 一样，使用 Darknet53</li>
<li><strong>Neck：</strong> 和 YOLOv3 一样，使用特征金字塔网络(FeaturePyramidNetwork,FPN)</li>
<li><strong>Prediction：</strong> Decoupled Head、Anchor-free、Multi positives</li>
</ul>
<h1 id="yolox的解耦头decoupled-head"><a class="markdownIt-Anchor" href="#yolox的解耦头decoupled-head"></a> YOLOX的解耦头(decoupled head)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOX-20230408142016.png" alt="" /></li>
<li>YOLOv3 head 的预测将定位任务和分类任务糅合在一起，但是由于两者的偏好不同，强行组合在一起导致学习时相互干扰，因此在Yolox中，增加了三个Decoupled Head，俗称“解耦头”</li>
<li><strong>1）cls_output（HxWxC）：</strong> 主要对目标框的类别，预测分数</li>
<li><strong>2）obj_output（HxWx1）：</strong> 主要判断目标框是前景还是背景，因此经sigmoid处理</li>
<li><strong>3）reg_output（HxWx4）：</strong> 主要对目标框的坐标信息（x，y，w，h）进行预测</li>
</ul>
<h1 id="yolox的标签分配"><a class="markdownIt-Anchor" href="#yolox的标签分配"></a> YOLOX的标签分配？</h1>
<ul>
<li>1）确定的正样本的候选区域</li>
<li>2）计算anchor与gt的iou</li>
<li>3）在候选区内计算cost</li>
<li>4）使用iou确定每个gt的dynamic_k</li>
<li>5）为每个gt取cost排名最小的前dynamic_k个anchor做正样本，其余作负样本</li>
<li>6）使用正负样本计算loss</li>
</ul>
<h1 id="yolox的损失函数"><a class="markdownIt-Anchor" href="#yolox的损失函数"></a> YOLOX的损失函数？</h1>
<ul>
<li><strong>分类损失</strong>：使用focal loss计算，仅计算正样本的损失</li>
<li><strong>置信度损失</strong>：使用二值交叉熵计算损失，计算所有样本的损失</li>
<li><strong>框损失</strong>：使用iou loss计算损失，并且仅计算正样本的损失</li>
</ul>
<h1 id="yolox的正样本初步筛选"><a class="markdownIt-Anchor" href="#yolox的正样本初步筛选"></a> YOLOX的正样本&quot;初步筛选 &quot;?</h1>
<ul>
<li>初步筛选的方式主要有两种：根据中心点来判断、根据目标框来判断</li>
<li><strong>根据中心点来判断：</strong> 即计算锚框中心点（x_center，y_center），和人脸标注框左上角（gt_l，gt_t），右下角（gt_r，gt_b）两 个角点的相应距离。通过计算将中心点落在groundtruth矩形框内的锚框挑选出来</li>
<li><strong>根据目标框来判断：</strong> 除了根据锚框中心点，和groundtruth两边距离判断的方式外，作者还设置了根据目标框判断的方法。以groundtruth中心点为基准，设置边长为5的正方形，挑选在正方形内的所有锚框</li>
</ul>
<h1 id="yolox的正样本精细化筛选"><a class="markdownIt-Anchor" href="#yolox的正样本精细化筛选"></a> YOLOX的正样本&quot;精细化筛选&quot;</h1>
<ul>
<li>1）初筛正样本信息提取：初筛出的1000个正样本锚框的位置 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOX-20230408142017.png" alt="" /></li>
<li>2）Loss函数计算：针对筛选出的1000个候选检测框，和3个groundtruth计算Loss函数 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOX-20230408142017-1.png" alt="" /></li>
<li>3）cost成本计算：有了reg_loss和cls_loss，就可以将两个损失函数加权相加，计算cost成本函数了</li>
<li>4）SimOTA：根据cost选择正样本</li>
</ul>
<h1 id="什么是动态样本匹配-simota"><a class="markdownIt-Anchor" href="#什么是动态样本匹配-simota"></a> 什么是动态样本匹配 (SimOTA)?</h1>
<ul>
<li>YOLOX有8400个Anchor锚框后，这里的每一个锚框都对应85特征向量中的预测框信息。 不过需要知道，这些预测框只有少部分是正样本，绝大多数是负样本。SimOTA用于动态将8400个锚框，和图片上所有的目标框进行关联，挑选出正样本锚框</li>
<li>第一步：设置候选框数量</li>
<li>第二步：通过cost挑选候选框</li>
<li>第三步：过滤共用的候选框</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
        <tag>one-stage</tag>
      </tags>
  </entry>
  <entry>
    <title>RepVGG：Making VGG-style ConvNets Great Again</title>
    <url>/2022/09/10/RepVGG%EF%BC%9AMaking%20VGG-style%20ConvNets%20Great%20Again/</url>
    <content><![CDATA[<p>RepVGG为了解决原始VGGNet网络模型较大、不便于部署以及性能比较差问题，训练时在VGG网络的 Block 块中加入了 Identity 和残差分支，解决性能差的问题。推理时通过“结构重参数化”将所有的网络层都转换为 Conv3x3，便于网络的部署和加速</p>
<a id="more"></a>
<ul>
<li>
<p>什么是RepVGG？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RepVGG-20230408140749.png" alt="" /></li>
<li>RepVGG主要为了解决原始VGGNet 网络模型较大、<strong>不便于部署</strong>以及<strong>性能比较差</strong>问题提出的一个VGG升级版本，已被YOLOv6使用</li>
<li>训练时在 VGG网络的 Block 块中加入了 Identity 和残差分支，解决性能差的问题。推理时通过“<strong>结构重参数化</strong>”将所有的网络层都转换为 Conv3x3，便于网络的部署和加速</li>
</ul>
</li>
<li>
<p>RepVGG的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RepVGG-20230408140749-1.png" alt="" /></li>
<li>为VGG每一个3x3卷积层添加平行的1x1卷积分支和恒等映射分支，构成一个 RepVGG Block</li>
<li>将20多层3x3卷积堆起来，分成5个stage，每个stage的第一 层是stride=2的降采样，每个卷积层用ReLU作为激活函数</li>
</ul>
</li>
<li>
<p>RepVGG如何进行“结构重参数化”？ ^mjns57</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ACNet-20230408142047.png" alt="ACNet-20230408142047" /></li>
<li>1.<strong>卷积层参数</strong>：上图是 REP-VGG 块的结构重参数化过程。为了易于可视化，我们假设 C2 = C1 = 2，因此3×3层具有四个3×3矩阵，而1×1层的核为2×2矩阵</li>
<li>2.<strong>BN 层参数</strong>：(1)由训练过程中，如何进行批规范化(Batch Normalization,BN)可知，BN 层为每个通道的数据进行规范化，每个通道需要 4 个参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>，输入通道 2 个则有 8 个参数；(2) 当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 均为 0 时，规范化后的数据还是原来的值，这可以用于模拟 identity 路径</li>
<li>3.<strong>融合卷积与 BN 层</strong>：(1)最难理解的是虚线红框部分，由原来的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 1 \times 1\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 3 \times 3\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> ，也就是单个卷积核由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3\times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，这是通过在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 四周补 0 做到的，因为补 0 后得到的卷积和是不变的；(2) 类似 ACNet的网络结构的过程，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext> </mtext><mi>μ</mi><mo separator="true">,</mo><mtext> </mtext><mi>σ</mi><mo separator="true">,</mo><mtext> </mtext><mi>γ</mi><mo separator="true">,</mo><mtext> </mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">\:\mu,\:\sigma,\:\gamma,\:\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 的部分参数用于重构卷积核的值，部分参数组合成卷积的偏置值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，并且每个通道 1 个值 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RepVGG-20230408140750-1.png" alt="RepVGG-20230408140750-1" /></li>
<li>4.<strong>利用卷积的可加性，融合多路径</strong>：对应同 size 卷积核的，可以利用卷积的可加性，将卷积融合，具体来说是卷积核矩阵对应相加，偏置值对应相加</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>结构重参数化</tag>
      </tags>
  </entry>
  <entry>
    <title>PRTR：Pose Recognition with Cascade Transformers</title>
    <url>/2022/09/08/PRTR%EF%BC%9APose%20Recognition%20with%20Cascade%20Transformers/</url>
    <content><![CDATA[<p>PRTR 是针对2D Pose Estimation 提出了<strong>基于 cascade transformer 结构的人体姿态估计网络</strong>，该网络首先使用 CNN 提取特征，然后使用 transformer 学习注意力，并最终使用类似 transformer-decoder 的方式逐个输出特征点位置</p>
<a id="more"></a>
<h1 id="什么是-prtr"><a class="markdownIt-Anchor" href="#什么是-prtr"></a> 什么是 PRTR？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PRTR-20230408154304.png" alt="" /></li>
<li>PRTR 是针对2D Pose Estimation 提出了<strong>基于 cascade transformer 结构的人体姿态估计网络</strong>，该网络首先使用 CNN 提取特征，然后使用 transformer 学习注意力，并最终使用类似 transformer-decoder 的方式逐个输出特征点位置</li>
<li>PRTR 是一个两阶段的模型，第一阶段使用 DETR 找到 human 位置，第二阶段对每个人预测关键点</li>
</ul>
<h1 id="prtr-的模型结构"><a class="markdownIt-Anchor" href="#prtr-的模型结构"></a> PRTR 的模型结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PRTR-20230408154305.png" alt="" /></li>
<li><strong>Person Detection Transformer</strong>：基于 DETR 的检测方法，用一个 CNN Backbone 提取 RGB feature，然后通过 encoder 编码上下文关系，decoder 预测 bbox，得到 bbox 后，对 original image 进行 crop</li>
<li><strong>Keypoint Detection Transformer</strong>：得到 crop 后的 image 和对应的 positional encoding 之后，送进 encoder 学习</li>
</ul>
<h1 id="prtr-的keypoint-detection-transformer部分如何训练-推理"><a class="markdownIt-Anchor" href="#prtr-的keypoint-detection-transformer部分如何训练-推理"></a> PRTR 的&quot;Keypoint Detection Transformer&quot;部分如何训练、推理？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PRTR-20230408154307.png" alt="" /></li>
<li><strong>训练</strong>：初始化<strong>可学习</strong>的 queries，然后训练 transformer，最后输出 N 个序列的预测集合，接着使用<strong>匈牙利匹配算法</strong>计算损失，更新网络</li>
<li><strong>推理</strong>：根据输入图片及学习到的 queries，得到图片所有关键点的位置</li>
</ul>
<h1 id="prtr-的-end2end-的模型结构"><a class="markdownIt-Anchor" href="#prtr-的-end2end-的模型结构"></a> PRTR 的 end2end 的模型结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PRTR-20230408154308.png" alt="" /></li>
<li>PRTR 根据自己的思想设计的另一个端到端的模型，该模型也是 2 阶段的过程，和原始模型区别在于其融合了多尺度特征</li>
</ul>
<h1 id="prtr-的-queries-与关键点的关系"><a class="markdownIt-Anchor" href="#prtr-的-queries-与关键点的关系"></a> PRTR 的 queries 与关键点的关系？</h1>
<ul>
<li><strong>queries 与关键点位置</strong>：Keypoint Detection Transformer 的 decoder 使用 100 个 queries，最后输出也是 100 个关键点的位置输出，将这些预测的关键点位置按类别可视化后，通过分析 queries 与类别的关系，可知 queries 输出的关键点一定程度反应其真实位置<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PRTR-20230408154308-1.png" alt="" /></li>
<li><strong>queries 与关键点类别</strong>：Keypoint Detection Transformer 的 decoder 使用 100 个 queries，最后输出也是 100 个关键点的类别输出，通过分析 queries 与类别的关系，可知特定的 queries 倾向输出特定的关键点<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PRTR-20230408154309.png" alt="" /></li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/368067142">【CVPR 2021】PRTR：基于transformer的2D Human Pose Estimation - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>RegNet：Designing Network Design Spaces</title>
    <url>/2022/08/19/RegNet%EF%BC%9ADesigning%20Network%20Design%20Spaces/</url>
    <content><![CDATA[<p>论文提出了一种新的网络设计范式，和以往研究不同的是他们没有专注于设计单个网络实例，而是设计出了参数化网络群的网络设计空间。这种新的网络设计范式结合了神经框架搜索(NAS)和手工设计网络的优点，精度和速度全面超越了EfficientNet</p>
<a id="more"></a>
<ul>
<li>
<p>什么是“设计空间设计”？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RegNet-20230521140029.png" alt="" /></li>
<li>设计空间是一个巨大的，可能无限的模型结构的总体。的核心观点是，我们可以从一个设计空间中对模型进行抽样，产生一个模型分布，然后利用经典的统计工具来分析设计空间。本文注意到，这和架构搜索（NAS）不同，架构搜索的目标是从空间中找到单个最佳模型</li>
<li>如图所示，本文使用的整体策略是渐进式地设计原始的、相对不受约束的简化版设计空间，同时保持或者提升设计空间的质量。每个设计步骤的目的都是发现设计准则，从而产生更简单或性能更强的模型</li>
</ul>
</li>
<li>
<p>设计空间的设计工具？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RegNet-20230521140030.png" alt="" /></li>
<li>为了评估和对比设计空间，RegNet 提出通过从设计空间采样一组模型，并描述由此产生的模型误差分布，来量化设计空间的质量。这种方法背后的关键是，与使用搜索和比较两个设计空间中的最佳模型相比，比较分布更加可靠且信息更丰富</li>
<li>图示展示了用个抽样模型计算的<strong>AnyNetX</strong>设计空间的统计结果。左：误差经验分布函数（EDF）是我们可视化设计空间质量的基本工具。在图例中，分别是最小误差和平均误差（对应于曲线下的区域）。中间：网络深度（块数）与误差的分布。右：第四阶段（）的块宽度分布与误差。蓝色阴影区域包含置信度的最佳模型（通过经验引导获得），黑色垂线是最可能的最优值</li>
</ul>
</li>
<li>
<p>设计空间的迭代思路？</p>
<ul>
<li>(1) 我们首先从设计空间中抽样和训练个模型，获得模型的分布</li>
<li>(2) 我们计算并绘制误差EDFs，以评估设计空间质量</li>
<li>(3) 我们可视化设计空间的各种属性，并使用经验准则监督</li>
<li>(4) 我们使用这些观察结果来精细化设计空间</li>
</ul>
</li>
<li>
<h2 id="什么是误差经验分布函数-edf"><a class="markdownIt-Anchor" href="#什么是误差经验分布函数-edf"></a> 什么是误差经验分布函数 (EDF)？</h2>
<pre><code>$$
F(e)=\dfrac&#123;1&#125;&#123;n&#125;\sum_&#123;i=1&#125;^&#123;n&#125;\mathbf&#123;1&#125;[e_i&lt;e]
$$
</code></pre>
<ul>
<li>表示错误率小于的模型百分比</li>
</ul>
</li>
<li>
<p>AnyNet 的设计空间？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RegNet-20230521140031.png" alt="" /></li>
<li>d代表block的数量，r代表分辨率简单理解为特征矩阵的高、宽，当步距s等于1时，输入输出的r保持不变，当s等于2时，输出的r为输入的一半。w代表特征矩阵的channel。g代表分组卷积中每组的通道数。b代表botleneck ratio即输出特征知阵的channel缩减为输入特征矩阵channel的1/b(因为我们知道resblock中常用操作就是先降维再升维)</li>
<li>AnyNetXA: d &lt;=16，W &lt;=1024 (8倍数), b={1,2,4}, g={1,2,4,8,16,32}，但是4个 stage 这样组合太多了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>16</mn><mo>⋅</mo><mn>128</mn><mo>⋅</mo><mn>3</mn><mo>⋅</mo><mn>6</mn><msup><mo stretchy="false">)</mo><mn>4</mn></msup><mo>≈</mo><mn>1</mn><msup><mn>0</mn><mn>18</mn></msup></mrow><annotation encoding="application/x-tex">(16\cdot128\cdot3\cdot6)^4\approx10^{18}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>AnyNetXB：现不同 stage 的 block 设置一样的 b，在 imagenet 上训练10个 epochs，跟搜索的结果差不多，所以就把所有 b 统一为一样的。感觉有点偷懒的嫌疑，毕竟算力有限</li>
<li>AnyNetXC：将所有 stage 中的 block 的 g 都设置为同一个参数后并没有什么明显的变化。并且作者发现当 g &gt; 1时，效果会更好</li>
<li>AnyNetXD：好的模型中 w 是呈现递增的趋势</li>
<li>AnyNetXE：好的模型 d 同样有递增的趋势 (这个趋势仅指 stage1到 stage3，不包括 stage4)</li>
<li>一点点增加约束，搜索空间迅速下降，最后的 RegNet 作者认为一个 stage 的所有 block 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 应该是一致的 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RegNet-20230521140033.png" alt="" /></li>
</ul>
</li>
<li>
<p>什么是 RegNet ？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RegNet-20230521140033-1.png" alt="" /></li>
<li>不同于 EfficientNet 使用 NAS 基于 baseline 网络去搜索深度、宽度、分辨率、成本和准确率、时间之间的关系，RegNet 连 baseline 也是在搜索的空间上</li>
<li>如上图分别是 3 个设计空间下，采样模型跑出的结果，看以看出从 A-&gt;B-&gt;C 搜索空间越来越小，模型性能越来越好</li>
</ul>
</li>
<li>
<p>RegNet 的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RegNet-20230521140034.png" alt="" /></li>
<li>基于搜索策略，RegNet 设计了 RegNetX 系列模型，在此基础上，每个 block 增加 SE 模块，产生 RegNetY 系列模型</li>
</ul>
</li>
<li>
<p>手工设计网络和 NAS 比较？</p>
<ul>
<li>相辅相成：现阶段的 NAS 的许多设定 (比如说 search space) 还是靠着人的智慧在设定，这代表 NAS 还是必须先借镜许多 handcraft 的 insight，另一方面，人类也会试图从 NAS 找出来的架构中得到一些 insight。因此，NAS 与 handcraft 目前可以说是相辅相成的</li>
<li>NAS 的优势在于找出对于任务最优势的架构，然而极强的目的性也带来了泛化性的不确定，可解释性比较差。但是其在object detection或 semantic segmentation中已经展现了强大的能力，泛化能力乍看无懈可击</li>
</ul>
</li>
</ul>
<p>参考</p>
<ol>
<li><a href="https://blog.csdn.net/qq_41917697/article/details/122799149">CNN卷积神经网络之RegNet_stem层_球场书生的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/qq_37541097/article/details/114362044">RegNet网络结构与搭建_太阳花的小绿豆的博客-CSDN博客</a></li>
<li><a href="https://jishuin.proginn.com/p/763bfbd2e354">从EfficientNet与RegNet出发，深入探讨CNN网络设计：Handcraft VS NAS-技术圈</a></li>
<li><a href="https://towardsdatascience.com/regnet-the-most-flexible-network-architecture-for-computer-vision-2fd757f9c5cd">RegNet：最灵活的计算机视觉网络架构 |作者：莱昂·西克 |迈向数据科学</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>EfficientNetV2：Smaller Models and Faster Training</title>
    <url>/2022/08/16/EfficientNetV2%EF%BC%9ASmaller%20Models%20and%20Faster%20Training/</url>
    <content><![CDATA[<p>EfficientNetv2在EfficientNetv1的基础上，通过搜索accuracy、parameter efficiency 以及 trainning efficiency 三个维度，提出Fused-MBConv，使得它具有更快的训练速度和更好的参数效率</p>
<a id="more"></a>
<ul>
<li>
<p>什么是 EfficientNetv2 ？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv2-20230411224601.png" alt="" /></li>
<li>EfficientNetv2在EfficientNetv1的基础上，通过搜索accuracy、parameter efficiency 以及 trainning efficiency 三个维度，提出Fused-MBConv，使得它具有更快的训练速度和更好的参数效率</li>
</ul>
</li>
<li>
<p>EfficientNetv2 的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv2-20230411224407.png" alt="" /></li>
<li>EfficientNetV2-S 架构，包含MBConv 和 FusedMBConv</li>
</ul>
</li>
<li>
<p>EfficientNetv2 的 Fused-MBConv?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv2-20230411224319.png" alt="" /></li>
<li><strong>DWConv 的局限性</strong>：与常规卷积相比，深度卷积的参数和FLOPS更少，但它们往往不能充分利用现代加速器</li>
<li><strong>Fused-MBConv</strong>：用单个常规组件3x3取代了 MBConv 中的分段 conv 3x3和扩展 conv 1x1</li>
<li>但是论文使用 Fused-MBConv 替换了不同 stage 上的 MBConv，发现在 1-5 之间效果是逐渐提升的，当增加到 7 时，准确率和性能都下降，所以最后结论是不能全部使用 Fused-MBConv，而是两个都使用，使用 NAS 搜索最佳搭配</li>
</ul>
</li>
<li>
<p>EfficientNetv2 “渐进学习”策略？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv2-20230411225457.png" alt="" /></li>
<li>当训练的图片尺寸较小时，使用较弱的数据增强 <code>augmentation</code> 能够达到更好的结果；当训练的图像尺寸较大时，使用更强的数据增强能够达到更好的接果，证明在训练不同尺寸的图像时，应该使用动态的正则方法（之前都是使用固定的正则方法）</li>
<li>如上图所示，在训练早期使用较小的训练尺寸以及较弱的正则方法 weak regularization，这样网络能够快速的学习到一些简单的表达能力。接着逐渐提升图像尺寸，同时增强正则方法 adding stronger regularization。这里所说的 regularization 包括 dropout rate，RandAugment magnitude 以及 mixup ratio</li>
</ul>
</li>
<li>
<p>EfficientNetv2 的 NAS Search？</p>
<ul>
<li>这次的<strong>优化目标联合了 accuracy、parameter efficiency 以及 trainning efficiency 三个维度</strong>，搜索空间如下<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">convolutional operation <span class="built_in">type</span> ：&#123;MBConv, Fused-MBConv&#125;</span><br><span class="line">number of layer</span><br><span class="line">kernel size ：&#123;3x3, 5x5&#125;</span><br><span class="line">expansion ratio (MBConv中第一个expand conv1x1或者Fused-MBConv中第一个expand conv3x3)： &#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>借助强化学习的思想，接着在搜索空间中随机采样了1000个模型，并针对每个模型训练10个epochs（使用较小的图像尺度）</li>
</ul>
</li>
<li>
<p>EfficientNetV2与 EfficientNet 的区别?</p>
<ul>
<li>EfficientNetV2在浅层网络中广泛使用 MBConv 和 Fused-MBConv</li>
<li>EfficientNetV2更偏向 MBConv 的较小的 expansion rario, 因为较小的 expansion ratio 往往具有较小的内存访问开销</li>
<li>EfficientNetV2更偏向更小的3 x3卷积核，但它增加了更多的层来补偿由于小卷积核导致的感受野减少</li>
<li>EfficientNetV2完全移除了原始EfficientNet中的最后一个stride-1阶段，这可能是由于其较大的参数大小和内存访问开销</li>
</ul>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://juejin.cn/post/7198821253037244453">EffiecientNetV2架构复现–CVPR2021 - 掘金</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>EfficientNetv1：Rethinking Model Scaling for Convolutional Neural Networks</title>
    <url>/2022/08/12/EfficientNetv1%EF%BC%9ARethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks/</url>
    <content><![CDATA[<p>使用&quot;神经结构搜索技术&quot;搜索网络的深度（网络层数）、宽度（channel数量）、分辨率(网络输入)，以在有限硬件资源的情况下，得到准确度最高的模型</p>
<a id="more"></a>
<ul>
<li>什么是 EfficientNet ?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv1-20230408140200.png" alt="" /></li>
<li><strong>模型缩放</strong>：指根据不同的资源限制（例如计算量、内存、延迟等），调整网络结构的过程，如深度（网络层数）、宽度（channel 数量）、分辨率 (网络输入)，但是传统的缩放策略只调整其中的一项，而忽略不同项之间的影响</li>
<li><strong>复合模型缩放</strong>：在给定资源预算的情况下，同时均匀地缩放网络的深度、宽度和分辨率，使得每个维度都能得到合理的增长。具体来说，EfficientNet 定义了一个复合系数用来控制缩放的程度。例如，如果我们想要使用2N 倍的计算资源，那么我们可以将网络深度乘以1.8，将网络宽度乘以1.1，将分辨率乘以1.2</li>
</ul>
</li>
<li>EfficientNet 如何确定“复合系数”？
<ul>
<li>如果彻底的去搜索宽度、深度、图片分辨率的各种组合，搜索空间将无限大，EfficientNet 按照以下公式定义这三个维度的缩放，可以看出使用<strong>相同系数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></strong> 缩放宽度、深度、图片分辨率，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mn>1.2</mn><mo separator="true">,</mo><mi>β</mi><mo>=</mo><mn>1.1</mn><mo separator="true">,</mo><mi>γ</mi><mo>=</mo><mn>1.15</mn></mrow><annotation encoding="application/x-tex">\alpha=1.2,\beta=1.1,\gamma=1.15</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">1</span><span class="mord">5</span></span></span></span>。基准模型 EfficientNet-B0就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\phi=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的参数上搜索得到，<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv1-20230411222032.png" alt="" /></li>
<li>EfficientNet-b0的结构[[MobileNetv2]]很类似，MBCConv借鉴Mobilev2“倒残差”瓶颈，并结合SEBlock</li>
<li>EfficientNet 有8个系列，分别从 b0-b7,，其中 b0是 baseline， b1-b7都是在 b0基础上对深度、宽度和分辨率进行调整<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Coefficients:   width,depth,res,dropout</span></span><br><span class="line"><span class="string">&#x27;efficientnet-b0&#x27;</span>: (<span class="number">1.0</span>, <span class="number">1.0</span>, <span class="number">224</span>, <span class="number">0.2</span>),</span><br><span class="line"><span class="string">&#x27;efficientnet-b1&#x27;</span>: (<span class="number">1.0</span>, <span class="number">1.1</span>, <span class="number">240</span>, <span class="number">0.2</span>),</span><br><span class="line"><span class="string">&#x27;efficientnet-b2&#x27;</span>: (<span class="number">1.1</span>, <span class="number">1.2</span>, <span class="number">260</span>, <span class="number">0.3</span>),</span><br><span class="line"><span class="string">&#x27;efficientnet-b3&#x27;</span>: (<span class="number">1.2</span>, <span class="number">1.4</span>, <span class="number">300</span>, <span class="number">0.3</span>),</span><br><span class="line"><span class="string">&#x27;efficientnet-b4&#x27;</span>: (<span class="number">1.4</span>, <span class="number">1.8</span>, <span class="number">380</span>, <span class="number">0.4</span>),</span><br><span class="line"><span class="string">&#x27;efficientnet-b5&#x27;</span>: (<span class="number">1.6</span>, <span class="number">2.2</span>, <span class="number">456</span>, <span class="number">0.4</span>),</span><br><span class="line"><span class="string">&#x27;efficientnet-b6&#x27;</span>: (<span class="number">1.8</span>, <span class="number">2.6</span>, <span class="number">528</span>, <span class="number">0.5</span>),</span><br><span class="line"><span class="string">&#x27;efficientnet-b7&#x27;</span>: (<span class="number">2.0</span>, <span class="number">3.1</span>, <span class="number">600</span>, <span class="number">0.5</span>),</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>EfficientNet 的 MBCConv 结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv1-20230411223536.png" alt="" /></li>
<li>类似 MobileV2“倒残差”瓶颈 ( Inverted Residuals Bottlenecks)结构，一样使用深度可分离卷积，有3个改变：(1)将 ReLU 激活函数缓存 Swish 激活函数；(2)不同的是在短连接部分使 SEBlock；(3)使用 DropConnect 方法来代替传统的 drop 方法</li>
</ul>
</li>
<li>EfficientNet 的 NAS Search？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientNetv1-20230411230618.png" alt="" /></li>
<li>EfficientNet 通过复合的缩放方式，优化模型的准确率、显存占比和速度</li>
</ul>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/137191387">细说EfficientNet - 知乎</a></li>
<li><a href="https://cloud.tencent.com/developer/article/2008405">一文读懂EfficientNet - 腾讯云开发者社区-腾讯云</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/619492606">解读《EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks》 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>SOTR：Segmenting Objects with Transformers</title>
    <url>/2022/08/10/SOTR%EF%BC%9ASegmenting%20Objects%20with%20Transformers/</url>
    <content><![CDATA[<p>SOTR 利用 transformer 将实例分割任务简化为 2 个过程，一是通过 transformer 预测每个实例的类别，二是通过多级上采样模块动态生成分割掩码</p>
<a id="more"></a>
<h1 id="什么是-sotr"><a class="markdownIt-Anchor" href="#什么是-sotr"></a> 什么是 SOTR？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOTR-20230408154925.png" alt="" /></li>
<li>SOTR 利用 transformer 将实例分割任务简化为 2 个过程，一是通过 transformer 预测每个实例的类别，二是通过多级上采样模块动态生成分割掩码</li>
<li>图片经过 FPN 的特征，对其进行序列化后得到 NxN 的序列，经过 transformer 后输出 NxN 个序列的结果，将原图 gt 实例某个序列上，计算损失并更新网络</li>
</ul>
<h1 id="sotr-的模型结构"><a class="markdownIt-Anchor" href="#sotr-的模型结构"></a> SOTR 的模型结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOTR-20230408154925.png" alt="" /></li>
<li><strong>BackBone</strong>：使用 FPN 生成 P2-P6 的多尺度特征</li>
<li><strong>Transformer</strong>：P2-P6 特征添加添加 Positional Embedding 后，输入 Transformer 进行学习，得到每张图的预测集合</li>
<li><strong>Multi-Level Upsampling Module</strong>：取出 BackBone 的 P 2、P 3、P 4 和 Transformer 的 P5，一起上采样到 P 2 分辨率进行合并，然后输出</li>
</ul>
<h1 id="sotr-的-twin-attention-模块"><a class="markdownIt-Anchor" href="#sotr-的-twin-attention-模块"></a> SOTR 的 Twin attention 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOTR-20230408154921.png" alt="" /></li>
<li>为了降低原始 transformer block 的计算成本，SOTR 将生成注意力的过程转为 2 次生成注意力的过程，第一次是生成行注意力，第二次生成列注意力。使得针对 HxW 个 token 生成序列时，复杂度由 O (HWxHW)变为 O (H^2 W+HW^2)</li>
<li>FFN 部分由 Linear 变为卷积实现</li>
</ul>
<h1 id="sotr-的-multi-level-updampling-module"><a class="markdownIt-Anchor" href="#sotr-的-multi-level-updampling-module"></a> SOTR 的 Multi-Level updampling module？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOTR-20230408154923.png" alt="" /></li>
<li><strong>原始特征</strong>：取出 BackBone 的 P 2、P 3、P 4 和 Transformer 的 P5，一起上采样到 P 2 分辨率进行合并</li>
<li><strong>动态卷积核</strong>：动态卷积核由 transformer 生成</li>
</ul>
<h1 id="sotr-的样本匹配"><a class="markdownIt-Anchor" href="#sotr-的样本匹配"></a> SOTR 的样本匹配？</h1>
<ul>
<li>图片经过 FPN 的特征，对其进行序列化后得到 NxN 的序列，经过 transformer 后输出 NxN 个序列的结果，将原图 gt 实例某个序列上，计算损失并更新网络</li>
<li>直接使用位置映射样本，是因为 SOTR 只使用 transformer 的 encoder 部分，transformer 不会打乱序列的顺序，只会使用自注意力机制更新自己的隐向量</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/m0_61899108/article/details/121598645">【论文笔记】SOTR: Segmenting Objects with Transformers_m0_61899108的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/424036708">【分割 Transformer】SOTR: Segmenting Objects with Transformers - 知乎</a></li>
<li>[SOTR:Segmenting Objects with Transformers [ICCV 2021] | Tianliang (<a href="http://starlg.cn">starlg.cn</a>)](<a href="https://www.starlg.cn/2022/05/19/SOTR/">SOTR:Segmenting Objects with Transformers [ICCV 2021] | Tianliang</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>DETR：End-to-End Object Detection with Transformers</title>
    <url>/2022/07/02/DETR%EF%BC%9AEnd-to-End%20Object%20Detection%20with%20Transformers/</url>
    <content><![CDATA[<p><strong>将 transformers 运用到了 object detection 领域，取代了现在的模型需要手工设计的工作（非极大值抑制和 anchor generation）</strong>，并且取得了不错的结果。在 object detection 上 DETR 准确率和运行时间上和 Faster RCNN 相当；将模型应用到全景分割任务上，DETR 表现甚至还超过了其他的 baseline</p>
<a id="more"></a>
<h1 id="什么是-detr"><a class="markdownIt-Anchor" href="#什么是-detr"></a> 什么是 DETR？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152356.png" alt="DETR-20230408152356" /></li>
<li><strong>将 transformers 运用到了 object detection 领域，取代了现在的模型需要手工设计的工作（非极大值抑制和 anchor generation）</strong>，并且取得了不错的结果。在 object detection 上 DETR 准确率和运行时间上和 Faster RCNN 相当；将模型应用到全景分割任务上，DETR 表现甚至还超过了其他的 baseline</li>
<li>图片经过 CNN 学习后，输出 (B, C, H, W)特征，HxW=S 视为 token 的个数得到序列 (B, S, C)，并使用 transformer 学习，然后产生 N (N 可以不等于 S，一般是 100) 个 grid 预测，分别预测其类别与 box，然后使用双边匹配算法（匈牙利算法）匹配预测结果与 gt，计算损失，训练网络</li>
</ul>
<h1 id="detr-的模型结构"><a class="markdownIt-Anchor" href="#detr-的模型结构"></a> DETR 的模型结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152356-1.png" alt="DETR-20230408152356-1" /></li>
<li><strong>CNN</strong>：图像经过 CNN 学习后，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2048</mn><mo separator="true">,</mo><mi>H</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo separator="true">,</mo><mi>W</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2048,H/32,W/32)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">4</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mclose">)</span></span></span></span> 的输出，然后和 position encoding 相加，输入 transformer-encoder</li>
<li><strong>transformer-encoder</strong>：将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>H</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo separator="true">,</mo><mi>W</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(H/32,W/32)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mclose">)</span></span></span></span> 作为 token 数量，然后使用 transfor 进行学习，输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mi>H</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo>×</mo><mi>W</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B,H/32 \times W/32,C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span></li>
<li><strong>transformer-decoder</strong>：包括两部分输入，来自 transformer-encoder 的输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mi>H</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo>×</mo><mi>W</mi><mi mathvariant="normal">/</mi><mn>32</mn><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B,H/32 \times W/32,C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord">3</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span> 和 N 个 object queries，object queries 是训练时随机初始化，训练完成后直接得到该值。在两个输入下的 transformer-decoder 输出 N 个预测结果</li>
<li><strong>FFN</strong>：前向计算网络，用于产生所有 token 的类别及 box 预测</li>
</ul>
<h1 id="detr-的-transformer-部分的结构"><a class="markdownIt-Anchor" href="#detr-的-transformer-部分的结构"></a> DETR 的 transformer 部分的结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152357.png" alt="DETR-20230408152357" /></li>
<li>不同于原始的 transformer ，DETR 在以下方面对其进行修改</li>
<li>1）<strong>positional embeding</strong>： DETR 的只作用于 encoder 的 Q 和 encoder-decoder K，原始 transformer 作用于所有的 Q、K、V</li>
<li>2）<strong>object queries</strong>：DETR 的 object queries 一次性全部输入 decoder，而原始 transformer 是通过 shifted right 一个一个地移动</li>
</ul>
<h1 id="detr-的-transformer-decoder-上-object-queries-的作用"><a class="markdownIt-Anchor" href="#detr-的-transformer-decoder-上-object-queries-的作用"></a> DETR 的 transformer decoder 上 object queries 的作用？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152357.png" alt="DETR-20230408152357" /></li>
<li>Object queries 是 N 个 learnable embedding，训练刚开始时可以随机初始化，比如 transformer-encoder 输出是 (B, N’, C)，则 Object queries 生成后得到大小为 (B, N, C)数，相当于用 Object queries 去<strong>查询</strong> transformer-encoder 输出的目标类别和 box，N 一般取 100</li>
<li>训练时随机初始化 Object queries，训练过程中学习这个 embedding，训练完成后，embedding 确定下来，后续推理直接使用</li>
</ul>
<h1 id="detr-如何进行样本分配"><a class="markdownIt-Anchor" href="#detr-如何进行样本分配"></a> DETR 如何进行样本分配？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-02%2022.59.03.excalidraw.png" alt="" /></li>
<li>DETR 的 transformer decoder 输出 N 个目标的预测集合，下一步是如何将这 N 个预测结果分配到 gt 目标上去，以便计算损失，驱使网络学习</li>
<li><strong>假设真实目标有 m 个，DETR 认为样本是预测结果 (N) 和 GT（m+1） 的二分图匹配问题，分配的约束条件是最小化损失</strong>，之所以是 m+1，是因为 N 个预测结果大部分都是背景，所以增加一个背景目标，用于映射不需要计算损失的预测结果。比如上图有 5 个预测，图片上有 3 个目标，其中 2 个目标映射到背景上，其余目标映射到具体 gt 上</li>
<li>计算 gt 目标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与预测集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">\hat y_{\sigma(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04964em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> 的损失，对于那些要学习的预测，获得其对应的预测是目标类别的概率，然后计算框损失和概率损失。这也就是说不仅框要近，类别也要基本一致，是最好的<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mover accent="true"><mi>σ</mi><mo>^</mo></mover><mo>=</mo><mi><munder><mo><mi mathvariant="normal">arg</mi><mo>⁡</mo><mi mathvariant="normal">min</mi><mo>⁡</mo></mo><mrow><mi>σ</mi><mo>∈</mo><msub><mi mathvariant="fraktur">G</mi><mi>N</mi></msub></mrow></munder></mi><munderover><mo>∑</mo><mi>i</mi><mi>N</mi></munderover><msub><mi mathvariant="script">L</mi><mi mathvariant="normal">match</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">h</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="normal">y</mi><mi mathvariant="normal">i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="normal">y</mi><mo>^</mo></mover><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="normal">i</mi><mo stretchy="false">)</mo></mrow></msub><mo fence="true">)</mo></mrow><mo>=</mo><mo>−</mo><msub><mn>1</mn><mrow><mo fence="true">{</mo><msub><mi mathvariant="normal">c</mi><mi mathvariant="normal">i</mi></msub><mo mathvariant="normal">≠</mo><mi mathvariant="script">D</mi><mo fence="true">}</mo></mrow></msub><msub><mover accent="true"><mi mathvariant="normal">p</mi><mo>^</mo></mover><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="normal">i</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="normal">c</mi><mi mathvariant="normal">i</mi></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mn>1</mn><mrow><mo fence="true">{</mo><msub><mi mathvariant="normal">c</mi><mi mathvariant="normal">i</mi></msub><mo mathvariant="normal">≠</mo><mi mathvariant="script">D</mi><mo fence="true">}</mo></mrow></msub><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">b</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">x</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="normal">b</mi><mi mathvariant="normal">i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="normal">b</mi><mo>^</mo></mover><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="normal">i</mi><mo stretchy="false">)</mo></mrow></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp; \hat{\sigma}=\underset{\sigma\in\mathfrak{G}_N}{\operatorname{arg}\operatorname*{min}}\sum_i^N\mathcal{L}_{\operatorname{match}}(y_i,\hat{y}_{\sigma(i)})\\\\ &amp; \mathcal{L}_{\mathrm{match}}\left(\mathrm{y}_\mathrm{i},\hat{\mathrm{y}}_{\sigma(\mathrm{i})}\right)=-1_{\left\{\mathrm{c}_\mathrm{i}\neq\mathcal{D}\right\}}\hat{\mathrm{p}}_{\sigma(\mathrm{i})}\left(\mathrm{c}_\mathrm{i}\right)+1_{\left\{\mathrm{c}_\mathrm{i}\neq\mathcal{D}\right\}}\mathcal{L}_{\mathrm{box}}\left(\mathrm{b}_\mathrm{i},\hat{\mathrm{b}}_{\sigma(\mathrm{i})}\right)\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.006025000000001em;vertical-align:-3.2530125000000005em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7530125000000005em;"><span style="top:-5.7530125000000005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"></span></span><span style="top:-3.3353435000000005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"></span></span><span style="top:-1.5253434999999997em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2530125000000005em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7530125000000005em;"><span style="top:-5.7530125000000005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.155573em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathfrak mtight">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.044732em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">h</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.5253434999999997em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">h</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathrm mtight">i</span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">{</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.02778em;">D</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">}</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">p</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathrm mtight">i</span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathrm">c</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">{</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.02778em;">D</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">}</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathrm mtight">i</span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2530125000000005em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="detr-的损失函数"><a class="markdownIt-Anchor" href="#detr-的损失函数"></a> DETR 的损失函数？</h1>
<ul>
<li>样本匹配完成之后，使用以下公式计算损失，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">H</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathcal{L}_{\mathrm{Humerian}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">H</span><span class="mord mathrm mtight">u</span><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight">i</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为总损失，可以看到他计算了 N 个输出的类别损失和匹配 gt 输出的 box 损失，其中 box 损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">b</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">x</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="normal">b</mi><mi mathvariant="normal">i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="normal">b</mi><mo>^</mo></mover><mover accent="true"><mi>σ</mi><mo>^</mo></mover></msub><mrow><mo fence="true">(</mo><mi mathvariant="normal">i</mi><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">{\mathcal{L}}_{\mathrm{box}}\left(\mathrm{b}_{\mathrm{i}},{\hat{\mathrm{b}}_{\hat{\sigma}}}\left(\mathrm{i}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">^</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathrm">i</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span> 使用 GIOU loss+L1 loss 计算框损失，其中 IOU 损失对于 Scale 不敏感，L1 损失对于 Scale 敏感<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">H</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">m</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">n</mi></mrow></msub><mrow><mo fence="true">(</mo><mi mathvariant="bold">y</mi><mo separator="true">,</mo><mover accent="true"><mi mathvariant="bold">y</mi><mo>^</mo></mover><mo fence="true">)</mo></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><mo fence="true">[</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mover accent="true"><mi mathvariant="bold">p</mi><mo>^</mo></mover><mrow><mover accent="true"><mi mathvariant="bold">σ</mi><mo>ˉ</mo></mover><mrow><mo fence="true">(</mo><mi>i</mi><mo fence="true">)</mo></mrow></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mn mathvariant="bold">1</mn><mrow><mo fence="true">{</mo><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><mo mathvariant="normal">≠</mo><mi mathvariant="normal">∅</mi><mo fence="true">}</mo></mrow></msub><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">b</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">x</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">b</mi><mi>i</mi></msub><mo separator="true">,</mo><mover accent="true"><msub><mi mathvariant="bold">b</mi><mover accent="true"><mi>σ</mi><mo>ˉ</mo></mover></msub><mo>^</mo></mover><mrow><mo fence="true">(</mo><mi mathvariant="bold">i</mi><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">b</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">x</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="normal">b</mi><mi mathvariant="normal">i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="normal">b</mi><mo>^</mo></mover><mover accent="true"><mi>σ</mi><mo>^</mo></mover></msub><mrow><mo fence="true">(</mo><mi mathvariant="normal">i</mi><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>=</mo><msub><mi>λ</mi><mrow><mi mathvariant="normal">i</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">n</mi></mrow></msub><msub><mi mathvariant="script">L</mi><mrow><mi mathvariant="normal">i</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">n</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="normal">b</mi><mi mathvariant="normal">i</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="normal">b</mi><mo>^</mo></mover><mrow><mi>σ</mi><mrow><mo fence="true">(</mo><mi mathvariant="normal">i</mi><mo fence="true">)</mo></mrow></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mi>λ</mi><mrow><mi mathvariant="normal">L</mi><mn>1</mn></mrow></msub><msub><mrow><mo fence="true">∥</mo><msub><mi mathvariant="normal">b</mi><mi mathvariant="normal">i</mi></msub><mo>−</mo><msub><mover accent="true"><mi mathvariant="normal">b</mi><mo>^</mo></mover><mrow><mi>σ</mi><mrow><mo fence="true">(</mo><mi mathvariant="normal">i</mi><mo fence="true">)</mo></mrow></mrow></msub><mo fence="true">∥</mo></mrow><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp; \mathcal{L}_{\mathrm{Humerian}}\left(\mathbf{y},\hat{\mathbf{y}}\right)=\sum\limits_{i=1}^{N}\left[-\log\hat{\mathbf{p}}_{\bar{\mathbf{\sigma}}\left(i\right)}\left(\mathbf{c}_{i}\right)+\mathbf{1}_{\left\{\mathbf{c}_{i}\neq\varnothing\right\}}\mathcal{L}_{\mathrm{box}}\left(\mathbf{b}_{i},\hat{\mathbf{b}_{\bar{\sigma}}}\left(\mathbf{i}\right)\right)\right]\\\\ &amp; {\mathcal{L}}_{\mathrm{box}}\left(\mathrm{b}_{\mathrm{i}},{\hat{\mathrm{b}}_{\hat{\sigma}}}\left(\mathrm{i}\right)\right)=\lambda_{\mathrm{ion}}{\mathcal{L}}_{\mathrm{ion}}\left(\mathrm{b}_{\mathrm{i}},{\hat{\mathrm{b}}_{\sigma\left(\mathrm{i}\right)}}\right)+\lambda_{\mathrm{L1}}\left\|\mathrm{b}_{\mathrm{i}}-{\hat{\mathrm{b}}_{\sigma\left(\mathrm{i}\right)}}\right\|_{1}\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.079695000000001em;vertical-align:-3.2898475000000005em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7898475000000005em;"><span style="top:-5.7898475000000005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"></span></span><span style="top:-3.3721785000000004em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"></span></span><span style="top:-1.5382034999999996em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2898475000000005em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7898475000000005em;"><span style="top:-5.7898475000000005em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">H</span><span class="mord mathrm mtight">u</span><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight">i</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">p</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">ˉ</span></span></span></span></span></span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mathnormal mtight">i</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">c</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">{</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">c</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord amsrm mtight">∅</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">}</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24744599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">ˉ</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathbf">i</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span><span style="top:-1.5382034999999996em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">^</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathrm">i</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathrm mtight">i</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">L</span><span class="mord mathrm mtight">1</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">b</span></span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathrm mtight">i</span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.2486069999999999em;"><span style="top:-2.0002850000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6997149999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2898475000000005em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="detr-为什么可以不使用-nms"><a class="markdownIt-Anchor" href="#detr-为什么可以不使用-nms"></a> DETR 为什么可以不使用 NMS？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152434.png" alt="DETR-20230408152434" /></li>
<li>上图是每个编码器之后的 AP、AP 50 性能，可以看出当编码层大于 3 后，使用 NMS 和不使用 NMS 的效果是相近的，所以去掉NMS</li>
</ul>
<h1 id="detr-位置编码-positional-encodings的作用"><a class="markdownIt-Anchor" href="#detr-位置编码-positional-encodings的作用"></a> DETR 位置编码 (positional encodings)的作用？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152435.png" alt="DETR-20230408152435" /></li>
<li><strong>生成方式</strong>：DETR的 position encoding 采用原始 Transformer 论文的固定 position encoding，即对于每个 HW 维向量，用不同频率的 sin 函数对高 (H)这个维度生成 d/2 维的 position encoding，用不同频率 cos 函数对宽 (W)这个维度生成 d/2维的 position encoding，然后将两个的 position encoding concat 成 d维的 position encoding</li>
<li><strong>作用</strong>：看上表可知，对比不增加 positional encodings 的模型，增加了的模型效果更好，还有一种是增加可学习的 position encoding，其效果和 2D 嵌入差不多，因为 2D 嵌入成本更低，所以使用该方法。增加 position encoding 对目标检测这类位置敏感的模型提升较大</li>
</ul>
<h1 id="detr-如何应用到全景分割"><a class="markdownIt-Anchor" href="#detr-如何应用到全景分割"></a> DETR 如何应用到全景分割？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152435-1.png" alt="DETR-20230408152435-1" /></li>
<li>图片经过 CNN、transformer 后，得到 (N, M, H/32, W/32)的输出，通过 Restnet featrues 模块预测每张图的 Mask 结果，一张图预测一个 Mask，即得到一张图的全景分割</li>
<li>Restnet featrues 模块主要功能：还原分辨率及降低通道数M</li>
</ul>
<h1 id="什么是二分图"><a class="markdownIt-Anchor" href="#什么是二分图"></a> 什么是二分图？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152436.png" alt="DETR-20230408152436" /></li>
<li>设 G=(V, E)是一个无向图，如果顶点 VV 可分割为两个互不相交的子集 (A, B)，并且图中的每条边（i，j）所关联的两个顶点 i 和 j 分别属于这两个不同的顶点集 (i∈A, j∈B)，则称图 G 为一个二分图。简而言之，就是<strong>顶点集V可分割为两个互不相交的子集，并且图中每条边依附的两个顶点都分属于这两个互不相交的子集，两个子集内的顶点不相邻</strong></li>
<li>上图只有 1 满足二分图，其余都不是二分图</li>
</ul>
<h1 id="什么是二分图匹配"><a class="markdownIt-Anchor" href="#什么是二分图匹配"></a> 什么是二分图匹配？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152436-1.png" alt="DETR-20230408152436-1" /></li>
<li><strong>匹配</strong>：在图论中，一个“匹配”就是一个“边”的集合，其中任意两条边都没有公共顶点</li>
<li><strong>最大匹配</strong>：一个图的匹配集合中，所含匹配边数最多的匹配，或者说覆盖的点最多，称为这个图的最大匹配</li>
<li><strong>完美匹配</strong>：当一个图的匹配覆盖了所有的点，那么它就是一个完美匹配</li>
<li>上图中的“一个匹配”中就仅是一个普通的匹配，而且很容易发现一条增广路径：<strong>2-B-5-C</strong>，然后就得到了最后的“最大匹配”的结果</li>
</ul>
<h1 id="什么是匈牙利算法km-algorithm"><a class="markdownIt-Anchor" href="#什么是匈牙利算法km-algorithm"></a> 什么是匈牙利算法（KM Algorithm）？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DETR-20230408152437.png" alt="DETR-20230408152437" /></li>
<li>二分图匹配常用的算法，是在二分图中寻找增广路，并修改边的匹配情况，如果没有增广路了，那么这张图就达到最大匹配了</li>
<li><strong>增广路</strong>：若 P 是图 G 中一条连通两个未匹配顶点的路径，并且属于 M 的边和不属于 M 的边 (即已匹配和待匹配的边)在 P 上交替出现，则称 P 为相对于 M 的一条增广路径，上图右边就是增广路径</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/267156624">用Transformer做object detection：DETR - 知乎</a></li>
<li><a href="https://blog.csdn.net/baidu_36913330/article/details/120495817">深度学习之目标检测（十一）–DETR详解_木卯_THU的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/402091571">二分图与最大匹配 - 知乎</a></li>
<li><a href="https://www.zhihu.com/question/21401775">ACM中二分图匹配主要可以解决哪些问题？ - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>vit：An Image is Worth 16x16 Words：Transformers for Image Recognition at Scale</title>
    <url>/2022/06/23/vit%EF%BC%9AAn%20Image%20is%20Worth%2016x16%20Words%EF%BC%9ATransformers%20for%20Image%20Recognition%20at%20Scale/</url>
    <content><![CDATA[<p>一直以来都是使用卷积来处理图像数据，即使后面提出空洞卷积、特征金字塔来、注意力机制缓解其感受野受限，但是还是使用卷积计算去提取图像特征，<strong>受 NLP 中 transformer 的影响，VIT 将图像拆分为块 (patch)，并将图像数据学习转为图像块序列的学习问题</strong>，这里图像块 (patches) 的处理方式同 NLP 的标记 (tokens)</p>
<a id="more"></a>
<h1 id="什么是-vit-vision-in-transformer"><a class="markdownIt-Anchor" href="#什么是-vit-vision-in-transformer"></a> 什么是 vit (vision in transformer)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/vit-20230408150924.png" alt="" /></li>
<li>一直以来都是使用卷积来处理图像数据，即使后面提出空洞卷积、特征金字塔来、注意力机制缓解其感受野受限，但是还是使用卷积计算去提取图像特征</li>
<li><strong>受 NLP 中 transformer 的影响，VIT 将图像拆分为块 (patch)，并将图像数据学习转为图像块序列的学习问题</strong>，这里图像块 (patches) 的处理方式同 NLP 的标记 (tokens)</li>
<li>注意：Transformers 缺乏 CNN 固有的一些归纳偏置 (inductive biases) —— 如平移等效性和局部性 (translation equivariance and locality)，因此在数据量不足时，训练不能很好地泛化</li>
</ul>
<h1 id="vit-如何将-2d-图像转为-transformer-输入"><a class="markdownIt-Anchor" href="#vit-如何将-2d-图像转为-transformer-输入"></a> Vit 如何将 2D 图像转为 transformer 输入？</h1>
<ul>
<li>tansformer 是 3D 输入的，即 (B, S, L)，分别表示 batch size、sequence size、sequence length，计算机视觉的输入一般是 (B, C, H, W)，从 (B, C, H, W)-&gt; (B, S, L)的过程中，可以认为 B 不变，C 表示 L，关键是如何将 （H，W）转为 S？</li>
<li>对于 2D 的图像，将其拆分成多个 PxP 的互不重叠区域，则共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>H</mi><mi>W</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>P</mi><mo>×</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=HW/(P\times P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span> 个区域，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B, C, H, W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span> 可被拆分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo>×</mo><mi>P</mi><mo>×</mo><mi>P</mi><mo separator="true">,</mo><mi>H</mi><mi>W</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>P</mi><mo>×</mo><mi>P</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B, C\times P\times P, HW/(P\times P))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> ，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B, C&#x27;, S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span> ，这就可以被 tansformer 接收</li>
<li>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmbedLayer</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, args</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(EmbedLayer, self).__init__()</span><br><span class="line">        self.args = args</span><br><span class="line">        <span class="comment"># 卷积获得图片的所有tokens,每个大小是patch_size</span></span><br><span class="line">        self.conv1 = nn.Conv2d(args.n_channels, args.embed_dim, kernel_size=args.patch_size, stride=args.patch_size) </span><br><span class="line">        self.cls_token = nn.Parameter(torch.zeros(<span class="number">1</span>, <span class="number">1</span>, args.embed_dim), requires_grad=<span class="literal">True</span>)  <span class="comment"># Cls Token</span></span><br><span class="line">        self.pos_embedding = nn.Parameter(torch.zeros(<span class="number">1</span>, (args.img_size // args.patch_size) ** <span class="number">2</span> + <span class="number">1</span>, args.embed_dim), requires_grad=<span class="literal">True</span>)  <span class="comment"># Positional Embedding，这里是可学习的pos_embedding</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        x = self.conv1(x)  <span class="comment"># B C IH IW -&gt; B E IH/P IW/P</span></span><br><span class="line">        x = x.reshape([x.shape[<span class="number">0</span>], self.args.embed_dim, -<span class="number">1</span>])  <span class="comment"># B E IH/P IW/P -&gt; B E S</span></span><br><span class="line">        x = x.transpose(<span class="number">1</span>, <span class="number">2</span>)  <span class="comment"># B E S -&gt; B S E</span></span><br><span class="line">        x = torch.cat((torch.repeat_interleave(self.cls_token, x.shape[<span class="number">0</span>], <span class="number">0</span>), x), dim=<span class="number">1</span>) <span class="comment"># 加上cls_token</span></span><br><span class="line">        x = x + self.pos_embedding <span class="comment"># 加上pos_embedding</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="vit-的结构"><a class="markdownIt-Anchor" href="#vit-的结构"></a> Vit 的结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/vit-20230408150924.png" alt="" /></li>
<li><strong>输入</strong>：输入图片 (B, C, H, W)，经过 Patch 对图像分块，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mi>H</mi><mi>W</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>P</mi><mo>×</mo><mi>P</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>C</mi><mo>×</mo><mi>P</mi><mo>×</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B, HW/(P\times P), C\times P\times P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>，将其类比为 (B, N, L)，然后增加 Position Embeddings 和 cls_token ，最终 Encoder 输入变为：(B, N+1, L)</li>
<li><strong>Encoder</strong>：对输入 (B, N+1, L)，使用 transformer 学习 N+1个 patch 的全局注意力，输出是(B, N+1, L)</li>
<li><strong>Decoder</strong>：从 (B, N+1, L)取出 cls_token，得到 (B, 1, L)，然后使用 Linear 编码该特征，输出 (B, L’)，L’为类别数量，最后使用 softmax 进行分类</li>
</ul>
<h1 id="vit-为什么要加-cls_token-节点"><a class="markdownIt-Anchor" href="#vit-为什么要加-cls_token-节点"></a> Vit 为什么要加 Cls_token 节点？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Vit-20230408150954.png" alt="" /></li>
<li>经过 VIT 的编码器后，得到 N+1 个 Patch 的隐向量，即 (B，N+1，L)，论文使用 2 种方法去获得最后的分类结果</li>
<li><strong>方法 1</strong>：从训练开始就没有增加cls_token，然后对N个L取平均，得到一张图的向量表示，即(B，N，L)-&gt;(GAP)-&gt;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mtext>，</mtext><mn>1</mn><mtext>，</mtext><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mo stretchy="false">(</mo><msub><mi>L</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mover accent="true"><mi>L</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B，1，\sum_{i=1}^N(L_i)/N )=(B,\hat L)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">，</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">L</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，然后对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mover accent="true"><mi>L</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(B,\hat L)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">L</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>进行分类</li>
<li><strong>方法2</strong>：增加cls_token，然后只取cls_token进行分类</li>
<li>方法 1 是所有隐向量的线性组合，表达能力弱，方法 2 是网络学习的一部分，更有效，成本更低</li>
</ul>
<h1 id="vit-为什么要使用-position-embedding"><a class="markdownIt-Anchor" href="#vit-为什么要使用-position-embedding"></a> Vit 为什么要使用 Position Embedding？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Vit-20230408150954-1.png" alt="" /></li>
<li>不同于 CNN，Transformer 需要位置嵌入来编码 patch tokens 的位置信息，这主要是由于 自注意力 的 扰动不变性 (Permutation-invariant)，即打乱 Sequence 中 tokens 的顺序并不会改变结果，若不给模型提供图像块的位置信息，那么模型就需要通过图像块的语义来学习拼图，这就额外增加了学习成本。表现为如果不加位置编码，可能出现全部序列都预测出来，但是位置不正确</li>
<li>论文比较了4种嵌入编码的方式，效果差不多，因为分类任务对位置信息不敏感，如果是其他的transformer处理的任务，如果不加，效果很差</li>
</ul>
<h1 id="vit-上不同网络位置的-transoformer-block-在注意力上有什么差异"><a class="markdownIt-Anchor" href="#vit-上不同网络位置的-transoformer-block-在注意力上有什么差异"></a> Vit 上不同网络位置的 transoformer block 在注意力上有什么差异？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Vit-20230408150955.png" alt="" /></li>
<li>Mean Attention Distance主要体现自注意力机制的影响范围，比如认定注意力&gt;0.5的两个位置形成注意力，然后计算满足这个阈值的位置平均距离，这就类比于 CNN 的感受野。结果表明：<strong>前面层的 “感受野” 虽然差异很大，但总体相比后面层 “感受野” 较小；而模型后半部分 “感受野” 基本覆盖全局，和 CNN 比较类似，说明 ViT 也最后学习到了类似的范式</strong></li>
</ul>
<h1 id="vit-与-cnn-的区别"><a class="markdownIt-Anchor" href="#vit-与-cnn-的区别"></a> Vit 与 CNN 的区别？</h1>
<ul>
<li><strong>归纳偏置 (Inductive bias)</strong>：Vision Transformer 的图像特定归纳偏置比 CNN 少得多。在 CNN 中，局部性、二维邻域结构和平移等效性存在于整个模型的每一层中。而在 ViT 中，只有 MLP 层是局部和平移等变的，因为自注意力层都是全局的。二维邻域结构的使用非常谨慎：在模型开始时通过将图像切分成块，并在微调时调整不同分辨率图像的位置嵌入 (如下所述)。此外，初始化时的位置嵌入不携带有关图像块的 2D 位置的信息，图像块之间的所有空间关系都必须从头开始学习</li>
<li><strong>混合架构 (Hybrid Architecture)</strong>：作为原始图像块的替代方案，输入序列可由 CNN 的特征图构成。在这种混合模型中，图像块嵌入投影被用在 经 CNN 特征提取的块 而非 原始输入图像块。作为一种特殊情况，块的空间尺寸可以为 ，这意味着输入序列是通过 简单地将特征图的空间维度展平并投影到 Transformer 维度 获得的。然后，如上所述添加了分类输入嵌入和位置嵌入，再将三者组成的整体馈入 Transformer 编码器。简单来说，就是先用 CNN 提取图像特征，然后由 CNN 提取的特征图构成图像块嵌入。由于 CNN 已经将图像降采样了</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_39478403/article/details/118704747">https://blog.csdn.net/qq_39478403/article/details/118704747</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>SETR：Rethinking Semantic Segmentation from a Sequence-to-Sequence Perspective with Transformers</title>
    <url>/2022/06/20/SETR%EF%BC%9ARethinking%20Semantic%20Segmentation%20from%20a%20Sequence-to-Sequence%20Perspective%20with%20Transformers/</url>
    <content><![CDATA[<p>一直以来，分割都是在 FCN 的基础上搭建 Encoder-Decoder 进行的，基于 CNN 的缺点，虽然有设计方法取增大感受野、引入注意力机制，但还是没有背离这个规则。<strong>SETR 以 transformer 替代 CNN 的 Encoder 部分</strong>，将 2D 图片问题转为序列注意力构建问题，能在保持分辨率不变的情况下进行特征学习，最后使用 CNN 类似的金字塔结构还原分辨率</p>
<a id="more"></a>
<h1 id="什么是-setr"><a class="markdownIt-Anchor" href="#什么是-setr"></a> 什么是 SETR？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230401145724.png" alt="" /></li>
<li>一直以来，分割都是在 FCN 的基础上搭建 Encoder-Decoder 进行的，基于 CNN 的缺点，虽然有设计方法取增大感受野、引入注意力机制，但还是没有背离这个规则</li>
<li><strong>SETR 以 transformer 替代 CNN 的 Encoder 部分</strong>，将 2D 图片问题转为序列注意力构建问题，能在保持分辨率不变的情况下进行特征学习，最后使用 CNN 类似的金字塔结构还原分辨率</li>
</ul>
<h1 id="setr-的模型结构"><a class="markdownIt-Anchor" href="#setr-的模型结构"></a> SETR 的模型结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230401145718.png" alt="" /></li>
<li><strong>输入</strong>：图像 (B, C,H, W)，需要对图像进行 Patch 化，然后加入 Position embedding，得到 (B, S, L)</li>
<li><strong>Encoder</strong>：以 tansformer block 搭建，输入 (B, S, L)，输出也是 (B, S, L)</li>
<li><strong>Decoder</strong>：将 Encoder 输出 (B, S, L)转为 4D 数据 (B, H/16, W/16, C)，然后使用 3 种分辨率上采样方法验证 Decoder 效果</li>
</ul>
<h1 id="setr-的-decoder-设计"><a class="markdownIt-Anchor" href="#setr-的-decoder-设计"></a> SETR 的 Decoder 设计？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230401145650.png" alt="" /></li>
<li>Encoder 输出 (B, H/16, W/16, C)数据， SETR 设计了三种解码器上采样方法还原分辨率，实验证明 PUP 效果更好，最终采样该方法</li>
<li><strong>最原始上采样 (Naive upsampling)</strong>：通过简单的1x1卷积加上双线性插值来实现图像像素恢复</li>
<li><strong>渐进式上采样 (Progressive UPsampling, PUP)</strong>：一步到位式的上采样可能会产生大量的噪声，渐进式上采样则可以缓解这种问题。每一次上采样只恢复上一步图像的2倍，这样经过4次操作就可以回复原始图像</li>
<li><strong>多层次特征加总 (Multi-Level feature Aggregation, MLA)</strong>：这种设计跟特征金字塔网络类似</li>
</ul>
<h1 id="setr-的注意力可视化"><a class="markdownIt-Anchor" href="#setr-的注意力可视化"></a> SETR 的注意力可视化？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230401152844.png" alt="" /></li>
<li><strong>第一张图</strong>：可视化 Encoder 的某些 tansformer block 的输出，可以看出在低层的 tansformer block 已经构建全局注意力关系</li>
<li><strong>第二张图</strong>：可视化一个固定点 (patch)与其他点 (patch)的注意力关系，可以看出，tansformer block 确实构建了目标的注意力关系</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/348418189">重新思考语义分割范式——SETR - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>BiSeNetv3：Rethinking BiSeNet For Real-time Semantic Segmentation</title>
    <url>/2022/06/19/BiSeNetv3%EF%BC%9ARethinking%20BiSeNet%20For%20Real-time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>使用 BiSeNet 中的 context path 提取上下文信息，并且针对 GT 利用 Laplacian Conv 生成网络的中间监督信息，使得中间特征更加符合后续任务</p>
<a id="more"></a>
<h1 id="什么是-stdc-seg"><a class="markdownIt-Anchor" href="#什么是-stdc-seg"></a> 什么是 STDC-Seg ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142131.png" alt="BiSeNetv3-20230408142131" /></li>
<li>使用 BiSeNet 中的 context path 提取上下文信息，并且针对 GT 利用 Laplacian Conv 生成网络的中间监督信息，使得中间特征更加符合后续任务</li>
</ul>
<h1 id="stdc-seg-的网络结构"><a class="markdownIt-Anchor" href="#stdc-seg-的网络结构"></a> STDC-Seg 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142131.png" alt="BiSeNetv3-20230408142131" /></li>
<li><strong>backbone</strong>：使用 BiSeNet 中的 context path 提取上下文信息，使用 STDC 网络作为 backbone，网络中的 Stage3、Stage4和 Stage5均对 feature map 进行下采样操作，然后使用 global average pooling 提取全局上下文信息</li>
<li><strong>ARM</strong>：借鉴自 BiSeNet，引入通道注意力，对特征进行重表示</li>
<li><strong>FFM</strong>：借鉴自 BiSeNet，融合不同尺度的特征</li>
<li><strong>Seg Head</strong>：包括1个3 × 3 的卷积、BN 和 ReLU 操作，以及1×1卷积，最终输出 N 维度特征，N 为分割类别数</li>
<li><strong>Detail Head</strong>：为了弥补去除 BiSeNet 中的 Spatial 分支造成的细节损失，在 Stage3后面插入了 Detail Head，使得 Stage3能够学到细节信息。需要注意的是，Detail Head 只在训练时使用，目的是让 Stage3输出的 feature map 包含更多的细节特征，用于与 Context 分支的高层次语义特征融合</li>
</ul>
<h1 id="stdc-seg-的-stdc-模块"><a class="markdownIt-Anchor" href="#stdc-seg-的-stdc-模块"></a> STDC-Seg 的 STDC 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142157.png" alt="BiSeNetv3-20230408142157" /></li>
<li>a 是 STDC 的网络架构，b 在网络中使用短期密集连接模块，c 表示 stride=2 的 STDC 模块，M、N 表示输入输出通道数，ConvX 指 Conv-BN-ReLU</li>
<li>与传统的backbone不同的是，<strong>STDC模块中深层的特征通道数少，浅层的特征通道数多</strong>。STDC认为，浅层需要更多通道的特征编码细节信息；深层更关注高层次语义信息，过多的特征通道数量会导致信息冗余</li>
</ul>
<h1 id="stdc-seg-的-detail-gt-监督的作用"><a class="markdownIt-Anchor" href="#stdc-seg-的-detail-gt-监督的作用"></a> STDC-Seg 的 Detail GT 监督的作用？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142158.png" alt="BiSeNetv3-20230408142158" /></li>
<li>图（a）表示输入图像，图（b）和图（d）分别表示未使用 Detail Guidance 时 Stage3和网络预测结果，图（c）和图（e）表示使用了 Detail Guidance 时 Stage3和网络预测结果，图（f）表示 ground truth</li>
<li>从图中可以看出，使用了Detail Guidance后，Stage3的feature map细节更丰富，分割结果中的细节也更好</li>
</ul>
<h1 id="stdc-seg-与-bisenet-的差别"><a class="markdownIt-Anchor" href="#stdc-seg-与-bisenet-的差别"></a> STDC-Seg 与 BiSeNet 的差别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142159.png" alt="BiSeNetv3-20230408142159" /></li>
<li>STDC 分割网络使用 Detail Guidance 替代 BiSeNet 中的 Spatial 分支，在保留细节特征的同时减少了计算量</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/zhangkai950121/article/details/118164563">STDC语义分割网络:BiSeNet的轻量化加强版（CVPR2021语义分割）_CV51的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/lx_ros/article/details/126515733">(一)STDCNet源码解读_stdc代码_恒友成的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>轻量</tag>
        <tag>语义语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>BiSeNet V2：Bilateral Network with Guided Aggregation for Real-Time Semantic Segmentation</title>
    <url>/2022/06/17/BiSeNet%20V2%EF%BC%9ABilateral%20Network%20with%20Guided%20Aggregation%20for%20Real-Time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>BiSeNet的升级版，相比较BiSeNet，BiSeNetv2精度和速度均有大幅度提升</p>
<a id="more"></a>
<h1 id="什么是-bisenetv2"><a class="markdownIt-Anchor" href="#什么是-bisenetv2"></a> 什么是 BiSeNetv2？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv2-20230408142110.png" alt="BiSeNetv2-20230408142110" /></li>
<li>BiSeNet的升级版，相比较BiSeNet，BiSeNetv2精度和速度均有大幅度提升</li>
<li><strong>Dilation Backbone</strong>：去掉了下采样和上采样 (因为会损失信息)，而改为用步长大于1的卷积代替，同时不断加大通道数来维持高像素特征表示</li>
<li><strong>Encoder-Decoder</strong>：使用从上到下和跳跃连结的方式 (通常用下采样和上采样, 然后上采样后用对称的 Encoder 层中的特征图来补充损失的信息)</li>
<li>BiSeNetv2 通过分开处理细节分支 (Detail Branch)、语义分支 (Semantic Branch)，即保留细节也获得语义信息，包含前两者的优点</li>
</ul>
<h1 id="bisenetv2-的网络结构"><a class="markdownIt-Anchor" href="#bisenetv2-的网络结构"></a> BiSeNetv2 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv2-20230408142110-1.png" alt="BiSeNetv2-20230408142110-1" /></li>
<li><strong>Detail Branch</strong>：低层信息和高层语义对语义分割同样重要，然而两种信息对模型结构的要求不太一样。低层信息往往存在于网络的早期阶段，需要较高的分辨率和较大的通道数</li>
<li><strong>Semantic Branch</strong>：高层语义信息一般存在于网络后期阶段，分辨率较低，需要较深的层级来提取抽象信息</li>
<li><strong>Aggregation Layer</strong>：融合 Detail Branch 和 Semantic Branch 分支的特征</li>
<li><strong>Seg Head</strong>：对 Aggregation Layer 的输出直接上采样</li>
</ul>
<h1 id="bisenetv2-的-semantic-branch-的设计"><a class="markdownIt-Anchor" href="#bisenetv2-的-semantic-branch-的设计"></a> BiSeNetv2 的 Semantic Branch 的设计？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv2-20230408142111.png" alt="BiSeNetv2-20230408142111" /></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv2-20230408142111-1.png" alt="BiSeNetv2-20230408142111-1" /></li>
<li><strong>Stem Block</strong>：用于快速下采样</li>
<li><strong>Gather-and-Expansion Layer（GE Layer）</strong>：用于卷积获取细节信息</li>
<li><strong>Context Embedding Block（CE Layer）</strong>：用于嵌入上下文信息</li>
</ul>
<h1 id="bisenetv2-的-aggregation-layer-的实现"><a class="markdownIt-Anchor" href="#bisenetv2-的-aggregation-layer-的实现"></a> BiSeNetv2 的 Aggregation Layer 的实现？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv2-20230408142112.png" alt="BiSeNetv2-20230408142112" /></li>
<li>该层利用语义分支的上下文信息来指导细节分支的特征响应。通过不同的尺度指导，可以捕获不同的尺度特征表示。同时，与简单的组合方式相比，这种引导方式可以使两个分支之间进行有效的通信</li>
<li>Aggregation Layer 的加入，相比较直接的 sum 或者 concate，其精度更高, BGA 即 Bilateral Guided Aggregation Layer <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv2-20230408142112-1.png" alt="BiSeNetv2-20230408142112-1" /></li>
</ul>
]]></content>
      <tags>
        <tag>语义分割</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客速度优化</title>
    <url>/2022/06/15/Hexo%E5%8D%9A%E5%AE%A2%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>本文对Hexo博客进行访问优化，使得访问速度更快了，主要是安装hexo-neat插件，实现对html、css、js、image等静态资源的高效压缩。通过压缩这些静态资源，可以减少请求的数据量从而达到优化博客访问速度的目的</p>
<a id="more"></a>
<h2 id="资源压缩"><a class="markdownIt-Anchor" href="#资源压缩"></a> 资源压缩<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2>
<p><strong>安装插件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>
<p><strong>配置插件</strong><br />
打开博客根目录文件<code>_config.yml</code>，添加以下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-neat 压缩</span></span><br><span class="line">neat_enable: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩html</span></span><br><span class="line">neat_html:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line"><span class="comment"># 压缩css  </span></span><br><span class="line">neat_css:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">&#x27;**/*.min.css&#x27;</span></span><br><span class="line"><span class="comment"># 压缩js</span></span><br><span class="line">neat_js:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  mangle: <span class="literal">true</span></span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">&#x27;**/*.min.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/jquery.fancybox.pack.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/index.js&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="图片懒加载"><a class="markdownIt-Anchor" href="#图片懒加载"></a> 图片懒加载<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2>
<p>即文字先出来，图片慢慢出来，显著提高加载速度</p>
<p><strong>安装插件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure>
<p><strong>配置文件</strong></p>
<p>打开配置文件<code>_config.yml</code>，添加以下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 图片懒加载</span></span><br><span class="line">lazyload:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> </span><br><span class="line">  onlypost: <span class="literal">false</span></span><br><span class="line">  loadingImg: /images/loading.gif <span class="comment">#如果不填写图片则使用默认的图片</span></span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.difashi.com/2020-02/20-hexo-neat.html">hexo优化静态JS等资源压缩</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/lfri/p/12221963.html">Hexo-Next提高加载速度</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>CFPNet：Channel-wise Feature Pyramid for Real-Time Semantic Segmentation</title>
    <url>/2022/06/15/CFPNet%EF%BC%9AChannel-wise%20Feature%20Pyramid%20for%20Real-Time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>结合CSP的通道split+ASPP的思想对不同尺度特征进行融合，即先使用CSP的split方法将特征按通道分组，对每组特征使用不同空洞率的空洞卷积，然后将不同尺度的特征融合，实际就是轻量版的ASPP</p>
<a id="more"></a>
<h1 id="什么是-cfpnet"><a class="markdownIt-Anchor" href="#什么是-cfpnet"></a> 什么是 CFPNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CFPNet-20230408142321.png" alt="CFPNet-20230408142321" /></li>
<li>结合 CSP 的通道 split+ASPP 的思想对不同尺度特征进行融合，即先使用 CSP 的 split 方法将特征按通道分组，对每组特征使用不同空洞率的空洞卷积，然后将不同尺度的特征融合，实际就是轻量版的 ASPP</li>
<li>同时，为了避免空洞卷积带来的网格效应，CFPNet 在 ASPP 内部进行特征跨连接交流</li>
</ul>
<h1 id="cfpnet-的网络结构"><a class="markdownIt-Anchor" href="#cfpnet-的网络结构"></a> CFPNet 的网络结构？</h1>
<ul>
<li>在模型设计时，CFP 模块设计 n=2, m=6, 对应下表的 5-13 层 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CFPNet-20230408142322.png" alt="CFPNet-20230408142322" /></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CFPNet-20230408142323.png" alt="CFPNet-20230408142323" /></li>
<li>使用 3 次下采样，最后使用 双线性插值直接上采样 8 倍</li>
</ul>
<h1 id="cfpnet-的-cfp-模块"><a class="markdownIt-Anchor" href="#cfpnet-的-cfp-模块"></a> CFPNet 的 CFP 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CFPNet-20230408142324.png" alt="CFPNet-20230408142324" /></li>
<li>图 a、b 分别是原始的 CFP 模块、CFP 模块，<strong>CFP 模块首先通过 1 x 1 卷积将维度同 M 降低到 M/K，然后使用不同的空洞率的并行 FP 结构，最后使用 1 x 1 卷积还原通道</strong></li>
<li>图 a 简单的融合，导致引入了网格现象，为此使用残差学习解决该问题，下图 a、b 分别是使用残差学习前后的效果<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CFPNet-20230408142325.png" alt="CFPNet-20230408142325" /></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLACT++：Better Real-time Instance Segmentation</title>
    <url>/2022/04/26/YOLACT++%EF%BC%9ABetter%20Real-time%20Instance%20Segmentation/</url>
    <content><![CDATA[<p>yolactplusplus 通过引入可变形卷积、使用更多的 anchor、重新生成的 Mask scoreing 分支等措施，改进了 yolact 模型</p>
<a id="more"></a>
<h1 id="什么是-yolactplusplus"><a class="markdownIt-Anchor" href="#什么是-yolactplusplus"></a> 什么是 yolactplusplus ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolactplusplus-20230508212450.png" alt="" /></li>
<li>YOLACT 主要是通过两个并行的子网络来实现实例分割的。(1) Prediction Head 分支生成各个 anchor 的类别置信度、位置回归参数以及 mask 的掩码系数；(2) Protonet 分支生成一组原型 mask。然后将原型 mask 和 mask 的掩码系数相乘，从而得到图片中每一个目标物体的 mask</li>
<li>yolactplusplus 通过引入可变形卷积、使用更多的 anchor、重新生成的 Mask scoreing 分支等措施，改进了 yolact 模型</li>
</ul>
<h1 id="yolactplusplus-的网络结构"><a class="markdownIt-Anchor" href="#yolactplusplus-的网络结构"></a> yolactplusplus 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolactplusplus-20230508212450-1.png" alt="" /></li>
<li><strong>Featrue Backbone&amp;Featrue Pyramid</strong>：使用 ResNet101 提取图片特征，并引入可变形卷积，然后使用 FPN 结构进行特征融合</li>
<li><strong>prototypes</strong>：从 P3 级别的特征生成全局的 prototype mask (138,138,32)，这里固定是 32 个 mask，后续所有实例的 mask 是这 32 个 mask 的线性组合</li>
<li><strong>Predict Head</strong>：基于 anchor 预测目标的类别、位置和 Mask coefficients，其中 Mask coefficients 是每个 anchor 预测长度为 32 的向量，用于加权 prototypes，得到当前 anchor 的 mask 预测</li>
<li><strong>corp&amp;Threashold</strong>：根据定位结果和 Mask 预测结果，裁剪目标区域，并使用二值化求得目标的 Mask</li>
<li><strong>Mask Re-Scoring</strong>：受MS R-CNN的启发，高质量的mask并不一定就对应着高的分类置信度，换句话说，以包围框得分来评价mask好坏并不合理，所以在模型后添加了Mask Re-Scoring分支，该分支使用YOLACT生成的裁剪后的原型mask(未作阈值化)作为输入，输出对应每个类别的GT-mask的IoU</li>
</ul>
<h1 id="yolactplusplus-的-fast-mask-re-scoring-分支"><a class="markdownIt-Anchor" href="#yolactplusplus-的-fast-mask-re-scoring-分支"></a> yolactplusplus 的 Fast Mask Re-Scoring 分支？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolactplusplus-20230508212451.png" alt="" /></li>
<li>受MS R-CNN的启发，高质量的mask并不一定就对应着高的分类置信度，换句话说，以包围框得分来评价mask好坏并不合理，所以在模型后添加了Mask Re-Scoring分支，该分支使用YOLACT生成的裁剪后的原型mask(未作阈值化)作为输入，输出对应每个类别的GT-mask的IoU</li>
</ul>
<h1 id="yolactplusplus-的-prediction-head"><a class="markdownIt-Anchor" href="#yolactplusplus-的-prediction-head"></a> yolactplusplus 的 Prediction Head？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolactplusplus-20230508212451-1.png" alt="" /></li>
<li>YOLACT 是 anchor-based 的，yolactplusplus对 anchor 设计进行优化。经过实验，选择在每个 FPN 层上乘3种大小，相当于anchor数量较原来的YOLACT增加了3倍</li>
</ul>
<h1 id="yolactplusplus-的可变形卷积"><a class="markdownIt-Anchor" href="#yolactplusplus-的可变形卷积"></a> yolactplusplus 的可变形卷积？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolactplusplus-20230508212452.png" alt="" /></li>
<li>参考Deformable ConvNets v2的思路，将ResNet的C3-C5中的各个标准3x3卷积换成3x3可变性卷积，但没有使用堆叠的可变形卷积模块，因为延迟太高</li>
</ul>
<h1 id="yolactplusplus-与-yolact-的区别"><a class="markdownIt-Anchor" href="#yolactplusplus-与-yolact-的区别"></a> yolactplusplus 与 yolact 的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolactplusplus-20230508212452-1.png" alt="" /></li>
<li>yolactplusplus 通过引入可变形卷积、使用更多的 anchor、重新生成的 Mask scoreing 分支等措施，改进了 yolact 模型，yolactplusplus 效果越来越好，但是速度变慢了</li>
</ul>
<h1 id="yolactplusplus-与-mask-rcnn-的区别"><a class="markdownIt-Anchor" href="#yolactplusplus-与-mask-rcnn-的区别"></a> yolactplusplus 与 Mask RCNN 的区别？</h1>
<ul>
<li>YOLACT++直接使用全尺寸的 mask 作为 scoring 分支的输入，而 MS R-CNN 使用的是 ROI Align 后的特征再与其经过 mask 预测分支计算后的特征拼接后的组成的特征</li>
<li>YOLACT++的scoring分支没有使用FC层，这使得分割的速度提高</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/wh8514/article/details/105520870">图像分割之YOLACT &amp; YOLACT++_Vincent8514的博客-CSDN博客</a></li>
<li><a href="https://hub.baai.ac.cn/view/19447">当前最快的实例分割模型：YOLACT 和 YOLACT++ - 智源社区</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>实例分割</tag>
      </tags>
  </entry>
  <entry>
    <title>FCOS：Fully Convolutional One-Stage Object Detection</title>
    <url>/2022/04/21/FCOS%EF%BC%9AFully%20Convolutional%20One-Stage%20Object%20Detection/</url>
    <content><![CDATA[<p>通过预测目标中心到四边的距离实现对目标的检测</p>
<a id="more"></a>
<h1 id="什么是-fcos"><a class="markdownIt-Anchor" href="#什么是-fcos"></a> 什么是 FCOS？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FCOS-20230408141520.png" alt="FCOS-20230408141520" /></li>
<li>一般目标检测的边界框使用 (x, y, x, y) 或 (x, y, w, h) 之类的坐标表示，但 FCOS 是从一个点开始，然后使用该点与 groundtruth 之间的垂直和水平距离 (l, t, r, b) 来表示边界框的</li>
</ul>
<h1 id="fcos的网络结构"><a class="markdownIt-Anchor" href="#fcos的网络结构"></a> FCOS的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FCOS-20230408141521.png" alt="FCOS-20230408141521" /></li>
<li>输入：（N，C，H，W）</li>
<li>输出：五个尺度的输出，分别是 P3、P4、P5、P6、P7，每个分支输出 3 类信息，分别是 featrue map 每个点的的分类、中心点损失、回归</li>
<li>FCOS 使用 FPN 来进行多尺度特征学习，其得到的 head 用于预测不同尺度的目标</li>
</ul>
<h1 id="fcos的损失函数"><a class="markdownIt-Anchor" href="#fcos的损失函数"></a> FCOS的损失函数？</h1>
<ul>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mrow><mo fence="true">(</mo><mrow><mo fence="true">{</mo><msub><mi mathvariant="bold-italic">p</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mrow><mo fence="true">{</mo><msub><mi mathvariant="bold-italic">t</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo fence="true">}</mo></mrow><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><msub><mi>N</mi><mi mathvariant="normal">pos</mi><mo>⁡</mo></msub></mfrac><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><msub><mi>L</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">p</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo separator="true">,</mo><msubsup><mi>c</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>+</mo><mfrac><mi>λ</mi><msub><mi>N</mi><mi mathvariant="normal">pos</mi><mo>⁡</mo></msub></mfrac><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><msub><mn mathvariant="double-struck">1</mn><mrow><mo fence="true">{</mo><msubsup><mi>c</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>&gt;</mo><mn>0</mn><mo fence="true">}</mo></mrow></msub><msub><mi>L</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">g</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">t</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mo separator="true">,</mo><msubsup><mi mathvariant="bold-italic">t</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} L\left(\left\{\boldsymbol{p}_{x, y}\right\},\left\{\boldsymbol{t}_{x, y}\right\}\right) &amp; =\frac{1}{N_{\operatorname{pos}}} \sum_{x, y} L_{\mathrm{cls}}\left(\boldsymbol{p}_{x, y}, c_{x, y}^{*}\right) \\&amp; +\frac{\lambda}{N_{\operatorname{pos}}} \sum_{x, y} \mathbb{1}_{\left\{c_{x, y}^{*}&gt;0\right\}} L_{\mathrm{reg}}\left(\boldsymbol{t}_{x, y}, \boldsymbol{t}_{x, y}^{*}\right)\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.065105999999999em;vertical-align:-2.782553em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.282552999999999em;"><span style="top:-5.332552999999999em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252000000000025em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.380248em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">t</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.2749999999999995em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.782553em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.282552999999999em;"><span style="top:-5.332552999999999em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mord mathrm mtight">p</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">s</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">s</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252000000000025em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.380248em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.2749999999999995em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mord mathrm mtight">p</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">s</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.6473000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">{</span></span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6183428571428571em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span><span class="mrel mtight">&gt;</span><span class="mord mtight">0</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">}</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6552em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">g</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">t</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">t</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.782553em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{cls}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是分类损失，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{reg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是交并比损失</li>
</ul>
<h1 id="什么是-center-ness-loss"><a class="markdownIt-Anchor" href="#什么是-center-ness-loss"></a> 什么是 Center-ness loss?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FCOS-20230408141523.png" alt="FCOS-20230408141523" /></li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext> centerness </mtext><msup><mrow></mrow><mo lspace="0em" rspace="0em">∗</mo></msup><mo>=</mo><msqrt><mrow><mfrac><mrow><mi>min</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>l</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo separator="true">,</mo><msup><mi>r</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo fence="true">)</mo></mrow></mrow><mrow><mi>max</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>l</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo separator="true">,</mo><msup><mi>r</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo fence="true">)</mo></mrow></mrow></mfrac><mo>×</mo><mfrac><mrow><mi>min</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo fence="true">)</mo></mrow></mrow><mrow><mi>max</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo fence="true">)</mo></mrow></mrow></mfrac></mrow></msqrt></mrow><annotation encoding="application/x-tex">\text { centerness }{ }^{*}=\sqrt{\frac{\min \left(l^{*}, r^{*}\right)}{\max \left(l^{*}, r^{*}\right)} \times \frac{\min \left(t^{*}, b^{*}\right)}{\max \left(t^{*}, b^{*}\right)}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord text"><span class="mord"> centerness </span></span><span class="mord"><span class="mord"></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.160625em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.879375em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6146959999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.839375em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793
c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0
c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7
s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200
c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26
s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,
606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.160625em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>为了解决 FCOS 在距离中心较远位置产生“低质量”的预测框，需要对其预测的 l、r、t、b 做一定的限制，即将上述公式添加到损失函数中，可以看根号下两项乘数均在[0, 1]之间，如果 l 越接近 r，t 越接近 b，其值越大，反之变小</li>
<li>测试时，将预测的中心度与相应的分类分数相乘，计算最终得分(用于对检测到的边界框进行排序)。因此，中心度可以降低远离对象中心的边界框的权重。因此，这些低质量边界框很可能被最终的非最大抑制（NMS）过程滤除，从而显着提高了检测性能</li>
</ul>
<h1 id="fcos-如何进行样本分配"><a class="markdownIt-Anchor" href="#fcos-如何进行样本分配"></a> FCOS 如何进行样本分配？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FCOS-20230408141524.png" alt="FCOS-20230408141524" /></li>
<li>对于每个 level，如果某个 cell 落在 gt 上，则其负责预测该 gt，也就是说一个 gt 可以被多个检测 head 预测，<strong>但是这个过程需要考虑目标的尺寸，如果其尺寸大于特征图或者在特征图上是 1 个点，则该 level 不负责该目标的预测</strong></li>
<li>如果某个 cell 被 2 个 gt 映射，选择小目标作为回归目标，可以极大减少模糊样本</li>
</ul>
<h1 id="fcos-如何解码模型输出"><a class="markdownIt-Anchor" href="#fcos-如何解码模型输出"></a> FCOS 如何解码模型输出？</h1>
<ul>
<li>直接将所有预测信息解码到原图，在原图上进行 nms</li>
<li>首先根据分类分数&gt;0.5 选择获选预测中心，然后根据其位置拿到 ness 值，分类分数 x ness 值就是这个预测中心置信度，根据中心位置，拿到对应的 l、r、t、b 预测，将中心+ l、r、t、b 还原到原图，最后根据预测框+置信度使用 nms 过滤</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
      </tags>
  </entry>
  <entry>
    <title>SOLOv2：Dynamic and Fast Instance Segmentation</title>
    <url>/2022/04/05/SOLOv2%EF%BC%9ADynamic%20and%20Fast%20Instance%20Segmentation/</url>
    <content><![CDATA[<p>SOLOv2是在SOLO的基础上设计的网络，主要是将mask预测分支解耦成掩码核预测（Mask kernel branch）和掩码特征学习（Mask feature branch），分别负责生成卷积核和需要卷积的特征映射，使得mask分支生成速度更快，最后也提出Matrix-nms快速过滤结果</p>
<a id="more"></a>
<h1 id="什么是-solov2"><a class="markdownIt-Anchor" href="#什么是-solov2"></a> 什么是 SOLOv2？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLOv2-20230408144052.png" alt="SOLOv2-20230408144052" /></li>
<li>在 SOLOv1 的基础上，通过重新设计 Mask 预测分支实现效果提升</li>
<li>SOLOv 2 的 Mask 分支改进思路是将 Mask 分支解藕成掩码核预测（Mask kernel branch）和掩码特征学习（Mask feature branch），分别负责生成卷积核和需要卷积的特征映射</li>
<li>另一个创新是使用矩阵非最大值抑制（NMS）技术显著减少了推理运算的开销</li>
</ul>
<h1 id="solov2-的网络结构"><a class="markdownIt-Anchor" href="#solov2-的网络结构"></a> SOLOv2 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLOv2-20230408144052.png" alt="SOLOv2-20230408144052" /></li>
<li>继承 SOLOv1 的网络结构，将 Mask 分支解藕成掩码核预测（Mask kernel branch）和掩码特征学习（Mask feature branch），分别负责生成卷积核和需要卷积的特征映射</li>
</ul>
<h1 id="solov2-的动态实例分割"><a class="markdownIt-Anchor" href="#solov2-的动态实例分割"></a> SOLOv2 的动态实例分割？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLOv2-20230408144052.png" alt="SOLOv2-20230408144052" /></li>
<li>已知 SOLOv1 从 FCN 的特征直接生成 SxS 个 Mask 预测结果，而 SOLOv2 不直接生成掩码预测结果，而是生成掩码核预测（Mask kernel branch）和掩码特征学习（Mask feature branch），分别负责生成卷积核和需要卷积的特征映射</li>
<li>上图 G 表示生成的掩码核、F 表示掩码特征，假设需要计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">S_i,S_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 位置的掩码预测，从 G 中取出对应位置 (i, j)处的值作为卷积核，然后去和 F 做卷积运算，得到的就是掩码预测结果<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">M</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="normal">G</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>∗</mo><mi mathvariant="normal">F</mi></mrow><annotation encoding="application/x-tex">\mathrm{M}_{i,j}=\mathrm{G}_{i,j}*\mathrm{F}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">M</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">F</span></span></span></span></span></span></p>
</li>
<li><strong>Mask kernel G</strong>：已知卷积核的通用大小表达形式是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(C_{in}, k, k, C_{out})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mtext>、</mtext><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{in}、C_{out}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是输入输出通道数，由于 F 的特征长度已知 E，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">C_{in}=E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>，假定输出通道 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C_{out}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，那么当 G 使用 1x 1 卷积时，D=E 满足卷积核大小，当 G 使用 3 x 3 卷积时，D=9E 满足卷积核大小</li>
<li><strong>Mask Feature F</strong>：将所有的 FPN 层融合到 1/4 Mask，作为 Mask 特征分支</li>
</ul>
<h1 id="solov2-的损失函数"><a class="markdownIt-Anchor" href="#solov2-的损失函数"></a> SOLOv2 的损失函数？</h1>
<ul>
<li>损失函数包含 2 部分，一部分是类别预测、一部分是实例 mask 预测<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
</li>
<li>实例 mask 预测使用 <strong>Dice loss</strong> ，即计算每个正样本对应 mask 的 Dice loss，然后取平均值</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/weixin_42708301/article/details/115557838">SOLOv2算法学习_鲸落于北的博客-CSDN博客</a></li>
<li><a href="https://baijiahao.baidu.com/s?id=1685408649786275149&amp;wfr=spider&amp;for=pc">性能提升30%以上，实时实例分割算法SOLOv2实现产业SOTA</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>实例分割</tag>
      </tags>
  </entry>
  <entry>
    <title>SOLO：Segmenting Objects by Locations</title>
    <url>/2022/04/01/SOLO%EF%BC%9ASegmenting%20Objects%20by%20Locations/</url>
    <content><![CDATA[<p>SOLO是实例分割全新赛道的论文，以前的方式是先检测出实例框，然后在实例框内分割目标，而SOLO基于最后一层featrue map(SxS)位置确定实例，然后通过mask分支生成S^2个mask,表示最后一层featrue map(SxS)所有grid对应的分割结果，汇总所有grid的结果，就是实例分割结果</p>
<a id="more"></a>
<h1 id="什么是-solo"><a class="markdownIt-Anchor" href="#什么是-solo"></a> 什么是 SOLO?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLO-20230408144009.png" alt="" /></li>
<li></li>
<li>SOLO 的核心思想是通过位置和大小来分离对象实例</li>
<li><strong>位置</strong>：一幅图像可以划分为一个 S×S 单元的网格，从而得到 S×S 中心位置类。<strong>根据对象中心的坐标，将对象实例指定给其中一个网格单元，作为其中心位置类别</strong>。因为本质上实例类别近似于实例的对象中心的位置，并且通过分类，可以更直接、更容易地使用固定数量的通道对不同数量的实例进行建模</li>
<li><strong>大小</strong>：为了区分不同对象大小的实例，我们采用特征金字塔网络（FPN），将不同大小的对象分配给不同级别的特征映射，作为对象大小类</li>
</ul>
<h1 id="solo-的网络结构"><a class="markdownIt-Anchor" href="#solo-的网络结构"></a> SOLO 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLO-20230408144009.png" alt="" /></li>
<li>SOLO 核心思想是将实例分割问题转化为两个同时存在的<strong>类别感知预测</strong>和<strong>实例感知掩码生成</strong>问题。具体来说，我们的系统将输入图像分成一个统一的网格，即 S×S，如果一个对象的中心落在一个网格单元中，该网格单元负责1）预测语义类别，2）分割该对象实例</li>
<li><strong>语义分类</strong>：对于每个网格，SOLO预测C维输出以指示语义类概率，其中C是类的数量。这些概率取决于网格单元。如果我们将输入图像分成S×S网格，输出空间将是S×S×C。该设计基于这样一个假设：S×S网格的每个单元必须属于一个单独的实例</li>
<li><strong>实例掩码</strong>：在语义类别预测的同时，每个 positive grid cell 也会生成相应的 instance mask。对于输入图像 I ，如果将其划分为 S×S 网格，则总共最多有 S×S 个预测 mask，语义类别和类不可知mask之间建立了一对一的对应关系</li>
</ul>
<h1 id="solo-的-mask-预测分支"><a class="markdownIt-Anchor" href="#solo-的-mask-预测分支"></a> SOLO 的 Mask 预测分支？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLO-20230408144036.png" alt="" /></li>
<li><strong>使用 CoordConv</strong>：传统的卷积运算在一定程度上是空间不变的，因为空间不变性可以引入鲁棒性。然而，在本任务中，需要一个空间可变性（位置敏感）模型，因为分割 mask 是以 grid cell 为条件的，并且必须通过不同的特征通道来分离，解决办法是使用 CoordConv，在网络开始时，直接向网络提供标准化像素坐标，具体地，创建一个与输入的空间大小相同的张量，它包含每个像素点的坐标，这些坐标被规范化为[-1，1]，然后将这个张量连接到输入特征并传递到下面的层，如果原始输入是 HWD，则新张量是 HW (D+2)</li>
<li><strong>类别预测和对应的 mask 生成</strong>：通过它们的参考网格单元自然地关联起来，在此基础上，我们可以直接为每个网格生成最终的实例分割结果。原始实例分割结果是通过收集所有网格结果生成的。最后，利用非最大值抑制（NMS）得到最终的实例分割结果。不需要其他后处理操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>i</mi><mo>×</mo><mi>S</mi><mo>+</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">k=i\times S + j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></li>
<li>注意：H、W 相对于原图来说是下采样 2 倍的，后面通过上采样 2 倍还原</li>
</ul>
<h1 id="solo-的-decoupled-mask-预测分支"><a class="markdownIt-Anchor" href="#solo-的-decoupled-mask-预测分支"></a> SOLO 的 Decoupled Mask 预测分支？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLO-20230408144036-1.png" alt="" /></li>
<li>SOLO 为 SxS 的每个位置预测一个 HxW 大小的 Mask，其数量过于庞大，实际上，在 SxS 个 Mask 中仅有少数被响应，因为图片不会出现太多实例</li>
<li>为了解决这个问题，提出了解藕的 Mask 预测分支，它有两个 HxWxS 的 featrue map 组成，分别表示 X、Y 两个方向的向量，如果第 i 个 grid 有实例，直接拿出 X 、Y 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H\times W\times S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 相乘，即是其 Mask 预测结果</li>
<li>解藕后的 Mask 分支，特征数量由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><msup><mi>S</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">H\times W\times S^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>2</mn><mi>S</mi></mrow><annotation encoding="application/x-tex">H\times W\times 2S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，数量大大减少</li>
</ul>
<h1 id="solo-的标签分配"><a class="markdownIt-Anchor" href="#solo-的标签分配"></a> SOLO 的标签分配？</h1>
<ul>
<li>对于类别预测分支，网络需要给出每个 S×S 网格的对象类别概率，如何分配实例到哪些 grid 进行学习，是标签分配要做的事</li>
<li><strong>根据实例尺寸决定放置的 head</strong>：这类似目标检测的多 head 单 anchor 标签分配机制，直接使用座标分配即可，在此基础上根据实例的不同尺寸将正样本放到不同的 head 上<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLO-20230408144037.png" alt="" /></li>
<li><strong>确定 grid 的正样本</strong>：根据 gt mask 区域中心映射到 SxS 网格后，选择与 gt mask 重叠大于阈值的 grid 作为正样本，一般 1 个实例分配多个正样本，下图是预测结果，可知相邻的 grid 预测了同一实例<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SOLO-20230408144038.png" alt="" /></li>
</ul>
<h1 id="solo-的损失"><a class="markdownIt-Anchor" href="#solo-的损失"></a> SOLO 的损失？</h1>
<ul>
<li>损失函数包含 2 部分，一部分是类别预测、一部分是实例 mask 预测<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">L</mi><mo>=</mo><msub><mi mathvariant="normal">L</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi></mrow></msub><mo>+</mo><mi>λ</mi><msub><mi mathvariant="normal">L</mi><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathrm L=\mathrm L_{\mathrm{cate}}+\lambda\mathrm L_{\mathrm{mask}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathrm">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathrm">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">t</span><span class="mord mathrm mtight">e</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">λ</span><span class="mord"><span class="mord mathrm">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">a</span><span class="mord mathrm mtight">s</span><span class="mord mathrm mtight">k</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>类别预测使用 <strong>Focal loss</strong></li>
<li>实例 mask 预测使用 <strong>Dice loss</strong> ，即计算每个正样本对应 mask 的 Dice loss，然后取平均值</li>
</ul>
<h1 id="solo-如何推理"><a class="markdownIt-Anchor" href="#solo-如何推理"></a> SOLO 如何推理？</h1>
<ul>
<li>图片输入 backbone 和 FPN 后，得到多 head 的预测结果</li>
<li>首先使用类别打分阈值过滤低置信度的预测，然后选择 top 500 的类别打分对应的实例，以 0.5 阈值二值化这些实例的分割效果，然后进行 Mask NMS 操作</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/calvinpaean/article/details/103857024">SOLO: Segmenting Objects by Locations 论文学习_solo论文的主要思想_calvinpaean的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/259262354">SOLO: Segmenting Objects by Locations - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>实例分割</tag>
      </tags>
  </entry>
  <entry>
    <title>PraNet：Learning Feature Pyramids for Human Pose Estimation</title>
    <url>/2022/03/29/PraNet%EF%BC%9ALearning%20Feature%20Pyramids%20for%20Human%20Pose%20Estimation/</url>
    <content><![CDATA[<p>PyraNet 认为人体姿态的估计的难点在于不同关节部位的尺度不同，如上图 (a)手和头的比例大于脚的比例，在（b）中脚的比例大于头的比例，为此，PyraNet 基于Hourglass 网络，设计金字塔子网络去提取关节的多尺度信息，提升人体姿态估计的准确性</p>
<a id="more"></a>
<h1 id="什么是-pyranet"><a class="markdownIt-Anchor" href="#什么是-pyranet"></a> 什么是 PyraNet ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PyraNet-20230420213924.png" alt="" /></li>
<li>PyraNet 认为人体姿态的估计的难点在于不同关节部位的尺度不同，如上图 (a)手和头的比例大于脚的比例，在（b）中脚的比例大于头的比例</li>
<li>为此，PyraNet 基于 <a href="Hourglass.md">Hourglass</a> 网络，设计金字塔子网络去提取关节的多尺度信息，提升人体姿态估计的准确性</li>
</ul>
<h1 id="pyranet-的网络结构"><a class="markdownIt-Anchor" href="#pyranet-的网络结构"></a> PyraNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PyraNet-20230420212425.png" alt="" /></li>
<li>(a） 具有 n 个沙漏网络堆的网络体系结构。每个沙漏堆栈的细节如（b）所示。在每个沙漏的末端生成身体关节位置的得分图，并且在每个沙漏堆栈中附加一个平方误差损失</li>
</ul>
<h1 id="pyranet-的-pyramid-residual-modules-prms"><a class="markdownIt-Anchor" href="#pyranet-的-pyramid-residual-modules-prms"></a> PyraNet 的 Pyramid Residual Modules (PRMs)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PyraNet-20230420212450.png" alt="" /></li>
<li><strong>PRM</strong>：PyraNet 设计了 3 个 PRM 模块，每个模块都分为两部分，第一部分是原始的 <a href="Hourglass.md">Hourglass</a> 的残差链接模块，第二部分是多分支的金字塔池化模块</li>
<li><strong>金字塔残差模块</strong>：由多分支 3 个 PRM 模块使用不同的方式提取多尺度特征</li>
</ul>
<h1 id="pyranet-如何生成输入特征的金字塔"><a class="markdownIt-Anchor" href="#pyranet-如何生成输入特征的金字塔"></a> PyraNet 如何生成输入特征的金字塔？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-04-20%2021.52.14.excalidraw.png" alt="Drawing 2023-04-20 21.52.14.excalidraw" /></li>
<li>DCNNs 一般应用 max-pooling 和 average-pooling 来降低 feature maps 的分辨率，编码其平移不变性. 但，pooling 采用至少为 2 的整数因子，会导致 feature maps 的分辨率降低很快，很粗糙；不能很好的生成金字塔</li>
<li>PyraNet 采用 fractional max-pooling 来逼近传统图像金字塔的平滑和下采样处理，以得到不同分辨率 feature maps</li>
<li>PyraNet 的金字塔是多分支多层次的，每个层次的分辨率计算方式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>c</mi></msub><mo>∈</mo><mo stretchy="false">[</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>M</mi></mrow></msup><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">S_c\in [2^{-M},1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 表示相对于输入特征的分辨率，例如 c=0，表示该层输出特征分辨率与输入分辨率一样，当 M=1，c=C 时，该层输出分辨率是输入的一半<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>s</mi><mi>c</mi></msub><mo>=</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>M</mi><mfrac><mi>c</mi><mi>C</mi></mfrac></mrow></msup><mo separator="true">,</mo><mspace width="1em"/><mi>c</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>M</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s_c=2^{-M\frac{c}{C}},\quad c=0,\cdots,C,M\geq1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.09152em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89708em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/351194136">Learning Feature Pyramids for Human Pose Estimatio - 知乎</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1391838">论文阅读理解 - Learning Feature Pyramids for Human Pose Estimation - 腾讯云开发者社区-腾讯云</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>MSPN：Rethinking on Multi-Stage Networks for Human Pose Estimation</title>
    <url>/2022/03/24/MSPN%EF%BC%9ARethinking%20on%20Multi-Stage%20Networks%20for%20Human%20Pose%20Estimation/</url>
    <content><![CDATA[<p>MSPN 是对 Hourglass 的改进，可用于单目标的人体姿势检测，它认为 Hourglass 的重复降采样+不变的通道数导致信息损失，它希望是降采样时，通过更多的通道数将信息补充回来，所以借鉴CPN修改了 Hourglass 的所有satge</p>
<a id="more"></a>
<h1 id="什么是-mspn"><a class="markdownIt-Anchor" href="#什么是-mspn"></a> 什么是 MSPN ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSPN-20230419220619.png" alt="" /></li>
<li>MSPN 是对 Hourglass 的改进，可用于单目标的人体姿势检测</li>
<li>MSPN 认为 Hourglass 的重复降采样+不变的通道数导致信息损失，它希望是降采样时，通过更多的通道数将信息补充回来，所以借鉴CPN修改了 Hourglass 的所有satge</li>
</ul>
<h1 id="mspn-的网络结构"><a class="markdownIt-Anchor" href="#mspn-的网络结构"></a> MSPN 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSPN-20230419220512.png" alt="" /></li>
<li><strong>单个 stage</strong>： MSPN 采用类似 CPN 的结构来替代 Hourglass 中每个 stage，使得单个 stage 的能力变强，规避了特征因为降采样而丢失</li>
<li><strong>相邻 stage 的特征融合</strong>：每个 stage 接收上一 satge 的输出+该 stage 内同分辨率的特征（包括下采样和上采样两部分），通过上述的特征聚合方式，使得每个stage中的信息完备且表征能力强</li>
<li><strong>多 stage 监督</strong>：不同的 stage 使用不同精度的关键点监督，越高层的 stage 其监督信息越精细</li>
</ul>
<h1 id="mspn-如何处理相邻-stage-特征融合"><a class="markdownIt-Anchor" href="#mspn-如何处理相邻-stage-特征融合"></a> MSPN 如何处理相邻 stage 特征融合？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSPN-20230419220537.png" alt="" /></li>
<li>每个 stage 接收上一 satge 的输出+该 stage 内同分辨率的特征（包括下采样和上采样两部分），通过上述的特征聚合方式，使得每个 stage 中的信息完备且表征能力强</li>
<li>同分辨率的特征使用 1 x 1 卷积调整通道数，得到的通道数和下采样特征通道数一样</li>
</ul>
<h1 id="mspn-的多-stage-监督"><a class="markdownIt-Anchor" href="#mspn-的多-stage-监督"></a> MSPN 的多 stage 监督？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSPN-20230419220559.png" alt="" /></li>
<li>每个 stage 的输出都能作为最终的关键点检测结果。而且随着 stage 的增多，关键点定位会越来越准。为了使得在前端的 stage 能够获得更好的知道，作者提出了由粗到细的多分支监督的方式来优化多 stage 的能力</li>
<li>通过采用不同 kernel-size 的高斯核制作精细不同的标签，越靠近输入 stage 的kernel-size 越大</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/qiu931110/article/details/104589538">CVPR 2019 | MSPN 重新思考多阶段人体姿态估计网络_yuanCruise的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态检测</tag>
      </tags>
  </entry>
  <entry>
    <title>EfficientDet：Scalable and Efficient Object Detection</title>
    <url>/2022/03/21/EfficientDet%EF%BC%9AScalable%20and%20Efficient%20Object%20Detection/</url>
    <content><![CDATA[<p>提出了一个带权重的双向特征金字塔网络（BiFPN），它可以支持简单快速的多尺度特征融合</p>
<a id="more"></a>
<h1 id="什么是-efficientdet"><a class="markdownIt-Anchor" href="#什么是-efficientdet"></a> 什么是 EfficientDet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientDet-20230408141402.png" alt="EfficientDet-20230408141402" /></li>
<li>提出了一个带权重的双向特征金字塔网络（BiFPN），它可以支持简单快速的多尺度特征融合</li>
<li>提出了一个复合缩放方法以便可以同时一致地缩放所有backbone、特征网络和bbox/class 预测网络的分辨率、深度、宽度</li>
</ul>
<h1 id="efficientdet-的模型结构"><a class="markdownIt-Anchor" href="#efficientdet-的模型结构"></a> EfficientDet 的模型结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientDet-20230408141403.png" alt="EfficientDet-20230408141403" /></li>
<li><strong>backbone</strong>：EfficientNetv1</li>
<li><strong>特征融合网络</strong>：带权重双向特征金字塔(BiFPN)，它从 backbone 的 level3-7 获取特征 (P3, P4, P5, P6, P7) 并且重复使用自上而下和自下而上的双向特征融合</li>
<li><strong>Head</strong>：这些融合后的特征被送入了分类和 box 回归网络来生成目标类别和预测的 bondingbox，分类和box回归网络权重在所有level的特征之间共享</li>
</ul>
<h1 id="efficientdet-提出的带权重双向特征金字塔-bifpn"><a class="markdownIt-Anchor" href="#efficientdet-提出的带权重双向特征金字塔-bifpn"></a> EfficientDet 提出的带权重双向特征金字塔 (BiFPN)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientDet-20230408141403-1.png" alt="" /></li>
<li>BiFPN 采用多输入加权残差连接进行尺度层次重新加权，再添加不同尺度的特征地图</li>
</ul>
<h1 id="efficientdet-的复合缩放方法"><a class="markdownIt-Anchor" href="#efficientdet-的复合缩放方法"></a> EfficientDet 的复合缩放方法？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EfficientDet-20230408141403-2.png" alt="EfficientDet-20230408141403-2" /></li>
<li>只是用一个复合系数 φ来同时扩大 backbone，BiFPN，class/box 网络和 resolution (分辨率) 的所有维度</li>
<li><strong>backbone</strong>：重用了EfficientNet-B0到B6相同的宽度/深度缩放系数，因此我们可以轻松地重用其ImageNet预训练的检查点</li>
<li><strong>BiFPN</strong>：BiFPN 的宽度和深度由以下方程式缩放<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>W</mi><mtext>bifpn </mtext></msub><mo>=</mo><mn>64</mn><mo>⋅</mo><mrow><mo fence="true">(</mo><mn>1.3</mn><msup><mn>5</mn><mi>ϕ</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><msub><mi>D</mi><mtext>bifpn </mtext></msub><mo>=</mo><mn>3</mn><mo>+</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">W_{\text {bifpn }}=64 \cdot\left(1.35^{\phi}\right), \quad D_{\text {bifpn }}=3+\phi
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">bifpn </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.249118em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mord">.</span><span class="mord">3</span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">bifpn </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></span></p>
</li>
<li><strong>class/box</strong>：将其宽度固定为与 BiFPN 相同，使用如下公式线性增加其深度<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mrow><mi>b</mi><mi>o</mi><mi>x</mi></mrow></msub><mo>=</mo><msub><mi>D</mi><mtext>class </mtext></msub><mo>=</mo><mn>3</mn><mo>+</mo><mo stretchy="false">⌊</mo><mi>ϕ</mi><mi mathvariant="normal">/</mi><mn>3</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">D_{b o x}=D_{\text {class }}=3+\lfloor\phi / 3\rfloor
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">class </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">ϕ</span><span class="mord">/</span><span class="mord">3</span><span class="mclose">⌋</span></span></span></span></span></p>
</li>
<li><strong>resolution</strong>：特征 level3-7 都在 BiFPN 中被使用，输入的分辨率必须能被 2^7=128 整除，所以我们使用如下公式线性增加分辨率<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mtext>input </mtext></msub><mo>=</mo><mn>512</mn><mo>+</mo><mi>ϕ</mi><mo>⋅</mo><mn>128</mn></mrow><annotation encoding="application/x-tex">R_{\text {input }}=512+\phi \cdot 128
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.317502em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">input </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span></span></span></span></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>HRNet：Deep High-Resolution Representation Learning for Visual Recognition</title>
    <url>/2022/03/18/HRNet%EF%BC%9ADeep%20High-Resolution%20Representation%20Learning%20for%20Visual%20Recognition/</url>
    <content><![CDATA[<p>HRNet 设计了并行的多分辨率分支，提取特征的同时，保持高分辨率，同时设计不同分支之间的特征融合，获得多尺度特征</p>
<a id="more"></a>
<h1 id="什么是-hrnet"><a class="markdownIt-Anchor" href="#什么是-hrnet"></a> 什么是 HRNet ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143808.png" alt="HRNet-20230408143808" /></li>
<li>计算机很多任务是“位置敏感”类型的，比如分割、目标检测、关键点检测，通常的做法是下采样提取语义特征后，通过上采样恢复高分辨率，但是这样的做法会丢失位置信息。</li>
<li>HRNet 设计了并行的多分辨率分支，提取特征的同时，保持高分辨率，同时设计不同分支之间的特征融合，获得多尺度特征</li>
</ul>
<h1 id="hrnet-的网络结构"><a class="markdownIt-Anchor" href="#hrnet-的网络结构"></a> HRNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143809.png" alt="HRNet-20230408143809" /></li>
<li>HRNet 的结构可分为 4 种类型</li>
<li><strong>BasicBlock</strong>：每个 stage 的基本结构，由多个分支组成</li>
<li><strong>FuseLayer</strong>：用于融合不同分支的特征</li>
<li><strong>TransitionLayer</strong>：使用当前分支产生新的分支</li>
<li><strong>BottleNeck</strong>：使用不同的操作处理多分支输出，如只取最高分辨率的分支，所有分支上采样至最高分辨率 concat 等</li>
</ul>
<h1 id="hrnet-的-fuselayer-模块"><a class="markdownIt-Anchor" href="#hrnet-的-fuselayer-模块"></a> HRNet 的 FuseLayer 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143809-1.png" alt="HRNet-20230408143809-1" /></li>
<li>用于融合不同分支的特征，HRNet 设计了 3 个分支，每个分支都有上采样、维持分辨率、下采样 3 种可能去向，最高分辨率的分支，只能维持分辨率和下采样，由此设计了一下不同分支的操作<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143810.png" alt="HRNet-20230408143810" /></li>
</ul>
<h1 id="hrnet-的-transitionlayer-模块"><a class="markdownIt-Anchor" href="#hrnet-的-transitionlayer-模块"></a> HRNet 的 TransitionLayer 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143810-1.png" alt="HRNet-20230408143810-1" /></li>
<li>基于已有分支，产生新的分支，相当于融合多尺度特征得到某个分辨率特征，并进一步整合这个分辨率特征。新分支的分辨率是比以前分支分辨率都小的一个分支</li>
</ul>
<h1 id="hrnet-的-neck-设计"><a class="markdownIt-Anchor" href="#hrnet-的-neck-设计"></a> HRNet 的 Neck 设计？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143811.png" alt="HRNet-20230408143811" /></li>
<li>HR 设计了 3 种方式去使用 4 分支的输出，分别对应 HRNetv1、HRNetv2、HRNetv2p，(a)只使用最高分辨率的特征；(b)将所有分辨率的 feature map (小的特征图进行 upsample)进行 concate，主要用于语义分割和面部关键点检测；©在 HRNetV2的基础上，使用了一个特征金字塔，主要用于目标检测</li>
<li>对于分类任务，HRNet 设计另一个特殊的 neck，对每个 backbone 的输出分支进行降采样操作，同时从上到下逐级融合相加，最后用一个1x1conv 控制输出类别<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143811-1.png" alt="HRNet-20230408143811-1" /></li>
</ul>
<h1 id="不同分别率的特征对结果的影响"><a class="markdownIt-Anchor" href="#不同分别率的特征对结果的影响"></a> 不同分别率的特征对结果的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143811-2.png" alt="" /></li>
<li>研究不同分辨率的特征图如何影响人体姿态估计性能。作者训练了两个 HRNetV1 网络。网络输出从高到低分辨率的四个特征图，最低分辨率特征图上的热图预测质量太低，AP 分数低于 10 分。实验表明，分辨率确实会影响关键点预测质量</li>
</ul>
<h1 id="多分辨率特征融合对结果的影响"><a class="markdownIt-Anchor" href="#多分辨率特征融合对结果的影响"></a> 多分辨率特征融合对结果的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143812.png" alt="" /></li>
<li>研究了网络的三种变体。（a）无中间融合模块：多分辨率支路之间除了最终融合模块外没有融合。（b）跨阶段融合单元：每个阶段内的相同分辨率支路之间没有融合。（c）跨阶段阶段和内融合模块：这是 HRNet 的结构。多分辨率融合模块很有帮助，并且更多的融合会带来更好的性能</li>
</ul>
<h1 id="保持高分辨率对结果的影响"><a class="markdownIt-Anchor" href="#保持高分辨率对结果的影响"></a> 保持高分辨率对结果的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HRNet-20230408143812-1.png" alt="" /></li>
<li>将低分辨率特征图与高分辨率特征图融合做了对比试验。结果表明 HRNetV2 的低分辨率并行卷积中聚合表示对于提高准确度至关重要</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/335333233">一文读懂HRNet - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/265627806">HR-Net 高分辨率网络对计算机视觉任务的影响 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>关键点识别</tag>
      </tags>
  </entry>
  <entry>
    <title>Simple Baselines for Human Pose Estimation and Tracking</title>
    <url>/2022/03/16/Simple%20Baselines%20for%20Human%20Pose%20Estimation%20and%20Tracking/</url>
    <content><![CDATA[<p>当前的人体姿态估计在深度学习里的发展取得了很大成功，但是在这个领域的神经网络结构变得越来越复杂，也导致对于算法的分析和比较越来越困难。所以作者提出了一个简单但是很有效的baseline网络，用来鼓励大家在这个基础之上进行创新同时使用这个baseline方法来判断新方法的表现</p>
<a id="more"></a>
<h1 id="什么是-simple-baseline"><a class="markdownIt-Anchor" href="#什么是-simple-baseline"></a> 什么是 simple baseline ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/simple%20baseline-20230419214442.png" alt="" /></li>
<li>当前的人体姿态估计在深度学习里的发展取得了很大成功，但是在这个领域的神经网络结构变得越来越复杂，也导致对于算法的分析和比较越来越困难。所以作者提出了一个简单但是很有效的baseline网络，用来鼓励大家在这个基础之上进行创新同时使用这个baseline方法来判断新方法的表现</li>
</ul>
<h1 id="simple-baseline-的-pose-estimation-using-a-deconvolution-head-network"><a class="markdownIt-Anchor" href="#simple-baseline-的-pose-estimation-using-a-deconvolution-head-network"></a> simple baseline 的 Pose Estimation Using A Deconvolution Head Network？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/simple%20baseline-20230419214442.png" alt="" /></li>
<li>对比之前的 hourglass 和 CPN 的结构都会显得十分简单，只是简单地在 resNet 的最后一个卷积 stage 后面加了一些 deconvolutional layers。这些 deconvolutional layers 默认跟着一个 BN 和 ReLU。每一层都有256 * 4 * 4的卷积核，stride 为2。最后通过一个 1∗1 的卷积核计算得到 heatmaps</li>
<li>simple baseline 网络和hourglass还有CPN最大的区别就是在head network（头部网络）是如何得到高分辨率的feature map的，前两个方法都是上采样得到heatmap，但是simple baseline的方法是使用deconv ，deconv相当于同时做了卷积和上采样</li>
</ul>
<h1 id="simple-baseline-的-pose-tracking-based-on-optical-flow"><a class="markdownIt-Anchor" href="#simple-baseline-的-pose-tracking-based-on-optical-flow"></a> simple baseline 的 Pose Tracking Based on Optical Flow？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/simple%20baseline-20230419214653.png" alt="" /></li>
<li><strong>基础原理</strong>：使用 MaskRcnn 来进行人的检测，在视频第一帧中每个检测到的人给一个 id，然后之后的每一帧检测到的人都和上一帧检测到的人通过某种度量方式（文中提到的是计算检测框的 IOU）算一个相似度，将相似度大的作为同一个 id, 没有匹配到的分配一个新的 id</li>
<li><strong>改进</strong>：1）除了检测网络之外，还使用光流法补充一些检测框，用以解决检测网络的漏检问题；2）使用 Object Keypoint Similarity (OKS)代替检测框的IOU来计算相似度。这是因为当人的动作比较快时，用IOU可能并不合理</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/195209573">论文笔记_人体姿态估计：Simple Baselines - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/270996753">人体姿态估计论文笔记-SimpleBaselines - 知乎</a></li>
<li><a href="https://blog.csdn.net/Fire_Light_/article/details/85306668">《Simple Baselines for Human Pose Estimation and Tracking》阅读笔记_Fire_Light_的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/qq_19784349/article/details/110131169">【论文阅读笔记】Simple Baselines for Human Pose Estimation and Tracking_时光机ﾟ的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>CPN：Cascaded Pyramid Network for Multi-Person Pose Estimation</title>
    <url>/2022/03/15/CPN%EF%BC%9ACascaded%20Pyramid%20Network%20for%20Multi-Person%20Pose%20Estimation/</url>
    <content><![CDATA[<p>CPN 网络使用 top-down 模式进行多人姿势估计，即先检测出单个人，再使用 CPN 进行关键点检测。CPN 提出两个子网络检测人体关键点，其中GlobalNet是一个功能金字塔网络，可以成功地定位“简单”的关键点（如眼睛和手），但可能无法准确识别被遮挡或看不见的关键点。而RefineNet尝试通过整合来自GlobalNet的多个尺度的特征，通过扩大感受野的方式以及在线的关键点难例挖掘损失来优化对难例关键点的检测</p>
<a id="more"></a>
<h1 id="什么是-cpn"><a class="markdownIt-Anchor" href="#什么是-cpn"></a> 什么是 CPN ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPN-20230419211151.png" alt="" /></li>
<li>CPN 网络使用 top-down 模式进行多人姿势估计，即先检测出单个人，再使用 CPN 进行关键点检测</li>
<li>CPN 提出两个子网络检测人体关键点，其中GlobalNet是一个功能金字塔网络，可以成功地定位“简单”的关键点（如眼睛和手），但可能无法准确识别被遮挡或看不见的关键点。而RefineNet尝试通过整合来自GlobalNet的多个尺度的特征，通过扩大感受野的方式以及在线的关键点难例挖掘损失来优化对难例关键点的检测</li>
</ul>
<h1 id="cpn-的网络结构"><a class="markdownIt-Anchor" href="#cpn-的网络结构"></a> CPN 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPN-20230419211151.png" alt="" /></li>
<li><strong>Human Detector</strong>：使用 FPN 和 Mask RCNN 网络，以得到每个人的 bounding-boxes，然后使用 bounding-boxes 对原图进行裁剪，并将裁剪后的结果用于 CPN 网络的输入进行关键点检测</li>
<li><strong>GlobalNet</strong>：一个特征金字塔网络，该网络用于定位简单的关键点，如眼睛和手等，但是对于遮挡点和不可见的点可能缺乏精确的定位</li>
<li><strong>RefineNet</strong>：通过集合来自GolbalNet网络的多级别特征来明确解决“难点”的检测问题</li>
</ul>
<h1 id="cpn-的-globalnet-refinenet-的原理"><a class="markdownIt-Anchor" href="#cpn-的-globalnet-refinenet-的原理"></a> CPN 的 GlobalNet、RefineNet 的原理？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPN-20230419211341.png" alt="" /></li>
<li><strong>GlobalNet</strong>：使用 resnet 网络，分别提取 C2、C3、C4、C5 四个尺度的特征</li>
<li><strong>RefineNet</strong>：基于四个尺度特征，输出所有关键点的 heatmap 预测</li>
<li>上图左对于 left eye (简单点)特征图上的激活区域 (红色)的 groundtruth (绿色) 中的位置和接近，说明在 GlabalNet 阶段，该网络对于这种简单点的检测已经达到了很不错的效果；但是看 left hip，在特征图上，还几乎没有激活区域，说明在该阶段网络并不能有效检测到该类别点，上图右可以看到，经过 RefineNet 之后，该网络已经可以有效检测到难检测点了</li>
</ul>
<h1 id="cpn-的损失函数"><a class="markdownIt-Anchor" href="#cpn-的损失函数"></a> CPN 的损失函数？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPN-20230419211151.png" alt="" /></li>
<li>CPN 设计了两部分损失</li>
<li>L2 loss：GlobalNet网络的输出和label计算所有关键点的loss</li>
<li>L2 loss：RefineNet网络输出和label计算所有关键点的loss，然后对loss进行从大到小排序，最后选择top-k个loss用于网络的反向传播</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/yangzhengzheng95/article/details/85288347">论文笔记（CPN）：Cascaded Pyramid Network for Multi-Person Pose Estimation_惟江上清风的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>CrowdPose：Efficient Crowded Scenes Pose Estimation and A New Benchmark</title>
    <url>/2022/03/12/CrowdPose%EF%BC%9AEfficient%20Crowded%20Scenes%20Pose%20Estimation%20and%20A%20New%20Benchmark/</url>
    <content><![CDATA[<p>为解决传统 SPPE 处理密集姿态估计带来的偏差，CrowdPose 设计了 Joint Candidate SPPE 生成众多的候选关节点，然后通过 KM (Keypoint Match)  算法匹配行人实例和候选关节点</p>
<a id="more"></a>
<h1 id="什么是-crowdpose"><a class="markdownIt-Anchor" href="#什么是-crowdpose"></a> 什么是 CrowdPose ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CrowdPose-20230504222631.png" alt="" /></li>
<li>为解决传统 SPPE 处理密集姿态估计带来的偏差 (左图)，CrowdPose 设计了 Joint Candidate SPPE 生成众多的候选关节点，然后通过 KM 算法匹配行人实例和候选关节点 (右图)</li>
<li>CrowdPose 难点在于如何通过 KM (Keypoint Match) 算法整理模型输出，其核心思想是二部图划分，目标是最大化实例与关键点之间的权重</li>
</ul>
<h1 id="crowdpose-的网络结构"><a class="markdownIt-Anchor" href="#crowdpose-的网络结构"></a> CrowdPose 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CrowdPose-20230504222632.png" alt="" /></li>
<li><strong>Human Detection</strong>：行人检测器，用于获得单人的 proposal</li>
<li><strong>Joint-candidate SPPE</strong>：针对每个 Human Detection 的结果进行单人姿态检测，注意此时每个关节点的 heatmap 不是取 top 1, 而是取某个阈值以上的所有点 (Joint-candidate)</li>
<li><strong>Global Assoiciation</strong>：针对 Joint-candidate，通过关键点匹配为每个行人实例分配预测关节点</li>
</ul>
<h1 id="crowdpose-的-joint-candidate-sppe"><a class="markdownIt-Anchor" href="#crowdpose-的-joint-candidate-sppe"></a> CrowdPose 的 Joint-candidate SPPE？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CrowdPose-20230504222632-1.png" alt="" /></li>
<li><strong>SPPE</strong>：上图是 SPPE 的模型输出，可以看出每个关节点 heatmap 只输出 top 1 个预测，其正样本的损失只有 top 1 位置</li>
<li><strong>Joint-candidate SPPE</strong>：下图是 Joint-candidate SPPE 的模型输出，对于某个关节点，通过定义预测阈值得到多个预测位置，这些位置有属于当前行人，也可能属于其他行人的。正样本的损失计算激活位置的损失，但是<strong>给于当前行人的关节更大权重，给于非当前行人更小权重</strong></li>
</ul>
<h1 id="crowdpose-如何建立-person-joint-连接图"><a class="markdownIt-Anchor" href="#crowdpose-如何建立-person-joint-连接图"></a> CrowdPose 如何建立 person-joint 连接图？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CrowdPose-20230504222633.png" alt="" /></li>
<li>基于我们的 JC 机制和来自 SPPE 的富余的 human proposals，JC 在数值上要远远多于实际的关节点数。为了减少富余的关节点，我们建立了一种行人-关节点图模型，然后通过最大行人-关节点匹配算法来获得最终的行人姿态</li>
<li>1）<strong>Joint Node Building</strong>：由于高度重叠的行人 proposals 倾向于预测同样的实际关节（如图）所示。我们首先对这些 JC 进行分组，这样表示同一个实际关节点的视为一个点。分组的依据是预测位置之间的距离，最终得到的“关节点预测集合”</li>
<li>2）<strong>Person Node Building</strong>：行人节点表示有行人检测器检测到的行人 proposals，最终得到“行人实例集合”</li>
<li>3）<strong>Person-Joint Edge</strong>：连接“行人实例集合”和“关节点预测集合”，边上的权重为模型在某行人实例在某个关节点的输出打分</li>
</ul>
<h1 id="crowdpose-的-global-assoiciation"><a class="markdownIt-Anchor" href="#crowdpose-的-global-assoiciation"></a> CrowdPose 的 Global Assoiciation?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CrowdPose-20230504222633-1.png" alt="" /></li>
<li>基于得到的“行人实例集合”和“关节点预测集合”连接图，通过最大化所有边的权重，完成行人实例-预测关节点的匹配</li>
<li>和传统的 pose-NMS 相比，KM 算法在全局预测上匹配关节点，可以很好出来遮挡的情况</li>
<li>上图是每个行人实例节点数的分布。X 轴表示同一个节点被行人检测框覆盖的框的个数（基于 GT 统计，即行人的 proposals+KM 匹配算法得到）。可以看到：1）超过 30%的 GT 关节点是未匹配上去，有近一半的预测关节点被分配到一个实例</li>
</ul>
<h1 id="crowdpose-的损失函数"><a class="markdownIt-Anchor" href="#crowdpose-的损失函数"></a> CrowdPose 的损失函数？</h1>
<ul>
<li>整个网络，只有 Joint-candidate SPPE 部分需要训练，计算的损失包含两部分，即当前行人的损失和非当前行人的损失</li>
<li>公式 K 的关节点数量，i 表示 heatmap 上的位置，P、K、C 表示预测 heatmap、GT heatmap 以及预测 heatmap 上不属于当前行人的打分<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>o</mi><mi>s</mi><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>K</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mi>M</mi><mi>S</mi><mi>E</mi><mo stretchy="false">[</mo><msubsup><mi mathvariant="bold">P</mi><mi>i</mi><mi>k</mi></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">T</mi><mi>i</mi><mi>k</mi></msubsup><mo>+</mo><mi>μ</mi><msubsup><mi mathvariant="bold">C</mi><mi>i</mi><mi>k</mi></msubsup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">L o s s_{i}=\frac{1}{K}\sum_{k=1}^{K}M S E[\mathbf{P}_{i}^{k},\mathbf{T}_{i}^{k}+\mu\mathbf{C}_{i}^{k}]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathbf">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mord"><span class="mord"><span class="mord mathbf">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p>
</li>
</ul>
<h1 id="crowdpose-定义的行人密集程度指标"><a class="markdownIt-Anchor" href="#crowdpose-定义的行人密集程度指标"></a> CrowdPose 定义的行人密集程度指标？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CrowdPose-20230504222634.png" alt="" /></li>
<li>对于某个行人实例 i 包含的 box 内，不是本人关节点的数量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mi>i</mi><mi>b</mi></msubsup></mrow><annotation encoding="application/x-tex">N_i^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.107772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span> 和本人关节点数量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mi>i</mi><mi>a</mi></msubsup></mrow><annotation encoding="application/x-tex">N_i^a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.941994em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span> 的比例，计算所有实例的平均即拥挤程度。上图是 4 个数据集的拥挤程度<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>r</mi><mi>o</mi><mi>w</mi><mi>d</mi><mi>I</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><msubsup><mi>N</mi><mi>i</mi><mi>b</mi></msubsup><msubsup><mi>N</mi><mi>i</mi><mi>a</mi></msubsup></mfrac><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">CrowdIndex=\dfrac{1}{n}\sum\limits_{i=1}^n\dfrac{N_i^b}{N_i^a},
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.526108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6461920000000001em;"><span style="top:-2.4231360000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9628639999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span></span></p>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/107170585">【CrowdPose】：CVPR2019，拥挤人体关键点benchmark - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/133760986">论文精读：CrowdPose - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/91331999">深度学习论文翻译(10)——CrowdPose - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
        <tag>密集姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>RMPE：Regional Multi-person Pose Estimation</title>
    <url>/2022/03/10/RMPE%EF%BC%9ARegional%20Multi-person%20Pose%20Estimation/</url>
    <content><![CDATA[<p>RMPE 是一个二阶段的姿态估计模型，主要是通过对称空间变换网络 (SSTN)来提取高质量的单人区域，解决人体检测框质量不高的问题</p>
<a id="more"></a>
<h1 id="什么是-rmpe"><a class="markdownIt-Anchor" href="#什么是-rmpe"></a> 什么是 RMPE ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RMPE-20230504222445.png" alt="" /></li>
<li>RMPE 是一个二阶段的姿态估计模型，主要是通过对称空间变换网络 (SSTN)来提取高质量的单人区域，解决人体检测框质量不高的问题</li>
</ul>
<h1 id="rmpe-的网络结构"><a class="markdownIt-Anchor" href="#rmpe-的网络结构"></a> RMPE 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RMPE-20230504222445-1.png" alt="" /></li>
<li><strong>STN&amp;SDTN</strong>：[[STN]] 提取高质量单人区域，来克服检测框质量不高的问题；SDTN 是 STN 的仿射矩阵逆变换，用于将预测结果打到变换前的图片上</li>
<li><strong>p-Pose NMS</strong>：参数化姿态非最大抑制，解决姿态的冗余检测问题</li>
<li><strong>Parallel-SPPE</strong>：作为在训练阶段一个额外的 regularizer，<strong>以避免局部极小值</strong>，进一步利用 SSTN 的能力</li>
<li><strong>PGPG</strong>：姿态引导区域框生成器，用于数据增强，以获得更好地模型性能</li>
</ul>
<h1 id="rmpe-的-sstn-和-p-sppe"><a class="markdownIt-Anchor" href="#rmpe-的-sstn-和-p-sppe"></a> RMPE 的 SSTN 和 P-SPPE？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RMPE-20230504222446.png" alt="" /></li>
<li>Human Detector 产生的 proposal 通常不能很好的适配 SPPE（单人姿态估计），[[STN]] 通过学习仿射变换矩阵，通过该矩阵变换图像后得到高质量单人区域</li>
<li>训练时，P-SPPE 冻结所有层的权重，以鼓励STN提取主要的单人区域</li>
</ul>
<h1 id="rmpe-的-p-nmsparamertric-pose-nms"><a class="markdownIt-Anchor" href="#rmpe-的-p-nmsparamertric-pose-nms"></a> RMPE 的 P-NMS（Paramertric Pose NMS）?</h1>
<ul>
<li>人体定义可能有冗余框，导致姿态检测出现冗余姿态，P-NMS 用于消除<strong>一个人</strong>的多个姿态估计问题</li>
<li>对于一个人的姿态 Pi，有 m 个关节点记做 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>i</mi><mn>1</mn></msubsup><mo separator="true">,</mo><msubsup><mi>c</mi><mi>i</mi><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">k_i^1,c_i^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>)， (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>i</mi><mn>2</mn></msubsup><mo separator="true">,</mo><msubsup><mi>c</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">k_i^2,c_i^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>)， (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>i</mi><mi>m</mi></msubsup><mo separator="true">,</mo><msubsup><mi>c</mi><mi>i</mi><mi>m</mi></msubsup></mrow><annotation encoding="application/x-tex">k_i^m,c_i^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.953104em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>)，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>k</mi><mi>i</mi><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">k_i^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.219436em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>c</mi><mi>i</mi><mi>j</mi></msubsup></mrow><annotation encoding="application/x-tex">c_i^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.219436em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span> 分别表示第 j 个部位的坐标位置和置信度分数。首先选取具有最高置信度的姿态作为参照，靠近它的姿态通过<strong>elimination criterion</strong>来消除。该步骤将重复执行，直到只有一个姿态</li>
<li><strong>elimination criterion</strong>：用于衡量两个姿态之间的相似度 (Pose Distance) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><mi mathvariant="normal">Λ</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(P_i,P_j\mid\Lambda,\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Λ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span>，类似 NMS 的 IOU，相似度大于阈值，姿态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">P_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 应该被消除<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><mi mathvariant="normal">Λ</mi><mo separator="true">,</mo><mi>η</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Π</mi><mo stretchy="false">[</mo><mi>d</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><mi mathvariant="normal">Λ</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo><mo>≥</mo><mi>η</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f(P_i,P_j\mid\Lambda,\eta)=\Pi[d(P_i,P_j\mid\Lambda,\lambda)\geq\eta]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Λ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">Π</span><span class="mopen">[</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Λ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mclose">]</span></span></span></span></span></p>
</li>
<li><strong>Pose Distance</strong>：通过两个函数计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><mi mathvariant="normal">Λ</mi><mo separator="true">,</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(P_i,P_j\mid\Lambda,\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Λ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">λ</span><span class="mclose">)</span></span></span></span> 的值，其中 soft matching 函数评估在检测框内的<strong>评估分</strong>，表示姿态之间的空间距离<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>K</mi><mrow><mi>S</mi><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><msub><mi>σ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mi>n</mi></msub><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mfrac><msubsup><mi>c</mi><mi>i</mi><mi>n</mi></msubsup><msub><mi>σ</mi><mn>1</mn></msub></mfrac><mo>⋅</mo><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mfrac><msubsup><mi>c</mi><mi>j</mi><mi>n</mi></msubsup><msub><mi>σ</mi><mn>1</mn></msub></mfrac></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext mathvariant="italic">if</mtext><msubsup><mi>k</mi><mi>j</mi><mi>n</mi></msubsup><mrow><mtext mathvariant="italic">is</mtext><mtext> </mtext><mtext mathvariant="italic">within</mtext></mrow><mi>B</mi><mo stretchy="false">(</mo><msubsup><mi>k</mi><mi>i</mi><mi>n</mi></msubsup><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext mathvariant="italic">otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>H</mi><mrow><mi>s</mi><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><msub><mi>σ</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">Σ</mi><mi>n</mi></msub><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">[</mo><mo>−</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mo stretchy="false">(</mo><msubsup><mi>k</mi><mi>i</mi><mi>n</mi></msubsup><mo>−</mo><msubsup><mi>k</mi><mi>j</mi><mi>n</mi></msubsup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><msub><mi>σ</mi><mn>2</mn></msub></mfrac></mstyle><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><mi mathvariant="normal">Λ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>K</mi><mrow><mi>S</mi><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><msub><mi>σ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><msub><mi>H</mi><mrow><mi>s</mi><mi>i</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>j</mi></msub><mo>∣</mo><msub><mi>σ</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}K_{Sim}(P_i,P_j\mid\sigma_1)=\begin{cases}\sum_ntanh\frac{c_i^n}{\sigma_1}\cdot{tanh\frac{c_j^n}{\sigma_1}}&amp;\textit{if}k_j^n\textit{is within}B(k_i^n);\\ 0&amp;\textit{otherwise}\end{cases} \\H_{sim}(P_i,P_j\mid\sigma_2)=\Sigma_n exp[-\dfrac{(k_i^n-k_j^n)^2}{\sigma_2}]\\d(P_i,P_j\mid\Lambda) = K_{Sim}(P_i,P_j\mid\sigma_1)+\lambda H_{sim}(P_i,P_j\mid\sigma_2)\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.644380000000001em;vertical-align:-3.0721900000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5721900000000004em;"><span style="top:-5.572190000000001em;"><span class="pstrut" style="height:3.75475em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75475em;"><span style="top:-3.75475em;"><span class="pstrut" style="height:3.1244em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">h</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.02718em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">h</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1244em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.60742em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.42488571428571426em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-2.30165em;"><span class="pstrut" style="height:3.1244em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25475em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75475em;"><span style="top:-3.75475em;"><span class="pstrut" style="height:3.1244em;"></span><span class="mord"><span class="mord text"><span class="mord textit">if</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord textit">is within</span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">;</span></span></span><span style="top:-2.30165em;"><span class="pstrut" style="height:3.1244em;"></span><span class="mord"><span class="mord text"><span class="mord textit">otherwise</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25475em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.71856em;"><span class="pstrut" style="height:3.75475em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5988799999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span><span style="top:-1.0425599999999997em;"><span class="pstrut" style="height:3.75475em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">Λ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">λ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.0721900000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="rmpe-的-pgpg-数据增强"><a class="markdownIt-Anchor" href="#rmpe-的-pgpg-数据增强"></a> RMPE 的 PGPG 数据增强？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RMPE-20230504222446-1.png" alt="" /></li>
<li><strong>PGPG 是一种数据增强方式</strong>，用来增加训练数据集。通过学习对于不同姿势的人体检测器的输出分布，<strong>模拟人体边界框的生成</strong>，产生大量的训练数据样本，增强 <strong>STD</strong>针对不同 human detector 结果的能力</li>
<li>论文首先统计不同 pose 下 P，human detector 的结果与 GT bodding box 之间的偏差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">\delta B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>δ</mi><mi>B</mi><mi mathvariant="normal">∣</mi><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(\delta B|P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>，最后通过固定 P，然后得到不同的偏差范围 [xmin, xmax]， [ymin, ymax]，随机从这些范围内取值，生成扰动的 human detector 结果，即数据增强了</li>
</ul>
<h1 id="rmpe-的损失函数"><a class="markdownIt-Anchor" href="#rmpe-的损失函数"></a> RMPE 的损失函数？</h1>
<ul>
<li>多阶段的损失，首先是训练 STN 时，其次训练 SSPE，都是使用类似分割的损失</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/195286001">论文笔记_人体姿态估计：RMPE - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/127883097">论文精读：Reginal Multi-Person Pose Estimation - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/195286001">论文笔记_人体姿态估计：RMPE - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>MSSA：Multi-Scale Structure-Aware Network for Human Pose Estimation</title>
    <url>/2022/03/05/MSSA%EF%BC%9AMulti-Scale%20Structure-Aware%20Network%20for%20Human%20Pose%20Estimation/</url>
    <content><![CDATA[<p>MSSA 认为尺度和遮挡是影响人体姿态估计的关键，因此提出多尺度监督网络 (MSS-net)和多尺度回归网络 (MSR-net)提升网络对不同尺度人体的学习能力</p>
<a id="more"></a>
<h1 id="什么是-mssa"><a class="markdownIt-Anchor" href="#什么是-mssa"></a> 什么是 MSSA ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSSA-20230420220746.png" alt="" /></li>
<li>MSSA 认为尺度和遮挡是影响人体姿态估计的关键，上图第一行是人体不同位置尺度不一样，第二行包含被遮挡的部分，第三行是拥挤场景下的关键点检测</li>
<li>MSSA 提出多尺度监督网络 (MSS-net)和多尺度回归网络 (MSR-net)提升网络对不同尺度人体的学习能力</li>
</ul>
<h1 id="mssa-的网络结构"><a class="markdownIt-Anchor" href="#mssa-的网络结构"></a> MSSA 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSSA-20230420220806.png" alt="" /></li>
<li>基于 hourglass 的基本结构，每个 stage 是 MSS-Net，最后是 MSR-Net</li>
<li><strong>MSS-Net</strong>：通过组合不同scale下的heatmap来加强人体关键点匹配的上下文特征学习</li>
<li><strong>MSR-Net</strong>：在网络最后，用于优化multi-scale特征之间的匹配</li>
<li><strong>structure-aware loss</strong>：用在回归网络的中间监督层以提高关键点和邻居节点之间的特征匹配从而推断出一个较好的匹配机制</li>
</ul>
<h1 id="mssa-的-multi-scale-supervision-network"><a class="markdownIt-Anchor" href="#mssa-的-multi-scale-supervision-network"></a> MSSA 的 multi-scale supervision network？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSSA-20230420221056.png" alt="" /></li>
<li>在最后的 MSS-Net 中，计算 1/2、1/4、1/8 这 3 个尺度的 loss，也就是多尺度监督</li>
</ul>
<h1 id="mssa-的-multi-scale-regression-network"><a class="markdownIt-Anchor" href="#mssa-的-multi-scale-regression-network"></a> MSSA 的 multi-scale regression network？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSSA-20230420221109.png" alt="" /></li>
<li>MSR-net 将多尺度热图作为输入，并将它们与各自尺度上的 groundtruth 关键点进行匹配。通过这种方式，回归网络可以有效地结合所有尺度的热图来细化估计的姿态</li>
<li>a 是 MSS 的关键点预测，b 是对应 a 预测的 MSS 的 heatmap，c 是 MSR 的关键点，d 是对应 MSR 的 heatmap。d 比 c 的信息更加集中</li>
</ul>
<h1 id="mssa-的-structure-aware-loss"><a class="markdownIt-Anchor" href="#mssa-的-structure-aware-loss"></a> MSSA 的 structure-aware loss？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSSA-20230420220806.png" alt="" /></li>
<li>网络较深的时候，会出现梯度消失现象，可以使用中间监督来缓解。本文设计出了<strong>结构损失</strong>，其借鉴来源于人体骨骼拓扑结构，将人体骨骼结构中物理相连的关键点结合起来作为连接的关节点。结合起来的关键点设计如下图所示，有三元关键点结合（手臂和腿部，骨盆可以先不三元）和两元关键点结合</li>
<li>损失函数就变得如下面公式所示，在两个地方使用结构损失：（1）在 MSS-Net 中作为中间监督，去强迫使用全局信息定位局部关键点；（2）MSR-Net 寻找全局的姿态配置。下面的公式中，N 为关键点的数量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">P_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示为单独的关键点，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><msub><mi>S</mi><mi>n</mi></msub></msub></mrow><annotation encoding="application/x-tex">P_{S_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span> 表示与此点连接的关键点对<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">L</mi><mrow><mi mathvariant="normal">M</mi><mi mathvariant="normal">S</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi mathvariant="normal">N</mi></mfrac><munderover><mo>∑</mo><mrow><mi mathvariant="normal">n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">N</mi></munderover><mi mathvariant="normal">∥</mi><msubsup><mi mathvariant="normal">P</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">i</mi></msubsup><mo>−</mo><msubsup><mi mathvariant="normal">G</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">i</mi></msubsup><msub><mi mathvariant="normal">∥</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">a</mi><mi mathvariant="normal">∥</mi><msubsup><mi mathvariant="normal">P</mi><msub><mi mathvariant="normal">S</mi><mi mathvariant="normal">n</mi></msub><mi mathvariant="normal">i</mi></msubsup><mo>−</mo><msubsup><mi mathvariant="normal">G</mi><msub><mi mathvariant="normal">S</mi><mi mathvariant="normal">n</mi></msub><mi mathvariant="normal">i</mi></msubsup><msub><mi mathvariant="normal">∥</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\mathrm{L}_{\mathrm{MS}}=\dfrac{1}{\mathrm{N}}\sum_{\mathrm{n}=1}^{\mathrm{N}}\|\mathrm{P}_{\mathrm{n}}^{\mathrm{i}}-\mathrm{G}_{\mathrm{n}}^{\mathrm{i}}\|_{2}+\mathrm{a}\|\mathrm{P}_{\mathrm{S}_{\mathrm{n}}}^{\mathrm{i}}-\mathrm{G}_{\mathrm{S}_{\mathrm{n}}}^{\mathrm{i}}\|_{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">M</span><span class="mord mathrm mtight">S</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">N</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∥</span><span class="mord"><span class="mord"><span class="mord mathrm">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8805019999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.130502em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8805019999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.227602em;vertical-align:-0.34709999999999996em;"></span><span class="mord"><span class="mord mathrm">a</span></span><span class="mord">∥</span><span class="mord"><span class="mord"><span class="mord mathrm">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.880502em;"><span style="top:-2.453em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34709999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.227602em;vertical-align:-0.34709999999999996em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.880502em;"><span style="top:-2.453em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34709999999999996em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="mssa-的-keypoint-masking-training-scheme"><a class="markdownIt-Anchor" href="#mssa-的-keypoint-masking-training-scheme"></a> MSSA 的 keypoint masking training scheme？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MSSA-20230420224620.png" alt="" /></li>
<li>一种关键点 masking 数据增强方案来增加训练网络的遮挡能力，有几种不同的遮挡：被东西遮挡、自遮挡、被其他人遮挡。(a)表示左手腕被遮挡住了，但可以通过可见关键点的连接结构来估计左手手腕的关键点定位。c 表示如果有其他人考的比较近，也会造成很大的麻烦</li>
<li>通过在图片上复制和粘贴关键点的贴片(patches)来增强数据，如下图(d)所示，其主要思想是生成关键点遮挡的训练样本和人工插入的关键点，从而有效提高网络对这些极端情况的学习能力</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/weixin_43897346/article/details/103165318">[论文阅读] Multi-Scale Structure-Aware Network for Human Pose Estimation（ECCV 2018）_LuFAn~的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/qq_19784349/article/details/111567452">【论文阅读笔记】Multi-Scale Structure-Aware Network for Human Pose Estimation_时光机ﾟ的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenPose：Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields</title>
    <url>/2022/03/01/OpenPose%EF%BC%9ARealtime%20Multi-Person%202D%20Pose%20Estimation%20using%20Part%20Affinity%20Fields/</url>
    <content><![CDATA[<p>OpenPose 是一个 down-up 的多人姿态检测模型，一次性输出所有人的关节点 heatmap 预测，为了区分同一个人的关节点，模型同时输出关键点之间的亲和力PAFs，最终通过求二部图，得到预测结果</p>
<a id="more"></a>
<h1 id="什么是-openpose"><a class="markdownIt-Anchor" href="#什么是-openpose"></a> 什么是 OpenPose ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OpenPose-20230504222548.png" alt="" /></li>
<li>OpenPose 是第一个用于多人2D 姿态检测的开源实时系统，包括身体，脚，手和面部关键点</li>
<li>OpenPose 是一个 down-up 的多人姿态检测模型，一次性输出所有人的关节点 heatmap 预测，为了区分同一个人的关节点，模型同时输出关键点之间的亲和力PAFs，最终通过求二部图，得到预测结果</li>
</ul>
<h1 id="openpose-的网络结构"><a class="markdownIt-Anchor" href="#openpose-的网络结构"></a> OpenPose 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OpenPose-20230504222548-1.png" alt="" /></li>
<li>1）a）该方法将整个图像作为 CNN 的输入，以共同预测（b）用于身体部位检测的heatmap和（c）用于部位关联的 PAF；（d）解析步骤对关联的身体部位候选者执行一组二部图匹配；（e）最终将它们组装成图像中所有人的完整姿势</li>
<li>2）某一 stage 上的结构，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>L</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">L^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span> 是 PAF 输出（w, h, 2），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">S^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span> 是关键点打分 (w, h)，其中 PAF 在每个位置使用 2D 向量编码该位置信息，每个阶段的预测及其对应的图像特征针对每个后续阶段进行级联。训练时对每个 stage 进行监督<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="right center left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi mathvariant="bold">S</mi><mi>t</mi></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>ρ</mi><mi>t</mi></msup><mo stretchy="false">(</mo><mi mathvariant="bold">F</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">S</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="bold">L</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">∀</mi><mi>t</mi><mo>≥</mo><mn>2</mn><mo separator="true">,</mo><mspace width="1em"/><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi mathvariant="bold">L</mi><mi>t</mi></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>ϕ</mi><mi>t</mi></msup><mo stretchy="false">(</mo><mi mathvariant="bold">F</mi><mo separator="true">,</mo><msup><mi mathvariant="bold">S</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi mathvariant="bold">L</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">∀</mi><mi>t</mi><mo>≥</mo><mn>2</mn><mo separator="true">,</mo><mspace width="1em"/><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{rcl}\mathbf{S}^t&amp;=&amp;\rho^t(\mathbf{F},\mathbf{S}^{t-1},\mathbf{L}^{t-1}),\forall t\geq2,\quad(1)\\ \mathbf{L}^t&amp;=&amp;\phi^t(\mathbf{F},\mathbf{S}^{t-1},\mathbf{L}^{t-1}),\forall t\geq2,\quad(2)\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">S</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">F</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">S</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∀</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">F</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">S</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">L</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∀</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li>3）多 stage 情况下的 PAF 输出，可以看出早期阶段左右身体部位和四肢之间存在混淆，但通过后期的全局推断，估计值越来越精确</li>
</ul>
<h1 id="openpose-的-confifidence-maps-for-part-detection"><a class="markdownIt-Anchor" href="#openpose-的-confifidence-maps-for-part-detection"></a> OpenPose 的 Confifidence Maps for Part Detection？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OpenPose-20230504222549.png" alt="" /></li>
<li>理论上每个confidence map是对应groundtruth位置单个像素响应（为1），其他像素点位0；但在实际应用中，我们是用高斯函数生成对应groundtruth位置，周围像素响应（高斯响应）</li>
<li>单人场景下，一个 GT heatmap 只有一个峰，多人场景下，一个 GT heatmap 包含每个人 k 对应可见点 j 都应该有峰值响应<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi mathvariant="bold">S</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow><mo>∗</mo></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">p</mi><mo>−</mo><msub><mi mathvariant="bold">x</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow><msup><mi>σ</mi><mn>2</mn></msup></mfrac><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><mo stretchy="false">(</mo><mn>6</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbf{S}_{j,k}^*(\mathbf{p})=\exp\left(-\dfrac{||\mathbf{p}-\mathbf{x}_{j,k}||_2^2}{\sigma^2}\right),\quad(6)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">S</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.441138em;vertical-align:-0.95003em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911079999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>当多个峰之间有重叠时，对于一个位置，设置其最大值为 GT 值，如上图两个最大峰有重叠的区域，那么该区域取最大值 (虚线)<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>S</mi><mi>J</mi><mo>∗</mo></msubsup><mrow><mo fence="true">(</mo><mi>p</mi><mo fence="true">)</mo></mrow><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><msubsup><mi>S</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow><mo>∗</mo></msubsup><mrow><mo fence="true">(</mo><mi>p</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">S_J^*\left(p\right)=maxS_{j,k}^*\left(p\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">p</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">p</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="openpose-的2d-向量场集pafspart-affinity-vector-field解释"><a class="markdownIt-Anchor" href="#openpose-的2d-向量场集pafspart-affinity-vector-field解释"></a> OpenPose 的2D 向量场集PAFs（part affinity vector field）解释？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OpenPose-20230504222550.png" alt="" /></li>
<li>PAFs 用来编码部位之间的关联程度，上图的如右肘关节和右腕关节</li>
<li>生成 GT PAFs 的过程如右图，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>j</mi><mn>1</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{j1,k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>j</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{j2,k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示第 k 个人的 GT 关节点位置，P 是图片上的某点，下面展示如何求取该点的 GT 值：</li>
<li><strong>1）限制 P 点的范围</strong>：表示生成 PAFs 属于两个关节点形成的肢体之间，即满足以下公式，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>x</mi><mrow><mi>j</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mn>1</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>j</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mn>1</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">v=\left(x_{j2,k}-x_{j1,k}\right)/||x_{j2,k}-x_{j1,k}||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示肢体单位方向向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mo>⊥</mo></msub></mrow><annotation encoding="application/x-tex">v_\perp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mrel mtight">⊥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示其的垂直向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>j</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>j</mi><mn>1</mn><mo separator="true">,</mo><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">l_{c,k}=||x_{j2,k}-x_{j1,k}||_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示肢体长度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是肢体宽度<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>0</mn><mo>≤</mo><mi mathvariant="bold">v</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo>−</mo><msub><mi mathvariant="bold">x</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo stretchy="false">)</mo><mo>≤</mo><msub><mi>l</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mtext>and</mtext><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">v</mi><mi mathvariant="normal">⊥</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo>−</mo><msub><mi mathvariant="bold">x</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><msub><mi>σ</mi><mi>l</mi></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">0\leq\mathbf{v}\cdot(\mathbf{p}-\mathbf{x}_{j_1,k})\leq l_{c,k}\text{and}|\mathbf{v}_\bot\cdot(\mathbf{p}-\mathbf{x}_{j_1,k})|\leq\sigma_l,
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord">and</span></span><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p>
</li>
<li><strong>2）给 GT PAFs 赋值</strong>：对于哪些满足以上要求的点进行赋值，直接赋值单位向量即可，2 维平面的单位向量也是 2D 的，所以每个位置使用 2 个数编码方向<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>L</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>k</mi></mrow><mo>∗</mo></msubsup><mo stretchy="false">(</mo><mi mathvariant="normal">p</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">v</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if p on limb</mtext><mi>c</mi><mo separator="true">,</mo><mi>k</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>otherwise.</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L_{c,k}^*(\mathrm p)=\begin{cases}\mathrm v&amp;\text{if p on limb}c,k\\ 0&amp;\text{otherwise.}\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathrm">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">v</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if p on limb</span></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">otherwise.</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li><strong>3）归一化</strong>：最终向量场 groundtruth 是平均图像中的所有个人，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>c</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n_c(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> 表示非 0 点数的平均值<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>L</mi><mi>c</mi><mo>∗</mo></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>n</mi><mi>c</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo></mrow></mfrac><munder><mo>∑</mo><mi>k</mi></munder><msubsup><mi mathvariant="bold">L</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>k</mi></mrow><mo>∗</mo></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">L_c^*(\mathbf{p})=\dfrac{1}{n_c(\mathbf{p})}\sum\limits_k\mathbf{L}_{c,k}^*(\mathbf{p}),
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.623553em;vertical-align:-1.3021129999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span></span></p>
</li>
<li>预测使用 PAFs 时，理论上是两个关节点之间向量场上的线段积分，但是由于计算复杂，直接在两个关节点之间等距采样即可</li>
</ul>
<h1 id="openpose-的-part-affifinity-fields-for-part-association"><a class="markdownIt-Anchor" href="#openpose-的-part-affifinity-fields-for-part-association"></a> OpenPose 的 Part Affifinity Fields for Part Association？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OpenPose-20230504222550-1.png" alt="" /></li>
<li>a 图模型输出的 6 个预测，如何将这 6 个预测按人分为 3 组呢？b、c 展示了两种编码预测点之间关系的方法</li>
<li>b 图预测两个节点之间的中间节点，由于其缺少方向，发现还是有可能分组错误 (绿线)</li>
<li>c 图预测两个节点之间的<strong>局部关联场（PAF）</strong>，它将整个肢体区域作为支撑域，并同时编码位置和方向信息</li>
</ul>
<h1 id="openpose-的-multi-person-parsing-using-pafs"><a class="markdownIt-Anchor" href="#openpose-的-multi-person-parsing-using-pafs"></a> OpenPose 的 Multi-Person Parsing using PAFs？</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OpenPose-20230504222551.png" alt="" /></p>
</li>
<li>
<p>OpenPose 输出的 heatmap 分支得到全图的所有关节点预测，PAF 分支得到关节点之间的关系图，连接所有预测关节点，并使用 PAF 输出作为边权重，问题转为找出最大权重的图匹配。其中D 表示预测得到获选关节点，z 表示两个关节点之间的关系，通过 PAF 计算得到</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mo><mi>max</mi><mo>⁡</mo></mo><msub><mi mathvariant="script">Z</mi><mi>c</mi></msub></munder><msub><mi>E</mi><mi>c</mi></msub><mo>=</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><msub><mi mathvariant="script">Z</mi><mi>c</mi></msub></munder><munder><mo>∑</mo><mrow><mi>m</mi><mo>∈</mo><msub><mi mathvariant="script">D</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow></munder><munder><mo>∑</mo><mrow><mi>n</mi><mo>∈</mo><msub><mi mathvariant="script">D</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow></munder><msub><mi>E</mi><mrow><mi>m</mi><mi>n</mi></mrow></msub><mo>⋅</mo><msubsup><mi>z</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><msub><mi>j</mi><mn>2</mn></msub></mrow><mrow><mi>m</mi><mi>n</mi></mrow></msubsup><mo separator="true">,</mo><mspace width="1em"/><mo stretchy="false">(</mo><mn>12</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\max\limits_{\mathcal Z_c}E_c=\max_{\mathcal Z_c}\sum_{m\in\mathcal D_{j_1}}\sum\limits_{n\in\mathcal D_{j_2}}E_{mn}\cdot z_{j_1j_2}^{mn},\quad(12)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.527761em;vertical-align:-0.8444309999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.07944em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07944em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5942610000000004em;vertical-align:-1.544256em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.07944em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07944em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.544256em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.544256em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>OpenPose 使用两个简化图匹配问题，一是选用最少的边来或得一个人的骨架，而不是使用完整的图 ©；将匹配问题分解成一组二部匹配的子问题，独立地确定点的匹配 (d)</p>
</li>
</ul>
<h1 id="openpose-的损失函数"><a class="markdownIt-Anchor" href="#openpose-的损失函数"></a> OpenPose 的损失函数？</h1>
<ul>
<li>训练时，对多个 stage 进行监督，损失函数使用 MSE 计算。以下是某个 stage 的损失，其中 S、L 分别表示打分和 PAFs，w (p)表示二值 mask<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="right center left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>f</mi><mi mathvariant="bold">S</mi><mi>t</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></msubsup><msub><mo>∑</mo><mi mathvariant="bold">p</mi></msub><mi mathvariant="bold">W</mi><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi mathvariant="normal">∥</mi><msubsup><mi mathvariant="bold">S</mi><mi>j</mi><mi>t</mi></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi mathvariant="bold">S</mi><mi>j</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><msubsup><mi mathvariant="normal">∥</mi><mn>2</mn><mn>2</mn></msubsup><mo separator="true">,</mo><mspace width="1em"/><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>f</mi><mi mathvariant="bold">L</mi><mi>t</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><msub><mo>∑</mo><mi mathvariant="bold">p</mi></msub><mi mathvariant="bold">W</mi><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi mathvariant="normal">∥</mi><msubsup><mi mathvariant="bold">L</mi><mi>c</mi><mi>t</mi></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi mathvariant="bold">L</mi><mi>c</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><msubsup><mi mathvariant="normal">∥</mi><mn>2</mn><mn>2</mn></msubsup><mo separator="true">,</mo><mspace width="1em"/><mo stretchy="false">(</mo><mn>4</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{rcl}f_{\mathbf{S}}^{t}&amp;=&amp;\sum_{j=1}^{J}\sum_{\mathbf{p}}\mathbf{W}(\mathbf{p})\cdot\|\mathbf{S}_{j}^{t}(\mathbf{p})-\mathbf{S}_{j}^{*}(\mathbf{p})\|_{2}^{2},\quad(3)\\ \\ f_{\mathbf{L}}^{t}&amp;=&amp;\sum_{c=1}^{C}\sum_{\mathbf{p}}\mathbf{W}(\mathbf{p})\cdot\|\mathbf{L}_{c}^{t}(\mathbf{p})-\mathbf{L}_{c}^{*}(\mathbf{p})\|_{2}^{2},\quad(4)\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.034098em;vertical-align:-1.767049em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.267049em;"><span style="top:-4.285818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4227230000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">S</span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.277277em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.668769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4227230000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">L</span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.277277em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.767049em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.267049em;"><span style="top:-4.285818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-1.668769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.767049em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.267049em;"><span style="top:-4.285818em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.011397999999999908em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">p</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">∥</span><span class="mord"><span class="mord"><span class="mord mathbf">S</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">S</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span></span></span><span style="top:-1.668769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.011397999999999908em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">p</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">W</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">∥</span><span class="mord"><span class="mord"><span class="mord mathbf">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.767049em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li>对所有 stage 损失汇总，得到总损失<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mo stretchy="false">(</mo><msubsup><mi>f</mi><mi mathvariant="double-struck">S</mi><mi>t</mi></msubsup><mo>+</mo><msubsup><mi>f</mi><mi mathvariant="double-struck">L</mi><mi>t</mi></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">f=\sum\limits_{t=1}^T(f_\mathbb{S}^t+f_\mathbb{L}^t).
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435559999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbb mtight">S</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093556em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435559999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbb mtight">L</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/u011681952/article/details/85695623">2D多人关键点：《Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields》_paf时间开销_Godswisdom的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/514078285">OpenPose论文解读——Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields（OpenPose学习笔记1） - 知乎</a></li>
<li><a href="https://blog.csdn.net/magic_ll/article/details/108105054">论文翻译 || openpose – Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields_magic_ll的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/wangyc1208/article/details/95959157">论文学习笔记：OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields_wangyc1208的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/360541947">[多图/秒懂]白话 OpenPose，最受欢迎的姿态估计网络 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>Pose Attention：Multi-Context Attention for Human Pose Estimation</title>
    <url>/2022/02/28/Pose%20Attention%EF%BC%9AMulti-Context%20Attention%20for%20Human%20Pose%20Estimation/</url>
    <content><![CDATA[<p>Pose Attention 是一个基于 hourglass 改进的网络，主要创新是同时结合了整体注意力和肢体部分注意力，整体注意力针对的是整体人体的全局一致性，部分注意力针对不同身体部分的详细描述. 因此，能够处理从局部显著区域到全局语义空间的不同粒度内容，同时引入条件随机场(CRF)来进行空间相关建模，而不是使用全局Softmax</p>
<a id="more"></a>
<h1 id="什么是-pose-attention"><a class="markdownIt-Anchor" href="#什么是-pose-attention"></a> 什么是 Pose Attention ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pose%20Attention-20230504222500.png" alt="" /></li>
<li>Pose Attention 是一个基于 hourglass 改进的网络，主要创新是同时结合了整体注意力和肢体部分注意力，整体注意力针对的是整体人体的全局一致性，部分注意力针对不同身体部分的详细描述. 因此，能够处理从局部显著区域到全局语义空间的不同粒度内容，同时引入条件随机场 (CRF)来进行空间相关建模，而不是使用全局 Softmax</li>
<li>上图第一行分别是，输入图片、整体注意力图、部分注意力图；第二行是关节点位置的 heatmaps，不同颜色对应不同的关节点；第三行是预测的姿态可视化结果，(a)由于背景复杂和自遮挡问题，ConvNets 可能得到错误的估计结果，(b)视觉注意力图对人体关节点的空间关系进行建模，鲁棒性好，©关节点注意力图解决重复计算问题(double counting problem)，进一步提高关节点估计结果</li>
</ul>
<h1 id="pose-attention-的网络结构"><a class="markdownIt-Anchor" href="#pose-attention-的网络结构"></a> Pose Attention 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pose%20Attention-20230504222501.png" alt="" /></li>
<li>由8-stack hourglass 网络的基本结构组成，各 hourglass stack 分别得到多分辨率注意力图，将多语义注意力图应用到各 hourglass</li>
</ul>
<h1 id="pose-attention-的沙漏残差单元-hourglass-residual-units-hrus"><a class="markdownIt-Anchor" href="#pose-attention-的沙漏残差单元-hourglass-residual-units-hrus"></a> Pose Attention 的沙漏残差单元 (Hourglass Residual Units, HRUs)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pose%20Attention-20230504222501-1.png" alt="" /></li>
<li>包括三个分支：(A)恒等映射 (identity mapping)分支； (B)残差分支；© hourglass residual 分支. 卷积残差分支和 hourglass residual 分支输入的接受野分别为 3 x 3、10 x 10</li>
<li>三个分支具有不同的接受野和分辨率，相加作为HRU的输出. HRU 单元增加了网络接受野，同时保持高分辨率信息</li>
</ul>
<h1 id="pose-attention-的多分辨率注意力-multi-resolution-attention"><a class="markdownIt-Anchor" href="#pose-attention-的多分辨率注意力-multi-resolution-attention"></a> Pose Attention 的多分辨率注意力 (Multi-Resolution Attention)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pose%20Attention-20230504222502.png" alt="" /></li>
<li>上图是各 hourglass stage <strong>内部</strong>的不同尺度的特征得到多分辨率注意力图，分辨率越高其注意力越精细</li>
</ul>
<h1 id="pose-attention-的多语义注意力-multi-semantics-attention"><a class="markdownIt-Anchor" href="#pose-attention-的多语义注意力-multi-semantics-attention"></a> Pose Attention 的多语义注意力 (Multi-Semantics Attention )？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pose%20Attention-20230504222502-1.png" alt="" /></li>
<li>上图是 8 个 stage 的注意力图，可以看出不同的 stack 具有不同的语义，底层 stacks 对应局部特征，高层 stacks 对应全局特征. 因此，不同 stacks 生成的注意力图编码着不同的语义</li>
</ul>
<h1 id="pose-attention-的分层注意力机制-hierarchical-attention-mechanism"><a class="markdownIt-Anchor" href="#pose-attention-的分层注意力机制-hierarchical-attention-mechanism"></a> Pose Attention 的分层注意力机制 (Hierarchical Attention Mechanism)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pose%20Attention-20230504222503.png" alt="" /></li>
<li>底层 stacks (stack1 - stack4)，采用两个整体注意力图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mn>1</mn><mrow><mi>a</mi><mi>t</mi><mi>t</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">h_1^{att}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.041664em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mn>2</mn><mrow><mi>a</mi><mi>t</mi><mi>t</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">h_2^{att}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.041664em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span> 来对整体人体进行编码</li>
<li>高层 stacks (stack5 - stack8)，设计分层的 coarse-to-fine 注意力机制对局部关节点进行缩放处理</li>
<li>f 是 Figure5中 hourglass stack 的最后一层的输出特征，Φ上采样的注意力图，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mn>1</mn><mrow><mi>a</mi><mi>t</mi><mi>t</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">h_1^{att}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.041664em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span> 是 hourglass stack 输出特征和注意力模型得到的注意力图，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mn>2</mn><mrow><mi>a</mi><mi>t</mi><mi>t</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">h_2^{att}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.041664em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>是注意力图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mn>1</mn><mrow><mi>a</mi><mi>t</mi><mi>t</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">h_1^{att}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.041664em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>结合各关节点注意力模型得到的refined后注意力图特征</li>
</ul>
<h1 id="pose-attention-恢复关键点预测使用-crf-和-softmax-的区别"><a class="markdownIt-Anchor" href="#pose-attention-恢复关键点预测使用-crf-和-softmax-的区别"></a> Pose Attention 恢复关键点预测使用 CRF 和 softmax 的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pose%20Attention-20230504222504.png" alt="" /></li>
<li>随着训练的进展，Pose Attention比较验证集上的准确率，即PCKh为0.5。与Softmax注意力模型相比，CRF注意力模型收敛更快，验证精度更高。将这两种模型生成的注意力图可视化，观察到CRF模型生成的注意图比Softmax模型更加清晰，因为CRF模型对人体各部位的空间相关性建模能力更强</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/zziahgf/article/details/77897060">论文阅读理解 - Multi-Context Attention for Human Pose Estimation_multi-context gating_AIHGF的博客-CSDN博客</a></li>
<li><a href="https://www.cnblogs.com/wanghui-garcia/p/13968639.html">位姿估计 - 2 -Multi-Context Attention for Human Pose Estimation（+ attention） - 1 - 论文学习 - 慢行厚积 - 博客园</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>Hourglass：Stacked Hourglass Networks for Human Pose Estimation</title>
    <url>/2022/02/26/Hourglass%EF%BC%9AStacked%20Hourglass%20Networks%20for%20Human%20Pose%20Estimation/</url>
    <content><![CDATA[<p>Hourglass 认为识别脸和手是需要局部信息的，而整体的姿态识别需要整个身体的信息。因此，整合各种尺度的信息是必要的。采取重复的自底向上、自顶向下模块学习图片特征，相当于使用不同的感受野观察图片，结合中间监督，加速模型收敛</p>
<a id="more"></a>
<h1 id="什么是-hourglass"><a class="markdownIt-Anchor" href="#什么是-hourglass"></a> 什么是 Hourglass ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Hourglass-20230419202756.png" alt="" /></li>
<li>Hourglass 是一个单目标的、基于 heatmap 的人体姿态估计网络，因其由众多类似漏斗的模块组成，也称其为漏斗网络</li>
<li>Hourglass 认为识别脸和手是需要局部信息的，而整体的姿态识别需要整个身体的信息。因此，整合各种尺度的信息是必要的。采取重复的自底向上、自顶向下模块学习图片特征，相当于使用不同的感受野观察图片，结合中间监督，加速模型收敛</li>
</ul>
<h1 id="hourglass-的网络结构"><a class="markdownIt-Anchor" href="#hourglass-的网络结构"></a> Hourglass 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Hourglass-20230419202841.png" alt="" /></li>
<li><strong>下采样</strong>：使用卷积层和最大池化层将 feature map 下采样到非常低的分辨率，在最大池化层前使用相对更多的卷积（在原分辨率上进行卷积操作）</li>
<li><strong>上采样</strong>：使用最近邻上采样和 skip connection（element-add）整合不同尺度的信息。Hourglass 的拓扑结构是对称的</li>
<li><strong>输出</strong>：在达到网络的输出分辨率后，使用连续两轮 1x 1卷积产生最终的网络预测</li>
</ul>
<h1 id="hourglass-的-hourglass-module"><a class="markdownIt-Anchor" href="#hourglass-的-hourglass-module"></a> Hourglass 的 Hourglass Module ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Hourglass-20230419205539.png" alt="" /></li>
<li><strong>Residual Module</strong>：使用 1 x 1 卷积减少通道数，使用 3 x 3 卷积不降低分辨率提取特征，然后再使用 1 x 1 卷积还原通道数，最终和原始特征相加输出</li>
<li><strong>Hourglass Module</strong>：多个残差块的堆叠得到</li>
<li><strong>Hourglass</strong>：不同跨度的 Hourglass Module 堆叠得到</li>
</ul>
<h1 id="hourglass-的中间监督"><a class="markdownIt-Anchor" href="#hourglass-的中间监督"></a> Hourglass 的中间监督？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Hourglass-20230419204237.png" alt="" /></li>
<li>上图右边的蓝色表示中间监督的 heatmap，可以应用 loss 进行监督。然后通过1 x 1 s卷积将 heatmap 重新映射成中间 feature maps，所以所以，第 n 个 hourglass 的输入有三个：（1）第 n-1个 hourglass 的特征输出；（2）第 n-1个 hourglass 的 heatmap 映射的特征；（3）第 n-1个 hourglass 的输入特征</li>
</ul>
<h1 id="hourglass-的损失函数"><a class="markdownIt-Anchor" href="#hourglass-的损失函数"></a> Hourglass 的损失函数？</h1>
<ul>
<li>使用 MSE 计算损失</li>
</ul>
<h1 id="hourglass-如何解决多人预测的问题"><a class="markdownIt-Anchor" href="#hourglass-如何解决多人预测的问题"></a> Hourglass 如何解决多人预测的问题？</h1>
<ul>
<li>Hourglass只能用于单人姿态检测，但是在一张图片中经常有多个人，解决办法就是只对图片正中心的人物进行训练。将目标人物裁剪到正中心后再将输入图片resize到256×256</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/45002720">论文笔记Stacked Hourglass Networks - 知乎</a></li>
<li><a href="https://blog.csdn.net/qq_19784349/article/details/112524305">Fetching Title#uro0</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>CPM：Convolutional Pose Machines</title>
    <url>/2022/02/25/CPM%EF%BC%9AConvolutional%20Pose%20Machines/</url>
    <content><![CDATA[<p>人体关节之间是存在一定的关系的，传统做法是使用马尔科夫模型构建他们之间的关联。CPM 没有使用该方法，而是使用卷积去提取关节之间的关系。主要思路是将网络结构分为多个 stage，其中第一个 stage 会产生初步的关键点的检测效果，接下来的几个 stage 均以前一个 stage 的预测输出和从原图提取的特征作为输入，最后使用多 satge 监督网络训练</p>
<a id="more"></a>
<h1 id="什么是-cpm"><a class="markdownIt-Anchor" href="#什么是-cpm"></a> 什么是 CPM ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPM-20230419223658.png" alt="" /></li>
<li>人体关节之间是存在一定的关系的，传统做法是使用马尔科夫模型构建他们之间的关联。CPM 没有使用该方法，而是使用卷积去提取关节之间的关系。主要思路是将网络结构分为多个 stage，其中第一个 stage 会产生初步的关键点的检测效果，接下来的几个 stage 均以前一个 stage 的预测输出和从原图提取的特征作为输入，最后使用多 satge 监督网络训练</li>
</ul>
<h1 id="cpm-的网络结构"><a class="markdownIt-Anchor" href="#cpm-的网络结构"></a> CPM 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPM-20230419223800.png" alt="" /></li>
<li>从第二个 stage 开始，其输入包括两部分，前一 stage 的输出+原图重新提取的特征，上图红框、蓝框分别是第 1、2 个 satge 的原图提取的特征</li>
<li>随着 stage 的堆叠，其感受野越来越大，可以从整体上感知关节之间的关系</li>
</ul>
<h1 id="cpm-的多-stage-的作用"><a class="markdownIt-Anchor" href="#cpm-的多-stage-的作用"></a> CPM 的多 stage 的作用？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPM-20230419224400.png" alt="" /></li>
<li>容易检测的关节点可以为难以检测的关节点提供有用信息. (shouler, neck, head) 关节点，对于 (right elbow) 后续 stages 的 belief maps 来说，有助于消除其错误的估计(red)，并提升其正确估计(green)</li>
</ul>
<h1 id="cpm-的多-stage-监督"><a class="markdownIt-Anchor" href="#cpm-的多-stage-监督"></a> CPM 的多 stage 监督？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPM-20230419224102.png" alt="" /></li>
<li>CPM 每个 stage 都会输出关节点的预测结果，重复地输出每个关节点位置的 belief maps，以渐进精细化的方式估计关节点. 故，在每个 stage 输出后均计算 loss，作为中间监督 loss，避免梯度消失问题</li>
<li>上图黑线是增加多 stage 监督的梯度，红线是没有多 stage 监督的梯度，可以看出没有多 stage 监督的网络，在 Layer12 就出现梯度消失，而多 stage 监督没有此现象</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://cloud.tencent.com/developer/article/1396363#:~:text=Convolutional%20Pose%20Machines%20%28CPMs%29%20%E6%98%AF%E5%B0%86%20Convolutional%20Network,%E6%95%B4%E5%90%88%E8%BF%9B%20Pose%20Machines%EF%BC%8C%E4%BB%A5%E5%AD%A6%E4%B9%A0%E5%9B%BE%E5%83%8F%E7%89%B9%E5%BE%81%E5%92%8C%E5%9B%BE%E5%83%8F%E7%9B%B8%E5%85%B3%20%28image-depenent%29%E7%9A%84%E7%A9%BA%E9%97%B4%E6%A8%A1%E5%9E%8B%EF%BC%8C%E4%BC%B0%E8%AE%A1%E4%BA%BA%E4%BD%93%E5%A7%BF%E6%80%81.%20CPMs%20%E5%AF%B9%20long-range%20%E8%8C%83%E5%9B%B4%E5%86%85%E5%8F%98%E9%87%8F%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB%E8%BF%9B%E8%A1%8C%E5%BB%BA%E6%A8%A1%EF%BC%8C%E4%BB%A5%E5%A4%84%E7%90%86%E7%BB%93%E6%9E%84%E5%8C%96%E9%A2%84%E6%B5%8B%E4%BB%BB%E5%8A%A1%EF%BC%8C%E5%A6%82%EF%BC%8C%E4%BA%BA%E4%BD%93%E5%A7%BF%E6%80%81%E4%BC%B0%E8%AE%A1.">论文阅读理解 - Convolutional Pose Machines - 腾讯云开发者社区-腾讯云</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>OCRNet：Segmentation Transformer：Object-Contextual Representations for Semantic Segmentation</title>
    <url>/2022/01/23/Segmentation%20Transformer%EF%BC%9AObject-Contextual%20Representations%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>语义分割是对像素进行分类，而像素的类别标签是由它所在的目标的类别标签决定的，通常的上下文信息是基于像素之间的，OCRNet 根据类别数量，基于&quot;自注意力机制&quot;显式地增强来自同一物体的像素贡献</p>
<a id="more"></a>
<h1 id="什么是-ocrnet"><a class="markdownIt-Anchor" href="#什么是-ocrnet"></a> 什么是 OCRNet ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OCRNet-20230408143335.png" alt="OCRNet-20230408143335" /></li>
<li>语义分割是对像素进行分类，而像素的类别标签是由它所在的目标的类别标签决定的，通常的上下文信息是基于像素之间的，能不能利用像素所在目标的类别去构建上下文标签呢？</li>
<li>OCRNet 根据类别数量，基于&quot;自注意力机制&quot;显式地增强来自同一物体的像素贡献</li>
</ul>
<h1 id="ocrnet-的网络结构"><a class="markdownIt-Anchor" href="#ocrnet-的网络结构"></a> OCRNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OCRNet-20230408143336.png" alt="OCRNet-20230408143336" /></li>
<li><strong>Pixel Representations</strong>：经过 CNN 提取得到的结果，假设输出是 (BxCxHxW)</li>
<li><strong>软对象区域（Soft Object Regions）</strong>：根据目标的类别数量，使用 1 x 1 卷积调整通道数，假设最后有 17 个类别，则输出 (Bx 17 xHxW)的特征，表示任意像素位置的 17 长度的隐向量。注意：这里有使用 loss 去监督每个像素的类别表示</li>
<li><strong>对象区域表示（Object Region Representations）</strong>：Pixel Representations 与 Soft Object Regions 的计算结果，即  (Bx 17 xHxW) x (BxCxHxW) =(B, 17, C)，表示 17 个类的 C 长度的特征</li>
<li><strong>对象上下文表示和增强表示</strong>：首先基于 Soft Object Regions 和 Object Region Representations 求得像素与区域相似度，即给每个像素增加区域上下文，然后和 Pixel Representations 输出 concat 在一起输出</li>
</ul>
<h1 id="ocrnet-比较-transformer"><a class="markdownIt-Anchor" href="#ocrnet-比较-transformer"></a> OCRNet 比较 transformer?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OCRNet-20230408143336-1.png" alt="OCRNet-20230408143336-1" /></li>
<li><strong>Transformer 输入</strong>：包括2部分，一部分是 image representations 输入 Transformer Encoder 用于增强特征表示，另外一部分是 category queries 输入到 Transformer Decoder 中可以用于编码不同语义类别的上下文信息。在原始 OCRNet 中，我们省略了灰色部分的操作，即 pixel representations 和 region representations 上的 Self-Attention 操作</li>
<li><strong>类比 OCRNet</strong>：K，V 就是 CNN 输出<strong>Pixel Representations</strong>，Q 就是 Soft Object Regions，首先通过 QK^T 得到 Object Region Representations，也就是注意力矩阵，然后 Object Region Representations 与<strong>Pixel Representations</strong>计算输出，也就是 (QK^T) xV 的过程</li>
<li>综上可以看出OCRNet方法背后的思想同Transformer的做法有不少共通之处，另外最近也有2篇非常不错的图像语义分割方面工作MaskFormer和K-Net都提出了很有意思的基于Transformer Encoder + Decoder的视角与思路</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/Alvarez/article/details/113744646">【小白入门】超详细的OCRnet详解（含代码分析）_soft object region_Alvarez的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/weixin_46142822/article/details/123887999">语义分割: 一文读懂 OCRNet_ocr语义分割_大林兄的博客-CSDN博客</a></li>
<li><a href="https://blog.51cto.com/u_15357586/3790579">【语义分割】——读源码、论文理解OCRNet_51CTO博客_语义分割最新论文</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>OCNet：Object Context Network for Scene Parsing</title>
    <url>/2022/01/22/OCNet%EF%BC%9AObject%20Context%20Network%20for%20Scene%20Parsing/</url>
    <content><![CDATA[<p>OCNet设计OCP模块，通过分块设计稀疏的空间注意力，减少构建注意力的性能损耗</p>
<a id="more"></a>
<h1 id="什么是-ocnet"><a class="markdownIt-Anchor" href="#什么是-ocnet"></a> 什么是 OCNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OCNet-20230408143327.png" alt="OCNet-20230408143327" /></li>
<li>OCNet 提出了一个构建稀疏空间注意力的机制 (OCP)，基本原理是对特征采样分组后，构建组内的空间注意力，然后再次分组构建空间注意力，通过两次有重叠分组构建的注意力代表整体空间注意力</li>
<li>其次，将 OCP 构建注意力的过程加入到 PSPNet 或者 空洞卷积金字塔池化(ASPP)，实现了更高的精度</li>
</ul>
<h1 id="ocnet-的网络结构"><a class="markdownIt-Anchor" href="#ocnet-的网络结构"></a> OCNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OCNet-20230408143328.png" alt="OCNet-20230408143328" /></li>
<li>给定一幅输入图像，采用完全卷积网络 ([[FCN]])提取特征映射，然后在特征映射上使用<strong>目标语义池化机制（OCP）</strong> 输出更新后的特征映射</li>
<li>在更新后的特征映射图的基础上，采用分类器预测像素级标签映射，并采用双线性插值方法对 label 图进行8倍上采样，最终得到预测结果</li>
</ul>
<h1 id="ocnet-的-ocp-中实现稀疏的空间注意力"><a class="markdownIt-Anchor" href="#ocnet-的-ocp-中实现稀疏的空间注意力"></a> OCNet 的 OCP 中实现稀疏的&quot;空间注意力&quot;？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OCNet-20230408143329.png" alt="" /></li>
<li>分为两个步骤，一个步骤是构建全局的空间注意力 (Global)，一个是构建局部的空间注意力 (Local)</li>
<li>Global 注意力：首先对输入 X 进行分组采样，每组之内构建空间注意力，然后合并所有组的结果，得到全局注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>g</mi></msup></mrow><annotation encoding="application/x-tex">Z^g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span></span></span></span></li>
<li>Local 注意力：对全局注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>g</mi></msup></mrow><annotation encoding="application/x-tex">Z^g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span></span></span></span> 进行分组采样，每组之内构建空间注意力，然后合并所有组的结果，得到全局+局部注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">Z^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></li>
<li>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">N\times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 大小的特征，不是直接计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">N\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 大小的注意力矩阵，而是通过 2 次采样构建稀疏的注意力矩阵</li>
</ul>
<h1 id="ocnet-的目标语义池化机制"><a class="markdownIt-Anchor" href="#ocnet-的目标语义池化机制"></a> OCNet 的目标语义池化机制？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OCNet-20230408143331.png" alt="OCNet-20230408143331" /></li>
<li>本文共设计了三种形式的 object context 模块，第一种是原始 OCP，第二种借鉴了金字塔池化模块 (PSP)，第 3 种借鉴了空洞卷积金字塔模块 (ASPP)。原始 OCP 模块来源于自注意力机制，包括两个主要步骤：目标语义估计和目标语义聚合</li>
<li><strong>目标语义估计</strong>：首先对 featrue map 进行采样分组，对每组特征构建其注意力矩阵，然后合并分组结果，然后再对结果进行分组，再次构建注意力矩阵，即对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">N\times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 大小的特征，不是直接计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">N\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 大小的注意力矩阵，而是通过 2 次采样构建稀疏的注意力矩阵</li>
<li><strong>目标语义聚合</strong>：计算过程可以表示为由第一步得到的目标语义图 N×N 和特征图 N×C 矩阵相乘，再 reshape 成 H×W×C</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>CRNN： An End-to-End Trainable Neural Network for Image-based Sequence Recognition and Its Application to Scene Text Recognition</title>
    <url>/2021/10/20/CRNN%EF%BC%9A%20An%20End-to-End%20Trainable%20Neural%20Network%20for%20Image-based%20Sequence%20Recognition%20and%20Its%20Application%20to%20Scene%20Text%20Recognition/</url>
    <content><![CDATA[<p>传统的文本识别方法需要先对单个文字进行切割，然后再对单个文字进行识别。CRNN直接从整张图出发，将图片特征输入RNN进行序列学习，最后通过CTC计算损失</p>
<a id="more"></a>
<h1 id="什么是-crnn"><a class="markdownIt-Anchor" href="#什么是-crnn"></a> 什么是 CRNN ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CRNN-20230408144101.png" alt="" /></li>
</ul>
<ol>
<li><strong>CNN 提取特征</strong>：使用轻量化网络 MobileNetv3，其中输入图像的高度统一设置为32，宽度可以为任意长度，经过 CNN 网络后，特征图的高度缩放为1</li>
<li><strong>Im2Seq</strong>：将 CNN 获取的特征图变换为 RNN 需要的特征向量序列的形状</li>
<li><strong>双向 LSTM（BiLSTM）对特征序列进行预测</strong>：学习序列中的每个特征向量并输出预测标签分布。这里其实相当于把特征向量的宽度视为 LSTM 中的时间维度</li>
<li><strong>全连接层分类</strong>：使用全连接层对每个序列进行 N+1 类别预测，获取模型的预测结果</li>
<li><strong>CTC</strong>：解码模型输出的预测结果，得到最终输出</li>
</ol>
<h1 id="crnn-的网络结构"><a class="markdownIt-Anchor" href="#crnn-的网络结构"></a> CRNN 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CRNN-20230408144101-1.png" alt="CRNN-20230408144101-1" /></li>
<li><strong>卷积层</strong>，使用 CNN，作用是从输入图像中提取特征序列，<strong>要求输入高度必须是 32</strong>，以便以上 5 次下采样，可以将其约简到 1 d，如 (512，1，40) 可以认为是 40 个时间步，每个时间步特征向量长度为 512 的，然后才能使用 RNN 学习</li>
<li><strong>循环层</strong>，使用RNN，作用是预测从卷积层获取的特征序列的标签（真实值）分布;</li>
<li><strong>转录层</strong>，使用CTC，作用是把从循环层获取的标签分布通过去重整合等操作转换成最终的识别结果</li>
</ul>
<h1 id="crnn-如何计算-ctc-loss"><a class="markdownIt-Anchor" href="#crnn-如何计算-ctc-loss"></a> CRNN 如何计算 CTC loss？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2017.23.38.excalidraw.png" alt="Drawing 2023-03-22 17.23.38.excalidraw" /></li>
<li>
<ol>
<li>如何直接对序列进行预测，字符后续后处理时，无法找出连续的字符，在预测的字符之间插入连字符后解决该问题</li>
</ol>
</li>
<li>
<ol start="2">
<li>CTC loss 主要是解决不对齐序列的损失计算，主要原理有 2 个地方：1）加入连字符预测，用于处理连续出现的字符；2）构建所有时间步的状态转移矩阵，根据状态转移矩阵求出得到 gt 预测序列的所有路径，最后1-所有路径概率相加=CTC loss</li>
</ol>
</li>
<li>3.状态转移矩阵的序列转移规则：1)方向只能向下或向右；2）相同字符之间一定有一个空字符；3）非空字符不能被跳过；4）起点必须从前 2 个字符开始；5）终点必须在结尾 2 个连续字符</li>
<li>Pytorch 有专门的 API 去求解 CTC loss，直接调用即可<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; ctc_loss = nn.CTCLoss()</span><br><span class="line">&gt;&gt;&gt; log_probs = torch.randn(50, 16, 20).log_softmax(2).detach().requires_grad_()</span><br><span class="line">&gt;&gt;&gt; targets = torch.randint(1, 20, (16, 30), dtype=torch.long)</span><br><span class="line">&gt;&gt;&gt; input_lengths = torch.full((16,), 50, dtype=torch.long)</span><br><span class="line">&gt;&gt;&gt; target_lengths = torch.randint(10,30,(16,), dtype=torch.long)</span><br><span class="line">&gt;&gt;&gt; loss = ctc_loss(log_probs, targets, input_lengths, target_lengths)</span><br><span class="line">&gt;&gt;&gt; loss.backward()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="crnn-的输出如何解析"><a class="markdownIt-Anchor" href="#crnn-的输出如何解析"></a> CRNN 的输出如何解析？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-22%2019.00.35.excalidraw.png" alt="Drawing 2023-03-22 19.00.35.excalidraw" /></li>
<li>直接拿到所有时间步的预测结果，然后合并 2 个连字符之间的相同字符，得到最终结果</li>
<li>以上是 12 个时间步的输出结果，去掉连字符内重复字符的过程如： hhe–lll-llo 、 he–l-lo 、hello</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/cengjing12/article/details/109656710">CRNN_AI路上的小白的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/weixin_45755332/article/details/115796090">CRNN——卷积循环神经网络结构_猛男技术控的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>文本识别</tag>
      </tags>
  </entry>
  <entry>
    <title>DRNet：Learning Dynamic Routing for Semantic Segmentation</title>
    <url>/2021/09/23/DRNet%EF%BC%9ALearning%20Dynamic%20Routing%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>DRNet不同以往的静态网络结构，而是使用了一种Gate函数控制在路由空间动态选择路径，以便能寻找出最适合尺度的网络结构，总的来说，该结构网络固定，但是使用的路径是根据输入来定</p>
<a id="more"></a>
<h1 id="什么是-drnet"><a class="markdownIt-Anchor" href="#什么是-drnet"></a> 什么是 DRNet ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DRNet-20230408142930.png" alt="DRNet-20230408142930" /></li>
<li>近年来，大量手工设计和基于搜索的网络被用于语义分割，希望在预定义的静态网络结构中处理不同规模的输入。<strong>在本文中，作者研究了一种缓解语义表示中尺度差异的新方法——动态路由（dynamic routing）</strong> ，该方法根据图像的尺度分布，来生成与数据相关的路由</li>
<li>在推理过程中，动态路由能够生成与数据相关的路径，这意味着特定的<strong>网络结构随输入而变化</strong>。通过这种方法，具有不同尺度的实例可以分配到相应的分辨率模块。如上图所示，具有不同尺度分布的输入图像将选择不同的路径进行特征变换。本文研究侧重于语义表征，旨在克服尺度的差异，提高网络效率</li>
<li>在动态路由方面，作者设计了一种依赖于输入数据的门，称为<strong>软条件门（soft conditional gate）</strong> ，用于根据输入图像选择每条路径。通过提出的路由门，每个基本单元以及分辨率转换路径都可以基于每个数据样本来单独考虑。因此，所提出的路由门构造成了一个可微模块，用于端到端优化。考虑到有限的计算预算，贡献较小的单元将被动态丢弃</li>
</ul>
<h1 id="drnet-的网络结构"><a class="markdownIt-Anchor" href="#drnet-的网络结构"></a> DRNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DRNet-20230408142930-1.png" alt="DRNet-20230408142930-1" /></li>
<li>输入：网络的起点是一个固定的3层“<strong>STEM”块</strong> ，将分辨率降低到1/4</li>
<li>Routing Space：设计了一个带有 L 层的空间，称为<strong>路由空间</strong> 。在路由空间中，相邻 cell 之间的比例因子被限制为2。因此，最小尺度设置为1/32。在这些约束条件下，每个层中的候选数量最多为4个，即1/4，1/8，1/16和1/32。每个候选模块中最多有3条尺度变换路径，即<strong>上采样</strong> 、<strong>保持分辨率</strong> 和<strong>下采样</strong>。在每个候选模块中，cell 用于特征聚合，而 gate 用于路径选择。逐层向上采样模块被固定在网络末端，用于生成预测</li>
</ul>
<h1 id="drnet-的routing-process"><a class="markdownIt-Anchor" href="#drnet-的routing-process"></a> DRNet 的<strong>Routing Process</strong>？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DRNet-20230408142930-1.png" alt="DRNet-20230408142930-1" /></li>
<li>给定多个节点的路由空间，作者在每个节点内分别采用一个 celll 和一个对应的 gate 来聚合多尺度特征，以及进行路由路径的选择。给定上一层不同尺度的输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">Y</mi><mrow><mi>s</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">Y</mi><mi>s</mi><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">Y</mi><mrow><mn>2</mn><mi>s</mi></mrow><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{Y}_{s/2}^{l-1},\mathbf{Y}_{s}^{l-1},\mathbf{Y}_{2s}^{l-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4044389999999998em;vertical-align:-0.5151999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.02875em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8892389999999999em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.02875em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.02875em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8892389999999999em;"><span style="top:-2.433692em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span></span></span></span>，第 l 层的输入可以表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">X</mi><mi>s</mi><mi>l</mi></msubsup><mo>=</mo><msubsup><mi mathvariant="bold">Y</mi><mrow><mi>s</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo>+</mo><msubsup><mi mathvariant="bold">Y</mi><mi>s</mi><mi>l</mi></msubsup><mo>+</mo><msubsup><mi mathvariant="bold">Y</mi><mrow><mn>2</mn><mi>s</mi></mrow><mrow><mi>l</mi><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{X}_{s}^{l}=\mathbf{Y}_{s/2}^{l-1}+\mathbf{Y}_{s}^{l}+\mathbf{Y}_{2s}^{l-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4044389999999998em;vertical-align:-0.5151999999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.02875em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8892389999999999em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.02875em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.02875em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8892389999999999em;"><span style="top:-2.433692em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span></span></span></span>，聚合的输入将用于在 Cell 和 Gate 内部进行特征转换</li>
<li><strong>Cell Operation</strong>：在 Cell 中，对于输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">X</mi><mi>s</mi><mi>l</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>B</mi><mo>×</mo><mi>C</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>H</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{X}_{s}^{l}\in\mathbb{R}^{B\times C\times W\times H}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></span>，作者使用卷积和残差连接，其中，隐藏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">H</mi><mi>s</mi><mi>l</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>B</mi><mo>×</mo><mi>C</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>H</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{H}^{l}_{s}\in\mathbb{R}^{B\times C\times W\times H}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">H</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></span> 可以表示如下，其中 O 代表操作，包括卷积和残差链接。然后是激活因子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>α</mi><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">\alpha^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span>，生成的特征变换到不同尺度<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi mathvariant="bold">H</mi><mi>s</mi><mi>l</mi></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><msup><mi>O</mi><mi>i</mi></msup><mo>∈</mo><mi mathvariant="script">O</mi></mrow></munder><msup><mi>O</mi><mi>i</mi></msup><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">X</mi><mi>s</mi><mi>l</mi></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{H}^{l}_{s}=\sum\limits_{O^{i}\in\mathcal{O}}O^{i}\left(\mathbf{X}^{l}_{s}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">H</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4233400000000005em;vertical-align:-1.373335em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8040349999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.373335em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p>
</li>
<li><strong>Soft Conditional Gate</strong>：每条路径的路由概率由 Gate 函数生成，作者在 Gate 函数采用了轻量级的卷积来学习一个基于输入的向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>G</mi><mi>s</mi><mi>l</mi></msubsup></mrow><annotation encoding="application/x-tex">G_s^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>，其中，F (⋅,⋅)代表卷积操作，σ代表 ReLU 激活函数，N 和 G 分别代表 BatchNorm 和 GlobalPooling。ω,β代表了卷积的参数<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi mathvariant="bold">G</mi><mi>s</mi><mi>l</mi></msubsup><mo>=</mo><mi mathvariant="script">F</mi><mrow><mo fence="true">(</mo><msubsup><mi>ω</mi><mrow><mi>s</mi><mo separator="true">,</mo><mn>2</mn></mrow><mi>l</mi></msubsup><mo separator="true">,</mo><mi mathvariant="script">G</mi><mrow><mo fence="true">(</mo><mi>σ</mi><mrow><mo fence="true">(</mo><mi mathvariant="script">N</mi><mrow><mo fence="true">(</mo><mi mathvariant="script">F</mi><mrow><mo fence="true">(</mo><msubsup><mi>w</mi><mrow><mi>s</mi><mo separator="true">,</mo><mn>1</mn></mrow><mi>l</mi></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="bold">X</mi><mi>s</mi><mi>l</mi></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><msubsup><mi>β</mi><mi>s</mi><mi>l</mi></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{G}_s^l=\mathcal{F}\left(\omega_{s,2}^l,\mathcal{G}\left(\sigma\left(\mathcal{N}\left(\mathcal{F}\left(w_{s,1}^l,\mathbf{X}_s^l\right)\right)\right)\right)\right)+\beta_s^l
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.282216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14736em;">N</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-2.4530000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><strong>动态选择通路</strong>：为了获得每条路径的概率，作者对得到的特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">G</mi><mi>s</mi><mi>l</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>B</mi><mo>×</mo><mn>3</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{G}_{s}^{l}\in\mathbb{R}^{B\times3\times1\times1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 采用了激活函数δ，因此，激活因子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>α</mi><mi>s</mi><mi>l</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>B</mi><mo>×</mo><mn>3</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\alpha_{s}^{l}\in\mathbb{R}^{B\times3\times1\times1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 可通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><msubsup><mi>G</mi><mi>s</mi><mi>l</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(G_s^l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 计算得到，其值域为[0,1]。当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">i</mi><msubsup><mi>α</mi><mrow><mi>s</mi><mo>→</mo><mi>j</mi></mrow><mi>l</mi></msubsup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mathrm{i}\alpha_{s\rightarrow j}^{l}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathrm">i</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mrel mtight">→</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时，那么尺度 s 到 j 的路径将会被关闭；否则，路径保留<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">Tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(\cdot)=\max(0,\operatorname{Tanh}(\cdot))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">T</span><span class="mord mathrm">a</span><span class="mord mathrm">n</span><span class="mord mathrm">h</span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li><strong>总结</strong>：通过 Gate 生成的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>α</mi><mi>s</mi><mi>l</mi></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>B</mi><mo>×</mo><mn>3</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\alpha_{s}^{l}\in\mathbb{R}^{B\times3\times1\times1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 控制下一层的路径，即将聚合特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">H</mi><mi>s</mi><mi>l</mi></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{H}^{l}_{s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">H</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 往那个路径传</li>
</ul>
<h1 id="drnet-是运行时确定结构还是运行前如果是运行时如何确保推理结构固定"><a class="markdownIt-Anchor" href="#drnet-是运行时确定结构还是运行前如果是运行时如何确保推理结构固定"></a> DRNet 是运行时确定结构？还是运行前？如果是运行时，如何确保推理结构固定？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DRNet-20230408142930-1.png" alt="DRNet-20230408142930-1" /></li>
<li>在运行时确定模型结构，不是提前确定的，包括推理时，也不是固定的</li>
<li><strong>总结</strong>：模型整体结构是固定的，但是前向计算时没有走所有通路</li>
</ul>
<h1 id="drnet-的损失函数"><a class="markdownIt-Anchor" href="#drnet-的损失函数"></a> DRNet 的损失函数？</h1>
<ul>
<li>DRNet 除了除了考虑目标任务的损失，还增加计算资源的约束，其中 LN 和 LC 分别表示目标任务的损失函数和限制计算资源的损失函数。λ1和λ2分别用于平衡网络预测和计算成本的优化过程<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">L</mi><mo>=</mo><msub><mi>λ</mi><mn>1</mn></msub><msub><mi mathvariant="script">L</mi><mi mathvariant="normal">N</mi></msub><mo>+</mo><msub><mi>λ</mi><mn>2</mn></msub><msub><mi mathvariant="script">L</mi><mi mathvariant="normal">C</mi></msub></mrow><annotation encoding="application/x-tex">\mathcal{L}=\lambda_1\mathcal{L}_\mathrm{N}+\lambda_2\mathcal{L}_\mathrm{C}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">L</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<p>参考资料：<br />
<a href="https://zhuanlan.zhihu.com/p/427709226">安全验证 - 知乎</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>动态网络</tag>
      </tags>
  </entry>
  <entry>
    <title>ResNeSt：Split-Attention Networks</title>
    <url>/2021/07/17/ResNeSt%EF%BC%9ASplit-Attention%20Networks/</url>
    <content><![CDATA[<p>在ResNext的基础上，结合SK-Net分组进行通道注意力加权的思想设计</p>
<a id="more"></a>
<ul>
<li>
<p>什么是 ResNeSt ？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNeSt-20230408140933.png" alt="ResNeSt-20230408140933" /></li>
<li>在ResNext的基础上，结合SK-Net分组进行通道注意力加权的思想设计</li>
</ul>
</li>
<li>
<p>ResNeSt Block的理解？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNeSt-20230408140934.png" alt="ResNeSt-20230408140934" /></li>
<li>引入了 <strong>Cardinality</strong> 的概念，代表分组的组数K，在此基础上进一步分组，称为 split 操作，同时引入一个超参 Radix，代表将 K 个组中的每一个进一步划分的组数，这里记为 R， 由此看来，就是<strong>将输入在通道这个维度划分为 KxR 个组</strong></li>
<li>先将输入特征图分为K组，每个k又接着分为r组，在r组的基础上进行Split Attention ，获得k组数据，对其进行拼接，然后使用1x1卷积调整通道，最后与原始特征做加法</li>
<li>输入特征图大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">V \in R^{H \times W \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>, ，进行 K 个基数分组后每个分组大小 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>V</mi><mi>k</mi></msup><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi><mi mathvariant="normal">/</mi><mi>K</mi></mrow></msup></mrow><annotation encoding="application/x-tex">V^k \in R^{H \times W \times C/K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888208em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span></span></span></span></span></span></span></span> ，完成每个基数组的分离注意力操作后进行串联得到最后的输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>t</mi><mo stretchy="false">{</mo><msup><mi>V</mi><mn>1</mn></msup><mo separator="true">,</mo><msup><mi>V</mi><mn>2</mn></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>V</mi><mi>k</mi></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">V=Concat\{V^1,V^2,…,V^k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> ，完成串联后，执行残差连接<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>V</mi><mo>+</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y=V+X
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span></span></p>
</li>
</ul>
</li>
<li>
<p>ResNeSt的Split Attention模块？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNeSt-20230408140935.png" alt="ResNeSt-20230408140935" /></li>
<li>输入是 r 组的特征图，首先将他们相加，然后通全局池化+全连接生成 r 组特征的通道注意力，最后加权后相加所有 r 组特征输出</li>
</ul>
</li>
<li>
<p>SENet、SKNet和ResNeSt的关系？</p>
<ul>
<li>当radix=1时，Split-Attention Block退化为对每个基数组执SEBlock操作</li>
<li>当radix=2时，Split Attention Block在各个基数组中执行了一个类SKBlock的多分支特征提取+soft注意力</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>SKNet：Selective Kernel Networks</title>
    <url>/2021/06/25/SKNet%EF%BC%9ASelective%20Kernel%20Networks/</url>
    <content><![CDATA[<p>在 SENet 的基础上，基于分组卷积改进其对通道加权的过程，可以实现对不同分辨率的特征的通道加权，相比较 SENet，效果更好</p>
<a id="more"></a>
<ul>
<li>
<p>什么是SKNet？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SKNet-20230408141133.png" alt="SKNet-20230408141133" /></li>
<li>在 SENet 的基础上，基于分组卷积改进其对通道加权的过程，可以实现对不同分辨率的特征进行加权，相比较 SENet，效果更好</li>
</ul>
</li>
<li>
<p>SKNet的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SKNet-20230408141133-1.png" alt="SKNet-20230408141133-1" /></li>
<li>M 代表的是分支数，G 为 group 数量，将 SK Block 模块引入 ResNet 完成模型搭建</li>
</ul>
</li>
<li>
<p>SKNet的SK Block?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SKNet-20230408141134.png" alt="SKNet-20230408141134" /></li>
<li><strong>Split</strong>： 输入(c,h,w)特征图，然后使用2个不同分组卷积，得到矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi mathvariant="bold">U</mi><mo>^</mo></mover><mtext>、</mtext><mover accent="true"><mi mathvariant="bold">U</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\mathbf{U}} 、 \tilde{\mathbf{U}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9495499999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">U</span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9229699999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">U</span></span></span></span><span style="top:-3.6051100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span></li>
<li><strong>Fuse</strong>： 对矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi mathvariant="bold">U</mi><mo>^</mo></mover><mtext>、</mtext><mover accent="true"><mi mathvariant="bold">U</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\mathbf{U}} 、 \tilde{\mathbf{U}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9495499999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9495499999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">U</span></span></span></span><span style="top:-3.25511em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9229699999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">U</span></span></span></span><span style="top:-3.6051100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span> 进行融合，然后通过 SENet SEBlock 求取通道加权矩阵</li>
<li><strong>Select</strong>：通过 softmax 函数获得每个通道的加权值，然后分别应用到两组特征，并相加输出最后特征</li>
<li><strong>关键参数</strong>：1）分支数 (M)，特征组输 SKBlock 后被分为多少个分支；2）group 数量 (G)，每个分支采用多少组分组卷积；缩减比例 ®，生成通道权值过程中，需要将通道上缩减再复原，过程类 SEBlock</li>
</ul>
</li>
<li>
<p>SKNet与SENet的异同？</p>
<ul>
<li>两者都使SEBlock 模块对通道进行加权</li>
<li>SENet只对一个尺度感受野的通道进行加权，而SKNet对多个尺度的感受野进行加权</li>
<li>SENet使sigmoid 生成加权向量，而SKNet使softmax 生成加权向量</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>注意力机制</tag>
      </tags>
  </entry>
  <entry>
    <title>SENet：Squeeze-and-Excitation Networks</title>
    <url>/2021/06/20/SENet%EF%BC%9ASqueeze-and-Excitation%20Networks/</url>
    <content><![CDATA[<p>通过在ResNet中引入通道注意力机制，实现对通道的动态学习加权</p>
<a id="more"></a>
<ul>
<li>
<p>什么是SENet？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SENet-20230408141113.png" alt="SENet-20230408141113" /></li>
<li>构建SEBlock 对通道信息进行加权，相当于引入注意力机制 (Attension)，把重要通道的特征强化，非重要通道的特征弱化</li>
</ul>
</li>
<li>
<p>SENet的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SENet-20230408141114.png" alt="SENet-20230408141114" /></li>
<li>在 ResNet 上加入 SE Block 即可</li>
</ul>
</li>
<li>
<p>SENet的SEBlock模块？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SENet-20230408141115.png" alt="SENet-20230408141115" /></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SENet-20230408141115-1.png" alt="" /></li>
<li>简称 SE 模块，U 矩阵 (HWC)作为输入，生成对 U 矩阵各个通道的加权矩阵 (1x 1 xC )，然后原始特征与加权矩阵相乘得到加权后的特征</li>
<li>SE 模块主要由挤压部分 (Squeeze)和激活部分 (Excitation)实现，其中 Squeeze 部分负责编码全局信息，Excitation 部分负责自适应激活</li>
<li><strong>Squeeze</strong>：使全局平均池化处理 U，输入 (H, W, C)，输出 (1x1xC)</li>
<li><strong>Excitation</strong>，Squeeze 后得到各个通道的最大响应值矩阵 (1 x 1 xC)，首先经过两层 fc 提取这个矩阵的特征，最后通过 sigmoid 生成通道的加权矩阵 (1 x 1 xC)。图中<strong>r 是指压缩的比例</strong>，作为输入矩阵各个通道的 scale 值</li>
</ul>
</li>
<li>
<p>为什么提出SENet?</p>
<ul>
<li>标准卷积本质是局部区域在空间及通道之间进行特征融合，为了提升卷积的特征质量，通常通过扩感受野(receptive field) 或 融合空间多种特征实现，比VGGNet 加深网络扩大感受野GoogleNetv1融合多个卷积的结果，以上基本是针对空间层面的改进</li>
<li>卷积对通道的关注只是简单融合，SENet 则通过关注通道之间的重要性，实现卷积对不同特征重要性的区分</li>
</ul>
</li>
<li>
<p>神经网络不能自动学习到各个通道的重要性吗？为什么SENet要改变网络去做?</p>
<ul>
<li>神经网络确实可以自动学习特征，也能区分各通道的重要性，但是SENet学习到的重要性可能更准确，因为SENet显式加入约束，就比喻“为什么加正则化(regularization)的网络会比不加正则化的网络优秀”一样</li>
</ul>
</li>
<li>
<p>SENet 不同压缩比例的 SE Block 对结果的影响?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SENet-20230408141116.png" alt="SENet-20230408141116" /></li>
<li><strong>靠前的层级（SE_2_3和 SE_3_4）</strong>：各个分类的曲线差异不大，这说明了在较低的层级中 scale 的分布和输入的类别无关；</li>
<li><strong>靠后的层级（SE_4_6和 SE_5_1）</strong>：不同类别的曲线开始出现了差别，这说明靠后的层级的 scale 大小和输入的类别强相关；</li>
<li>到了SE_5_2后几乎所有的scale都饱和，输出为1，只有一个通道为0；而最后一层SE_5_3的通道的scale基本相同。最后两层的scale因为基本都相等，就没有什么用处了，为了节省计算量可以把它们去掉</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>注意力机制</tag>
      </tags>
  </entry>
  <entry>
    <title>CenterNet：Keypoint Triplets for Object Detection</title>
    <url>/2021/04/21/CenterNet%EF%BC%9AKeypoint%20Triplets%20for%20Object%20Detection/</url>
    <content><![CDATA[<p>将目标检测当成一个点来检测，即用目标 box 的中心点来表示这个目标，预测目标的中心点偏移量 (offset)，宽高 (size) 来得到物体实际 box</p>
<a id="more"></a>
<h1 id="什么是-centernet"><a class="markdownIt-Anchor" href="#什么是-centernet"></a> 什么是 CenterNet?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CenterNet-20230408141319.png" alt="CenterNet-20230408141319" /></li>
<li>将目标检测当成一个点来检测，即用目标 box 的中心点来表示这个目标，预测目标的中心点偏移量 (offset)，宽高 (size) 来得到物体实际 box</li>
</ul>
<h1 id="centernet的网络结构"><a class="markdownIt-Anchor" href="#centernet的网络结构"></a> CenterNet的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CenterNet-20230408141320.png" alt="CenterNet-20230408141320" /></li>
<li><strong>backbone 和 neck 部分</strong>主要使用 DLA-34 结构 (图 d) 搭建，该模块使用大量的反卷积提升深层网络的分辨率，然后和底层的特征融合，这个过程类似 FPN、PAN；<strong>head 部分</strong>：使用直接基于 DLA-34 输出的 P4 特征做中心点及宽高的回归</li>
<li><strong>输入</strong>：2,3,512,512</li>
<li><strong>输出</strong>：
<ul>
<li>热图+类别+中心点(2, 20, 128, 128)</li>
<li>中心点对应宽高 (2, 2, 128, 128)</li>
<li>中心点偏差 (2, 2, 128, 128)</li>
</ul>
</li>
</ul>
<h1 id="centernet的损失函数"><a class="markdownIt-Anchor" href="#centernet的损失函数"></a> CenterNet的损失函数?</h1>
<ul>
<li>类别损失：使用 focal loss 损失计算<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mi>k</mi></msub><mo>=</mo><mfrac><mrow><mo>−</mo><mn>1</mn></mrow><mi>N</mi></mfrac><munder><mo>∑</mo><mrow><mi>x</mi><mi>y</mi><mi>c</mi></mrow></munder><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="center left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mrow><mi>x</mi><mi>y</mi><mi>c</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>α</mi></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mrow><mi>x</mi><mi>y</mi><mi>c</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><msub><mi>Y</mi><mrow><mi>x</mi><mi>y</mi><mi>c</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>Y</mi><mrow><mi>x</mi><mi>y</mi><mi>c</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>β</mi></msup><msup><mrow><mo fence="true">(</mo><msub><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mrow><mi>x</mi><mi>y</mi><mi>c</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>α</mi></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mrow><mi>x</mi><mi>y</mi><mi>c</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> otherwise </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L_{k}=\frac{-1}{N} \sum_{x y c}\left\{\begin{array}{cl}\left(1-\hat{Y}_{x y c}\right)^{\alpha} \log \left(\hat{Y}_{x y c}\right) &amp; \text { if } Y_{x y c}=1 \\\left(1-Y_{x y c}\right)^{\beta}\left(\hat{Y}_{x y c}\right)^{\alpha} \log \left(1-\hat{Y}_{x y c}\right) &amp; \text { otherwise }\end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.708624em;vertical-align:-1.6043119999999997em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.104312em;"><span style="top:-4.104312em;"><span class="pstrut" style="height:3.2042919999999997em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.204292em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.2042919999999997em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.204292em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6043119999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.104312em;"><span style="top:-4.104312em;"><span class="pstrut" style="height:3.2042919999999997em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.2042919999999997em;"></span><span class="mord"><span class="mord text"><span class="mord"> otherwise </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6043119999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>中心点损失：L1 loss 计算， Qp 表示预测的偏移值，p 为图片中目标中心点坐标，R 为缩放尺度，p 为缩放后中心点的近似整数坐标<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>o</mi><mi>f</mi><mi>f</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munder><mo>∑</mo><mi>p</mi></munder><mrow><mo fence="true">∣</mo><msub><mover accent="true"><mi>O</mi><mo>^</mo></mover><mover accent="true"><mi>p</mi><mo>~</mo></mover></msub><mo>−</mo><mrow><mo fence="true">(</mo><mfrac><mi>p</mi><mi>R</mi></mfrac><mo>−</mo><mover accent="true"><mi>p</mi><mo>~</mo></mover><mo fence="true">)</mo></mrow><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">L_{o f f}=\frac{1}{N} \sum_{p}\left|\hat{O}_{\tilde{p}}-\left(\frac{p}{R}-\tilde{p}\right)\right|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.707553em;vertical-align:-1.386113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3175019999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord mtight">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>宽高损失：目标框的尺度使用 L1 loss 计算， Spk 为预测尺寸，​Sk 为真实尺寸<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><mo fence="true">∣</mo><msub><mover accent="true"><mi>S</mi><mo>^</mo></mover><msub><mi>p</mi><mi>k</mi></msub></msub><mo>−</mo><msub><mi>s</mi><mi>k</mi></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">L_{s i z e}=\frac{1}{N} \sum_{k=1}^{N}\left|\hat{S}_{p_{k}}-s_{k}\right|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>总损失：<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mtext>det </mtext></msub><mo>=</mo><msub><mi>L</mi><mi>k</mi></msub><mo>+</mo><msub><mi>λ</mi><mtext>size </mtext></msub><msub><mi>L</mi><mtext>size </mtext></msub><mo>+</mo><msub><mi>λ</mi><mrow><mi>o</mi><mi>f</mi><mi>f</mi></mrow></msub><msub><mi>L</mi><mrow><mi>o</mi><mi>f</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{\text {det }}=L_{k}+\lambda_{\text {size }} L_{\text {size }}+\lambda_{o f f} L_{o f f}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">det </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">size </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">size </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="centernet-如何制作样本"><a class="markdownIt-Anchor" href="#centernet-如何制作样本"></a> CenterNet 如何制作样本？</h1>
<ul>
<li>输入图片 (N, 3, 512, 512)</li>
<li><strong>输出</strong>：
<ul>
<li>heatmap，并按类别区分 (N, 128, 128, 20)</li>
<li>W/H (N, 128, 128, 2)</li>
<li>offset (N, 128, 128, 2)</li>
<li>positiveInd (N, 128, 128)  记录正样本位置，用于监督框位置</li>
</ul>
</li>
</ul>
<h1 id="centernet-的-heatmap-如何生成"><a class="markdownIt-Anchor" href="#centernet-的-heatmap-如何生成"></a> CenterNet 的 heatmap 如何生成？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CenterNet-20230408141323.png" alt="" /></li>
<li>在目标检测中，中心点附近的点其实都非常相似，如果直接将这些点标为负样本，会给网络的训练带来困扰；如果将其用高斯函数做一个 “软化”，网络就会更好收敛。高斯图能够给网络训练增加一个方向性的引导，距离目标点越近，权重就越大</li>
<li>将目标缩放到模型输出的尺度上，目标中心点及大小按照同等比例缩放，然后根据目标的大小计算高斯圆的半径</li>
<li>关于<strong>高斯圆半径</strong>确定，主要还是依赖于目标 box 的宽高，实际情况下通常会取 IOU=0.7，即下图中的 overlap=0.7 作为临界值，然后分别计算出三种情况的半径，<strong>取最小值作为高斯核的半径 R</strong><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CenterNet-20230408141326.png" alt="" /></li>
</ul>
<h1 id="anchor-base-和-center-point-的目标检测的区别"><a class="markdownIt-Anchor" href="#anchor-base-和-center-point-的目标检测的区别"></a> anchor-base 和 Center-Point 的目标检测的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CenterNet-20230408141328.png" alt="CenterNet-20230408141328" /></li>
<li>Center Point的<strong>锚点</strong>仅仅是放在位置上，没有尺寸框。没有手动设置的阈值做前后景分类</li>
<li>Center Point的每个目标仅仅有<strong>一个正的锚点</strong>，因此不会用到NMS，我们提取关键点特征图上局部峰值点</li>
<li>CenterNet相比较传统目标检测而言（<strong>缩放16倍尺度</strong>），使用更大分辨率的输出特征图（缩放了4倍），因此无需用到多重特征图锚点</li>
</ul>
<h1 id="基于center-point的目标检测可延申到哪些领域"><a class="markdownIt-Anchor" href="#基于center-point的目标检测可延申到哪些领域"></a> 基于Center Point的目标检测可延申到哪些领域？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CenterNet-20230408141331.png" alt="CenterNet-20230408141331" /></li>
<li><strong>3D BBox检测</strong>，我们直接回归得到目标的深度信息，3D框的尺寸，目标朝向</li>
<li><strong>人姿态估计</strong>，我们将关节点（2D joint）位置作为中心点的偏移量，直接在中心点位置回归出这些偏移量的值</li>
</ul>
<h1 id="centernet-与-cornernet-的区别"><a class="markdownIt-Anchor" href="#centernet-与-cornernet-的区别"></a> CenterNet 与 CornerNet 的区别？</h1>
<ul>
<li>CenterNet预测的是目标的中心点，而不再是CornerNet中的2个角点</li>
<li><strong>相同点</strong>：<strong>采用热力图（heatmap）来实现初始位置预测</strong>，都引入了预测点的高斯分布区域计算真实预测值，同时<strong>损失函数一样（修改版 focal loss)</strong>，网络输出的热力图也将先经过 sigmod 函数归一化成 0 到 1 后再传给损失函数</li>
<li><strong>不同点</strong>：（1）CenterNet<strong>不包含 corner pooling 等操作</strong>，因为一般目标框的<strong>中心点落在目标上的概率还是比较大</strong>的，因此<strong>常规的池化操作能够提取到有效的特征</strong>；（2）CenterNet 不需要匹配关键点</li>
</ul>
<h1 id="centernet如何处理中心重合的情况"><a class="markdownIt-Anchor" href="#centernet如何处理中心重合的情况"></a> CenterNet如何处理“中心”重合的情况？</h1>
<ul>
<li><strong>CenterNet中的冲突是目标框的中心点重合（基于输出特征层计算的中心点）</strong>，作者从COCO数据集的统计信息来看，这种<strong>重合框的比例非常少，不到0.1%</strong>，基本上不会对训练稳定产生太大影响，因此<strong>没有针对这个进行解决</strong></li>
</ul>
<h1 id="如何解析-centernet-的输出"><a class="markdownIt-Anchor" href="#如何解析-centernet-的输出"></a> 如何解析 CenterNet 的输出？</h1>
<ul>
<li>下图展示网络模型预测出来的中心点、中心点偏置以及该点对应目标的长宽<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CenterNet-20230408141333.png" alt="CenterNet-20230408141333" /></li>
<li><strong>输入：</strong> 假设测试输入是一张图像，将图像尺寸处理成 512x512 大小</li>
<li><strong>输出：</strong> 执行网络的前向计算将得到 3 个输出。heatmap（1, 80, 128, 128）、宽高wh (1, 2, 128, 128)、offset (1, 2, 128, 128)，heatmap 会经过一个 sigmoid 函数使得范围为 0 到 1</li>
<li><strong>极大值抑制：</strong> 对 heatmap 进行 3x3 的池化 (pad=1)，输出保持分辨率不变，将池化后的结果与 heatmap 比较，值改变的位置就是非极大位置，将这些位置的置信度置 0，那么后续这些位置不可能作为角点，这起到非极大值抑制的作用</li>
<li><strong>生成预测框：</strong> 然后再基于 heatmap 选择 top K 个得分最高的点（默认 K=100），这样就确定了 100 个置信度最高的预测框的中心点位置了。结合 heatmap 的 topk 位置+输出的宽高 wh 和 offset ，得到特征图上目标框，将其还原到原图即可</li>
</ul>
<p>参考文献<br />
<a href="https://blog.csdn.net/WZZ18191171661/article/details/113753991">CenterNet算法详解_技术挖掘者的博客-CSDN博客_centernet算法</a><br />
<a href="https://oldpan.me/archives/anchor-free-ture-centernet">扔掉anchor！真正的CenterNet——Objects as Points论文解读 - Oldpan的个人博客</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
      </tags>
  </entry>
  <entry>
    <title>MobileNetV3：Searching for MobileNetV3</title>
    <url>/2021/04/18/MobileNetV3%EF%BC%9ASearching%20for%20MobileNetV3/</url>
    <content><![CDATA[<p>结合了 MobileNetv1的深度可分离卷积、MobileNetv2的 Inverted Residuals 和 Linear Bottleneck 以及 SE 模块，利用 NAS（神经结构搜索）来搜索网络的配置和参数</p>
<a id="more"></a>
<ul>
<li>
<p>什么是MobileNetv3？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv3-20230408140624.png" alt="" /></li>
<li>结合了 MobileNetv1的深度可分离卷积、MobileNetv2 的 Inverted Residuals 和 Linear Bottleneck 以及 SE 模块，利用 NAS（神经结构搜索）来搜索网络的配置和参数</li>
</ul>
</li>
<li>
<p>MobileNetv3的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv3-20230408140626.png" alt="" /></li>
<li>large和small的整体结构一致，区别就是基本单元MobileNetv3 block的个数以及内部参数上，主要是通道数目</li>
<li>bneck是网络的基本结构。SE代表是否使用通道注意力机制。NL代表激活函数的类型，包括HS(h-swish),RE(ReLU)。NBN 代表没有BN操作。 s 是stride的意思，网络使用卷积stride操作进行降采样，没有使用pooling操作</li>
</ul>
</li>
<li>
<p>MobileNetv3 block的组成？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv3-20230408140626-1.png" alt="" /></li>
<li>MobileNetv3 block在MobileNetv2的“倒残差”瓶颈( Inverted Residuals Bottlenecks) 基础上修改，引入SEBlock，显式地建模网络卷积特 征通道之间的相互依赖关系，来提高网络所产生表示的质量</li>
<li>SE结构会消耗一定的时间，所以在expansion layer的channel变为原来的 1/4  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SeModule</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, in_size, reduction=<span class="number">4</span></span>):</span></span><br><span class="line">		<span class="built_in">super</span>(SeModule, self).__init__()</span><br><span class="line">		self.se = nn.Sequential(</span><br><span class="line">			nn.AdaptiveAvgPool2d(<span class="number">1</span>),</span><br><span class="line">			nn.Conv2d(in_size, in_size // reduction, kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>, bias=<span class="literal">False</span>),</span><br><span class="line">			nn.BatchNorm2d(in_size // reduction),</span><br><span class="line">			nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">			nn.Conv2d(in_size // reduction, in_size, kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>, bias=<span class="literal">False</span>),</span><br><span class="line">			nn.BatchNorm2d(in_size),</span><br><span class="line">			hsigmoid())</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">		<span class="keyword">return</span> x * self.se(x)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>mobileNetv3如何定义head结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv3-20230408140627.png" alt="" /></li>
<li>在MobileNetv2中，avg pooling之前存在一个1x1卷积，目的是提高特征图的维度，但是这带来计算量。MobileNetv3将1x1卷积放在avg pooling的后面，首先利用avg pooling将特征图大小由7x7降到了1x1，降到1x1后，然后再利用1x1提高维度，这样就减少了 7x7=49倍的计算量</li>
<li>为了进一步的降低计算量，作者直接去掉了前面纺锤型卷积的3x3以及1x1卷积，进一步减少了计算量</li>
</ul>
</li>
<li>
<p>mobileNetv3更换激活函数？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv3-20230408140627-1.png" alt="" /></li>
<li>使用ReLU6(x+3)/6来近似替代sigmoid，进行了速度优化</li>
</ul>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hswish</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">		out = x * F.relu6(x + <span class="number">3</span>, inplace=<span class="literal">True</span>) / <span class="number">6</span></span><br><span class="line">		<span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hsigmoid</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">		out = F.relu6(x + <span class="number">3</span>, inplace=<span class="literal">True</span>) / <span class="number">6</span></span><br><span class="line">		<span class="keyword">return</span> out</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《你的知识需要管理》－田志刚</title>
    <url>/2021/04/09/%E4%B9%A6%E6%91%98_%E4%BD%A0%E7%9A%84%E7%9F%A5%E8%AF%86%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86_%E7%94%B0%E5%BF%97%E5%88%9A/</url>
    <content><![CDATA[<p>一本介绍如何经营自己知识的书籍，从学习知识、保存知识、知识共享、知识使用和知识创新五个方面进行讲述，有一定的借鉴意义。说实话这本书偏工具类，以前拿小屏看没感觉，限制在大屏看，感觉很多内容都是纯粹列举<code>要点</code>，能读进去的很少（也可能我手机看过了）看到作者举例直接跳过了，所以我大概不到一天就翻完这本书了。我认为好的书它是用严密的<strong>逻辑链条</strong>去慢慢跟你讲道理的，不是突然一个例子，突然一个要点，这本书就会卡住我，阅读情绪经常是这样的：读这一部分是“有点道理”，读下一部分是“好像是这样的”，往后是“不是吧”，所以说这本书并没有打动我。之所以说这本书偏工具，是因为书中有部分内容直接教如何使用工具去实践的。</p>
<p>当然，对于作者管理知识的五个要点我是同意的，这五个要点是循序渐进的，是闭环流动的，作者倡导以下观点我是赞同的，也是我第一次从这本书获得的<code>知识</code>：</p>
<ol>
<li><strong>信息与知识有区别</strong></li>
<li><strong>终身学习以适应社会发展需要</strong></li>
<li><strong>显性知识隐性化以创造价值</strong></li>
<li><strong>共享知识以提升个人竞争力</strong></li>
<li><strong>持续创新以确保价值的独特性</strong></li>
</ol>
<a id="more"></a>
<hr />
<p><strong>阅读书摘及笔记：</strong></p>
<blockquote>
<p>现在，所谓无知不是指没有知识，而是不会展示自己的知识、不会发挥知识的价值、不会发现新知识、不会学习新知识，也不去创造知识。对于主要靠知识谋生的知识工作者而言，你的知识管理过程是否运转自如，是个人发展和个人竞争力能否持续提升的关键</p>
</blockquote>
<blockquote>
<p>人要靠自己，但靠自己不是依靠自己的体力，而是要靠自己的脑力，靠知识</p>
</blockquote>
<blockquote>
<p>依靠知识绝对不是依靠文凭，也不是依靠你现在掌握的知识量，不要认为掌握了某些知识就可以一劳永逸地解决你一辈子的问题。个人可以依靠的知识，是指在一定的知识基础上，能够随着社会环境的变化，不断确定自己的专业方向并快速学习知识、分享知识、使用和创新知识并创造价值的过程，这个过程就是对你的知识进行有效管理的过程，也是提升你的知识力的过程。现在每个人都必须要考虑自己如何快速学习知识、学习什么知识、如何保存掌握的知识、如何分享知识给你的合作伙伴、如何使用和创新知识</p>
</blockquote>
<blockquote>
<p>对于知识的爆炸，解决的方式是你要明确自己的知识需求。知识虽多但人生有限，如果知识不能被你所用，不能成为“你的知识”，这些知识对你也没有作用</p>
</blockquote>
<blockquote>
<p>知识又可以分为显性知识和隐性知识。所谓显性知识是指能够用语言、文字、肢体等方式表达清楚的知识；而隐性知识则是虽然知道如何做，但却很难告诉别人或者写明白、说明白的知识。从掌握知识的角度讲，大量的知识以隐性的成分存在着，而能显性化的部分较少。你虽然知道某个事情是怎么样或者如何做，但如果让你讲出来，你可能发现能够表达的会很少，如果进一步要求你写出来，可能能写的就更少了。古语“书不尽言、言不尽意”就是这个意思，是说你能写的要比能说的少，能说的要比你知道的少，本质上就是显性和隐性知识的问题</p>
</blockquote>
<blockquote>
<p>隐性知识和显性知识之间存在着相互转换的过程</p>
</blockquote>
<blockquote>
<p>隐性知识显性化应该成为现代人的一项必备能力，如果你不能显性化你的知识，就无法建立你的竞争力。为什么中医中药很难做大，一个很重要的原因是它们主要依靠隐性知识作判断，所以传承、复制的难度较大，因此就很难快速发展</p>
</blockquote>
<blockquote>
<p>隐性知识还有一些特点，了解这些特点对于你管理自己的知识很有价值。</p>
<ul>
<li>你的隐性知识可能只是对你自己是隐性的，对于其他人、其他的机构可能已经是显性知识，这就需要你在前人基础上进行学习，明白是否已经有类似的显性知识；</li>
<li>隐性知识需要环境（此时、此地），并非永远是隐性的；</li>
<li>谁能将隐性的知识最先显性化，谁就是知识创新的开拓者。譬如许多大师的创新，多年后也有不同的人表达，但前者是大师，因为他最早将隐性知识显性化；</li>
<li>隐性知识显性化能力成为人与人之间能力差别的重要方面。将自己的隐性知识显性化应该成为每个知识工作者应具备的能力之一；</li>
<li>隐性知识显性化需要需求、环境等外力的作用，外力的拉动加上个人显性化的意愿，可以促进隐性知识显性化的过程；</li>
<li>社区是促进隐性知识显性化的环境；</li>
<li>隐性知识显性化的方法：讨论、回答提问、需求的压力、工作分解、流程分析等；</li>
<li>不能用通俗、简单的语言和文字表述知识，表明对该领域知识掌握得不够深入。</li>
</ul>
</blockquote>
<blockquote>
<p>知识与信息不同，知识除了要靠经验去消化汇集来的信息，还要去验证、思考，甚至在亲身体验过程中，去发现问题、解决问题</p>
</blockquote>
<blockquote>
<p>在当今时代下，个人的成长和发展以及个人竞争优势的建立，绝对不是靠信息的数量（虽然缺乏信息和获取信息的能力可以成为一个人发展的劣势）。不要以为你整天在互联网上就掌握了知识，互联网上的信息和知识你能获得我也能获得，互联网上有显性的知识也有信息，显性的知识必须跟你个人的原有知识结合起来，转化成你的隐性知识，加上对环境的判断才能发挥作用。</p>
</blockquote>
<blockquote>
<p>学历可以作为你知识水平的一个表现，但其表达的只是在某时、某地的知识存量，是否能持续地更新知识、是否能持续地共享和传播自己的知识、是否能将已有的知识用好用足来获取价值、是否能持续地创新知识引领发展，只有这些才是个人竞争力的源泉</p>
</blockquote>
<blockquote>
<p>但我们满足于仅仅不是文盲吗？虽然你学习了众多知识，但单位里领导不重视你、同事不跟你合作，你的知识有用吗？如果你掌握了众多知识，但你的知识不会利用，甚至不能给你换来养家糊口的钱，更不用说成就自己的事业，这样的知识有用吗？如果你总是学习别人的知识，读死书、死读书，在别人后面亦步亦趋，不能进行知识创新，那你的竞争优势在哪里？</p>
</blockquote>
<blockquote>
<p>人只能依靠自己，而依靠自己最重要的一点是依靠自己对个人知识过程的管理。只有对整个知识过程的管理才是现代人发展竞争力和竞争优势的源泉</p>
</blockquote>
<blockquote>
<p>不学习当然不行，但学习也不一定行。你必须知道要学习什么知识，获取什么知识；同时，学习任何领域的知识必须达到一定的深度，否则你的知识就是常识。而常识怎么可能给你带来个人的竞争优势呢？</p>
</blockquote>
<blockquote>
<p>终身学习的理念在20世纪中叶就被明确地提了出来，因为人们发现技术、知识的快速更新不仅影响了生产、流通和消费等领域，而且影响到每个人的日常生活。若要与之适应，人们就必须用新的知识、技能和观念来武装自己。终身教育强调现代人必须不间断地进行学习，更新个人知识，才能保持适当的应变能力，保证个人竞争力</p>
</blockquote>
<blockquote>
<p>更进一步说，学习本身不是目的。学习知识是为了我们能够工作、生活得更好，更幸福，能帮助我们度过快乐的一生。学习的目的是为了提高我们个人的竞争力，使我们能够在这么多的知识工作者当中脱颖而出，取得自己的成就</p>
</blockquote>
<blockquote>
<p>确定你的学习方向</p>
<ul>
<li>第一，你的价值观是什么？</li>
<li>第二，你的个人目标是什么?</li>
<li>第三，你的性格是什么？</li>
</ul>
</blockquote>
<blockquote>
<p>现在信息和知识越来越多，所以你在学习的时候需要确定自己的方向。在确定方向后，你就需要在你确定的方向上正向积累，争取成为一个领域的专家</p>
</blockquote>
<blockquote>
<p>你的学习方法模型</p>
<ul>
<li>第一，掌握该领域的基础知识。</li>
<li>第二，了解该领域的全貌。</li>
<li>第三，跟踪并掌握该领域的最新知识。</li>
<li>第四，在实践中学习和创新。</li>
</ul>
</blockquote>
<blockquote>
<p>人们下载的知识是显性知识的一种表现形式，对于这部分知识，如果没有被你处理过（阅读，知道是什么；思考，知道对你有什么用），根本不可能成为“你的知识”，根本不会对你产生一点点作用，只会让你“淹没在知识中”而无法自拔</p>
</blockquote>
<blockquote>
<p>只有那些符合个人发展目标的知识，只有经过自己的阅读、思考后保存的知识才有价值，这样的知识保存才是有价值的保存</p>
</blockquote>
<blockquote>
<p>任何人都有区别于他人的优势，你怎么突出自己的优势、特点和能力，怎么让更多的人知道你、了解你、认识你、信任你，方法就是共享你的知识，通过知识影响别人。更深入地说，我们现在的大部分工作都需要与人协作才能完成，通常人们会选择什么样的协作对象呢？比如招聘新员工或者提升一个经理，可想而知一定会是自己了解的人、信任的人！所以每个知识工作者都应该去主动共享和传播自己的知识，愿意将自己的知识显性化，这一方面会促进自己的学习，另一方面也能为树立自己的个人品牌发挥作用。</p>
</blockquote>
<blockquote>
<p>共享知识的好处</p>
<ul>
<li>故事一：共享带来合作</li>
<li>故事二：共享协助找到工作</li>
</ul>
</blockquote>
<blockquote>
<p>能共享出来才能真正掌握</p>
</blockquote>
<blockquote>
<p>在现实中，很多时候我们以为自己知道，但是当我们用语言说出来或者写出来的时候，你却会发现自己很难说得系统、完整，很难让别人明白。造成这种状况的主要原因是你对该知识点的掌握并没有达到你所认为的那样成熟，这时候你应该再去深入学习、研究这个知识点，经过更多的实践和与人交流，更广泛的阅读、讨论，才能慢慢地成熟起来。</p>
</blockquote>
<blockquote>
<p>仅有显性知识是不够的</p>
</blockquote>
<blockquote>
<p>个人知识的价值由两个因素决定：</p>
<ul>
<li>第一个因素是你的知识的独特性。知识的独特性也分两种，第一种是专，在某个方向上深入，别人都不如我深，所以我有独特性，比如读博士基本上是这个意思。还有一种是博，我既会拍电影又会画画，还会说相声、做木匠，这样的人以综合优势树立自己的独特性</li>
<li>第二个因素是社会对知识的需求</li>
</ul>
</blockquote>
<blockquote>
<p>让你升值的三个绝招</p>
<ul>
<li>第一，向前看三年。</li>
<li>第二，持续提高你知识的独特性</li>
<li>第三，通过知识共享树立你的个人品牌。</li>
</ul>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>书摘：《群体性孤独》-[美] 雪莉·特克尔</title>
    <url>/2021/04/08/%E4%B9%A6%E6%91%98_%E7%BE%A4%E4%BD%93%E6%80%A7%E5%AD%A4%E7%8B%AC-%5B%E7%BE%8E%5D%20%E9%9B%AA%E8%8E%89%C2%B7%E7%89%B9%E5%85%8B%E5%B0%94.hexo/</url>
    <content><![CDATA[<p>这是一本思考人与机器，人与网络关系的书籍，主要认识有：</p>
<ol>
<li>在当今互联网飞速发展下，把越来越多的人联系在一起，人们非但没有感觉更加<code>热闹</code>，而是更加孤独，这就是所谓的群体性孤独！！！</li>
<li>人们越来越期待<code>虚拟世界</code>和<code>弱联系</code>，对面对面的交流越来越抵触，比如如今网上<code>廉价的道歉</code>；</li>
<li>互联网是用来提高工作效率的工具，但是我们却没有被解法，反而被它束缚，要求我们<code>时刻在线</code>；</li>
<li>互联网犹豫荆棘丛林，各种想法、链接、图片缠绕在一起，沉迷其中就会让我们没有办法更加深刻地思考当下，太容易随波逐流；</li>
<li>互联网作为新生事物，完全抛弃肯定不行，但是必须时刻警惕它对我们的影响</li>
</ol>
<p>一个搞IT，搞AI的人，居然去看这类书，我都无法找到当初的原因，或许是前方路太黑，需要灯光，或许是当下被互联网所累，学习如何更加有效利用它！</p>
<a id="more"></a>
<hr />
<p><strong>阅读书摘及笔记：</strong></p>
<blockquote>
<p>哈佛大学心理学教授霍华德·加德纳在30年前提出了著名的多元智能理论，认为人的智能不是简单的一种，而是由8种相互独立的智能构成的。它们分别是：语言智能、音乐智能、逻辑智能、空间智能、身体智能、自省智能、交流智能和自然智能。</p>
</blockquote>
<blockquote>
<p>与森林等自然环境的境遇相反，计算机和互联网正在成为人类赖以生存的新环境。和与自然接触会产生自然智能相同，我们与计算机和互联网接触会产生机器智能（不是传统意义上的能思考的机器，而是人们如何更好地驾驭机器的智能）、网络智能（不是网络里产生的群体智能，而是人们如何更好地利用网络解决问题的智能）。机器智能、网络智能的智商高低，未来在很大程度上会决定一个人的命运。</p>
</blockquote>
<blockquote>
<p>技术是极具诱惑力的，因为它能弥补人性中脆弱的一面。而我们的确是非常脆弱、敏感的物种。我们时常感到孤独，却又害怕被亲密关系所束缚。数字化的社交关系和机器人恰恰为我们制造了一种幻觉：我们有人陪伴，却无须付出友谊。在网络世界中我们彼此连接，同时也可以互相隐身。</p>
</blockquote>
<blockquote>
<p>发现人们不仅十分认真地把机器人视为宠物，还视为潜在的朋友、知己，甚至是虚拟的情人。我们并不关心机器人对人类与他们“分享”的情感能“知道”或“理解”多少。在机器人时代，只要人与机器连接的表演看起来足够多就行了。我们毫无偏见地、泰然自若地与毫无生命的机器连接在一起。这让我想起了一个短语：“技术滥交”</p>
</blockquote>
<blockquote>
<p>一个30岁的男人评论说：“我更愿意和一个机器人说话。和朋友们交往太累，使我筋疲力尽。机器人会一直陪伴着我，而且任何时候只要我想好了，我都可以脱离这段关系。”</p>
</blockquote>
<blockquote>
<p>社交机器人的发明说明人类兜了一个大圈子，还是无法摆脱对亲密关系的渴望。人们看起来很心甘情愿地相信：如果我们疏远或是忽视了彼此，机器人会补偿我们，程序早就设定好了，他们会带来虚拟的爱。当我们逐渐衰老，机器人会伺候我们；当我们的孩子无人照看，机器人会照料他们；当我们在逆境中精疲力竭而不能互相支撑时，机器人会给予我们能量。机器人不会对我们评头论足，我们得到前所未有的接纳和包容。</p>
</blockquote>
<blockquote>
<p>有了技术，我们惊讶于世界之“苍白”，无事表达，无人取悦。当一个化身在网络游戏里与另一个化身整晚交谈之后，在某个时刻，我们感到完全拥有一份真实的社会生活，然后接下来，在与陌生人牵强而脆弱的联系里，莫名地感到孤独无援。</p>
</blockquote>
<blockquote>
<p>用技术来处理亲密关系，人际关系会被弱化成仅仅是联系而已。而在此之后，简单的联系会被重新定义为亲密。换句话说，网络亲密（cyberintimacies）滑向了网络疏离（cybersolitudes）</p>
</blockquote>
<blockquote>
<p>在机器人的陪伴下，人们是孤单的，但也感到与他人连接在一起。在这种孤单的环境中，出现了一种新型的亲密关系。</p>
</blockquote>
<blockquote>
<p>人们通过移动设备把自己牢牢地拴在网络上，从而获得自我的新状态。第一种状态是“逃离现实世界”：也许他们正在你身边，但他们的精神已经游离到了另一个世界；第二种状态是“双重体验”：人们能够体验到“虚拟与现实的双重人生”；第三种状态是“多任务处理”：人们由于可以同时处理多种事情而赢得了更多时间。</p>
</blockquote>
<blockquote>
<p>我开始意识到，获取关于专业问题和需求的新信息并不是开始和结束一天的好方法。</p>
</blockquote>
<blockquote>
<p>人们通过移动设备把自己牢牢地拴在网络上，从而获得一种自我的新状态。从一开始，它就意味着某种授权：它可以从现实环境中脱离——包括其中的人。它能同时体验到现实世界和虚拟世界。而且它能通过多任务处理产生更多时间，这是我们21世纪的魔法。</p>
</blockquote>
<blockquote>
<p>今天的年轻人生活在“永远在线”状态，他们期待着被“打扰”。网络技术改变了人们对“分开”的理解，也让年轻人失去了“独处”的机会</p>
</blockquote>
<blockquote>
<p>现在的年轻人伴随着机器人宠物成长，处在一个完全被网络束缚的环境中。他们认为自己是新兴人类，也是对虚拟化生存没有任何偏见的第一代人。他们看出了网络化生活的巨大力量——毕竟他们冒着生命危险去查看网络上的信息。</p>
</blockquote>
<blockquote>
<p>现在的青少年也要像前辈们一样学会表达情感，去思考人生的价值和自我的意识，他们也需要学会管理和表达自己的情感，需要时间去发现自己，去思考。但是科技的发展带来了永远在线的传播服务以及快餐式的文字和图像，这完全改变了原有的规则。什么时候该停下来？什么时候该寂静无声？文字短消息的快速回复，并非不能让年轻人在人际互动中进行自我反省，但作用的确较小。当人际交互要适应小屏幕、情绪需要通过情感符号表达时，的确存在着简化的必要。</p>
</blockquote>
<blockquote>
<p>根据传统，生活在城市里的孩子在成长的过程中都有一个重要的经历：第一次独自游览这个城市。这个经历是一种成人的仪式，孩子们从此需要对自己负责了。即使感到恐惧，他们也需要独自承担这种感受。而如今手机的存在减轻了这个仪式带来的恐惧感。</p>
</blockquote>
<blockquote>
<p>青少年的独立不仅仅意味着和父母分开，也包括和同龄人分开。他们要体会友谊既是一种支持，也是一种束缚</p>
</blockquote>
<blockquote>
<p>人际关系有着复杂的多面性。网络的虚拟生活为个人提供了足够的空间，同时也让青少年难以从新的群体需求中逃脱。年轻人很自然地期待他的朋友们可以随时在线——这是一种由技术进步引发的社会契约，要求同龄人随传随在。因此，受到束缚的自我也开始习惯于此</p>
</blockquote>
<blockquote>
<p>社会学家大卫·理斯曼（David Riesman）在20世纪50年代中期写道：美国人的自我感觉从内在转向了受人支配。人们没有坚定的内在目标，依赖伙伴寻找对其自身的肯定。如今，随身携带的手机增长了受人支配的态势。在开始有一个想法或一种感觉时，我们向别人证实，几乎是提前证实。人际交流也许是简短的，但是更多的交流大可不必。人们的需求只是希望随时可以保持联系</p>
</blockquote>
<blockquote>
<p>自恋时并不是指那些爱自己的人，而是指脆弱的个性，拥有这种个性的人需要源源不断的外界支持来进行自我确认。这种个性的人不能容忍别人的复杂需求，却试图通过扭曲别人的身份，分离出自身需要的和能用的东西，以此来与他们建立联系。因此，自恋者仅以量身定做的表达来与别人交往</p>
</blockquote>
<blockquote>
<p>一个脆弱的人也可以通过选择性和限制性的与人接触，从而获得支持（也就是通讯录中最受欢迎的人）</p>
</blockquote>
<blockquote>
<p>精神病学家罗伯特·杰伊·利夫顿（Robert Jay Lifton）是埃里克森的学生，他对成熟自我的看法与老师不同。他称成熟自我是千变万化的，强调多面性。这个自我，是“流动的和多面的”，可以接受和修饰不同的思想和观念。当被赋予多元的、彼此毫不相干的、全球性的事物时，这样的自我可以变得活跃起来。</p>
</blockquote>
<blockquote>
<p>在网络空间的不和谐声中形成的自我不是多变的，而是幼稚的。而如今我认为，在这样的文化背景下成长，会让他们以自恋的方式与世界建立联系。</p>
</blockquote>
<blockquote>
<p>当我注册Facebook时，这个网站对我来说还很新鲜，我会把第一感觉记录下来。现在看来，我的第一感觉稀松平常：我在交友计划A和交友计划B之间游离不定。计划A是我只在这个网站上联系我认识的人；计划B是我会接受所有人的好友请求，因为他们都表示很欣赏我的工作。我前几周执行了计划A，转而又选择了更具包容性的计划B，因为我为吸引了众多陌生人的注意力和称赞而沾沾自喜</p>
</blockquote>
<blockquote>
<p>发短信让人有一种安全感，并且可以通过细心斟酌而展现出一个期望的自我。但虚拟空间对“道歉”等现实问题是无能为力的。打电话意味着你在全神贯注地做一件事，也意味着一种“交谈”能力。声音传递情感，我们却巴不得让声音在生活中消失</p>
</blockquote>
<blockquote>
<p>在短信、留言和电子邮件中，我们隐藏的内容不比我们表达的内容少。我们可以把自己更好的一面展示给别人，也可以更快、更容易地处理好一件事。聆听只会使我们节奏放慢。</p>
</blockquote>
<blockquote>
<p>在网络世界中，当你身处多玩家角色扮演网络游戏的时候，你不仅技艺精湛、光芒四射，更重要的是，这种行为使你处在一个新的群体当中，有虚幻的好朋友和一种归属感。人在虚幻的世界里会感到比在现实中更加自在，因为他们觉得在虚拟的世界里可以秀出一个更加优秀、更加真实的自己。随着这一切的发生，谁还愿意身处现实之中呢？</p>
</blockquote>
<blockquote>
<p>对网络生活进行思考的过程有助于区分心理学家所说的“演练”和“实践”。“演练”时，你首先将现实生活中所遇到的冲突提取出来，然后将其在虚拟的世界里一遍又一遍地进行表现。此事重复量很大，却只有微不足道的进步。而在“实践”时，你运用网络上的一些素材来应对现实生活中的矛盾并寻找新的解决方案。</p>
</blockquote>
<blockquote>
<p>有些人会选择去“告白网站”排解孤独。人们宁愿在网上对着陌生人忏悔和释放情感，也不愿意直接面对你所伤害的人给他一个真正的道歉。实际上，网上告白没有想象的那么好，人们只是为了感觉良好而用“分享”避开“孤独”。</p>
</blockquote>
<blockquote>
<p>我们所抱怨的人际关系，也是连接我们和真实生活的纽带。我们的情感宣泄运用了一种极端的手段。人们会善意地对待陌生人。寂寞和孤单是如此难以忍受，以至于和在网络虚拟世界认识的网友结婚，似乎竟然成为了我们最好的希望</p>
</blockquote>
<blockquote>
<p>将负能量释放出来可以减轻它的毒副作用；而这样的情感释放不需要与真人交互即可完成。在两种情况中，告白看上去都越来越像对话，情感宣泄看上去越来越像分享。</p>
</blockquote>
<blockquote>
<p>道歉所包含的基本要素为修补关系打下了重要的心理基础——不仅对于被伤害者，也包括伤害者本身。首先你必须知道你冒犯了别人，你承认自己的行为可能给对方造成伤害，你必须问你自己如何做才能弥补。</p>
</blockquote>
<blockquote>
<p>科技模糊了告白和道歉的界线，很容易让我们忘记道歉的真正含义，不只是因为在线空间提供给他们一个面对其他人的“廉价道歉”的选择，同时也因为我们会认为道歉本身已与他人无关。在这样的情况下，我们忘记了我们的行为可以影响到他人。</p>
</blockquote>
<blockquote>
<p>对不起’这3个字太难。如果你是那个收到道歉的人，你知道对于一个人来说，让他当面说出‘对不起’是很困难的。但是正是如此，才让我们可以原谅一个人，他们亲自说出来，说明他们内心还是有勇气想道歉的</p>
</blockquote>
<blockquote>
<p>像与机器人的交流，在线告白有吸引力是因为某些沉默的人想诉说隐秘的情感。但是如果我们通过这些网站把它们“释放出来”来解除我们的忧虑，我们就不必精确地明白这些情感的背后是什么。我们没有运用我们的感情资源来建立对我们可能有帮助的持久关系。我们不能因为这种状况而责备技术。人们对彼此失望。技术仅仅能使我们创造一个无关紧要的神话。</p>
</blockquote>
<blockquote>
<p>焦虑成了这种新型沟通模式的一部分。然而，当我们谈起移动通信改革的时候，我们习惯对以前的事物进行“尊敬的”贬低，而把新鲜事物理想化。就拿在线阅读来说，因为它可能导入链接和其他一些超文本，所以常常有着一个英雄般必胜的传言，而书本却被蔑称为“孤立的”</p>
</blockquote>
<blockquote>
<p>朱莉娅还是情不自禁地在MySpace上搜索着父亲的大家庭——他的父母、兄弟姐妹、表兄弟姐妹、叔叔及阿姨等。她说她不会跟其中的任何一人联系，至少在她和父亲邮件交流之前不会。她不知道是否MySpace能够缝合幼年时代被撕裂的那份感情。</p>
</blockquote>
<blockquote>
<p>我和我的朋友们都觉得如果没有手机，感觉就像一无所有，毫无防备。”对于一无所有，毫无防备的自己，就仿佛置身于危险处境。失去联系，便如此脆弱。</p>
</blockquote>
<blockquote>
<p>短信是如此有诱惑力。因为它产生了一个附带自己要求的承诺。这个承诺是：你发送短信的那个人会在几秒钟内收到你的短信，而不管他或她是否“空闲”，他都能够看到你的短信。其附带的要求是：当你收到一条短信时，你就要去关注它（也许你正在上课，这意味着你要低头偷偷地瞟一眼静音的手机）并且在第一时间内给予回复。</p>
</blockquote>
<blockquote>
<p>短信这种介质适合快速传达简单的陈述，而对于开始一段蕴含复杂情感的对话则不是那么合适</p>
</blockquote>
<blockquote>
<p>电话交流是如此个人化，是因为在打电话的过程中，你没有时间去坐下来考虑你将要说些什么。你所要说的话都是你真正要表达的东西。如果某人发送给你一条短信，你还有一两分钟时间来考虑你将在回复里写些什么。如果你是在一个现实的谈话中，如果你一两分钟还没有说出一句话，过了几分钟你才回答，那将是非常尴尬的。这就是我喜欢打电话的原因。我更喜欢某人是诚实的，如果你在打电话，你就完全把自己暴露出来，但同时这也比其他方式更好。</p>
</blockquote>
<blockquote>
<p>这些年轻人渴望时间、接触、关注，以及直接的沟通。他们想要生活中少一些伪装，他们怀念面对面打交道，而且每次只专注做一件事的世界。这听起来充满了讽刺的意味，因为他们这一代人最大的、也曾经是最引以为豪的特征就是“一心多用”。</p>
</blockquote>
<blockquote>
<p>斯托尔说，人类的“创造过程”机制奇特，“到目前为止，新的想法产生频率比较高的状态是冥想状态，介于走路和睡眠之间。在冥想的心理状态下，思绪和画面可以自发地组合演变……创造者可以完全放松身心，让大脑内自行产生化学作用”。但是在数字化时代，安静和独处却很难获得。</p>
</blockquote>
<blockquote>
<p>如果你想拥有一个不被打扰的交流和沟通的环境，你最好亲自找那个人面对面地谈。如果没办法直接见面那就打电话。但是如果你是坐在电脑前在网上和别人交谈，那就有很多东西可以打断你的谈话，因为互联网上有如此多的比谈话更有趣的东西在吸引着你</p>
</blockquote>
<blockquote>
<p>梭罗写道：“我步入丛林，因为我希望生活得有意义。我希望活得深刻，吸取生命中所有的精华，把非生命的一切都击溃。以免当我生命终结时，发现自己从没有活过。我不想过一种不能称之为生活的生活，活得太甜蜜，我也不想试着顺从，除非那真的有必要。</p>
</blockquote>
<blockquote>
<p>《连线》杂志创始主编凯文·凯利说，他发现在网络上可以恢复精力。他在网络的树荫下，身心得到休憩：“有时候我进入网络的原因只是为了主动地迷失自己，温柔地向网络的未知世界投降，暂时忘却自己确信的周遭生活。尽管人们设计互联网有着明确的目的性，网络却依然是狂野的，它的边界是未知的，它的神秘数不胜数。荆棘缠绕般的各种想法、链接、图片创造了一片茂密的丛林。网络好像是有生命的。</p>
</blockquote>
<blockquote>
<p>撰写自己在社交网站上的自我简介、用即时聊天工具聊天，没有比这种“艰苦”的劳动更为“深刻”的了。人们在线的大多数时间都是在潜水漫游、跟随链接、伸出随机的“触须”。一个人在朋友的网络相册里晃来晃去，然后又到其他朋友的相册里面，在一个几乎不认识的人发布的信息下面留下评论。梭罗抱怨人们总是太过于急着和别人分享观点。而在虚拟世界中，Facebook总是鼓励我们随时分享“我们大脑里面存在的东西”，无论这些思想是多么的无知，或者多么浅薄，然后它会帮助我们传播给最广的听众。每天，我们被其他人“随机”的想法所轰炸。我们已经对这种“宣泻”司空见惯。所以尽管网络身份以及个人简介都是经过了深思熟虑的设计，但是人们最终感觉唯一深思熟虑的东西只是自己投身网络的决定。做完这个决定之后，人们开始在网络的洪流中随波逐流了</p>
</blockquote>
<blockquote>
<p>对于那些一直保持在线的人来说，尽管有很多问题（比如像表演一样的生活，比如失去了面对面察言观色的能力），但随时有人陪伴也带来了许多欢乐。而对于那些没有连网的人来说，即使是在自己家乡的大街上，他们也会有一种怪异的孤独感。</p>
</blockquote>
<blockquote>
<p>神圣空间”这个词语成为了我关注的重要概念。他们中的每一个人都保持着自己的专业生活，纯洁而不受污染。他们之所以这样做，是因为他们想要和虚拟保持距离。在那个空间里，他们能最大化地感觉到他们最完整的自己。</p>
</blockquote>
<blockquote>
<p>一个神圣的空间不是为了躲藏自己，而是一个我们认识自己和责任的地方</p>
</blockquote>
<blockquote>
<p>我们对科技的期待越来越多，对彼此的期待却越来越少。我们正处于一个完美风暴的静止中心，浑然不觉已成了科技的奴仆。我们不会放弃互联网，也不可能一下子 “戒掉”手机。我们自己才是决定怎样利用科技的那个人，记住这一点，我们就一定能够拥有美好的未来。</p>
</blockquote>
<blockquote>
<p>我们已经变成了电脑的“杀手级”应用程序</p>
</blockquote>
<blockquote>
<p>我们在网络上很容易找“同伴”，但是我们却被“自我表演”的压力搞得疲惫不堪。我们虽然享受着不间断的联系，却极少给予彼此全部的注意力。我们可以随时获得关注，却为不断出现的新缩略语所累。我们很喜欢网络“懂”我们，但是这只有在个人隐私问题上做了妥协才会有可能</p>
</blockquote>
<blockquote>
<p>网络生活留下了大量的“电子面包屑”，一些公司可以为了商业或政治目的而进行开发。我们在网络上会有很多新的邂逅，但是这种关系都是短暂的，如果有新的或者更好的邂逅出现，那些以前的都将被尘封。事实上，新的邂逅并不一定是更好的，因为我们仅仅是喜新厌旧。我们随时连线，对新鲜事保持积极地回应。我们可以在家里办公，但是工作也同时渗入到私人生活中，直到我们几乎不能分辨出它们之间的界限。我们能够瞬间连接彼此，但是我们有时却不得不藏起我们的电话，强迫自己去享受片刻的安宁</p>
</blockquote>
<blockquote>
<p>科技带来的高生活节奏让我们疲惫不堪，我们考虑通过更新、更高效的技术把我们从中解救出来。但是新的技术设备却带来更大的信息量和传播速率。在这种速率递增的需求的背景下，其中一件让我们感到满意的事情就是用技术来连接远方的人们，或者更为精确地说，是连接很多来自远方的人</p>
</blockquote>
<blockquote>
<p>通过互联网所形成的连接并没有把我们联系得更紧密，这些连接却让我们沉迷其中无法自拔。我们会在晚餐的时候忙于发短信。当我们慢跑散步的时候，当我们开车的时候，当我们在公园陪孩子荡秋千的时候，我们都在发信息。我们不想打扰别人，因此我们不停地打扰别人，只是非“实时”罢了</p>
</blockquote>
<blockquote>
<p>当这些情感聚集在一起时，可能就形成了“后家庭主义时代的家庭”。家庭成员很孤独地待在一起，每个人都在自己的房间里，每个人都在用电脑或者手机等移动设备上网。我们因为忙碌而使用网络，但是却和技术一起花费了更多的时间，而与现实生活中的人们之间花费的时间越来越少。我们坚信网络连接是接近彼此的方法，即使它也是同样有效地躲避和隐藏彼此的方法。在这个限度内，如果必须要减少与现实中人们相处的时间，我们会满足于这种无生命的东西</p>
</blockquote>
<blockquote>
<p>我们，创造和赋予了机器人生命，并且开始谈论机器人的情感，甚至它们的“真实性”。如果我们关注的是机器人能够唤起我们自己内心的情感，那么这么做是可以的。但是我们常常忽略的问题是：“机器人的感受是什么？”我们知道机器人不能感受：他们不能感知到人的感情变化，或者人类关系的流动性。事实上，机器人什么也感受不到。而我们关心这个吗？或者它们表现出有感觉的样子，对于我们来说足够了吗？为什么我们情愿和那些既不能理解、又不能关心我们的机器人交谈？</p>
</blockquote>
<blockquote>
<p>理解ELIZA受欢迎不仅是因为人们愿意和机器交谈，它也说明人们变得不愿意和彼此交流。机器人保姆提供了一种新的可能，那就是我们可以逃离彼此，也可以很好地生活下去。当我们期待着电脑法官、电脑顾问、电脑老师或者电脑牧师时，我们事实上是对那些根本不关心我们、带着偏见对待、甚至虐待我们的人表达了失望。正是对于这些人的失望让机器人的“关心”看上去足够真实。我们心甘情愿地忽略机器人缺乏理解力的弱点，对这一点置若罔闻，转而去努力地让它看上去似乎更加善解人意。所有的这一切是为了创造一个假象—— 一个可以替代人类存在的东西。这就是更深层次的ELIZA效应。对于ELIZA的信任不仅说明了我们认为ELIZA程序可以理解我们，更说明了我们对彼此缺乏信任。</p>
</blockquote>
<blockquote>
<p>我们生活在繁荣的社交媒介文化里，我们梦想着社交机器人。尽管彼此连接，我们却依旧孤独，只能送给自己科技情人。如果网络生活太过严苛，那么机器人则总和我们在一起。想拥有机器人伴侣既是病症，也是梦想</p>
</blockquote>
<blockquote>
<p>就像其他心理学病症一样，它 “解决”问题但却未阐明问题。我们将会获得机器人的陪伴，却不必承担类似于人与人之间亲密关系所带来的风险。机器人暴露了我们希望能够控制社交关系的愿望，这正是我们的梦想</p>
</blockquote>
<blockquote>
<p>这种病症常常携带着大量的信息，以至于让人难以承受。为了承受这种恐惧，病症会把这些信息伪装起来，人们就不必每天都面对这些恐惧。所以，感觉持续的饥饿要比明白你的妈妈没有养育你更加“简单”。被超市排的长队弄得满心怒火，比处理你的配偶没有给予你所需要的关注更“容易”。当科技变成了一种病症，它就切断了表面现象和挣扎背后的真正原因之间的关联</p>
</blockquote>
<blockquote>
<p>俄狄浦斯（Oedipus）的神话故事。作为一个传统的、广为人知的故事，人们通常会认为俄狄浦斯因为追求知识而被惩罚——尤其是关于他出身的知识。卡珀说俄狄浦斯被惩罚另有原因——他拒绝承认知识的局限性。类似的问题也出现在我们对科技的态度上。我们失职并非因为我们试图建设一个新的东西，而是因为我们不允许自己去考虑新科技瓦解了什么。我们并不是因为发明和创造而陷入麻烦，而是因为我们认为它可以解决一切问题</p>
</blockquote>
<blockquote>
<p>我发现自己对网络充满了感激。它是一位坚定的施恩者，永远都在那里。我用不安分的手指爱抚它，它挑起了我的欲望，就像一个爱人一样……我想一直沉浸在它深不可测的广度之中。停留在那里，醉心于它梦幻般的怀抱里。向网络投降就像去土著丛林徒步旅行。不合逻辑的梦慰藉着你。在这个梦里，你在不同的页面和想法中穿梭跳跃。网络的白日梦已经深深地触动了我，让我感动并且搅动着我的心。</p>
</blockquote>
<blockquote>
<p>网络的连接性可以平复我们心灵最深处对孤独、失去和死亡的恐惧。这是一种令人欣喜的东西。但是连接也破坏了与原本维系我们的东西之间的联系，比如面对面的人际交流的价值</p>
</blockquote>
<blockquote>
<p>科技给了越来越多我们认为自己想要的东西。如今我们可以很容易地找到社交机器人和数字化的朋友。有人或许认为我们需要什么，它总在我们的所及范围内，我们永远也不会感到孤独。还有人假定我们想要的是大量的弱联系，支撑在线熟人关系的、非正式的网络关系。但是倘若我们真正思考我们认为自己想要东西的后果，我们才会了解我们真正想要的是什么。我们也许想要一些安静和独处的时光</p>
</blockquote>
<blockquote>
<p>正如梭罗提出的那样，我们也许想要生活少一些“拥挤”，等待更多不常发生的、但是很有意义的面对面邂逅。因为我们把很多时间花费在打字上面——用所有的手指或者只用拇指，我们会怀念人的声音。我们也许觉得和一个机器人下象棋也不算太坏，但是机器人却无法代替任何关于家庭或者朋友之间的谈话。一个机器人或许有需求，但是倘若要理解人的欲望，则需要语言和有血有肉的身体。因此，要进行这样的谈话，我们必须有一个真正的朋友，首先重要的是，他可以明白生命的真正含义，理解父母和家庭的含义，理解成年人之间爱的含义，理解对于子女的渴望，并且可以理解生老病死是不可避免的事情</p>
</blockquote>
<blockquote>
<p>现实生活中的人做事遵循一致性原则，所以当我们的关系进展顺利时，改变是逐步的，作用是缓慢的。但是在虚拟的网络生活里，所有关系的节奏加快了很多。一个人会很快从迷恋到幻灭，然后又回来，并在这个过程中来回穿梭。一个人如果在现实生活中感到有些无聊，很容易就能和一些新朋友联系上。一个人匆忙地阅读一长串邮件，并学会如何抓住“亮点”。夸张的标题往往能吸引注意力。在网络游戏里面，人物的动作总是被精简到一个从惊恐到安全、然后如此反复的模式。一个令人恐惧的邂逅自动完成，处理完了一个之后你可以重新组队，然后又用一个新的人物。我们的肾上腺素不停地向上冲，在这里没有所谓的“空闲时间”</p>
</blockquote>
<blockquote>
<p>通过对网络生活的研究，我认为，亲密行为是人和人之间的行为，听到他们的声音，看到他们的脸和试着读懂他们的内心。这些研究也让我想到，从某种角度来说，独处是刷新自己的状态，恢复精力。而孤独是失败的独处。去体验独处，你必须有自我振作、自我鼓励的能力，要不然你只能明白如何变得孤独。</p>
</blockquote>
<blockquote>
<p>今天的“回归”首要表现在进行无网络生活的实验。但是网络已经成为我们获得教育、获取新闻、找工作等不可或缺的必然途径。它已经成为我们生活的一部分。因此，我们只能退而求其次，要求自己重塑在屏幕上的生活。寻找新的平衡不仅仅是“放慢节奏”，而是“我们该如何为自我反思腾出空间？”</p>
</blockquote>
<blockquote>
<p>为了和这种上瘾作斗争，你必须抛弃这些令人上瘾的物质。但是，我们是不会放弃使用互联网的。我们也不会“突然完全戒掉”手机，或者禁止孩子们使用手机。我们不会停止听音乐或是回到以电视为中心的家庭生活方式</p>
</blockquote>
<blockquote>
<p>我相信，我们会找到一种全新的方式来沟通和连接彼此。但是，如果只考虑我们是有害物质（比如互联网技术）的受害者，并不是一个解决问题的好的开始。这种上瘾，是因为我们知道，我们不会让自己感到绝望。我们不得不找到一种方法使自己与这种让人上瘾的科技和平相处，并且让它按照我们的意愿来发挥作用。这确实是非常困难的，但却很有效果。出于对技术的简单热爱，或是出于反对技术进步的冲动，都是无济于事的</p>
</blockquote>
<blockquote>
<p>如今，我们和网络之间存在的问题让人困惑，无法忽略。最极端的情况是，我们有可能深陷网络连接不能自拔而忽略了彼此的存在。我们没有必要抛弃科技，或是贬低它的价值。我们需要的是把科技放回到它应处的位置。</p>
</blockquote>
<blockquote>
<p>群体性孤独》这本书描述了一对矛盾：我们对科技的期盼越来越多，却对彼此的期盼越来越少。我们处于一个完美风暴的静止中心。我们被科技打败了，被吸引到一个低风险并且唾手可得的联系上：Facebook上的朋友，虚拟化身，在线聊天等。如果“方便”和“可控”仍然是我们生活的首选，那么我们可能还被社交机器人诱惑而沉迷其中。就像是一个赌徒在老虎机的卡槽边上，那些令人兴奋的程序向我们许诺，让我们沉迷于游戏里而不能自拔。在机器人时代，我们必须注意到这一点，我们不再抱怨，而是期望甚至渴望简化和减少联系</p>
</blockquote>
<blockquote>
<p>一个耸肩是有助于缓和僵局的。但这还不是我们所处的阶段，我们距离山穷水尽的僵局还为时尚早。然而，我相信我们已经到达了一个反思的转折点，我们可以看到我们为科技进步付出的代价，并开始采取一些行动</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>CPNet：Context Prior for Scene Segmentation</title>
    <url>/2021/04/02/CPNet%EF%BC%9AContext%20Prior%20for%20Scene%20Segmentation/</url>
    <content><![CDATA[<p>不像传统的上下文感知模型一样，CPNet对类内上下文、类间上下文加以区分，学习到更加鲁棒的特征</p>
<a id="more"></a>
<h1 id="什么是-cpnet"><a class="markdownIt-Anchor" href="#什么是-cpnet"></a> 什么是 CPNet ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPNet-20230408142331.png" alt="CPNet-20230408142331" /></li>
<li>CPNet 认为目前语义分割聚合上下文有 2 种方式：（1）抓取同质的上下文关系，忽略了不同种类的上下文关系，如 PSPNet, [[DeepLabv1]]/v3/v3+；（2）缺少正则化，注意力机制的关系描述不清晰，选取错误的上下文关系，如 EncNet、DFN、PAN、DANet、OCNet、PSANet</li>
<li>CPNet 基于此提出区分类内、类间上下文依赖，提出带有亲和损失（Affinity loss）的上下文先验层，选择性地捕获类内和类间的上下文依赖关系，从而实现鲁棒的特征表示</li>
</ul>
<h1 id="cpnet-的网络结构"><a class="markdownIt-Anchor" href="#cpnet-的网络结构"></a> CPNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPNet-20230408142331-1.png" alt="CPNet-20230408142331-1" /></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>：DCNN 提取的 featrue map</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>X</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>：经过聚合层 Aggregation 得到的featrue map</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>：首先 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>X</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 经过卷积得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">H*W\times H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的矩阵，这个矩阵表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>X</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 任意两个元素之间的关系，reshape 得到矩阵 P (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>×</mo><mi>H</mi><mo>∗</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">H*W\times H*W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>)</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>：gt mask 经过下采样及重构得到的<strong>类内监督信息</strong>，用该信息监督 P，则矩阵 P （<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>×</mo><mi>H</mi><mo>∗</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">H*W\times H*W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>）表示的是类内关系，<strong>1-P 则是类间关系</strong></li>
<li>Concat：原始特征+原始特征与类内关系相乘+原始特征与类间相乘，三部分特征融合后用于后续的像素级分类</li>
</ul>
<h1 id="cpnet-的-affinity-loss"><a class="markdownIt-Anchor" href="#cpnet-的-affinity-loss"></a> CPNet 的 Affinity Loss？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPNet-20230408142332.png" alt="CPNet-20230408142332" /></li>
<li>Affinity Loss 用于监督类内关系，上图是基于 gt mask 构建类内关系矩阵的过程，原始 gt mask 是 3x 3 矩阵，则任意两个元素关系表示为 9x 9 的矩阵，9x 9 矩阵的第一个元素是 gt mask <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_{0,0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的关系，肯定是同类，填 1；第二位置是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_{0,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，属于不同类，所以填 0，后续依次类推</li>
</ul>
<h1 id="cpnet-的聚合模块-aggregation-module"><a class="markdownIt-Anchor" href="#cpnet-的聚合模块-aggregation-module"></a> CPNet 的聚合模块 Aggregation Module？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CPNet-20230408142333.png" alt="CPNet-20230408142333" /></li>
<li>利用两个分支的 空间可分离卷积(Spatial Separable Convolutions)的特征聚合层，既降低计算量，又保持感受野</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>SEAM：Self-supervised Equivariant Attention Mechanism for Weakly Supervised Semantic Segmentation</title>
    <url>/2021/03/29/SEAM%EF%BC%9ASelf-supervised%20Equivariant%20Attention%20Mechanism%20for%20Weakly%20Supervised%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>基于自监督的理念，通过观察发现同一图像经过不同的仿射变换所产生的 CAM 不一致这一特点，利用隐式的等变换约束的方式建立类似<strong>自监督对比学习</strong>的一致性正则化学习机制，减少这种不一致程度来优化 CAM，从而得到高精度的种子区域</p>
<a id="more"></a>
<h1 id="什么是-seam"><a class="markdownIt-Anchor" href="#什么是-seam"></a> 什么是 SEAM ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SEAM-20230408143553.png" alt="SEAM-20230408143553" /></li>
<li>引入大火的自监督学习理念，通过观察发现同一图像经过不同的仿射变换所产生的 CAM 不一致这一特点，利用隐式的等变换约束的方式建立类似<strong>自监督对比学习</strong>的一致性正则化学习机制，减少这种不一致程度来优化 CAM，从而得到高精度的种子区域</li>
<li><strong>通俗理解</strong>：图片 I 直接输入网络 F 得到结果后，然后做仿射变换 A 得到 A (F (I))和先进行仿射变换再输入网络的结果 F (A (I)))应该是比较一致的结果，如果不一样就是神经网络没训练好，通过减少这种不一致，达到训练网络的目的</li>
<li>上图是不同尺度的图片输入网络，a 是传统的 CAM，它受尺度影响较大，以至于后面已经分不清是目标形状；b 是 SEAM 的结果，可以看出不同尺度下目标依然保持较好的形状，这对分割很友好</li>
</ul>
<h1 id="seam-的网络结构"><a class="markdownIt-Anchor" href="#seam-的网络结构"></a> SEAM 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SEAM-20230408143554.png" alt="SEAM-20230408143554" /></li>
<li>SEAM 使用<strong>孪生网络</strong>判别先仿射变换和后仿射变换的 CAM 相似程度，通过减少不一致性来训练网络</li>
</ul>
<h1 id="seam-的-pcm-模块"><a class="markdownIt-Anchor" href="#seam-的-pcm-模块"></a> SEAM 的 PCM 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SEAM-20230408143555.png" alt="SEAM-20230408143555" /></li>
<li>PCM 提出是为了细化 CAM，在 CAM 的基础上增加“自注意力”机制</li>
<li>PCM 输入是原始特征和原始 CAM，使用原始特征求取自注意力权重，然后用于加权原始 CAM，得到修改后的 CAM</li>
</ul>
<h1 id="seam-的损失函数"><a class="markdownIt-Anchor" href="#seam-的损失函数"></a> SEAM 的损失函数？</h1>
<ul>
<li>SEAM 的损失分为三部分，其中 cls 分类损失用于大致定位对象，而 ER 损失用于缩小像素级和图像级监控之间的差距。 ECR 损失用于将 PCM 与网络集成在一起，以对各种仿射变换做出一致的预测<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">L</mi><mo>=</mo><msub><mi mathvariant="script">L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mo>+</mo><msub><mi mathvariant="script">L</mi><mrow><mi>E</mi><mi>R</mi></mrow></msub><mo>+</mo><msub><mi mathvariant="script">L</mi><mrow><mi>E</mi><mi>C</mi><mi>R</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathcal{L}=\mathcal{L}_{cls}+\mathcal{L}_{ER}+\mathcal{L}_{ECR}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">L</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>类别损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{cla}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：多标签分类函数multi-label soft margin loss。具体操作就是特征图经过全局平均池化后与分类标签计算损失，这是网络能够完成分类任务以及进行 CAM 操作的基础。也就是这个损失函数是基础损失，与评价两个输入的相似度无关</li>
<li>相似度损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>E</mi><mi>R</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ER}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：一个原图的CAM与仿射变换后图像的CAM之间相似度的指标。评价的标准选用1范数</li>
<li>相似度损失 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>E</mi><mi>C</mi><mi>R</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ECR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：1）原图经过 PCM 修正后的的 CAM 与仿射变换后图像的 CAM 的一范数；2）原图的 CAM 与仿射变换后图像经过 PCM 修正后的 CAM 的一范数</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{cla}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>E</mi><mi>R</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ER}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 用于监督 CAM 部分网络，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>E</mi><mi>C</mi><mi>R</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ECR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 用于监督 PCM 自注意力网络</li>
</ul>
<h1 id="seam-最后输入如何整理两个网络的结果"><a class="markdownIt-Anchor" href="#seam-最后输入如何整理两个网络的结果"></a> SEAM 最后输入如何整理两个网络的结果？</h1>
<ul>
<li>孪生网络就一个结构，一套权重，直接输入网络得到两个输出 CAM 和 PCM，直接拿 PCM 输出就是最后的结果</li>
</ul>
<h1 id="什么是孪生网络"><a class="markdownIt-Anchor" href="#什么是孪生网络"></a> 什么是孪生网络？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5-20230408150427.png" alt="深度学习的基本概念-20230408150427" /></li>
<li>两个结构一模一样，而且共享权值的网络。它会衡量两个输入的相似程度。孪生神经网络有两个输入（Input1 and Input2）, 将两个输入 feed 进入两个神经网络（Network1 and Network2），这两个神经网络分别将输入映射到新的空间，形成输入在新的空间中的表示。通过 Loss 的计算，<strong>评价两个输入的相似度</strong></li>
</ul>
<h1 id="什么是自监督self-supervised-learning"><a class="markdownIt-Anchor" href="#什么是自监督self-supervised-learning"></a> 什么是自监督（Self-supervised learning）？</h1>
<ul>
<li>在深度学习模型中，通常会通过 BackBone 提取特征，这些 BackBone 通常使用大量的人工标注数据训练得到，但是人工标注成本很高，能不能在没有标注数据的情况下，训练得到一个预训练模型呢？</li>
<li><strong>预训练（pre-train）模型：</strong> 自监督学习可以解决这个问题，它的目标是基于无标注的数据，设计辅助任务来<strong>将数据本身的某一部分的信息作为监督信号，从而基于这个监督信号来训练模型</strong></li>
<li><strong>微调（fine-tuning）：</strong> 去掉 decoder 解码器部分，将 encoder 编码器使用到下游任务，并进行训练的过程</li>
<li>SEAM、MAE、全卷积掩码自编码器(FCMAE) 都是属于自监督模型</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>自监督</tag>
      </tags>
  </entry>
  <entry>
    <title>HMANet：Hybrid Multiple Attention Network for Semantic Segmentation in Aerial Images</title>
    <url>/2021/03/28/HMANet%EF%BC%9AHybrid%20Multiple%20Attention%20Network%20for%20Semantic%20Segmentation%20in%20Aerial%20Images/</url>
    <content><![CDATA[<p>混合多重注意力网络(Hybrid Multiple Attention,HMANet)以更有效，有效的方式从空间，渠道和类别的角度自适应地捕获全局相关性。具体来说，嵌入了类通道注意的类增强注意力（CAA）模块可用于计算基于类别的相关性并重新校准类级信息。此外，引入了一个简单而有效的区域洗牌（RSA）模块，以降低特征冗余，并通过区域表示来提高自我关注机制的效率</p>
<a id="more"></a>
<h1 id="什么是-hmanet"><a class="markdownIt-Anchor" href="#什么是-hmanet"></a> 什么是 HMANet ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HMANet-20230408143043.png" alt="HMANet-20230408143043" /></li>
<li>基于 Attention 的方法能够有效捕捉长距离的依赖性, 并进一步重建地貌地图, 以增进代表性</li>
<li>HMA 除了从空间和 channel 的角度增加注意力，还增加类别注意力，并且提出区域洗牌（RSA）模块，降低特征冗余</li>
</ul>
<h1 id="hmanet-的网络结构"><a class="markdownIt-Anchor" href="#hmanet-的网络结构"></a> HMANet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HMANet-20230408143043.png" alt="HMANet-20230408143043" /></li>
<li>网络架构主要由三个注意力模块组成: Class Augmented attention (CAA)模块、Class Channel attention (CCA)模块和 Region Shuffle attention (RSA)模块，其中 CAA 模块和 CCA 模块作为网络的上分支嵌入在一起，生成的类亲和矩阵和类注意图作为输入特征，得到<strong>自适应加权类亲和矩阵</strong>，网络的下分支是 RSA 模块</li>
<li><strong>CAA 模块</strong>：用于建模降维后特定类别与对应特征之间的依赖关系，即通过矩阵运算提取输入特征的每个通道与每个类别之间的相似关系，它有助于获得对对象类别信息更敏感的细粒度特征表示，增强网络的识别能力</li>
<li><strong>CCA 模块</strong>：通过类通道加权改进特征重构过程，以更好地进行上下文表示</li>
<li><strong>RSA 模块</strong>：与计算原始远程像素级别依赖相比，学习基于区域级别的依赖大大减少了计算消耗和内存占用</li>
</ul>
<h1 id="hmanet-的类别通道注意力模块-class-channel-attention-cca"><a class="markdownIt-Anchor" href="#hmanet-的类别通道注意力模块-class-channel-attention-cca"></a> HMANet 的类别通道注意力模块 (Class Channel attention, CCA)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GSCNN-20230408143105.png" alt="GSCNN-20230408143105" /></li>
<li>该模块用于生成<strong>类别注意力</strong>，即每个特征 (HW)与每个类别 (N)的关系</li>
<li>直接对 NxHxW 的 featrue map 进行 softmax 后，得到矩阵 P’即是类别注意力矩阵，该矩阵用于后续和通道注意力相乘得到<strong>通道与类别的关系矩阵 A</strong>，与关系矩阵A相乘得到<strong>自适应加权类亲和矩阵 X’’</strong></li>
</ul>
<h1 id="hmanet-的类别增强注意力模块-class-augmented-attentioncaa"><a class="markdownIt-Anchor" href="#hmanet-的类别增强注意力模块-class-augmented-attentioncaa"></a> HMANet 的类别增强注意力模块 (Class Augmented attention,CAA)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GSCNN-20230408143105.png" alt="GSCNN-20230408143105" /></li>
<li>该模块用于生成类别+通道的注意力矩阵，即自适应加权类亲和矩阵X’’</li>
<li>首先使用类别注意力矩阵 P’去加权 C’xHW，然后通过 softmax 求得每个通道与类别的关系矩阵 A，然后注意力矩阵 P’和关系矩阵 A 相乘，得到自适应加权类亲和矩阵X’’</li>
</ul>
<h1 id="hmanet-的区域洗牌-rsa模块"><a class="markdownIt-Anchor" href="#hmanet-的区域洗牌-rsa模块"></a> HMANet 的区域洗牌 (RSA)模块 ?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HMANet-20230408143127.png" alt="HMANet-20230408143127" /></li>
<li>原始的空间注意力主要是构建像素级别的注意力，但是会带来计算消耗和内存占用</li>
<li><strong>未混洗前的区域空间注意力</strong>：首先对输入特征进行分组，然后每组进行全局池化 (GAP)，得到每组的加权值，相比较像素级别的加权，该加权值的数量更少</li>
<li><strong>混洗后的区域空间注意力</strong>：和上面加权方式一样，只是在加权前先混洗</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>LRNNET：A Light-Weighted Network with Efficient Reduced Non-Local Operation for Real-Time Semantic Segmentation</title>
    <url>/2021/03/25/LRNNET%EF%BC%9AA%20Light-Weighted%20Network%20with%20Efficient%20Reduced%20Non-Local%20Operation%20for%20Real-Time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>基于LEDNet改进, 使用SVD简化non-local网络, 通过分解因子卷积块（FCB）扩大感受野，通过SVN模块构建稀疏的空间注意力</p>
<a id="more"></a>
<h1 id="什么是-lrnnet"><a class="markdownIt-Anchor" href="#什么是-lrnnet"></a> 什么是 LRNNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LRNNet-20230408152301.png" alt="LRNNet-20230408152301" /></li>
<li>基于 [[LEDNet]] 改进, 使用 SVD 简化 non-local 网络, 通过分解因子卷积块（FCB），扩大感受野</li>
<li>通过非局部模块（SVN），利用<strong>区域奇异向量</strong>产生更有代表性的特征来建模远程依赖和全局特征选择</li>
</ul>
<h1 id="lrnnet-的网络结构"><a class="markdownIt-Anchor" href="#lrnnet-的网络结构"></a> LRNNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LRNNet-20230408152301.png" alt="LRNNet-20230408152301" /></li>
<li><strong>编码器</strong>：三个阶段的 ResNet 形式组成。编码器环节的核心组件是分解因子卷积 FCB 单元，同时在最后一个下采样单元之后，采用了空洞卷积上输出特征图的分辨率保持在1/8</li>
<li><strong>解码器</strong>：包含 2 层分支，其中下层分支是输入的残差，上层分支是非局部模块（SVN），它利用区域奇异向量产生更有代表性的特征来建模远程依赖和全局特征选择</li>
</ul>
<h1 id="lrnnet-的-fcbfactorized-convolution-block模块"><a class="markdownIt-Anchor" href="#lrnnet-的-fcbfactorized-convolution-block模块"></a> LRNNet 的 FCB（Factorized Convolution Block）模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HMANet-20230408143223.png" alt="HMANet-20230408143223" /></li>
<li>首先将通道拆分成两组，然后在两组通道中分别用两个一维卷积处理短距离和空间较少的信息特征，这样会大大降低参数和计算量。</li>
<li>将两个通道合并后，FCB利用2维卷积来扩大感受野捕获远距离特征，并使用深度可分离卷积来减少参数和计算量。最后设置了通道混洗操作</li>
</ul>
<h1 id="lrnnet-的-svn-模块"><a class="markdownIt-Anchor" href="#lrnnet-的-svn-模块"></a> LRNNet 的 SVN 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LRNNet-20230408152259.png" alt="LRNNet-20230408152259" /></li>
<li><strong>底层分支</strong>：来自输入的残余连接</li>
<li><strong>上层分支</strong>：是简化非局部操作的瓶颈，将特征图划分为空间子区域。利用区域奇异向量产生更有代表性的特征来建模远程依赖和全局特征选择，<strong>区域优势奇异向量是特征图区域最具代表性的特征向量</strong></li>
<li><strong>上分支构建稀疏注意力的过程</strong>(1)<strong>计算得到 K、V</strong>： 特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>H</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">CHW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 通过 1 x 1 卷积将通道调整 C-&gt;C’，然后对 HW 的区域分 S 个子区域，对每个子区域大小为 (C‘, H/S, W/S)，通过迭代算法将所有子区域简化到 (C’, 1)，所有子区域则有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>×</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">C&#x27;\times S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，即是 K, V；<strong>(2)计算注意力</strong>：   通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>×</mo><msup><mi>K</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">Q\times K^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 得到大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">S\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 注意力矩阵，相比较构建 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">N\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 注意力矩阵，这个举证更小，所以其注意力更加稀疏；(3)<strong>加权特征</strong>，注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">S\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 与 V 点成，得到大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">C&#x27;\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 的输出，然后通过 1 x 1 卷积得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">C\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 的输出，然后和原始特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>H</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">CHW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 相加</li>
<li>不考虑 1 x 1 卷积调整通道数，其实就是对空间进行分区域，然后求区域与每个像素的注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">S\times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>在windows上使用nuitka打包Python项目</title>
    <url>/2021/03/16/Nuitka%E6%89%93%E5%8C%85%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>Nuitka是Python编译器，它是用Python编写，对Python解释器的无缝替换或扩展，兼容多个CPython版本，利用该工具可以对Python文件进行打包。本文用于介绍如何在windows上使用nuitka工具打包Python，包含构建打包环境、安装nuitka、测试打包。</p>
<a id="more"></a>
<h2 id="打包环境介绍"><a class="markdownIt-Anchor" href="#打包环境介绍"></a> <strong>打包环境介绍</strong></h2>
<p>本次打包所使用的软硬件环境如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">System: windows 10 企业版 19042.804</span><br><span class="line">NVIDIA DERVER 461.</span><br><span class="line">mingw 8.0.0</span><br><span class="line">visual studio 2017</span><br><span class="line">python 3.7.10</span><br><span class="line">nuitka 0.6.12.3</span><br><span class="line">tensorflow-gpu  2.5.0.dev20210308</span><br><span class="line">cuda 11.1</span><br><span class="line">cudnn 8.0.4</span><br><span class="line">numpy 1.20.1</span><br></pre></td></tr></table></figure>
<h2 id="安装nuitka"><a class="markdownIt-Anchor" href="#安装nuitka"></a> 安装nuitka<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2>
<ol>
<li>安装C编译器，有以下两个选择，任选一个安装
<ul>
<li>根据系统配置，<a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/">下载并安装</a>MinGW64，基于gcc8.0以上的版本，安装过程参考</li>
<li>根据系统配置，<a href="https://visualstudio.microsoft.com/downloads/">下载并安装</a>Visual Studio 2019以上的版本</li>
</ul>
</li>
<li><a href="https://www.python.org/downloads/windows">下载并安装</a>Python，确保版本为：2.6、2.7或3.3、3.4、3.5、3.6、3.7、3.8、3.9 其中一个</li>
<li>使用以下命令安装nuitka</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m pip install nuitka</span><br></pre></td></tr></table></figure>
<h2 id="测试nuitka打包2"><a class="markdownIt-Anchor" href="#测试nuitka打包2"></a> 测试nuitka打包[^2]</h2>
<p><a href="http://xn--mdl-tu9d554er5ifia.py">新建文件mdl.py</a>，内容如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printinfo</span>(<span class="params">info</span>):</span></span><br><span class="line">	print(info)</span><br></pre></td></tr></table></figure>
<p><a href="http://xn--main-494f213aw1t0uau17bc55b.py">同目录下新建main.py</a>，内容如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> printinfo <span class="keyword">import</span> printinfo</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    printinfo(<span class="string">&#x27;Hello nuitka&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>测试运行无误后，运行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nuitka --output-dir=<span class="built_in">test</span> hello.py</span><br></pre></td></tr></table></figure>
<p>运行编译之后的exe程序，得到正确结果即安装完成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.\<span class="built_in">test</span>\main.exe</span><br></pre></td></tr></table></figure>
<p><strong>生成文件说明</strong></p>
<p>生成目录下，文件清理如下：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082058632.png" alt="image-20210316145017152" /></p>
<ul>
<li>main.build     nuitka打包过程的中间文件，可删除</li>
<li>main.exe        nuitka打包得到的可执行文件</li>
<li>python37.dll  Pyhton安装目录下的python37.dll的拷贝，代码使用的库包依靠该文件去查找</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/341099225">Nuitka入门指南-新手必备 - 知乎</a><br />
[^2 ]: <a href="https://www.nuitka.net/doc/user-manual.html#id5">Nuitka User Manual</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>打包</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOv4：Optimal Speed and Accuracy of Object Detection</title>
    <url>/2021/03/12/YOLOv4%EF%BC%9AOptimal%20Speed%20and%20Accuracy%20of%20Object%20Detection/</url>
    <content><![CDATA[<p>YOLOv4在YOLOv3的基础上进行大量的trick改进，包括使用CSPDarkNet53，PAN等网络</p>
<a id="more"></a>
<h1 id="什么是-yolov4"><a class="markdownIt-Anchor" href="#什么是-yolov4"></a> 什么是 YOLOv4？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv4-20230408141922.png" alt="" /></li>
<li>在 YOLOv4 中 CSPDarknet53作为BackBone和空间金字塔池化(SpatialPyramidPooling,SPP)块用于增加感受野，将显着特征分离，并没有降低网络运行速度；PAN用于来自不同主干级别的参数聚合 YOLOv3头用于预测头</li>
<li>改进网络 CSPDarknet53、SPP、PAN、DropBlock 正则化、CmBN(Crossmini-BatchNormalization)</li>
<li>改进数据预处理 Mixup数据增强、标签平滑(Classlabelsmoothing)</li>
<li>改进模型训练 CIOU loss、自我对抗​​训练SAT(Self-adversarial-training)数据增强</li>
</ul>
<h1 id="yolov4的网络结构"><a class="markdownIt-Anchor" href="#yolov4的网络结构"></a> YOLOv4的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv4-20230408141922.png" alt="" /></li>
<li>输入：608x608x3 的图片</li>
<li>输出：3 个输出，76x76x255、38x38x255、19x19x255，其中 YOLOv3网络结构含义一致，表示每个网格使用 3 个先验框，每个先验框计算置信度 (1)、位置 (4)、类别 (80)</li>
<li><strong>YOLOv4</strong> = CSPDarknet53+ 空间金字塔池化(SpatialPyramidPooling,SPP)+ PAN+ YOLOv3 的检测头</li>
</ul>
<h1 id="yolov4的正负样本判定"><a class="markdownIt-Anchor" href="#yolov4的正负样本判定"></a> YOLOv4的正负样本判定？</h1>
<ul>
<li>YOLOv1-YOLOv3均采取single-anchor(1个真实框分配1个先验框进行预测)的方式，而YOLOv4采用multi-anchor(1个真实框分配多个先验框进行预测)</li>
<li><strong>正负样本判定：</strong> 只要真实框与某个先验框的IOU大于阈值，该先验框就是正样本，反之是负样本，不再考虑忽略样本</li>
</ul>
<h1 id="yolov4如何制作正样本"><a class="markdownIt-Anchor" href="#yolov4如何制作正样本"></a> YOLOv4如何制作正样本？</h1>
<ul>
<li>YOLOv4使用YOLOv3的检测头，因此其正样本制作方式YOLOv3制作正样本制作方式一样</li>
</ul>
<h1 id="yolov4的损失函数"><a class="markdownIt-Anchor" href="#yolov4的损失函数"></a> YOLOv4的损失函数？</h1>
<ul>
<li>YOLOv3损失函数 box位置损失替换CIoU loss ，其他部分的损失一样</li>
</ul>
<h1 id="yolov4的主干网络cspdarknet53"><a class="markdownIt-Anchor" href="#yolov4的主干网络cspdarknet53"></a> YOLOv4的主干网络CSPDarknet53?</h1>
<ul>
<li>CSPDarknet53 是 YOLOv3主干网 Darknet-53 的基础上，借鉴 CSPNet(Cross-Stage-Partial-connections)的经验产生的</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/aBES3ndunhM02g-Ktdm_2clPje2TBsRhoZCqdK7KY7Tn2AfOVFLQSoKAqyfbdC2hpvp2ZW9sBxWFrE7gOLOkLvwLGAX1Z3MlbIsFAeTLYp65OQVPbiqL9NaWSA486wwK.png" alt="" /></li>
<li><strong>CBM：</strong> Yolov4 网络结构中的最小组件，由 Conv+Bn+Mish 激活函数三者组成</li>
<li><strong>CSPX：</strong> 借鉴了 CSPNet 网络结构，由 CBM 组件和 X 个 Res unint 模块 Concate 组成</li>
</ul>
<h1 id="yolov4的颈部网络组成"><a class="markdownIt-Anchor" href="#yolov4的颈部网络组成"></a> YOLOv4的颈部网络组成?</h1>
<ul>
<li>特征增强模块，主要由CBL组件，SPP模块和FPN+PAN的方式组成</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LVoFzMznJ_5HYMyRVAYKAxiX0bFgQ3ikiJAx4eTD53flSOFaN75pDdCsrQgVssvLi5dgvS6ggck_nR9gP6cQspU_00eOOGGd5WD1GTaLSFjEBJCflxZNsu9fQHu7jZJc.png" alt="" /></li>
<li><strong>CBL组件</strong>： Conv+Bn+Leaky_relu激活函数三者组成</li>
<li><strong>空间金字塔池化(SpatialPyramidPooling,SPP)</strong>： 采用1×1，5×5，9×9，13×13的最大池化的方式，进行多尺度融合</li>
<li><strong>PAN</strong>： FPN层自顶向下传达强语义特征，而PAN则自底向上传达强定位特征，两两联手，从不同的主干层对不同的检测层进行参数聚合，加速了不同尺度特征的融合，进一步提高特征提取的能力</li>
</ul>
<h1 id="yolov4的bag-of-freebies有哪些"><a class="markdownIt-Anchor" href="#yolov4的bag-of-freebies有哪些"></a> YOLOv4的Bag of freebies有哪些？</h1>
<ul>
<li><strong>用于 backbone</strong>： Mosaic数据增强，DropBlock 正则化，标签平滑(Classlabelsmoothing)</li>
<li><strong>用于检测器的 BoF</strong>：CIOU loss，CmBN(Crossmini-BatchNormalization)，DropBlock 正则化，Mosaic数据增强，自我对抗​​训练SAT(Self-adversarial-training)数据增强，消除网格敏感性，对单个 ground-truth 使用多个 anchor，学习率余弦衰减，最佳超参数，Random training shapes</li>
</ul>
<h1 id="yolov4的bag-of-specials有哪些"><a class="markdownIt-Anchor" href="#yolov4的bag-of-specials有哪些"></a> YOLOv4的Bag of specials有哪些？</h1>
<ul>
<li><strong>用于 backbone 的 BoS：</strong> 激活函数 Mish，CSPNet，多输入加权残差连接(Weighted-Residual-Connections,MiWRC)</li>
<li><strong>用于检测器的 Bos：</strong> 激活函数 Mish，SPPNet，CBAM的通道注意力模块（ChannelAttentionModule，CAM)，PAN ，DIOU Loss</li>
</ul>
<h1 id="yolov4为什么要进行mosaic数据增强呢"><a class="markdownIt-Anchor" href="#yolov4为什么要进行mosaic数据增强呢"></a> YOLOv4为什么要进行Mosaic数据增强呢?</h1>
<ul>
<li>小目标的AP一般比中目标和大目标低很多。而Coco数据集中小目标占比达到41.4%，数量比中目标和大目标都要多。但在所有的训练集图片中，只有52.3%的图片有小目标，而中目标和大目标的分布相对来说更加均匀一些</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
        <tag>one-stage</tag>
      </tags>
  </entry>
  <entry>
    <title>部署深度学习模型时的全流程加密方案探索</title>
    <url>/2021/03/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2%E5%85%A8%E6%B5%81%E7%A8%8B%E5%8A%A0%E5%AF%86%E6%96%B9%E6%A1%88%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<p>本文用于探索深度学习模型在部署全流程过程中的整体方案</p>
<a id="more"></a>
<h2 id="部署场景"><a class="markdownIt-Anchor" href="#部署场景"></a> 部署场景</h2>
<p><strong>涉及程序端及编程语言</strong>：界面端（C#）、服务端（C#）、训练端（Python）</p>
<p><strong>剥离加密之后的流程</strong>：</p>
<ol>
<li>界面端根据训练配置调用训练端</li>
<li>训练端训练结束后保存模型（结构、文件）</li>
<li>服务端加载模型</li>
</ol>
<h2 id="加密要求"><a class="markdownIt-Anchor" href="#加密要求"></a> 加密要求</h2>
<p>由C#编写的程序部署时会将其编译为二进制，无需加密保护，主要是针对训练端的Python及训练得到的模型，有以下要求：</p>
<ol>
<li>无法明文看到Python代码</li>
<li>无法获得模型（结构与权重）</li>
<li>windows上部署</li>
<li>加密方案不能大幅度增加部署成本</li>
</ol>
<h2 id="加密方案"><a class="markdownIt-Anchor" href="#加密方案"></a> 加密方案</h2>
<p>针对Python加密以及模型的加密，调查了主流的加密方案</p>
<h4 id="网络收集的python加密思路"><a class="markdownIt-Anchor" href="#网络收集的python加密思路"></a> 网络收集的Python加密思路</h4>
<table>
<thead>
<tr>
<th>序号</th>
<th>工具</th>
<th>方法描述</th>
<th>加密及解密</th>
<th>优缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Nuitka<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></td>
<td>.py 文件先被转成了 .c 文件，然后被编译成 .o 文件，最后合并成 .bin 可执行文件，从 bin 到 C 是不可逆的，从 C 到 Python 也是不可逆的，因此代码是安全的</td>
<td>编译为bin,<a href="http://xn--siqv1isvm2mbc8dr4c5s1fvtbv04cilu.so">或者编译为动态链接库.so</a> 文件</td>
<td>工作量小，安全性高，使用加密之后的Python便捷；编译时间长，过程复杂</td>
</tr>
<tr>
<td>2</td>
<td>发行.pyc文件<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></td>
<td>通过compileall模块将.py文件转为.pyc文件，该文件是二进制，无法直接看源代码，而python解释器可以直接执行.pyc文件</td>
<td></td>
<td>台兼容性好，.py 能在哪里运行，.pyc 就能在哪里运行；解释器兼容性差，.pyc 只能在特定版本的解释器上运行。有现成的反编译工具，破解成本低</td>
</tr>
<tr>
<td>3</td>
<td>代码混淆（oxyry，pyobfuscate）<sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup></td>
<td>让人看不懂代码，移除注释和文档，改变缩进，在tokens中间加入一定空格，重命名函数、类、变量，在空白行插入无效代码</td>
<td></td>
<td>提高了一点源码破解门槛。兼容性好，只要源码逻辑能做到兼容，混淆代码亦能；只能对单个文件混淆，无法做到多个互相有联系的源码文件的联动混淆</td>
</tr>
<tr>
<td>4</td>
<td>py2exe<sup class="footnote-ref"><a href="#fn3" id="fnref3:2">[3:2]</a></sup></td>
<td>将源码编译为 .pyc 文件，加之必要的依赖文件，一起打包成一个可执行文件。最终 py2exe 打包出的是二进制文件。</td>
<td></td>
<td>直接打包成 exe，方便分发和执行。破解门槛比 .pyc 更高一些；兼容性差，只能运行在 Windows 系统上。生成的可执行文件内的布局是明确、公开的，可以找到源码对应的 .pyc 文件，进而反编译出源码。</td>
</tr>
<tr>
<td>5</td>
<td>Cython<sup class="footnote-ref"><a href="#fn3" id="fnref3:3">[3:3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></td>
<td>将 .py/.pyx 编译为 .c 文件，再将 .c 文件编译为 .so(Unix) 或 .pyd(Windows)</td>
<td></td>
<td>生成的二进制 .so 或 .pyd 文件难以破解。同时带来了性能提升；兼容性稍差，对于不同版本的操作系统，可能需要重新编译。虽然支持大多数 Python 代码，但如果一旦发现部分代码不支持，完善成本较高。</td>
</tr>
<tr>
<td>6</td>
<td>Pyinstaller<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup><sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></td>
<td>打包为exe文件，</td>
<td></td>
<td>将Python文件转换为exe文件，以及dist文件夹和build文件夹，如果要移植到其他电脑上运行，也是只需要将这两个文件夹复制到对方电脑上，即使对方没有python环境，也可以运行程序，具有较好的兼容性；pyinstxtractor.py可以进行反编译</td>
</tr>
</tbody>
</table>
<p>注：py是源文件，pyc是源文件编译后的文件，pyo是源文件优化编译后的文件，pyd是其他语言写的python库<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup></p>
<h4 id="网络收集的模型加密思路"><a class="markdownIt-Anchor" href="#网络收集的模型加密思路"></a> 网络收集的模型加密思路</h4>
<table>
<thead>
<tr>
<th>序号</th>
<th>方法描述</th>
<th>加密及解密</th>
<th>优缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>将模型转换为二进制，直接打开看不见原始内容<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup></td>
<td>ncnn2mem工具可以将ncnn模型转为二进制的：ncnn2mem resnet.param resnet.bin</td>
<td>使用netron可以查看文件，反编译成本很低</td>
</tr>
<tr>
<td>2</td>
<td>将模型打包为C code，并嵌入到程序中<sup class="footnote-ref"><a href="#fn8" id="fnref8:1">[8:1]</a></sup></td>
<td>ncnn2mem resnet.param resnet.id.h resnet.mem.h,把这个文件 include 进来，用内存加载接口，把模型当作代码直接嵌入编译进程序中</td>
<td>分发exe即可，虽然不能直接获得模型，但是能用 objdump 或者十六进制编辑器从 exe 静态区中把模型抠出来</td>
</tr>
<tr>
<td>3</td>
<td>使用专用加密库对模型加密<sup class="footnote-ref"><a href="#fn8" id="fnref8:2">[8:2]</a></sup></td>
<td>用 openssl，把 param.bin 和 bin 两个文件用 AES 加密成 param.bin.enc 和 bin.enc；程序实现以下三步，加载加密模型：读enc文件、解密到内存、从内存加载模型</td>
<td>可以从算法中xor pattern或获得密钥；堆内存上暴力查找 enc 大小左右的连续内存和关键字，把模型从内存里抠出来</td>
</tr>
<tr>
<td>4</td>
<td>自定义加密算法和数据读取<sup class="footnote-ref"><a href="#fn8" id="fnref8:3">[8:3]</a></sup></td>
<td>用普通 xor 混淆实现</td>
<td>任意时刻内存中都不会存在完整的模型内容，边解密边加载</td>
</tr>
<tr>
<td>5</td>
<td>给模型加些自定义 op<sup class="footnote-ref"><a href="#fn8" id="fnref8:4">[8:4]</a></sup></td>
<td>cnn 可以自定义 op，可以运行时注册自定义 op，可以直接改 param</td>
<td>即便看到了明文的 param，也容易被名字欺骗</td>
</tr>
<tr>
<td>6</td>
<td>将外部文件嵌入二进制文件(exe，dll)，并加壳保护该文件<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup></td>
<td>直接程序之间调用</td>
<td>这种方法开发量小，仅需要将资源文件嵌入并在运行时加载。</td>
</tr>
<tr>
<td>7</td>
<td>自定义的外部文件加密方式<sup class="footnote-ref"><a href="#fn9" id="fnref9:1">[9:1]</a></sup></td>
<td></td>
<td>在加载模型文件前解密，考虑到安全性，防止解密后的模型文件暴露于内存被轻易dump，考虑使用流式加密的方法进行加解密，由此相对安全一点。</td>
</tr>
<tr>
<td>8</td>
<td>用protobuf自定义一种格式呀，没有协议文件<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup></td>
<td></td>
<td>工程量比较大</td>
</tr>
<tr>
<td>9</td>
<td>部署到云端给客户api接口调用<sup class="footnote-ref"><a href="#fn10" id="fnref10:1">[10:1]</a></sup></td>
<td></td>
<td>特定场景不适合</td>
</tr>
</tbody>
</table>
<p><strong>参考资料：</strong></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.zhihu.com/question/299880517/answer/1719845490">如何防止商用的深度学习模型源码泄露？</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/c_1245860717607686144">Nuitka-Python打包exe - 知乎</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="http://www.361way.com/python-encrypt/6159.html">现有Python 代码加密方案 - 运维之路</a> <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a> <a href="#fnref3:2" class="footnote-backref">↩︎</a> <a href="#fnref3:3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://cloud.tencent.com/developer/article/1661136">用Cython加密打包python项目</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://www.cnblogs.com/hulk-1029/p/12106630.html">利用pyinstaller打包加密Python项目</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://blog.csdn.net/weixin_43652669/article/details/106401233">Pyinstaller 打包加密python项目</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://blog.csdn.net/willhuo/article/details/49886663">python py、pyc、pyo、pyd文件区别</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/268327784?utm_source=wechat_timeline">如何加密ncnn模型 - 知乎</a> <a href="#fnref8" class="footnote-backref">↩︎</a> <a href="#fnref8:1" class="footnote-backref">↩︎</a> <a href="#fnref8:2" class="footnote-backref">↩︎</a> <a href="#fnref8:3" class="footnote-backref">↩︎</a> <a href="#fnref8:4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn9" class="footnote-item"><p><a href="https://blog.csdn.net/atp1992/article/details/87636173?utm_medium=distribute.pc_relevant_download.none-task-blog-searchFromBaidu-7.nonecase&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-searchFromBaidu-7.nonecas">浅谈深度学习模型如何保护–AES加密文件流的实现（带源码）</a> <a href="#fnref9" class="footnote-backref">↩︎</a> <a href="#fnref9:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn10" class="footnote-item"><p><a href="https://www.zhihu.com/question/299880517">如何防止商用的深度学习模型源码泄露？ - 知乎</a> <a href="#fnref10" class="footnote-backref">↩︎</a> <a href="#fnref10:1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>部署</tag>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>GhostNet：More Features from Cheap Operations</title>
    <url>/2021/03/10/GhostNet%EF%BC%9AMore%20Features%20from%20Cheap%20Operations/</url>
    <content><![CDATA[<p>GhostNet 认为CNN输出存在大量的冗余特征，没必要一次生成，而是标准卷积过程分解为两个阶段，第一阶段生成少数特征图，第二阶段基于少数特征变换（1x1）得到等量特征图，这种方式降低了卷积的计算量</p>
<a id="more"></a>
<ul>
<li>什么是 GhostNetv1 ？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GhostNetv1-20230408140214.png" alt="" /></li>
<li>在 CNN 中，对于一个 hwc 的输入，如果使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">k\times k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的卷积核生成 n 个 h‘w’的特征图，其计算成本为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>c</mi><mo>×</mo><mi>k</mi><mo>×</mo><mi>k</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">h&#x27;w&#x27;c\times k\times k \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，GhostNetv1 认为 n 个特征图存在大量冗余，但是冗余特征对 CNN 又是必要的，应该如何降低计算成本呢？</li>
<li>GhostNetv1 认为既然特征冗余了，那么我首先生成 m 个特征图 (m&lt;&lt;n)，然后对每张特征图执行 S 次简单变换，并使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><mi>s</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m\times s=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，由于简单变换使用深度可分离卷积的&quot;通道卷积&quot;，因此提取同样数量的特征图，GhostNet 计算成本更低</li>
<li>GhostNet 本质创新就是将标准卷积过程分解为两个阶段，第一阶段生成少数特征图，第二阶段基于少数特征变换得到等量特征图</li>
</ul>
</li>
<li>GhostNetv1 的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GhostNetv1-20230408140216.png" alt="" /></li>
<li>GhostNet 主要由一堆 Ghost bottleneck 组成，其中 Ghost bottleneck 以 Ghost 模块为构建基础</li>
</ul>
</li>
<li>GhostNetv1 的 Ghost Module？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GhostNetv1-20230408140216-1.png" alt="" /></li>
<li><strong>标准卷积</strong>：在 CNN 中，对于一个 hwc 的输入，如果使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">k\times k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的卷积核生成 n 个 h‘w’的特征图，其计算成本为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>c</mi><mo>×</mo><mi>k</mi><mo>×</mo><mi>k</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">h&#x27;w&#x27;c\times k\times k \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></li>
<li><strong>Ghost Module</strong>：通过 2 步分解标准卷积，1）通过标准卷积生成 m 个特征图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">y^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.13692em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> (M&lt;&lt;N)；然后对每个特征图执行 S 次简单变换，公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>y</mi><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup></mrow><annotation encoding="application/x-tex">y_{j}^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3372519999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span> 是第 i 个原始特征图，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\Phi_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是对第 i 个特征图执行第 j 个线性计算，用于生成第 j 个幻影特征图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\Phi_{i,s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是第 i 个特征图最后一次线性变换，定义为恒等映射，主要确保 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><mi>s</mi><mo>=</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">m\times s=N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，Ghost Module 输出的特征图数量和标准卷积一样<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
</li>
<li>假设 Ghost 模块生成与普通卷积层相同数量、相同分辨率的特征图，Ghost 模块比标准卷积少 s 倍成本</li>
<li><strong>标准卷积</strong>：对于一个 hwc 的输入，如果使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">k\times k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的卷积核生成 n 个 h‘w’的特征图，其计算成本为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>c</mi><mo>×</mo><mi>k</mi><mo>×</mo><mi>k</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">h&#x27;w&#x27;c\times k\times k \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></li>
<li><strong>Ghost 模块</strong>：具有一个恒等映射和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi>n</mi><mi>s</mi></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m\cdot(s-1)=\frac{n}{s}\cdot(s-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 个线性变换，假设线性变换的平均内核大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>×</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">d\times d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>，则其计算量为：<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GhostNetv1-20230408140217.png" alt="GhostNetv1-20230408140217" /></li>
<li>利用 Ghost 模块的优势，专门为小型 CNN 设计的 Ghost bottleneck（G-bneck），Ghost bottleneck 似乎类似于 ResNet 中的基本残差块（Basic Residual Block），其中集成了多个卷积层和 shortcut</li>
<li>Ghost bottleneck 主要由两个堆叠的 Ghost 模块组成。第一个 Ghost 模块用作扩展层，增加了通道数。这里将输出通道数与输入通道数之比称为 expansion ratio；第二个 Ghost 模块减少通道数，以与 shortcut 路径匹配。然后，使用 shortcut 连接这两个 Ghost 模块的输入和输出</li>
<li>上图是 stride=1 保持分辨率模块和下采样一倍模块，注意这里借鉴了 MobileNetV2，第二个 Ghost 模块之后不使用 ReLU，其他层在每层之后都应用了批量归一化（BN）和 ReLU 非线性激活</li>
</ul>
</li>
</ul>
<p><strong>参考资料</strong>：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/109325275">CVPR 2020：华为GhostNet，超越谷歌MobileNet，已开源 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>在windows上安装MinGW-w64</title>
    <url>/2021/03/10/windows%E4%B8%8A%E5%AE%89%E8%A3%85minGW/</url>
    <content><![CDATA[<blockquote>
<p>MinGW(全称为，Minimalist GNU for Windows)，它实际上是将经典的开源 C语言编译器 GCC 移植到了 Windows 平台下，并且包含了 Win32API ，因此可以将源代码编译为可在 Windows 中运行的可执行程序。而且还可以使用一些 Windows 平台不具备的，但是Linux平台具备的开发工具和API函数。用一句话来概括就是：MinGW 就是 GCC 的 Windows 版本<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<a id="more"></a>
<h2 id="mingw-w64安装"><a class="markdownIt-Anchor" href="#mingw-w64安装"></a> MinGW-w64安装</h2>
<p>有两种方式安装MinGW-w64，第一种是下载压缩包安装；第二种是使用<a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/installer/mingw-w64-install.exe">MinGW-w64下载器</a>安装。下面以浏览器下载安装为例，介绍其安装流程及压缩包命名规则。</p>
<h4 id="下载压缩包安装"><a class="markdownIt-Anchor" href="#下载压缩包安装"></a> 下载压缩包安装</h4>
<ol>
<li><strong>下载压缩包：</strong><a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/">在这里下载</a>MinGW-w64，文件命名方式<a href="#filename_rule">如下</a>，根据自己系统及需要下载对应版本，本此安装系统为windows10(64bit)，选择了[x86_64-posix-sjlj](<a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains">https://sourceforge.net/projects/mingw-w64/files/Toolchains</a> targetting Win64/Personal Builds/mingw-builds/8.1.0/threads-posix/sjlj/x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z)</li>
<li>**解压压缩包：**将路径<code>mingw64/bin</code>配置到系统环境变量<code>PATH</code>中；<code>mingw64/lib</code>配置到环境变量LIB中；<code>mingw64/bin</code>配置到环境变量INCLUDE中</li>
<li>**测试安装：**打开windows终端cmd，输入<code>gcc -v</code>，无误后安装成功</li>
</ol>
<h4 id="span-idfilename_rule文件命名方式解释span"><a class="markdownIt-Anchor" href="#span-idfilename_rule文件命名方式解释span"></a> <span id="filename_rule">文件命名方式解释</span> <sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup></h4>
<ul>
<li><strong>version</strong>: GCC编译器版本</li>
<li><strong>architecture</strong>: 电脑系统类型，i686指32位系统；x86_64指64位系统</li>
<li><strong>threads</strong>: 线程类型，posix指可移植的操作系统接口，UNIX系统支持该标准；win32指windows下的一个标准</li>
<li><strong>exception</strong>: 异常处理类型，32位系统有2种：dwarf和sjlj；64位系统同样2种：seh 和 sjlj。3种类型的区别为<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：
<ul>
<li><strong>sjlj</strong>：可用于32位和64位 – 不是“零成本”：即使不抛出exception，也会造成较小的性能损失（在exception大的代码中约为15％） – 允许exception遍历例如窗口callback</li>
<li><strong>seh</strong>：结构化异常处理，利用FS段寄存器，将原点压入栈，遇到异常弹出，seh 是新发明的，而 sjlj 则是古老的，seh 性能比较好，但不支持 32位。 sjlj 稳定性好，支持 32位</li>
<li><strong>dwarf</strong>：只有32位可用 – 没有永久的运行时间开销 – 需要整个调用堆栈被启用，这意味着exception不能被抛出，例如Windows系统DLL。</li>
</ul>
</li>
<li><strong>build revision</strong>: 建立修订</li>
</ul>
<p><strong>参考资料：</strong></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/u010429831/article/details/106766165/">Windows系统下安装配置 MinGW-w64 开发环境_yunfan-CSDN博客</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/cangqinglang/p/11074124.html">MinGW-w64安装教程——著名C/C++编译器GCC的Windows版本</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>MinGW64</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>使用oracle VM vitualbox安装windows10系统</title>
    <url>/2021/03/09/%E4%BD%BF%E7%94%A8oracle-VM-vitualbox%E5%AE%89%E8%A3%85windows10%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>由于工作需要，在windows10工作机编译的代码需要在干净的windows中测试代码运行效果，所以本文介绍如何使用oracle VM vitualbox安装windows10系统，已经配置主机与虚拟机之间的文件传输过程</p>
<a id="more"></a>
<p>为避免大段文字及节省时间，以下简单描述安装步骤：</p>
<h2 id="前期准备"><a class="markdownIt-Anchor" href="#前期准备"></a> 前期准备</h2>
<ol>
<li>
<p><a href="https://msdn.itellyou.cn/">到此选择</a>合适的系统，获得下载连接<code>ed2k://|file|xxxxxxx</code>，然后使用迅雷下载该文件</p>
</li>
<li>
<p><a href="https://www.virtualbox.org/wiki/Downloads">到此下载</a>并安装oracle VM vitualbox</p>
</li>
</ol>
<h2 id="安装windows10"><a class="markdownIt-Anchor" href="#安装windows10"></a> 安装windows10</h2>
<ol>
<li>启动oracle VM vitualbox，并选择<code>新建</code>按钮</li>
<li>命名虚拟机，选择<code>类型</code>及<code>版本</code>，然后点击<code>下一步</code>，注意和第一步下载的系统对应</li>
<li>配置虚拟机使用内存，点击<code>下一步</code></li>
<li>点击<code>现在创建虚拟硬盘</code>虚拟硬盘，然后点击<code>下一步</code></li>
<li>选择虚拟硬盘类型为<code>VDI</code>，然后点击<code>下一步</code></li>
<li>选择虚拟硬盘大小为<code>动态分配</code>，然后点击<code>下一步</code></li>
<li>选择虚拟硬盘的<code>文件大小及大小</code>，然后点击<code>创建</code></li>
<li>至此完成虚拟机的创建，后面的将第一步下载的文件挂载至虚拟机硬盘上，才能启动虚拟机</li>
<li>右键点击新建的虚拟机，依次选择<code>设置-&gt;存储</code>，点击选择虚拟盘，选择第一步下载的系统，操作看下图</li>
<li>退出设置后，启动虚拟机，并安装windows10系统</li>
</ol>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082034346.png" alt="image-20210309171724366" /></p>
<h2 id="配置虚拟机"><a class="markdownIt-Anchor" href="#配置虚拟机"></a> 配置虚拟机</h2>
<p>通过以下两种方式配置虚拟机与主机之间的文件传输</p>
<p><strong>双向拷贝及拖放</strong></p>
<ol>
<li>完成系统安装后，右键点击虚拟机，选择依次点击<code>设置-&gt;常规-&gt;高级</code>，将<code>共享粘贴板</code>及<code>拖放</code>都改为<mark>双向</mark></li>
<li>启动虚拟机，在新窗口的菜单中选择<code>设备-&gt;安装增强功能</code>，然后到系统中找到CD驱动器挂载的安装程序，双击该驱动安装程序，具体操作看下图</li>
</ol>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082035805.png" alt="image-20210309172743941" /></p>
<p><strong>共享文件夹</strong></p>
<p>通过文件共享的方式，将主机的某个文件夹共享给虚拟机</p>
<ol>
<li>在虚拟机窗口中菜单，选择<code>设备-&gt;共享文件夹-&gt;共享文件夹</code></li>
<li>双击<code>固定分配</code>下的选项，选择主机的<code>共享文件夹路径</code>，设置共享文件夹名称，设置<code>只读</code>与<code>自动挂载</code>，最后点击OK</li>
<li>主机的共享文件夹被挂载到文件系统，打开我的电脑即可访问</li>
</ol>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>windows10</tag>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows上编译带CUDA(GPU)的OpenCV</title>
    <url>/2021/03/08/%E5%9C%A8Windows%E4%B8%8A%E7%BC%96%E8%AF%91%E5%B8%A6CUDA(GPU)%E7%9A%84opencv/</url>
    <content><![CDATA[<p>本文一步一步地介绍如何在windows上编译带CUDA模块（GPU）支持的OpenCV，为避免长篇大论，截图过多，尽可能简单地描述</p>
<a id="more"></a>
<p><strong>本次安装说明：</strong></p>
<p>本次在windows10上、RTX2060S编译OpenCV4.5.0，其他相关软件安装情况如下：</p>
<ul>
<li>NVIDIA Diver 461</li>
<li>CUDA 11.1</li>
<li>CUDNN 8.0.4</li>
<li>Cmake 3.19.3</li>
<li>Visual studio 2017</li>
</ul>
<h2 id="第一步安装前准备"><a class="markdownIt-Anchor" href="#第一步安装前准备"></a> 第一步：安装前准备</h2>
<ol>
<li>确认系统显卡牌子为：NVIDIA，并<a href="https://developer.nvidia.com/zh-cn/cuda-gpus">在此</a>查看是否支持CUDA ，在列表中找到即是支持显卡</li>
<li><a href="https://www.nvidia.cn/geforce/drivers/">下载</a>并安装显卡驱动</li>
<li><a href="https://developer.nvidia.com/zh-cn/cuda-toolkit">下载</a>并安装CUDA，<a href="https://developer.nvidia.com/zh-cn/cudnn">下载</a>CUDNN，安装过程参考<a href=""></a></li>
<li><a href="https://cmake.org/download/">下载</a>并安装CmakeGUI</li>
<li><a href="https://visualstudio.microsoft.com/downloads/">下载</a>并安装VIsual sudio 2017</li>
<li><a href="https://opencv.org/releases/">下载</a>OpenCV</li>
<li><a href="https://github.com/opencv/opencv_contrib/">下载</a>OpenCV contrib，需跟OpenCV同版本</li>
<li>解压OpenCV及OpenCV contrib</li>
<li>在OpenCV解压目录下创建build</li>
</ol>
<h2 id="第二步使用cmake-gui构建opencv"><a class="markdownIt-Anchor" href="#第二步使用cmake-gui构建opencv"></a> 第二步：使用Cmake-gui构建opencv</h2>
<ol>
<li>**启动Cmake：**为编译OpenCV的Python接口，需在在终端激活某个conda虚拟环境，并运行<code>cmake-gui</code>程序，如不需要使用Python接口，直接运行<code>cmake-gui</code>即可</li>
<li><strong>配置Cmake：</strong>（1）<code>source code</code>选择OpenCV解压后的源码；（2）<code>build binaries</code>选择第一步创建的build目录；（3）点击<code>Configure</code>，在弹窗中依次选<code>VIsual sudio 15 2017</code> 、 <code>x64</code>，点击<code>Finish</code></li>
<li>**配置CUDA模块：**Cmake完成初始编译编译后，在出现的红色新选项中勾选<code>WITH_CUDA</code>，<code>OPENCV_DNN_CUDA</code>，<code>ENABLE_FAST_MATH</code></li>
<li>**配置OpenCV contrib：**在出现的红色新选项中找到<code>OPENCV_EXTRA_MODULES_PATH</code>，并将Value配置为第一步解压的OpenCV contrib目录下的<code>modules</code>目录路径</li>
<li><strong>配置OpenCV的Python接口</strong>：（1）点击<code>Add Entry</code>新增BUILD_opencv_python3和BUILD_opencv_python2两项，其中BUILD_opencv_python3设置value为true，另一个设置为false；（2）搜索并配置<code>PYTHON3_EXECUTABLE</code>、<code>PYTHON3_INCLUDE_DIR</code>、<code>PYTHON3_LIBRARY</code>、<code>PYTHON3_NUMPY_INCLUDE_DIRS</code>、<code>PYTHON3_PACKAGES_PATH</code>，配置结果看下图<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li>
<li>**其他配置项：**搜索并勾选<code>OPENCV_ENABLE_NONFREE</code>，<code>build_opencv_world</code></li>
<li>再次点击<code>COnfigure</code>，在新增红色配置项中找到<code>CUDA_ARCH_BIN</code>，删除小于显卡计算能力的数值，计算能力可以在<a href="https://developer.nvidia.com/zh-cn/cuda-gpus"></a>找到。</li>
<li>再次点击<code>COnfigure</code>，确认日志中出现<em>Configuring done</em>后，点击<code>Generate</code></li>
</ol>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042170.png" alt="image-20210306160653041" /></p>
<h2 id="第三步使用visual-studio编译opencv"><a class="markdownIt-Anchor" href="#第三步使用visual-studio编译opencv"></a> 第三步：使用Visual studio编译opencv</h2>
<ol>
<li>点击<code>Open Project</code>或者使用<code>Visual studio</code>打开<strong><a href="http://OpenCV.sh">OpenCV.sh</a></strong></li>
<li>打开后，更改<strong>Debug</strong>模式为<strong>Release</strong>模式</li>
<li>右键点击<code>Cmake Targets</code>下的<code>ALL_BUILD</code>，并点击<code>build</code>，此步编译文件需要较长时间</li>
<li>一旦完成，右键点击<code>Install</code>，并点击<code>build</code></li>
</ol>
<p>到此，已经成功在windows10上编译了带CUDA模块的OpenCV，编译得到的文件位于<code>build\install</code>下</p>
<h2 id="第四步python及c使用"><a class="markdownIt-Anchor" href="#第四步python及c使用"></a> 第四步：Python及C++使用</h2>
<p><strong>Python端使用</strong></p>
<ol>
<li>安装OpenCV到Python，</li>
<li>新建Python文件，写入以下内容，并在终端运行，如果无误则运行成功</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看opencv信息</span></span><br><span class="line">print(cv2.getBuildInformation())</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取图片</span></span><br><span class="line">frame=cv2.imread(<span class="string">&#x27;test.jpg&#x27;</span>)</span><br><span class="line">print(frame.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment">#上传图片到GPU</span></span><br><span class="line">gpu_frame=cv2.cuda_GpuMat()</span><br><span class="line">gpu_frame.upload(frame)</span><br><span class="line"></span><br><span class="line"><span class="comment">#resize</span></span><br><span class="line">gpu_resframe=cv2.cuda.resize(gpu_frame,(<span class="number">1024</span>,<span class="number">512</span>))</span><br><span class="line">cpu_resfram=gpu_resframe.download()</span><br><span class="line">print(cpu_resfram.shape)</span><br></pre></td></tr></table></figure>
<p><strong>C++端使用</strong></p>
<ol>
<li>配置系统环境，将编译目录下的<code>install\x64\vc15\bin</code>完整路径配置到系统路径下，<mark>并重启系统</mark></li>
<li>打开visual studio，新建<code>Visual C++</code>空项目，新建文件<code>main.cpp</code>，写入下面内容</li>
<li>点击<code>生成-&gt;生成解决方案</code>，不出现错误后，运行程序，无错误即可使用OpenCV的cuda模块</li>
<li>配置OpenCV开发环境，依次点击<code>视图-&gt;其他窗口-&gt;属性窗口</code>，右键点击<code>Release | x64</code>，新建项目属性表，新建完成后双击项目该文件，进行以下配置。</li>
</ol>
<ul>
<li><strong>VC++目录-&gt;包含目录</strong>：E:\opencv-4.5.0\build_test\install\include;E:\opencv-4.5.0\build_test\install\include\opencv2;$(IncludePath)</li>
<li>**VC++目录-&gt;库目录：**E:\opencv-4.5.0\build_test\install\x64\vc15\lib;$(LibraryPath)</li>
<li>**链接器-&gt;输入：**opencv_world450.dll;%(AdditionalDependencies)</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/dnn.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/dnn/all_layers.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//读取图片</span></span><br><span class="line">	<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> image_path = <span class="string">&quot;C:\\Users\\wushaogui\\Desktop\\CCP_REPOS\\SegementModule\\SegementModule\\test.jpg&quot;</span>;</span><br><span class="line">	cv::Mat rgb_image = cv::imread(image_path, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	cv::cuda::GpuMat gpu_frame, gpu_resized;</span><br><span class="line">	<span class="comment">//上传图片到GPU</span></span><br><span class="line">	gpu_frame.upload(rgb_image);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//Resize</span></span><br><span class="line">	<span class="keyword">auto</span> input_size = cv::Size(<span class="number">1024</span>,<span class="number">512</span>);</span><br><span class="line">	cv::cuda::resize(gpu_frame, resized, input_size, <span class="number">0</span>, <span class="number">0</span>, cv::INTER_NEAREST);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//下载并保存图片</span></span><br><span class="line">	cv::Mat cpu_resized;</span><br><span class="line">	gpu_resized.download(cpu_resized);</span><br><span class="line">	cv::imwrite(<span class="string">&quot;resized_test.jpg&quot;</span>, cpu_resized);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第四步解决问题及其他需了解信息"><a class="markdownIt-Anchor" href="#第四步解决问题及其他需了解信息"></a> 第四步：解决问题及其他需了解信息</h2>
<h3 id="资源无法下载"><a class="markdownIt-Anchor" href="#资源无法下载"></a> 资源无法下载<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h3>
<p>在此次编译中，无法下载的资源有：ADE、face_landmark_model.dat、ffmpeg、ippicv、nvidia_optical_flow、xfeatures2d</p>
<p>**解决方法：**网络下载，这些文件，计算文件md5进行文件重命名后，将文件放置在编译目录下的<code>.cache</code>目录下，此次编译放置情况如下：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042047.png" alt="image-20210306150042380" /></p>
<p><strong>参考资料<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>：</strong></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/qq_37781464/article/details/110078370">win10使用vs2019从源码编译OpenCV4.5+cuda10.2+cudnn8.0的C++环境和Python环境</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/fengxinzioo/article/details/104919888">windows安装opencv4.1.1过程中ffmpeg、ippicv、face_landmark_model下载出错解决办法</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://haroonshakeel.medium.com/build-opencv-4-4-0-with-cuda-gpu-support-on-windows-10-without-tears-aa85d470bcd0">Build OpenCV 4.4.0 with CUDA (GPU) Support on Windows 10 (Without Tears) | by M. Haroon Shakeel | Medium</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://blog.csdn.net/hitpisces/article/details/104266030">Win10下编译同时支持CUDA以及Python3的OpenCV 4.2教程_吃白兔的小青菜的博客-CSDN博客</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>cuda</tag>
        <tag>windows</tag>
        <tag>opencv</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo操作命令备忘录</title>
    <url>/2021/03/06/Hexo%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98%E5%BD%95/</url>
    <content><![CDATA[<p>本文用于记录hexo常见的操作步骤，即使温习回顾</p>
<a id="more"></a>
<h2 id="hexo常见命令"><a class="markdownIt-Anchor" href="#hexo常见命令"></a> Hexo常见命令<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2>
<h3 id="新建文章"><a class="markdownIt-Anchor" href="#新建文章"></a> 新建文章</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new &lt;title&gt;</span><br><span class="line">hexo new <span class="string">&quot;post title with whitespace&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<ul>
<li>-p,–path	   自定义新文章路径</li>
<li>-r,–replace   如果存在同名文件，将其覆盖</li>
<li>-s,–slug        文章Slug，作为新文章的文件名和发布后的 URL</li>
</ul>
<p>注意：文件明包含空格时，需要用双引号括起来</p>
<h3 id="新建草稿"><a class="markdownIt-Anchor" href="#新建草稿"></a> 新建草稿</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new draft &lt;title&gt;</span><br><span class="line">hexo new draft <span class="string">&quot;draft title with whitespace&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="发布草稿"><a class="markdownIt-Anchor" href="#发布草稿"></a> 发布草稿</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo publish &lt;title&gt;</span><br><span class="line">hexo publish <span class="string">&quot;draft title with whitespace&quot;</span></span><br></pre></td></tr></table></figure>
<p>注意：title不带文件后缀<code>.md</code></p>
<h3 id="新建页面"><a class="markdownIt-Anchor" href="#新建页面"></a> 新建页面</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page --path about/me <span class="string">&quot;About me&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p>
</blockquote>
<h3 id="生成博客"><a class="markdownIt-Anchor" href="#生成博客"></a> 生成博客</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<ul>
<li>-d,–deploy            文件生成后立即部署</li>
<li>-w,–watch             监视文件改动</li>
<li>-b,-bail                   生成过程中如果发生任何未处理的异常则抛出异常</li>
<li>-f,–force                强制重新生成文件</li>
<li>-c,–concurrency  最大同时生成文件的数量，默认无限制</li>
</ul>
<h3 id="本地浏览"><a class="markdownIt-Anchor" href="#本地浏览"></a> 本地浏览</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<ul>
<li>-p,–port            重设端口</li>
<li>-s,–static          只使用静态文件</li>
<li>-l,–log               启动日记记录，使用覆盖记录格式</li>
</ul>
<h2 id="远程部署"><a class="markdownIt-Anchor" href="#远程部署"></a> 远程部署</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<ul>
<li>-g,–generate   部署之前预先生成静态文件</li>
</ul>
<h3 id="清除缓存"><a class="markdownIt-Anchor" href="#清除缓存"></a> 清除缓存</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
<blockquote>
<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)</p>
</blockquote>
<blockquote>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</p>
</blockquote>
<h3 id="查看版本"><a class="markdownIt-Anchor" href="#查看版本"></a> 查看版本</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<h2 id="hexo的yaml-front-matter"><a class="markdownIt-Anchor" href="#hexo的yaml-front-matter"></a> Hexo的YAML Front Matter<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2>
<p>文章参数列举如下：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>取值</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>标题名</td>
<td></td>
</tr>
<tr>
<td>date</td>
<td>创建日期</td>
<td></td>
</tr>
<tr>
<td>updated</td>
<td>更新日期</td>
<td></td>
</tr>
<tr>
<td>tags</td>
<td>标签</td>
<td>- 标签1<br />- 标签2<br />- 标签3</td>
</tr>
<tr>
<td>categories</td>
<td>分类</td>
<td>- 分类<br />- 子分类<br />- 子子分类</td>
</tr>
<tr>
<td>copyright</td>
<td>是否添加版权声明</td>
<td>true</td>
</tr>
<tr>
<td>top</td>
<td>是否置顶</td>
<td>true/空</td>
</tr>
<tr>
<td>description</td>
<td>文章描述</td>
<td>空</td>
</tr>
<tr>
<td>mathjax:</td>
<td>是否添加latex公式支持</td>
<td>true</td>
</tr>
</tbody>
</table>
<p><strong>参考资料：</strong></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://hexo.io/zh-cn/docs/commands">指令 | Hexo</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/nineya_com/article/details/103316683">Hexo博客发表文章、草稿、添加分类和标签_玖涯博客-CSDN博客</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>MaskRCNN</title>
    <url>/2021/02/27/MaskRCNN/</url>
    <content><![CDATA[<p>实例分割的第一个模型，创造性地结合Faster RCNN和FCN，分别完成实例的定位、分类及Mask生成，同时为了解决ROI Pooling的量化误差问题，提出ROI Align替换</p>
<a id="more"></a>
<h1 id="什么是-mask-rcnn"><a class="markdownIt-Anchor" href="#什么是-mask-rcnn"></a> 什么是 Mask RCNN?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143907.png" alt="" /></li>
<li>在 FasterRCNN]的基础上新增 FCN分割模块，黑色部分为原来的 Faster-RCNN，红色部分为在 Faster 网络上的修改。</li>
<li>另一个改进是通过 ROIAlign替换 Faster RCNN 的感兴趣区域池化(RoIPooling)，解决图像和网络输出的对齐问题，极大提升语义分割的效果</li>
<li>可以认为是目标检测 +语义分割的结合，更具体一点就：<strong>RPN+ROIAlign+Fast RCNN+ FCN</strong></li>
</ul>
<h1 id="mask-rcnn的网络结构"><a class="markdownIt-Anchor" href="#mask-rcnn的网络结构"></a> Mask RCNN的网络结构？</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143908.png" alt="" /></p>
</li>
<li>
<p><strong>骨干网络：</strong> 使用 ResNet +特征金字塔网络 (FeaturePyramidNetwork, FPN)提取多尺度的特征</p>
</li>
<li>
<p><strong>感兴趣区域的池化：</strong> 采用 ROIAlign而不是 Faster RCNN 的感兴趣区域池化(RoIPooling)</p>
</li>
<li>
<p><strong>box分类与回归：</strong> FasterRCNN一致</p>
</li>
<li>
<p><strong>object mask：</strong> 使用 FCN</p>
<h1 id="mask-rcnn使用fpn生成多尺度的特征图roialign使用哪个尺度的特征图-83n58t"><a class="markdownIt-Anchor" href="#mask-rcnn使用fpn生成多尺度的特征图roialign使用哪个尺度的特征图-83n58t"></a> Mask RCNN使用FPN生成多尺度的特征图，ROIAlign使用哪个尺度的特征图？ ^83n58t</h1>
<ul>
<li>假设 FPN 产生了特征金字[P2, P3, P4, P5, P6]，通过下列公式决定宽 w 和高 h 的 ROI 到底要从哪个 Pk 来切<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">⌊</mo><msub><mi>k</mi><mn>0</mn></msub><mo>+</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy="false">(</mo><msqrt><mrow><mi>w</mi><mi>h</mi></mrow></msqrt><mi mathvariant="normal">/</mi><mn>224</mn><mo stretchy="false">)</mo><mo fence="true">⌋</mo></mrow></mrow><annotation encoding="application/x-tex">k=\left\lfloor k_{0}+\log _{2}(\sqrt{w h} / 224)\right\rfloor
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">h</span></span></span><span style="top:-2.941095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.058904999999999985em;"><span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span></span></span></span></span></p>
</li>
<li>其中 224 表示预训练 ImageNet 图片大小，k0 表示面积为 wxh=224x224 的 ROI 所在层级，论文将 k0 设置为 p4，如果 ROI 小于 224，比如说 122x122，则使用 k0-1=4-1=3 层特征池化</li>
<li>这种做法很合理，大尺度的ROI要从低分辨率的feature map上切，有利于检测大目标，小尺度的ROI要从高分辨率的feature map上切，有利于检测小目标</li>
</ul>
<h1 id="mask-rcnn的损失函数"><a class="markdownIt-Anchor" href="#mask-rcnn的损失函数"></a> Mask RCNN的损失函数？</h1>
<ul>
<li>总的损失函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mo>+</mo><msub><mi>L</mi><mrow><mi>b</mi><mi>o</mi><mi>x</mi></mrow></msub><mo>+</mo><msub><mi>L</mi><mrow><mi>m</mi><mi>a</mi><mi>s</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L = L_{cls} + L_{box} + L_{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{cls}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示bounding box的分类损失值：使交叉熵损失(CrossEntropyLoss)</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>b</mi><mi>o</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{box}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示bounding box的回归损失值：使平滑绝对值损失(Smooth L1 Loss)</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>m</mi><mi>a</mi><mi>s</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{mask}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示mask部分的损失值：使二值交叉熵损失BCELoss ，该损失一般配合sigmoid函数使用</li>
</ul>
<h1 id="mask-rcnn的训练过程"><a class="markdownIt-Anchor" href="#mask-rcnn的训练过程"></a> Mask RCNN的训练过程？</h1>
<ul>
<li><strong>主干网络部分</strong>：将图片送入到 CNN 特征提取网络得到特征图</li>
<li><strong>RPN 部分</strong>：对特征图的每一个像素位置设定固定个数的 ROI（Anchor），然后将 ROI 区域送入 RPN 网络进行二分类 (前景和背景) 以及坐标回归，以获得精炼后的 ROI 区域</li>
<li><strong>ROIAlign 部分</strong>：对获得的 ROI 区域执 ROIAlign 操作，即先将原图和 feature map 的 pixel 对应起来，然后将不同目标的 feature map 转为相同大小的 featrue</li>
<li><strong>目标检测部分</strong>：对这些 ROI 区域进行多类别分类，得到预测的目标位置及类别</li>
<li><strong>分割部分</strong>：最后目标检测得到的所有目标输入 FCN，得到每个目标的掩码预测结果</li>
</ul>
<h1 id="mask-rcnn-如何对目标进行分割预测"><a class="markdownIt-Anchor" href="#mask-rcnn-如何对目标进行分割预测"></a> Mask RCNN 如何对目标进行分割预测？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143909.png" alt="" /></li>
<li>经过 ROIAlign获得 ROI 区域特征后，对每个像素进行分类，实现分割</li>
</ul>
<h1 id="mask-rcnn如何进行关键点检测任务"><a class="markdownIt-Anchor" href="#mask-rcnn如何进行关键点检测任务"></a> Mask RCNN如何进行关键点检测任务？</h1>
<ul>
<li>让Mask RCNN预测k个mask，每个mask对应一个关键点类型，比如左肩、右肘，使用cross entropy loss，鼓励网络只检测一个关键点</li>
</ul>
<h1 id="什么是roialign"><a class="markdownIt-Anchor" href="#什么是roialign"></a> 什么是ROIAlign？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143911.png" alt="MaskRCNN-20230408143911" /></li>
<li>ROIPooling 和 RoIAlign 的目的都是为了获取目标定长的特征，都是经历：原图目标-&gt;特征图区域-&gt;池化特征 2 次映射过程</li>
<li><strong>ROIPooling</strong>：映射时经历两次取整，一次是目标-&gt;特征图，一次是特征图-&gt;池化，这样的操作对语义分割这种位置敏感的模型影响较大</li>
<li><strong>RoIAlign</strong>：映射时并没有取整的过程，可以全程使用浮点数操作，最后通[[语义分割基础知识#^2ec19a|双线性插值(BilinearInterpolation)]] 计算浮点数位置的像素值 (特征值)</li>
</ul>
<h1 id="roialign如何计算池化结果"><a class="markdownIt-Anchor" href="#roialign如何计算池化结果"></a> ROIAlign如何计算池化结果？</h1>
<ul>
<li>假设模型输入是：3x512x512，经过特征提取得到512x16x16的特征，即数据下采样512/16=32倍，现有目标位置(192,296)，大小145x200 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MNC-20230408143921.png" alt="" /></li>
<li><strong>ROI 映射：</strong> 计算得到该目标在特征图上位置为：(296/32=9.25, 192/32=6)，大小为 (200/32=6.25, 145/32=4.53)，ROIAlign 保留小数 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143911-2.png" alt="" /></li>
<li>将ROI区域划分为大小相等的9个框，每个框的宽高为(6.25,4.53)/3=(2.08,1.51) <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143912.png" alt="" /></li>
<li>在每个框内取 4 个采样点，取样方法为将框横纵方向进行 3 等分，取框内的划分点作为采样点，如第一个点坐标 (X_box+(box_width/3) x1, Y_box+(box_height/3) x1)=(9.94, 6.50) 、第二个点坐标 (X_box+(box_width/3) x1, Y_box+(box_height/3) x2) =(9.94, 7.01)… <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143912-1.png" alt="" /></li>
<li><strong>计算采样点的数值</strong>：按双线性插值 的原理，按照采样点与单元中心的距离计算采样点数值，依次计算采样点值 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143913.png" alt="" /></li>
<li><strong>ROI区域池化</strong>：根据一个bin内的4个采样点，使用最大池化获得该区域的池化特征，依次使用上述方法计算，可以得到所有bin的池化结果 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143913.gif" alt="" /></li>
</ul>
<h1 id="为什么在语义分割中使用roialign而不使用roipool-the4hh"><a class="markdownIt-Anchor" href="#为什么在语义分割中使用roialign而不使用roipool-the4hh"></a> 为什么在语义分割中使用ROIAlign，而不使用ROIPool？ ^the4hh</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143914.png" alt="" /></li>
<li>如图所示，这是一个Faster-RCNN检测框架。输入一张<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>800</mn><mo>×</mo><mn>800</mn></mrow><annotation encoding="application/x-tex">800\times 800</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span></span></span></span>的图片，图片上有一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>665</mn><mo>×</mo><mn>665</mn></mrow><annotation encoding="application/x-tex">665\times 665</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">6</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">6</span><span class="mord">5</span></span></span></span>的包围框（框着一只狗）</li>
<li><strong>第一次量化：</strong> 图片经过主干网络提取特征后，特征图缩放步长（stride）为32。因此，图像和包围框的边长都是输入时的1/32。800正好可以被32整除变为25。但665除以32以后得到20.78，带有小数，于是RoI Pooling 直接将它量化成20</li>
<li><strong>第二次量化：</strong> 接下来需要把框内的特征池化<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>×</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">7\times 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>的大小，因此将上述包围框平均分割成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>×</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">7\times 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>个矩形区域。显然，每个矩形区域的边长为2.86，又含有小数。于是ROI Pooling 再次把它量化到2</li>
<li>经过这两次量化，候选区域已经出现了较明显的偏差（如图中绿色部分所示），更重要的是，该层特征图上0.1个像素的偏差，缩放到原图就是3.2个像素。那么0.8的偏差，在原图上就是接近30个像素点的差别，这一差别不容小觑</li>
</ul>
<h1 id="mask-rcnn目标分类为什么不使用类别竞争机制softmax"><a class="markdownIt-Anchor" href="#mask-rcnn目标分类为什么不使用类别竞争机制softmax"></a> Mask RCNN目标分类为什么不使用类别竞争机制(softmax)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MaskRCNN-20230408143914-1.png" alt="MaskRCNN-20230408143914-1" /></li>
<li>使用sigmoid(二分类)和使用softmax(多类别分类)的AP相差很大，证明了分离类别和mask的预测是很有必要的</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>实例分割</tag>
      </tags>
  </entry>
  <entry>
    <title>DeepPose：Human Pose Estimation via Deep Neural Networks</title>
    <url>/2021/02/23/DeepPose%EF%BC%9AHuman%20Pose%20Estimation%20via%20Deep%20Neural%20Networks/</url>
    <content><![CDATA[<p>DeepPose 是人体姿势估计 (HPE)的鼻祖，类似 AlexNet 对于 CNN 的作用。DeepPose 不构建关键点之间的关系，直接利用强大的 DCNN 回归出所有关键点 (x, y)</p>
<a id="more"></a>
<h1 id="什么是-deeppose"><a class="markdownIt-Anchor" href="#什么是-deeppose"></a> 什么是 DeepPose ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepPose-20230417221730.png" alt="" /></li>
<li>DeepPose 是人体姿势估计 (HPE)的鼻祖，类似 AlexNet 对于 CNN 的作用。DeepPose 不构建关键点之间的关系，直接利用强大的 DCNN 回归出所有关键点 (x, y)，因此也只能对<strong>单目标</strong>的关键点进行分析</li>
<li>为提高性能，DeepPose训练一个级联的姿态回归器。在第一个阶段，先粗略的估计出部分的姿态轮廓，然后在下个阶段，将通过已知关键点位置不断的优化其他关键点的位置。每个stage都使用已经预测的关键点来切出基于这个关键点的邻域，这个子图像将被用于接下来的网络输入，而接下来的网络就会看到更高分辨率的图像，最终达到更好的精确率</li>
</ul>
<h1 id="deeppose-的网络结构"><a class="markdownIt-Anchor" href="#deeppose-的网络结构"></a> DeepPose 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepPose-20230417221730.png" alt="" /></li>
<li>DeepPose 使用 CNN 提取特征，然后直接按关键点 2 倍输出预测</li>
<li>为提高性能，DeepPose 还训练一个级联的姿态回归器，不断将预测区域放大分辨率训练下一个CNN</li>
</ul>
<h1 id="deeppose-的样本构造"><a class="markdownIt-Anchor" href="#deeppose-的样本构造"></a> DeepPose 的样本构造？</h1>
<ul>
<li>由于关节坐标是绝对图像坐标，因此需要根据人体框大小将它们标准化。假设框由中心位置、宽和高定义 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>b</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>h</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b=(b_c,b_w,b_h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则关键点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 按以下公式进行归一化<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">;</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>w</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>h</mi></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>b</mi><mi>c</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">N(y_i;b)=\begin{bmatrix}1/b_w&amp;&amp;0\\ 0&amp;&amp;1/b_h\end{bmatrix}\left(y_i-b_c\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.4499999999999997em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.2499999999999996em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
</li>
<li><strong>为了简洁，将人体框认定为图片（即按照图片大小进行归一化）</strong>，针对 gt 关键点构建训练标签，驱动网络学习</li>
</ul>
<h1 id="deeppose-的级联回归器"><a class="markdownIt-Anchor" href="#deeppose-的级联回归器"></a> DeepPose 的级联回归器？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepPose-20230417222640.png" alt="" /></li>
<li>上图是三级级联网络预测姿态 (红色)和 ground truth（绿色）</li>
<li>训练一个级联的姿态回归器。在第一个阶段，先粗略的估计出部分的姿态轮廓，然后在下个阶段，将通过已知关键点位置不断的优化其他关键点的位置。每个stage都使用已经预测的关键点来切出基于这个关键点的邻域，这个子图像将被用于接下来的网络输入，而接下来的网络就会看到更高分辨率的图像，最终达到更好的精确率</li>
</ul>
<h1 id="deeppose-的损失函数"><a class="markdownIt-Anchor" href="#deeppose-的损失函数"></a> DeepPose 的损失函数？</h1>
<ul>
<li>不是用的分类损失，而是使用线性回归损失，预测的关键点和ground-true 的 L2-loss</li>
</ul>
<p>参考：</p>
<ol>
<li>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/424166966">DeepPose全面解析（原理+代码+Colab） - 知乎</a></li>
</ul>
</li>
<li><a href="https://blog.csdn.net/Anderson_Y/article/details/89549638">人体姿态估计-DeepPose_mysticalwing的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/u014625530/article/details/85010882">【姿态估计】DeepPose: 基于深度神经网络的人体姿态估计 Human Pose Estimation via Deep Neural Networks_deep pose_hyczkg的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/header_zzj/article/details/116706719">姿态识别入门 DeepPose: Human Pose Estimation via Deep Neural Networks_header_zzj的博客-CSDN博客</a></li>
<li><a href="https://www.zhihu.com/tardis/zm/art/106760005?source_id=1005">Site Unreachable</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>人体姿态估计</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用tensorflowServing进行模型部署</title>
    <url>/2021/02/22/%E5%A6%82%E4%BD%95%E7%94%A8tensorflowServing%E8%BF%9B%E8%A1%8C%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>TensorFlow Serving是用于机器学习的灵活，高性能的服务系统，针对生产环境而设计。 TensorFlow服务 可以轻松部署新算法和实验，同时保持不变服务器体系结构和API。TensorFlow Serving开箱即用 与TensorFlow模型集成，但可以轻松扩展以服务于其他  模型类型</p>
<a id="more"></a>
<h1 id="关键概念"><a class="markdownIt-Anchor" href="#关键概念"></a> 关键概念</h1>
<h2 id="key-conception"><a class="markdownIt-Anchor" href="#key-conception"></a> Key Conception</h2>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082031214.svg" alt="serving_architecture" /></p>
<h3 id="loaders"><a class="markdownIt-Anchor" href="#loaders"></a> Loaders</h3>
<p>Loaders管理Servables的生命周期。Loader API 是一种支持独立于特定算法，数据或产品用例的通用基础架构。具体来说，Loaders标准化了用于加载和卸载Servable的API。</p>
<h3 id="sources"><a class="markdownIt-Anchor" href="#sources"></a> Sources</h3>
<p>Sources 是可以寻找和提供 Servables 的模块，每个 Source 提供了0个或者多个Servable streams，对于每个Servable stream，Source 都会提供一个Loader实例。</p>
<h3 id="managers"><a class="markdownIt-Anchor" href="#managers"></a> Managers</h3>
<p>管理 Servable 的整个的生命周期，包括：</p>
<ul>
<li>loading Servables</li>
<li>serving Servables</li>
<li>unloading Servables</li>
</ul>
<p>Managers监听Sources并跟踪所有版本。Managers尝试满足、响应Sources的请求，但是如果所请求的资源不可用，可能会拒绝加载相应版本。Managers也可以推迟“卸载”。例如，Managers可能会等待到较新的版本完成加载之后再卸载（基于保证始终至少加载一个版本的策略）。</p>
<h3 id="servables"><a class="markdownIt-Anchor" href="#servables"></a> Servables</h3>
<p>Servable是Tensorflow Serving的核心抽象，是客户端用于执行计算的基础对象,其大小和粒度是灵活的。Tensorflow  serving可以在单个实例的生命周期内处理一个或多个版本的Servable，这样既可以随时加载新的算法配置，权重或其他数据；也能够同时加载多个版本的Servable，支持逐步发布和实验。由此产生另外一个概念：Servable stream，即是指Servable的版本序列，按版本号递增排序。Tensorflow Serving 将 model  表示为一个或者多个Servables，一个Servable可能对应着模型的一部分，例如，a large lookup table 可以被许多  Tensorflow Serving 共享。另外，Servable不管理自己的生命周期</p>
<h3 id="core"><a class="markdownIt-Anchor" href="#core"></a> Core</h3>
<p>Tensorflow Serving core 负责管理Servables的Lifecycle和metrics，将Servables和loaders看作黑箱(opaque objects)。</p>
<p>广义地说：</p>
<ol>
<li>Sources create Loaders for Servable Versions.</li>
<li>Loaders are sent as Aspired Versions to the Manager, which loads and serves them to client requests.</li>
</ol>
<p>例子：</p>
<ol>
<li>Source 为指定的服务(磁盘中检测模型权重的新版本)创建Loader，Loader里包含了服务所需要的元数据（模型）；</li>
<li>Source 使用回调函数通知 Manager 的 Aspired Version(Servable version的集合);</li>
<li>Manager 根据配置的Version Policy决定下一步的操作（是否 unload 之前的Servable，或者 load 新的Servable）；</li>
<li>如果 Manager 判定是操作安全的，就会给 Loader 要求的resource并让 Loader 加载新的版本;</li>
<li>客户端向 Manager 请求服务，可以指定服务版本或者只是请求最新的版本。Manager 返回服务端的处理结果;</li>
</ol>
<h2 id="extensibility"><a class="markdownIt-Anchor" href="#extensibility"></a> Extensibility</h2>
<p>Tensorflow Serving提供了几个可扩展的entry point，用户可以在其中添加自定义功能。</p>
<h3 id="version-policy"><a class="markdownIt-Anchor" href="#version-policy"></a> Version Policy</h3>
<p>Version Policy(版本策略)可以指定单个Servable stream中的版本加载和卸载顺序。它包括Availability Preserving Policy（在卸载旧版本之前加载并准备好新版本）和Resource Preserving Policy（在加载新版本之前先卸载旧版本）。</p>
<h3 id="source"><a class="markdownIt-Anchor" href="#source"></a> Source</h3>
<p>New Sources可以支持新的文件系统，云产品和算法后端，这主要和创建自定义Source有关。</p>
<h3 id="loaders-2"><a class="markdownIt-Anchor" href="#loaders-2"></a> Loaders</h3>
<p>Loaers是添加算法、数据后端的扩展点。Tensorflow就是这样一种算法后端。例如，用户将实现一个新的Loader，以便对新的Servable机器学习模型实例的访问和卸载。</p>
<h3 id="batcher"><a class="markdownIt-Anchor" href="#batcher"></a> Batcher</h3>
<p>将多个请求批处理为单个请求可以显着降低计算成本，尤其是在存在诸如GPU的硬件加速器的情况下。Tensorflow Serving包括一个请求批处理小部件，它允许客户端轻松地将请求中特定类型的计算进行批量处理。</p>
<h1 id="系统环境搭建"><a class="markdownIt-Anchor" href="#系统环境搭建"></a> 系统环境搭建</h1>
<h2 id="系统及软硬件说明"><a class="markdownIt-Anchor" href="#系统及软硬件说明"></a> 系统及软硬件说明</h2>
<p><strong>系统</strong>：Ubuntu16.04</p>
<p><strong>软件</strong></p>
<ul>
<li>驱动 450.23.05</li>
<li>cuda 11.1</li>
<li>cudnn 8.0.5</li>
<li>tensorflow nightly-gpu(2.4)</li>
<li>python 3.7.9</li>
</ul>
<p>硬件</p>
<ul>
<li>RTX 3090</li>
</ul>
<h2 id="导出keras模型"><a class="markdownIt-Anchor" href="#导出keras模型"></a> 导出Keras模型</h2>
<p>将keras中以<code>model.save(filepath)</code>保存的模型h5文件，转为tensorflow的xx格式，加载模型时，使用✔️<code>tf.keras.models.load_model</code>而不是❌<code>keras.models.load_model</code>，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先使用tf.keras的load_model来导入模型h5文件</span></span><br><span class="line">model_path = <span class="string">&#x27;v3_resnet50_unet.h5&#x27;</span></span><br><span class="line">model = tf.keras.models.load_model(model_path, custom_objects=dependencies)</span><br><span class="line">model.save(<span class="string">&#x27;deploy/tfs/0&#x27;</span>, save_format=<span class="string">&#x27;tf&#x27;</span>)  <span class="comment"># 导出tf格式的模型文件</span></span><br></pre></td></tr></table></figure>
<p>导出之后，有以下目录结构</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082032836.png" alt="image-20210205165552193" /></p>
<p>导出之后，使用以下命令查看模型的signature、input、output，后续客户端调用需要这些信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">saved_model_cli show --dir tfs/0/ --all</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">signature_def[&#39;serving_default&#39;]:</span><br><span class="line">  The given SavedModel SignatureDef contains the following input(s):</span><br><span class="line">    inputs[&#39;input_1&#39;] tensor_info:</span><br><span class="line">        dtype: DT_FLOAT</span><br><span class="line">        shape: (-1, 512, 1024, 3)</span><br><span class="line">        name: serving_default_input_1:0</span><br><span class="line">  The given SavedModel SignatureDef contains the following output(s):</span><br><span class="line">    outputs[&#39;activation_49&#39;] tensor_info:</span><br><span class="line">        dtype: DT_FLOAT</span><br><span class="line">        shape: (-1, 524288, 1)</span><br><span class="line">        name: StatefulPartitionedCall:0</span><br><span class="line">  Method name is: tensorflow&#x2F;serving&#x2F;predict</span><br></pre></td></tr></table></figure>
<p>以上可以确定，signature、input、output分别为：serving_default，input_1，activation_49</p>
<p><strong>saved_model_cli</strong>为tensorflow的python工具包，位于<code>tensorflow/python/tools/saved_model_cli.py</code>下，一般安装了tensorflow，可以直接找到该命令。</p>
<h2 id="docker部署模型"><a class="markdownIt-Anchor" href="#docker部署模型"></a> Docker部署模型</h2>
<h3 id="拉取tfs的docker镜像"><a class="markdownIt-Anchor" href="#拉取tfs的docker镜像"></a> 拉取tfs的docker镜像</h3>
<p><strong>1.安装docker</strong></p>
<p>安装过程参考官方安装文档<a href="https://docs.docker.com/engine/install/ubuntu/">Install Docker Engine on Ubuntu</a></p>
<p><strong>2.安装nvidia-docker</strong></p>
<p>在docker上安装nvidia插件，以便使得应用在GPU上运行，安装过程参考：<a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker">Installation Guide</a></p>
<p><strong>3.拉取tfs镜像</strong></p>
<p><a href="https://hub.docker.com/r/tensorflow/serving/tags/?page=1&amp;ordering=last_updated">docker官网</a>上包含不同版本的tfs镜像，根据需求需要版本，使用以下命令拉取tfs镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker pull tensorflow/serving:nightly-gpu</span><br></pre></td></tr></table></figure>
<h3 id="启动tfs容器"><a class="markdownIt-Anchor" href="#启动tfs容器"></a> 启动tfs容器</h3>
<p>使用以下命令启动tfs容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nvidia-docker run -p 8500:8500  \</span><br><span class="line">  -v <span class="string">&quot;[path]/tfs:/models/resnet50_unet&quot;</span> \</span><br><span class="line">  -e MODEL_NAME=resnet50_unet \</span><br><span class="line">  -e CUDA_VISIBLE_DEVICES=1 \</span><br><span class="line">  -t 9e73a1470b72&amp;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其中9e73a1470b72为tfs镜像的id，可通过docker image ls查看</p>
</blockquote>
<p>tfs容器可用参数解释：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--port &#x3D; 8500                     用于侦听gRPC API的端口</span><br><span class="line">--rest_api_port &#x3D; 0               用于侦听HTTP &#x2F; REST API的端口。如果设置为零，将不会导出HTTP </span><br><span class="line">                                    &#x2F; REST API。此端口必须与--port中指定的端口不同。</span><br><span class="line">--rest_api_num_threads &#x3D; 160      用于HTTP &#x2F; REST API处理的线程数。如果未设置，</span><br><span class="line">                                    将根据CPU数量自动设置。</span><br><span class="line">--rest_api_timeout_in_ms &#x3D; 30000  HTTP &#x2F; REST API调用超时。</span><br><span class="line">--enable_batching &#x3D; false bool    启用批处理</span><br><span class="line">--batching_parameters_file &#x3D;“”    字符串如果非空，请从提供的文件名读取ascii BatchingParameters </span><br><span class="line">                                    protobuf，并使用包含的值代替默认值。</span><br><span class="line">--model_config_file &#x3D;“”           字符串如果非空，请从提供的文件名读取ascii ModelServerConfig</span><br><span class="line">                                    协议，然后在该文件中提供模型。此配置文件可用于指定要使用的</span><br><span class="line">                                    多个模型以及其他高级参数，包括非默认版本策略。 </span><br><span class="line">                                   （如果使用了--model_name和--model_base_path，则将被忽略。）</span><br><span class="line">--model_name &#x3D;“ default”          模型的字符串名称（如果设置了--model_config_file标志，则忽略</span><br><span class="line">--model_base_path &#x3D;“”             导出的字符串路径（如果设置了--model_config_file标志，</span><br><span class="line">                                    则忽略该字符串，否则为必需）</span><br><span class="line">--file_system_poll_wait_seconds &#x3D; 1 以秒为单位的两次新模型版本的文件系统每次轮询之间的间隔</span><br><span class="line">--flush_filesystem_caches&#x3D;true bool 如果为true（默认值），则在所有可服务对象的初始加载之后以及</span><br><span class="line">                                      随后的每个可服务对象重新加载之后（如果加载线程数为1），</span><br><span class="line">                                      将刷新文件系统缓存。如果在加载可服务对象之后访问模型文件，</span><br><span class="line">                                      则可以减少模型服务器的内存消耗，并以潜在的高速缓存未命中为                                       代价。</span><br><span class="line">--tensorflow_session_parallelism&#x3D;0  用于运行Tensorflow会话的线程数。默认情况下自动配置。请注意，</span><br><span class="line">                                      如果--platform_config_file为非空，则将忽略此选项。</span><br><span class="line">--ssl_config_file &#x3D;“”               字符串如果非空，请从提供的文件名读取ascii SSLConfig协议</span><br><span class="line">                                      并设置安全的gRPC通道</span><br><span class="line">--platform_config_file &#x3D;“”         字符串如果非空，请从提供的文件名读取ascii PlatformConfigMap </span><br><span class="line">                                      protobuf，然后使用该平台配置而不是Tensorflow平台。 </span><br><span class="line">                                      （如果使用，则--enable_batching将被忽略。）</span><br><span class="line">--per_process_gpu_memory_fraction&#x3D;0.00 float每个进程占用GPU内存空间的分数，</span><br><span class="line">                                         该值介于0.0和1.0之间（默认值为0.0）。如果为1.0，则服务</span><br><span class="line">                                         器将在服务器启动时分配所有内存;如果为0.0，</span><br><span class="line">                                         则Tensorflow将自动选择一个值。</span><br><span class="line">--saved_model_tags &#x3D;“ serve”        字符串对应于要从SavedModel加载的元图def的逗号分隔的标记集。</span><br><span class="line">--grpc_channel_arguments &#x3D;“”        字符串要传递给grpc服务器的参数的逗号分隔列表。 </span><br><span class="line">                                     （例如grpc.max_connection_age_ms &#x3D; 2000）</span><br><span class="line">--enable_model_warmup &#x3D; true bool   启用模型预热，该预热在加载时触发延迟初始化（例如TF优化），</span><br><span class="line">                                      以减少第一个请求的延迟。</span><br><span class="line">--version &#x3D; false bool              显示版本</span><br></pre></td></tr></table></figure>
<p><strong>客户端的编写</strong></p>
<p>基于Python编写客户端时，需要安装tensorflow_serving、grpc库包</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> grpc</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os.path <span class="keyword">as</span> ops</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tensorflow_serving.apis <span class="keyword">import</span> predict_pb2, prediction_service_pb2_grpc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_server_grpc</span>(<span class="params">img_resized, server_url</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    用于向TensorFlow Serving服务请求推理结果的函数。</span></span><br><span class="line"><span class="string">    :param img_resized: 经过预处理的待推理图片数组，numpy array，shape：(h, w, 3)</span></span><br><span class="line"><span class="string">    :param server_url: TensorFlow Serving的地址加端口，str，如：&#x27;0.0.0.0:8500&#x27; </span></span><br><span class="line"><span class="string">    :return: 模型返回的结果数组，numpy array</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># Request.</span></span><br><span class="line">    channel = grpc.insecure_channel(server_url)</span><br><span class="line">    stub = prediction_service_pb2_grpc.PredictionServiceStub(channel)</span><br><span class="line">    request = predict_pb2.PredictRequest()</span><br><span class="line">    request.model_spec.name = <span class="string">&quot;resnet50_unet&quot;</span>  <span class="comment"># 模型名称，启动容器命令的model_name参数</span></span><br><span class="line">    request.model_spec.signature_name = <span class="string">&quot;serving_default&quot;</span>  <span class="comment"># 签名名称，刚才叫你记下来的</span></span><br><span class="line">    <span class="comment"># &quot;input_1&quot;是你导出模型时设置的输入名称，刚才叫你记下来的</span></span><br><span class="line">    request.inputs[<span class="string">&quot;input_1&quot;</span>].CopyFrom(</span><br><span class="line">        tf.make_tensor_proto(img_resized, shape=[<span class="number">1</span>, ] + <span class="built_in">list</span>(img_resized.shape)))</span><br><span class="line">    <span class="comment"># print(request)</span></span><br><span class="line">    </span><br><span class="line">    response = stub.Predict(request, <span class="number">5.0</span>)  <span class="comment"># 5 secs timeout</span></span><br><span class="line">    <span class="keyword">return</span> np.asarray(response.outputs[<span class="string">&quot;activation_49&quot;</span>].float_val) <span class="comment"># fc2为输出名称，刚才叫你记下来的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    img=cv2.imread([imgpath_xx],cv2.COLOR_BGR2RGB)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#预处理</span></span><br><span class="line">    res_image=cv2.resize(img,(<span class="number">1024</span>,<span class="number">512</span>))</span><br><span class="line">    res_image = res_image / <span class="number">255</span></span><br><span class="line">    res_image=res_image.astype(<span class="string">&#x27;float32&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#向tfs发送请求</span></span><br><span class="line">    port=<span class="string">&#x27;8500&#x27;</span></span><br><span class="line">    server_url = <span class="string">r&#x27;0.0.0.0:&#x27;</span>+port</span><br><span class="line">    response=request_server_grpc(res_image, server_url) <span class="comment">#调用服务端</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#处理返回结果</span></span><br><span class="line">    predict=response.copy()</span><br><span class="line">    <span class="comment">#....后处理</span></span><br></pre></td></tr></table></figure>
<h3 id="web服务"><a class="markdownIt-Anchor" href="#web服务"></a> Web服务</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TensorFlow模型的计算图，一般输入的类型都是张量，你需要提前把你的图像、文本或者其它数据先进行预处理，转换成张量才能输入到模型当中。而一般来说，这个数据预处理过程不会写进计算图里面，因此当你想使用TensorFlow Serving的时候，需要在客户端上写一大堆数据预处理代码，然后把张量通过gRPC发送到serving，最后接收结果。现实情况是你不可能要求每一个用户都要写一大堆预处理和后处理代码，用户只需使用简单POST一个请求，然后接收最终结果即可。因此，这些预处理和后处理代码必须由一个“中间人”来处理，这个“中间人”就是Web服务。</span><br></pre></td></tr></table></figure>
<p>可以使用Tornado来搭建web服务</p>
<h3 id="版本管理"><a class="markdownIt-Anchor" href="#版本管理"></a> 版本管理</h3>
<p><em>待完善</em></p>
<h2 id="应用例子"><a class="markdownIt-Anchor" href="#应用例子"></a> 应用例子</h2>
<blockquote>
<p>例子来源于美团技术团队<a href="https://tech.meituan.com/2018/10/11/tfserving-improve.html">基于TensorFlow Serving的深度学习在线预估</a></p>
</blockquote>
<p>该例子针对广告精排的业务场景，使用tfs进行模型部署，针对高速的推断进行逐步的优化，并突破现有tfs的束缚，解决模型切换的毛刺问题，使得tfs部署后在性能上满足业务场景</p>
<p><strong>性能优化措施</strong></p>
<ul>
<li>
<p>请求端优化：使用OpenMP多线程并行处理请求，时间从5ms降低到2ms</p>
</li>
<li>
<p>构建模型的ops优化：分析构建模型的ops中的耗时操作，将其分离出去，或者使用低阶API替代高阶API</p>
</li>
<li>
<p>XLA,JIT优化：优化Tensorflow的计算图，剪除荣誉的计算</p>
</li>
</ul>
<p><strong>模型切换毛刺问题</strong></p>
<p>模型切换时，大量的请求超时，原因有两个：一是更新、加载模型和处理请求的线程共用线程池，切换模型时无法处理请求；二是模型采用Lazy Initialization加载，第一次请求需要等待计算图初始化。</p>
<p>问题一的解决办法：</p>
<p>将<code>uint32 num_load_threads = 0; uint32 num_unload_threads = 0;</code>设置为1，</p>
<p>问题2的解决办法：</p>
<p>模型加载后进行一次预热</p>
<p><strong>参考资料</strong></p>
<p><a href="://blog.csdn.net/jeffery0207/article/details/86072456">Tensorflow Serving部署tensorflow、keras模型详解_jeffery0207的博客-CSDN博客</a><br />
<a href="://zhuanlan.zhihu.com/p/52096200">TensorFlow Serving + Docker + Tornado机器学习模型生产级快速部署 - 知乎</a><br />
<a href="://tensorflow.google.cn/tfx/serving/signature_defs?hl=en">SignatureDefs in SavedModel for TensorFlow Serving  |  TFX</a><br />
<a href="://zhuanlan.zhihu.com/p/96917543">使用tensorflow serving部署keras模型（tensorflow 2.0.0） - 知乎</a><br />
<a href="://tech.meituan.com/2018/10/11/tfserving-improve.html">基于TensorFlow Serving的深度学习在线预估 - 美团技术团队</a><br />
<a href="://www.jianshu.com/p/afe80b2ed7f0">TensorFlow Serving入门 - 简书</a><br />
<a href="://blog.csdn.net/weixin_40922744/article/details/102872607">TensorFlow Serving 入门教程（Windows）_I’m George 的博客-CSDN博客</a><br />
<a href="://blog.csdn.net/leiflyy/article/details/110003671">TensorFlow Serving 使用 及 部署_Eric’s Blog-CSDN博客</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux上利用gitee为Hexo配置图床服务</title>
    <url>/2021/02/21/Hexo%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>本文通过小书匠为hexo搭建图床服务，图床搭建在gitee中，国内访问速度可以</p>
<a id="more"></a>
<p>搭建的步骤主要分为两个步骤</p>
<h2 id="新建图床仓库并获取令牌"><a class="markdownIt-Anchor" href="#新建图床仓库并获取令牌"></a> 新建图床仓库并获取令牌</h2>
<p><strong>新建仓库</strong></p>
<p>打开gitee，新建一个<code>公开的</code>仓库，用于做图床的存储库</p>
<p><strong>获得令牌</strong></p>
<p>令牌运行应用自行上传图片到gitee，所以需要提前获得，在gitee个人设置选项找到<code>私人令牌</code>，按下图配置新建一个令牌</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044872.png" alt="image-20210221172720292" /></p>
<h2 id="配置markdown编辑器"><a class="markdownIt-Anchor" href="#配置markdown编辑器"></a> 配置Markdown编辑器</h2>
<h3 id="配置小书匠"><a class="markdownIt-Anchor" href="#配置小书匠"></a> 配置小书匠<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h3>
<p>打开小书匠的配置界面，选择绑定，添加一个<code>码云图床</code>，出现以下添加界面</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044149.png" alt="" /></p>
<h2 id="配置typora"><a class="markdownIt-Anchor" href="#配置typora"></a> 配置Typora<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h2>
<p>打开Typora偏好设置，依次配置下面内容：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044237.png" alt="image-20210221173149180" /></p>
<p>第5步需要下载<code>PicGo-Core</code>，耐心等到下载完成；</p>
<p>第6步配置文件按以下配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;current&quot;</span>: <span class="string">&quot;gitee&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;gitee&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gitee&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;branch&quot;</span>: <span class="string">&quot;master&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;customPath&quot;</span>: <span class="string">&quot;yearMonth&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;customUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;PicGo/&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;repo&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="comment">//用户名/仓库名称</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;xxxx&quot;</span> <span class="comment">// gitee上面的私人令牌</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;picgo-plugin-gitee-uploader&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>配置文件的<code>repo</code>在仓库的浏览地址找到</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082044729.png" alt="image-20210221174346189" /></p>
<p>配置文件的<code>path</code>为仓库下的一个文件夹，<code>token</code>为第一步申请的</p>
<p>点击第7步前需要安装picgo的<code>gitee-uploader</code>插件，安装下面的命令安装<code>gitee-uploader</code>插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\%用户名%\AppData\Roaming\Typora\picgo\win64</span><br><span class="line">picgo.exe install gitee-uploader</span><br><span class="line">picgo.exe install super-prefix</span><br></pre></td></tr></table></figure>
<p>点击第7步，出现下面提示，则配置成功</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082045314.png" alt="image-20210221175128485" /></p>
<p>注意：在linux上已经试过用<code>PicGo-2.2.2.AppImage</code>配置<code>Typora</code>，但是出现一个难以忍受的bug，图片上传成功后居然不重命名，其实图片链接已经保存在粘贴板中，需要手动复制上去</p>
<p><strong>参考资料：</strong></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/qq_39231769/article/details/96709675">无水印上传本地图片到网络获取地址+小书匠使用 +github和 七牛云 图床绑定–菜鸟小回</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/in_the_road/article/details/105733292">Typora自动上传图片配置，集成PicGo-Core，文件以时间戳命名</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>CornerNet：Detecting Objects as Paired Keypoints</title>
    <url>/2021/02/21/CornerNet%EF%BC%9ADetecting%20Objects%20as%20Paired%20Keypoints/</url>
    <content><![CDATA[<p>通过预测图片目标的<strong>左上角（top-left corner）点</strong>、<strong>右下角 (bottom-right corner) 点</strong>坐标实现对物体的检测</p>
<a id="more"></a>
<h1 id="什么是-cornernet"><a class="markdownIt-Anchor" href="#什么是-cornernet"></a> 什么是 CornerNet?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CornerNet-20230408152622-1.png" alt="CornerNet-20230408152622-1" /></li>
<li>通过预测图片目标的<strong>左上角（top-left corner）点</strong>、<strong>右下角 (bottom-right corner) 点</strong>坐标实现对物体的检测</li>
<li>为每个预测点分配一个 embedding vector，同一个目标的 vector 的距离较小，不同物体的 vector 的距离较大，以便实现左上角与右下角配对</li>
</ul>
<h1 id="cornernet-的网络结构"><a class="markdownIt-Anchor" href="#cornernet-的网络结构"></a> CornerNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CornerNet-20230408152841.png" alt="" /></li>
<li>CornerNet 的主干网络是 2 个Hourglass组成，其中下采样不使用 pooling 实现实现，而是通过 stride=2 实现</li>
<li><strong>输入</strong>：输入图片，(1, 3, 416, 416)</li>
<li><strong>输出</strong>：<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-08%2008.54.46.excalidraw.png" alt="Drawing 2023-02-08 08.54.46.excalidraw" /></li>
</ul>
<h1 id="cornernet的损失函数"><a class="markdownIt-Anchor" href="#cornernet的损失函数"></a> CornerNet的损失函数？</h1>
<ul>
<li><strong>heatmaps loss：</strong> 直接使用 focal loos 计算 heatmap 的损失，所有样本均计算损失<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mtext>det </mtext></msub><mo>=</mo><mfrac><mrow><mo>−</mo><mn>1</mn></mrow><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>H</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>W</mi></munderover><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mrow><mi>c</mi><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>α</mi></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>p</mi><mrow><mi>c</mi><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><msub><mi>y</mi><mrow><mi>c</mi><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mrow><mi>c</mi><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>β</mi></msup><msup><mrow><mo fence="true">(</mo><msub><mi>p</mi><mrow><mi>c</mi><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>α</mi></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mrow><mi>c</mi><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mtext> otherwise </mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L_{\text {det }}=\frac{-1}{N} \sum_{c=1}^{C} \sum_{i=1}^{H} \sum_{j=1}^{W}\left\{\begin{array}{cc}\left(1-p_{c i j}\right)^{\alpha} \log \left(p_{c i j}\right) &amp; \text { if } y_{c i j}=1 \\\left(1-y_{c i j}\right)^{\beta}\left(p_{c i j}\right)^{\alpha} \log \left(1-p_{c i j}\right) \text { otherwise }\end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">det </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.524504em;"><span style="top:-3.684504em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.3354959999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord"> otherwise </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0245040000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.524504em;"><span style="top:-3.684504em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li><strong>offsets loss：</strong> 先使用 tag 监督信息拿到当前预测位置的 offset 值，再与监督的 offset 计算损失，仅正样本计算损失<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>o</mi><mi>f</mi><mi>f</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi mathvariant="normal">SmoothL1Loss</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">o</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi mathvariant="bold-italic">o</mi><mo>^</mo></mover><mi>k</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L_{o f f}=\frac{1}{N} \sum_{k=1}^{N} \operatorname{SmoothL1Loss}\left(\boldsymbol{o}_{k}, \hat{\boldsymbol{o}}_{k}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">S</span><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">o</span><span class="mord mathrm">t</span><span class="mord mathrm">h</span><span class="mord mathrm">L</span><span class="mord mathrm">1</span><span class="mord mathrm">L</span><span class="mord mathrm">o</span><span class="mord mathrm">s</span><span class="mord mathrm">s</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">o</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">o</span></span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
</li>
<li><strong>embeddings loss：</strong> 先使用 tag 监督信息拿到当前预测位置的 embeddings 值，然后<strong>按照配对的接近，不配对的远离计算损失</strong>，仅正样本计算损失<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>L</mi><mrow><mi>p</mi><mi>u</mi><mi>l</mi><mi>l</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mrow><mo fence="true">[</mo><msup><mrow><mo fence="true">(</mo><msub><mi>e</mi><msub><mi>t</mi><mi>k</mi></msub></msub><mo>−</mo><msub><mi>e</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence="true">(</mo><msub><mi>e</mi><msub><mi>b</mi><mi>k</mi></msub></msub><mo>−</mo><msub><mi>e</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo fence="true">]</mo></mrow><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>L</mi><mrow><mi>p</mi><mi>u</mi><mi>s</mi><mi>h</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msubsup><mo>∑</mo><mstyle scriptlevel="1"><mtable rowspacing="0.1em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="1" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="1" displaystyle="false"><mrow><mi>j</mi><mo mathvariant="normal">≠</mo><mi>k</mi></mrow></mstyle></mtd></mtr></mtable></mstyle><mi>N</mi></msubsup><mi>max</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mo>−</mo><mrow><mo fence="true">∣</mo><msub><mi>e</mi><mi>k</mi></msub><mo>−</mo><msub><mi>e</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}L_{p u l l}=\frac{1}{N} \sum_{k=1}^{N}\left[\left(e_{t_{k}}-e_{k}\right)^{2}+\left(e_{b_{k}}-e_{k}\right)^{2}\right], \\L_{p u s h}=\frac{1}{N(N-1)} \sum_{k=1}^{N} \sum_{\substack{j=1 \\j \neq k}}^{N} \max \left(0, \Delta-\left|e_{k}-e_{j}\right|\right),\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.658339em;vertical-align:-1.5791695em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0791695em;"><span style="top:-4.0791695em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25586em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999985em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25586em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span><span style="top:-2.4479185em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812310000000001em;"><span style="top:-2.3429em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.784994em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.12142em;"><span style="top:-3.1619000000000006em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span><span style="top:-2.2730200000000007em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6214199999999999em;"><span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2878940000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.784994em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8770879999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5791695em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="cornernet-如何解码模型输出的"><a class="markdownIt-Anchor" href="#cornernet-如何解码模型输出的"></a> CornerNet 如何解码模型输出的？</h1>
<ul>
<li><strong>热图（heatmaps）nms 处理</strong>：对 heatmap 进行 3x3 的池化 (pad=1)，输出保持分辨率不变，将池化后的结果与 heatmap 比较，值改变的位置就是非极大位置，将这些位置的置信度置 0，那么后续这些位置不可能作为角点，这起到非极大值抑制的作用</li>
<li><strong>选取候选角点</strong>：不分类别，从上面的 heatmp 选择 top100 个左上角和 top100右下角的位置，并根据位置预测的 offsets 调整角点位置</li>
<li><strong>根据嵌入向量 (embeddings) 配对角点</strong>：计算左上角和右下角（每个左上角都和其余 99 个右下角）位置对应的 embedings 之间的距离距离大于 0.5 、属于不同类别、座标关系不满足（左上不能大于右下）的角点不能配对</li>
<li><strong>目标检测分数</strong>：角点匹配完成后，根据每对角点的平均置信度选出 top100 对，每对平均得分作为各目标的检测分数</li>
<li><strong>目标 nms</strong>：分别对各个类别的 bbox 进行 nms 处理</li>
</ul>
<h1 id="什么是-corner-pooling"><a class="markdownIt-Anchor" href="#什么是-corner-pooling"></a> 什么是 Corner pooling?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CornerNet-20230408152549.png" alt="CornerNet-20230408152549" /></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CornerNet-20230408152549-1.png" alt="CornerNet-20230408152549-1" /></li>
<li>求解某一个点的 top-left corner pooling 时，就是以该点为起点，水平向右看遇到的最大值以及竖直向下看最大的值之和</li>
</ul>
<h1 id="cornernet-如何制作样本"><a class="markdownIt-Anchor" href="#cornernet-如何制作样本"></a> CornerNet 如何制作样本？</h1>
<ul>
<li><strong>输入</strong>：输入图片，(2, 3, 416, 416)+人工标注</li>
<li><strong>输出</strong>：
<ul>
<li>左上角 heatmap (tl_heatmaps) (2, C, 104, 104)</li>
<li>右上角 heatmap（br_heatmaps） （2, C, 104, 104)</li>
<li>左上角便签编码（tl_tags) （2, 100)</li>
<li>右上角便签编码（br_tags) （2, 100)</li>
<li>左上角 offset（tl_regrs) （2, 100, 2)</li>
<li>右上角 offset（br_regrs) （2, 100, 2)</li>
<li>前 100 个元素有需要被预测的赋值 1，否则 0 tag_masks（2, 100)</li>
</ul>
</li>
<li>C 表示目标的类别（注意：没有背景类），这个特征图的每个通道都是一个 mask，mask 的每个值（范围为 0 到 1）表示该点是顶点的分数，由高斯核生成</li>
<li>CornerNet每张图只预测前100个点，tl_tags、br_tags记录前100个预测点的<strong>坐标</strong>，计算损失时只计算前100个预测点的损失</li>
</ul>
<h1 id="什么是embedding-vector"><a class="markdownIt-Anchor" href="#什么是embedding-vector"></a> 什么是embedding vector？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CornerNet-20230408152551.png" alt="" /></li>
<li><strong>监督信息：</strong>(1) 左上角便签编码 tl_tags（2, 100)；(2) 右上角便签编码 br_tags （2, 100)</li>
<li>先使用tag监督信息拿到当前预测位置的embeddings值，然后按照配对的接近，不配对的远离计算损失</li>
</ul>
<p>参考文献：<br />
<a href="https://www.jianshu.com/p/fbbfc0a30caf">CornerNet: 将目标检测问题视作关键点检测与配对 - 简书</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
      </tags>
  </entry>
  <entry>
    <title>Strip Pooling：Rethinking Spatial Pooling for Scene Parsing</title>
    <url>/2021/02/20/Strip%20Pooling%EF%BC%9ARethinking%20Spatial%20Pooling%20for%20Scene%20Parsing/</url>
    <content><![CDATA[<p>SPM提出条形池化模块，考虑的是较长但较窄的范围，而不是整个特征图，避免了在相距较远的位置之间建立不必要的连接</p>
<a id="more"></a>
<h1 id="什么是-spm"><a class="markdownIt-Anchor" href="#什么是-spm"></a> 什么是 SPM ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPM-20230408143646.png" alt="SPM-20230408143646" /></li>
<li>SPM 认为空间池化 (NxN)虽然在捕获上下文依赖上有效，但是引入很多不必要的依赖，据此提出条形池化 (strip Pooling)，如上图 abcd 分别是 4 个场景的条形池化、空间池化、gt mask，空间池化结果、条形池化结果，比较第 1/2 行可以发现，条形池化建立的上下文依赖更加准确</li>
<li>SPM 进一步低，提出多池化模块 (Mixed Pooling module, MPM)，该模块融合了空间池化获取短程上下文依赖的能力，也有条形池化的长程依赖的能力</li>
</ul>
<h1 id="spm-的网络结构"><a class="markdownIt-Anchor" href="#spm-的网络结构"></a> SPM 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPM-20230408143646-1.png" alt="SPM-20230408143646-1" /></li>
<li>经过 DCNN 得到的 featrue map，经过<strong>水平方向</strong>、<strong>垂直方向</strong>的条形池化后得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">H\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">1\times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的 B/C，使用 1D 卷积整合特征，得到的结果还是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">H\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">1\times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>，然后分别沿<strong>水平方向、垂直方向</strong> expand，得到两个大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">H\times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的矩阵 D/E，两个矩阵进行 Element-wise add，得到矩阵 F，然后使用卷积+sigmoid 整理 F 矩阵得到 A 的上下文依赖矩阵，A 与 F 相乘，得到加权后的 featrue map</li>
</ul>
<h1 id="spm-的-mpm-模块"><a class="markdownIt-Anchor" href="#spm-的-mpm-模块"></a> SPM 的 MPM 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPM-20230408143646-2.png" alt="SPM-20230408143646-2" /></li>
<li>该模块致力于通过各种池操作汇总不同类型的上下文信息，以使特征表示更具区分性</li>
<li>提出的 MPM 由两个子模块组成，这些子模块可同时捕获不同位置之间的短距离和长距离依赖关系。对于长期依赖关系，通过水平和垂直条带池化操作来收集此类线索，对于短程依赖关系，通过全局池化来收集</li>
</ul>
<h1 id="spm-的-sp-模块比较传统池化"><a class="markdownIt-Anchor" href="#spm-的-sp-模块比较传统池化"></a> SPM 的 SP 模块比较传统池化？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPM-20230408143647.png" alt="SPM-20230408143647" /></li>
<li>上图分别是 VSP: 垂直池化、HSP：水平池化、LRD: 条形池化、SRD：普通空间池化、MPM：混合池化</li>
<li>可以看出 LRD 能更加准确定位天空在那里，而 SRD 不能做到，当然合并两者的混合池化性能更好</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>编程中的项目、文件、变量命名探究</title>
    <url>/2021/02/20/%E7%BC%96%E7%A0%81%E4%B8%AD%E5%90%84%E7%B1%BB%E5%91%BD%E5%90%8D%E6%96%B9%E5%BC%8F%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<p>命名，可以说是编码的第一步，从一个项目如何命令，一个文件如何命名，到一个类的命名，一个函数的命名都需要规范</p>
<a id="more"></a>
<h1 id="1项目的命名方式"><a class="markdownIt-Anchor" href="#1项目的命名方式"></a> 1.项目的命名方式</h1>
<p>统计了github上Google与Nvidia两家公司的部分的开源项目，发现他们的命名规则分为以下几类</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">Google</th>
<th style="text-align:center">Nvidia</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">全部小写</td>
<td style="text-align:center">tensorflow、tensorboard、tfjs</td>
<td style="text-align:center">deepops、aistore、libcudacxx</td>
</tr>
<tr>
<td style="text-align:center">小写+“-”</td>
<td style="text-align:center">model-card-toolkit、ngraph-bridge、tflite-support</td>
<td style="text-align:center">spark-rapids、framework-determinism、container-config、nvidia-gcp-samples</td>
</tr>
<tr>
<td style="text-align:center">首字母大写</td>
<td style="text-align:center">-</td>
<td style="text-align:center">TensorRT、TRTorch</td>
</tr>
<tr>
<td style="text-align:center">首字母大写+“-”</td>
<td style="text-align:center">-</td>
<td style="text-align:center">Reflex-Latency-Analyzer-Mouse-Database</td>
</tr>
<tr>
<td style="text-align:center">特殊含义的缩写（大写）</td>
<td style="text-align:center">-</td>
<td style="text-align:center">AMGX、DCGM、DALI</td>
</tr>
</tbody>
</table>
<blockquote>
<p>统计时间：2021.2.4</p>
</blockquote>
<p>从统计的数据来看，两家同时的开源项目命名以<code>全部小写</code>、<code>小写+“-”</code>为主，实际命名项目时，也建议使用这两种方式</p>
<h1 id="2python常见命名规"><a class="markdownIt-Anchor" href="#2python常见命名规"></a> 2.Python常见命名规</h1>
<blockquote>
<p>copy from <a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/#id16">Google 开源项目风格指南-Python命名</a></p>
</blockquote>
<p><strong>Python之父Guido推荐的规范</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">Type</th>
<th style="text-align:left">Public</th>
<th style="text-align:left">Internal</th>
<th>note</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Modules</td>
<td style="text-align:left">lower_with_under</td>
<td style="text-align:left">_lower_with_under</td>
<td>模块</td>
</tr>
<tr>
<td style="text-align:left">Packages</td>
<td style="text-align:left">lower_with_under</td>
<td style="text-align:left"></td>
<td>包</td>
</tr>
<tr>
<td style="text-align:left">Classes</td>
<td style="text-align:left">CapWords</td>
<td style="text-align:left">_CapWords</td>
<td>类</td>
</tr>
<tr>
<td style="text-align:left">Exceptions</td>
<td style="text-align:left">CapWords</td>
<td style="text-align:left"></td>
<td>异常</td>
</tr>
<tr>
<td style="text-align:left">Functions</td>
<td style="text-align:left">lower_with_under()</td>
<td style="text-align:left">_lower_with_under()</td>
<td>函数</td>
</tr>
<tr>
<td style="text-align:left">Global/Class Constants</td>
<td style="text-align:left">CAPS_WITH_UNDER</td>
<td style="text-align:left">_CAPS_WITH_UNDER</td>
<td>常量</td>
</tr>
<tr>
<td style="text-align:left">Global/Class Variables</td>
<td style="text-align:left">lower_with_under</td>
<td style="text-align:left">_lower_with_under</td>
<td>变量</td>
</tr>
<tr>
<td style="text-align:left">Instance Variables</td>
<td style="text-align:left">lower_with_under</td>
<td style="text-align:left">_lower_with_under (protected) or __lower_with_under (private)</td>
<td>实例变量</td>
</tr>
<tr>
<td style="text-align:left">Method Names</td>
<td style="text-align:left">lower_with_under()</td>
<td style="text-align:left">_lower_with_under() (protected) or __lower_with_under() (private)</td>
<td>方法名</td>
</tr>
</tbody>
</table>
<h1 id="c常见命名规范"><a class="markdownIt-Anchor" href="#c常见命名规范"></a> C++常见命名规范</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">对于高质量的工程，一般会做到：</span><br><span class="line">	1.代码简洁精炼，美观，可读性好，高效率，高复用，可移植性好，高内聚，低耦合，没有冗余，不符合这些原则，必须特别说明。</span><br><span class="line">    2.规范性，代码有规可循。特殊排版、特殊语法、特殊指令，必须特别说明。</span><br></pre></td></tr></table></figure>
<blockquote>
<p>摘录自：<a href="https://www.cnblogs.com/winslam/p/11147396.html">C++命名规范</a></p>
</blockquote>
<p>1.什么是低耦合、高内聚？<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p><code>低耦合</code>:耦合指的是元素与元素之间的连接或依赖程度，这里的元素包括功能、对象、系统、子系统、模块。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例如：现有元素A，B,A依赖B完成，如果B出现问题或者经过修改，A元素就不能正常工作，那么说元素A、B之间耦合</span><br></pre></td></tr></table></figure>
<p><code>高内聚</code>：或称为功能内聚，指系统中元素职责的相关性和集中程度，如果元素有高度的相关职责，而没有其他工作，这就是高内聚</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例如：只需要元素A、B共同完成计算，就可以最终得到C，在元素A、B所在范围（函数、类、模块等）内，如果没有其他元素并且A、B不参与其他计算，则认为A、B元素所在范围高内聚。</span><br></pre></td></tr></table></figure>
<p><strong>通俗理解</strong></p>
<p>耦合越弱越好，内聚越强越好，最弱的模块就是通过一个主控模块协调N个模块进行协作，最终得到结果；最强的内聚体现在功能能不能拆分、就是是否原子化。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/liyuefeilong/article/details/50560564">个人总结的一些C/C++编码规范</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>命名</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo安装Next主题</title>
    <url>/2021/02/19/Hexo%E5%AE%89%E8%A3%85Next%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p>基于github pages完成博客搭建后，已经可以正常发文了，但是文字展示不美观，本文展示如何在Linux为Hexo博客安装Next主题，并进行详细配置</p>
<a id="more"></a>
<h2 id="安装next主题"><a class="markdownIt-Anchor" href="#安装next主题"></a> 安装Next主题</h2>
<p><strong>下载主题</strong></p>
<p>在博客的目录下，运行以下命令获得Next主题</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p><strong>更新主题</strong></p>
<p>运行以下命令即可更新主题，但这会覆盖原来的自定义修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next;git pull</span><br></pre></td></tr></table></figure>
<h2 id="配置next主题"><a class="markdownIt-Anchor" href="#配置next主题"></a> 配置Next主题</h2>
<p>配置博客涉及两个配置文件，一个路径是<code>[myblog]/_config.yml</code>和<code>[myblog]/theme/next/_config.yml</code>，前一个是站点配置，后一个是主题配置。下面就分别就这两个文件进行配置：</p>
<h3 id="配置站点_configyml"><a class="markdownIt-Anchor" href="#配置站点_configyml"></a> 配置站点_config.yml</h3>
<p>打开文件<code>[myblog]/_config.yml</code>，每个配置项按如下配置</p>
<h4 id="配置站点基本信息"><a class="markdownIt-Anchor" href="#配置站点基本信息"></a> 配置站点基本信息</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 年轻人起来冲</span><br><span class="line">subtitle: <span class="string">''</span></span><br><span class="line">description: <span class="string">'害怕失败是本能，勇敢面对才是本事'</span></span><br><span class="line">keywords:</span><br><span class="line">author: 绍桂</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure>
<h4 id="主题配置"><a class="markdownIt-Anchor" href="#主题配置"></a> 主题配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<h4 id="url配置"><a class="markdownIt-Anchor" href="#url配置"></a> URL配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/'</span></span><br><span class="line">url: https://shaogui.life/</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  trailing_html: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure>
<h4 id="翻页配置"><a class="markdownIt-Anchor" href="#翻页配置"></a> 翻页配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: 8</span><br><span class="line">pagination_dir: page</span><br></pre></td></tr></table></figure>
<h3 id="配置主题_configyml"><a class="markdownIt-Anchor" href="#配置主题_configyml"></a> 配置主题_config.yml</h3>
<p>根据 Hexo 官方的推荐，不要直接修改主题的配置文件</p>
<blockquote>
<p>The file should be placed in your site folder, both <code>yml</code> and <code>json</code> are supported. <code>theme</code> inside <code>_config.yml</code> must be configured for Hexo to read <code>_config.[theme].yml</code></p>
</blockquote>
<p>而是将配置文件复制到和<code>[myblog]/_config.yml</code>同目录下，并命名为：<code>_config.next.yml</code>，在该文件上填写<strong>自己需要自定义的内容</strong>。</p>
<h4 id="网站logo配置"><a class="markdownIt-Anchor" href="#网站logo配置"></a> 网站logo配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>
<h4 id="主题风格配置"><a class="markdownIt-Anchor" href="#主题风格配置"></a> 主题风格配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>
<h4 id="菜单栏配置"><a class="markdownIt-Anchor" href="#菜单栏配置"></a> 菜单栏配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>
<p>注：||后面指的是图标，各个菜单实际显示的是中文，中英文对应配置文件位于<code>\themes\next\languages\zh-CN.yml</code>中，如果有其他菜单项可以在该文件配置其中文</p>
<h4 id="文章分类及标签"><a class="markdownIt-Anchor" href="#文章分类及标签"></a> 文章分类及标签<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h4>
<p>菜单栏中<code>categories</code>，<code>tags</code>，<code>about</code>点击后提示找不到页面，这时需要使用以下命令新建这三个页面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>
<p>运行三个命令后，均在<code>source</code>目录下生成相应的文件夹，此时菜单栏中可以打开这些项，但是没有内容，需要配置各自的<code>index.md</code></p>
<p>打开<code>source/categories/index.md</code>，添加type项</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2021-02-18 21:44:21</span><br><span class="line"><span class="built_in">type</span>: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>打开<code>source/tags/index.md</code>，添加type项</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2021-02-18 21:44:21</span><br><span class="line"><span class="built_in">type</span>: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>编辑文章时，在开头加入<code>categories</code>，<code>tags</code>项即刻对文章进行分类及打标签</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: xxx</span><br><span class="line">date: 2020-06-01 23:47:44</span><br><span class="line">tags: [xx,xx]</span><br><span class="line">categories: xx</span><br></pre></td></tr></table></figure>
<h4 id="顶部加载条"><a class="markdownIt-Anchor" href="#顶部加载条"></a> 顶部加载条</h4>
<p><strong>安装插件到Next主题</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pace themes/next/<span class="built_in">source</span>/lib/pace</span><br></pre></td></tr></table></figure>
<p><strong>开启进度条</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line">pace:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure>
<h4 id="添加访问量"><a class="markdownIt-Anchor" href="#添加访问量"></a> 添加访问量</h4>
<p>修改<code>themes/next/layout/_partials/footer.swig</code>文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">"powered-by"</span>&gt;</span><br><span class="line">    {%- <span class="built_in">set</span> next_site = <span class="string">'https://theme-next.org'</span> %}</span><br><span class="line">    {%- <span class="keyword">if</span> theme.scheme !== <span class="string">'Gemini'</span> %}</span><br><span class="line">      {%- <span class="built_in">set</span> next_site = <span class="string">'https://'</span> + theme.scheme | lower + <span class="string">'.theme-next.org'</span> %}</span><br><span class="line">    {%- endif %}</span><br><span class="line">    {{- __(<span class="string">'footer.powered'</span>, next_url(<span class="string">'https://hexo.io'</span>, <span class="string">'Hexo'</span>, {class: <span class="string">'theme-link'</span>}) + <span class="string">' &amp; '</span> + next_url(next_site, <span class="string">'NexT.'</span> + theme.scheme, {class: <span class="string">'theme-link'</span>})) }}</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p><strong>以上修改为以下：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">"powered-by"</span>&gt;</span><br><span class="line">	&lt;i class=<span class="string">"fa fa-user-md"</span>&gt;&lt;/i&gt;</span><br><span class="line">	&lt;span id=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span><br><span class="line">		本站访客数:&lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt;</span><br><span class="line">	&lt;/span&gt;</span><br><span class="line">	&lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">	&lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span><br><span class="line">		本站访问量&lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt;</span><br><span class="line">	&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4 id="返回顶部按钮"><a class="markdownIt-Anchor" href="#返回顶部按钮"></a> 返回顶部按钮</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  sidebar: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  scrollpercent: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="修改底部标签样式"><a class="markdownIt-Anchor" href="#修改底部标签样式"></a> 修改底部标签样式</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line">tag_icon: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="社交链接"><a class="markdownIt-Anchor" href="#社交链接"></a> 社交链接</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/WuShaogui || fab fa-github</span><br><span class="line">  E-Mail: wshglearn@163.com || fa fa-envelope</span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  icons_only: <span class="literal">false</span></span><br><span class="line">  transition: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="打赏配置"><a class="markdownIt-Anchor" href="#打赏配置"></a> 打赏配置</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line">reward_settings:</span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  animation: <span class="literal">true</span></span><br><span class="line">  comment: 坚持原创技术分享，您的支持将鼓励我继续创作！.</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.png</span><br><span class="line">  alipay: /images/alipay.png</span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>
<h4 id="follow_me"><a class="markdownIt-Anchor" href="#follow_me"></a> Follow_me</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">follow_me:</span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class="line">  <span class="comment">#WeChat: /images/wechat_channel.jpg || fab fa-weixin</span></span><br><span class="line">  RSS: /atom.xml || fa fa-rss</span><br></pre></td></tr></table></figure>
<h4 id="github角标"><a class="markdownIt-Anchor" href="#github角标"></a> Github角标</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line">github_banner:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  permalink: https://github.com/WuShaogui</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>
<h4 id="搜索功能"><a class="markdownIt-Anchor" href="#搜索功能"></a> 搜索功能</h4>
<p>搜索功能需要安装插件实现，使用npm管理器安装以下插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>在主题配置文件配置以下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  unescape: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  preload: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="扩增markdown的功能"><a class="markdownIt-Anchor" href="#扩增markdown的功能"></a> 扩增Markdown的功能<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h4>
<p>hexo默认的渲染插件marked功能比较少，比如不支持脚注功能，部署时，脚注会出错，可以通过安装更强的渲染插件实现功能扩展。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#卸载原始markdown渲染插件</span></span><br><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装新的markdown渲染插件</span></span><br><span class="line">npm i @upupming/hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure>
<p>修改站点的配置文件<code>[myblog]/_config.yml</code>，增加以下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Markdown config</span></span><br><span class="line">markdown_it_plus:</span><br><span class="line">  render:</span><br><span class="line">    html: <span class="literal">true</span>						</span><br><span class="line">    xhtmlOut: <span class="literal">false</span></span><br><span class="line">    breaks: <span class="literal">true</span></span><br><span class="line">    linkify: <span class="literal">true</span></span><br><span class="line">    typographer: <span class="literal">true</span></span><br><span class="line">    quotes: <span class="string">'“”‘’'</span></span><br><span class="line">  plugins:</span><br><span class="line">    - markdown-it-abbr</span><br><span class="line">    - markdown-it-footnote</span><br><span class="line">  anchors:	</span><br><span class="line">    level: 2</span><br><span class="line">    collisionSuffix: <span class="string">'v'</span></span><br><span class="line">    permalink: <span class="literal">true</span></span><br><span class="line">    permalinkClass: header-anchor</span><br><span class="line">    permalinkSide: <span class="string">'left'</span></span><br><span class="line">    permalinkSymbol: ¶</span><br></pre></td></tr></table></figure>
<p><code>plugins</code>指定需要扩展的功能，支持添加以下功能</p>
<ul>
<li><code>markdown-it-emoji</code>支持emoji，<code>:cat:</code>→`🐱</li>
<li><code>markdown-it-sub</code> 支持<code>H~2~O</code>→H2O</li>
<li><code>markdown-it-sup</code> 支持<code>X^2^</code>→X2</li>
<li><code>markdown-it-deflist</code> 支持自定义列表</li>
<li><code>markdown-it-abbr</code>支持<code>&lt;abbr&gt;</code>标签</li>
<li><code>markdown-it-footnote</code>支持引入参考文献。emmm就是上标数字，最后附上文献那种</li>
<li><code>markdown-it-ins</code>支持<code>++Inserted++</code> →Inserted， <code>~~Del~~ →</code>Del</li>
<li><code>markdown-it-mark</code>支持<code>==marked==</code>→inserted</li>
<li><code>markdown-it-katex</code><strong>支持katex公式</strong></li>
<li><code>markdown-it-toc-and-anchor</code>支持<code>@[toc]</code>生成目录</li>
</ul>
<p>使用以上扩展功能前，需使用以下命令安装该功能的插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install markdown-it-... --save</span><br></pre></td></tr></table></figure>
<p><strong>添加MathJax 数学公式支持</strong></p>
<p>在以上配置基础上，修改两个文件</p>
<h4 id="访客统计"><a class="markdownIt-Anchor" href="#访客统计"></a> 访客统计</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  total_visitors: <span class="literal">true</span></span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: <span class="literal">true</span></span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: <span class="literal">true</span></span><br><span class="line">  post_views_icon: fa fa-eye</span><br></pre></td></tr></table></figure>
<h4 id="阅读全文"><a class="markdownIt-Anchor" href="#阅读全文"></a> 阅读全文<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></h4>
<p>在文章中，使用标记<code>&lt;!-- more --&gt;</code>实现文章摘要功能，该标记前的内容为文章摘要，显示在首页上</p>
<h4 id="文章置顶"><a class="markdownIt-Anchor" href="#文章置顶"></a> 文章置顶<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></h4>
<p>两个步骤完成该操作</p>
<p><strong>更换插件</strong></p>
<p>通过以下命令更换支持置顶的插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>
<p><strong>设置置顶标志</strong></p>
<p>打开文件：<code>/blog/themes/next/layout/_macro/post.swig</code>，在<code>&lt;div class="post-meta"&gt;</code>标签下插入以下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">{% <span class="keyword">if</span> post.top %}</span><br><span class="line">   &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">   &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">   &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">{% endif %}</span><br></pre></td></tr></table></figure>
<p>往后写文章时，准备置顶的文章需要在Front-matter中添加<code>top: true</code></p>
<h4 id="文章字数统计"><a class="markdownIt-Anchor" href="#文章字数统计"></a> 文章字数统计</h4>
<p><strong>安装字数统计插件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure>
<p><strong>配置开启数字统计</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br><span class="line">  item_text_post: <span class="literal">true</span></span><br><span class="line">  item_text_total: <span class="literal">true</span></span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure>
<h4 id="文章内链接样式"><a class="markdownIt-Anchor" href="#文章内链接样式"></a> 文章内链接样式</h4>
<p>原始样式只是加一条下划线，为了更加明显显示链接，通过在文件<code>Blog/themes/next/source/css/_common/components/post/post.styl</code>添加以下样式实现</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a{</span><br><span class="line">  color: <span class="comment">#0593d3; //原始链接颜色</span></span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid <span class="comment">#0593d3; //底部分割线颜色</span></span><br><span class="line">  &amp;:hover {</span><br><span class="line">    color: <span class="comment">#fc6423; //鼠标经过颜色</span></span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid <span class="comment">#fc6423; //底部分割线颜色</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="文章结束标志"><a class="markdownIt-Anchor" href="#文章结束标志"></a> 文章结束标志</h4>
<p>通过3个步骤完成该优化</p>
<p><strong>新建结束文件</strong></p>
<p>在目录<code>Blog\themes\next\layout\_macro</code>新建文件<code>passage-end-tag.swig</code>，并添加以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    {% <span class="keyword">if</span> not is_index %}</span><br><span class="line">        &lt;div style=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;-------------本文结束&lt;i class=<span class="string">"fa fa-paw"</span>&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p><strong>配置结束文件至文章末尾</strong></p>
<p>打开文件<code>Blog\themes\next\layout\_macro\post.swig</code>，将以下代码添加到post-body之后，post-footer之前</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  {% <span class="keyword">if</span> not is_index %}</span><br><span class="line">    {% include <span class="string">'passage-end-tag.swig'</span> %}</span><br><span class="line">  {% endif %}</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p><strong>配置主题配置文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="文章添加阴影"><a class="markdownIt-Anchor" href="#文章添加阴影"></a> 文章添加阴影</h4>
<p>打开<code>\themes\next\source\css\_custom\custom.styl</code>，向里面加入以下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post {</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  }</span><br></pre></td></tr></table></figure>
<h4 id="文字底部评论"><a class="markdownIt-Anchor" href="#文字底部评论"></a> 文字底部评论</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid: xxxxxxxxxxxxxxxxx <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  appkey: xxxxxxxxxxxxxxxxx <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  notify: <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  verify: <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  placeholder: 留下你的评论吧 <span class="comment"># Comment box placeholder</span></span><br><span class="line">  avatar: mm <span class="comment"># Gravatar style</span></span><br><span class="line">  guest_info: nick,mail,link <span class="comment"># Custom comment header</span></span><br><span class="line">  pageSize: 10 <span class="comment"># Pagination size</span></span><br><span class="line">  language: <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  visitor: <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  comment_count: <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  recordIP: <span class="literal">true</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  serverURLs: <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>
<h4 id="版权声明"><a class="markdownIt-Anchor" href="#版权声明"></a> 版权声明</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: <span class="literal">true</span></span><br><span class="line">  post: <span class="literal">true</span></span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>
<h4 id="侧边栏配置"><a class="markdownIt-Anchor" href="#侧边栏配置"></a> 侧边栏配置</h4>
<p>将菜单栏配置在左边还是右边，以及大小</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/sidebar</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  position: left</span><br><span class="line">  <span class="comment"># position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  width: 240</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically.</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  display: post</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar padding in pixels.</span></span><br><span class="line">  padding: 18</span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  offset: 12</span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  onmobile: <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line">avatar:</span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  url: /images/avatar.gif</span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  rounded: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  rotated: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="rss及rss侧边栏"><a class="markdownIt-Anchor" href="#rss及rss侧边栏"></a> RSS及RSS侧边栏</h4>
<p><strong>安装rss插件</strong></p>
<p>运行下面命令安装rss插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure>
<p><strong>配置rss功能</strong></p>
<p>在<code>_config.next.yml</code>中找到rss配置项，修改为以下形式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure>
<h4 id="设置头像"><a class="markdownIt-Anchor" href="#设置头像"></a> 设置头像</h4>
<p>无</p>
<h4 id="网站背景"><a class="markdownIt-Anchor" href="#网站背景"></a> 网站背景</h4>
<p>无</p>
<h4 id="动态背景"><a class="markdownIt-Anchor" href="#动态背景"></a> 动态背景</h4>
<p>略，暂不设置，需要消耗电脑资源，并且干扰阅读</p>
<h4 id="网站运行时间"><a class="markdownIt-Anchor" href="#网站运行时间"></a> 网站运行时间</h4>
<p>打开文件<code>themes/next/layout/_partials/footer.swig</code>，添加以下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span id=<span class="string">"timeDate"</span>&gt;载入天数...&lt;/span&gt;&lt;span id=<span class="string">"times"</span>&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">createtime</span></span>() {</span><br><span class="line">        var grt= new Date(<span class="string">"03/04/2020 00:00:00"</span>);</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span><br><span class="line">        <span class="keyword">if</span>(String(hnum).length ==1 ){hnum = <span class="string">"0"</span> + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum = Math.floor(minutes); <span class="keyword">if</span>(String(mnum).length ==1 ){mnum = <span class="string">"0"</span> + mnum;}</span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum = Math.round(seconds); <span class="keyword">if</span>(String(snum).length ==1 ){snum = <span class="string">"0"</span> + snum;}</span><br><span class="line">        document.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"本站已安全运行 "</span>+dnum+<span class="string">" 天 "</span>;</span><br><span class="line">        document.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>;</span><br><span class="line">    }</span><br><span class="line">setInterval(<span class="string">"createtime()"</span>,250);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4 id="添加网易云音乐"><a class="markdownIt-Anchor" href="#添加网易云音乐"></a> 添加网易云音乐</h4>
<p>获得单曲或者歌单的<code>外链播放器</code>，将代码添加到<code>themes/next/layout/_macro/sidebar.swig</code>下，以下是一个外链播放器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=330 height=86 src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=481853876&amp;auto=1&amp;height=66"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
<h4 id="添加彩色标签"><a class="markdownIt-Anchor" href="#添加彩色标签"></a> 添加彩色标签</h4>
<p>将标签页的标签打上颜色<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
<p>新建文件：<code>themes\next\layout\tag-color.swig</code>，写入以下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type="text/javascript"&gt;</span><br><span class="line">     var alltags = document.getElementsByClassName('tag-cloud-tags');</span><br><span class="line">     var tags = alltags[0].getElementsByTagName('a');</span><br><span class="line">     for (var i = tags.length - 1; i &gt;= 0; i--) {</span><br><span class="line">       var golden_ratio = 0.618033988749895;</span><br><span class="line">       var s = 0.5;</span><br><span class="line">       var v = 0.999;</span><br><span class="line">       var h = golden_ratio + Math.random()*0.8 - 0.5;</span><br><span class="line">       var h_i = parseInt(h * 6);</span><br><span class="line">       var f = h * 6 - h_i;</span><br><span class="line">       var p = v * (1 - s);</span><br><span class="line">       var q = v * (1 - f * s);</span><br><span class="line">       var t = v * (1 - (1 - f) * s);</span><br><span class="line">       var r, g, b;</span><br><span class="line">       switch (h_i) {</span><br><span class="line">          case 0:</span><br><span class="line">              r = v;</span><br><span class="line">              g = t;</span><br><span class="line">              b = p;</span><br><span class="line">              break;</span><br><span class="line">          case 1:</span><br><span class="line">              r = q;</span><br><span class="line">              g = v;</span><br><span class="line">              b = p;</span><br><span class="line">              break;</span><br><span class="line">          case 2:</span><br><span class="line">              r = p;</span><br><span class="line">              g = v;</span><br><span class="line">              b = t;</span><br><span class="line">              break;</span><br><span class="line">          case 3 :</span><br><span class="line">              r = p;</span><br><span class="line">              g = q;</span><br><span class="line">              b = v;</span><br><span class="line">              break;</span><br><span class="line">          case 4:</span><br><span class="line">              r = t;</span><br><span class="line">              g = p;</span><br><span class="line">              b = v;</span><br><span class="line">              break;</span><br><span class="line">          case 5:</span><br><span class="line">              r = v;</span><br><span class="line">              g = p;</span><br><span class="line">              b = q;</span><br><span class="line">              break;</span><br><span class="line">          default:</span><br><span class="line">              r = 1;</span><br><span class="line">              g = 1;</span><br><span class="line">              b = 1;</span><br><span class="line">        }</span><br><span class="line">       tags[i].style.background = "rgba("+parseInt(r*255)+","+parseInt(g*255)+","+parseInt(b*255)+","+0.5+")";</span><br><span class="line">     }</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .tag-cloud-tags{</span><br><span class="line">    text-align: center;</span><br><span class="line">    counter-reset: tags;</span><br><span class="line">  }</span><br><span class="line">  .tag-cloud-tags a{</span><br><span class="line">    display: inline-block;</span><br><span class="line">    border: 0px;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">    padding: 0px 10px;</span><br><span class="line">    margin: 8px;</span><br><span class="line">    color: rgba(34, 34, 34, 0.8);</span><br><span class="line">    </span><br><span class="line">  }</span><br><span class="line">/* 文字前添加相应的符号，content后的Unicode可以自定义*/</span><br><span class="line">  .tag-cloud-tags a:before{</span><br><span class="line">    font-family: 'Font Awesome 5 Free';</span><br><span class="line">    content: "\f02b";</span><br><span class="line">    font-weight: 900;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  .tag-cloud-tags a:hover{</span><br><span class="line">     box-shadow: 0px 5px 15px 0px rgba(0,0,0,.4);</span><br><span class="line">     transform: scale(1.1);</span><br><span class="line">     transition-duration: 0.15s;</span><br><span class="line">  }</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>打开文件：<code>theme/next/layout/page.swig</code>，修改节点<code>&lt;div class="tag-cloud-title"&gt;</code>的信息如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class="post-body{%- if page.direction and page.direction.toLowerCase() === 'rtl' %} rtl{%- endif %}"&gt;</span><br><span class="line">       {%- if page.type === 'tags' %}</span><br><span class="line">         &lt;div class="tag-cloud"&gt;</span><br><span class="line">           &lt;div class="tag-cloud-title"&gt;</span><br><span class="line">             {{ _p('counter.tag_cloud', site.tags.length) }}</span><br><span class="line">           &lt;/div&gt;</span><br><span class="line">           &lt;div class="tag-cloud-tags"&gt;</span><br><span class="line">             {{ tagcloud({</span><br><span class="line">               min_font   : theme.tagcloud.min,</span><br><span class="line">               max_font   : theme.tagcloud.max,</span><br><span class="line">               amount     : theme.tagcloud.amount,</span><br><span class="line">               color      : false,</span><br><span class="line">               start_color: theme.tagcloud.start,</span><br><span class="line">               end_color  : theme.tagcloud.end})</span><br><span class="line">             }}</span><br><span class="line">           &lt;/div&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">       {% include 'tag-color.swig'%}</span><br></pre></td></tr></table></figure>
<p><strong>参考资料<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup><sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup><sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>：</strong></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.jianshu.com/p/4d37bc01290b">Hexo 添加分类及标签</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/qq_36667170/article/details/105846999">hexo markdown渲染器 @upupming/hexo-renderer-markdown-it-plus</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://blog.csdn.net/yueyue200830/article/details/104470646/">设置hexo首页只显示部分摘要（不显示全文）</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://blog.csdn.net/qwerty200696/article/details/79010629">hexo博客优化之文章置顶+置顶标签</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://blog.csdn.net/qq_39974578/article/details/114172260">给next添加彩色标签</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="http://jeffyang.top/Hexo/Hexo%E4%B8%BB%E9%A2%98Next%E7%BE%8E%E5%8C%96/">Hexo博客设置以及Next主题美化</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/129644138">hexo+next个性化配置</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a href="https://www.jianshu.com/p/9f0e90cc32c2">Hexo-NexT配置超炫网页效果</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客环境搭建</title>
    <url>/2021/02/18/%E5%9C%A8Linux%E4%B8%8A%E5%AE%8C%E6%88%90Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>本文介绍在Linux、Windows完成Hexo博客的搭建，包括安装和配置Hexo，将博客部署到github，使得可以通过github page的方式进行访问博客</p>
<a id="more"></a>
<h2 id="系统环境"><a class="markdownIt-Anchor" href="#系统环境"></a> 系统环境</h2>
<p>本系列文章所有操作在系统<code>Linux Mint 20 Cinnamon</code>及windows上完成，其他关联应用版本为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node</span><br><span class="line">npm</span><br><span class="line">hexo</span><br><span class="line">git</span><br></pre></td></tr></table></figure>
<h2 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装Hexo</h2>
<h3 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装nodejs</h3>
<p>Hexo是基于nodeJS编写的，所以需要安装nodeJs，npm是nodejs的包管理工具，新版本的nodejs包含该工具，不需要单独安装</p>
<p><strong>Linux安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nodejs</span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure>
<p><strong>Windows安装</strong></p>
<ol>
<li><strong>安装nodejs</strong>:从<a href="https://nodejs.org/en/%E4%B8%8B%E8%BD%BDnodejs%E7%9A%84msi%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%8C%E5%87%BB%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9%E5%AE%89%E8%A3%85">https://nodejs.org/en/下载nodejs的msi安装文件，双击默认选项安装</a></li>
<li><strong>安装git</strong>:从<a href="https://git-scm.com/download/win%E4%B8%8B%E8%BD%BDgit%E7%9A%84exe%E5%AE%89%E8%A3%85%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%8C%E5%87%BB%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9%E5%AE%89%E8%A3%85">https://git-scm.com/download/win下载git的exe安装文件，双击默认选项安装</a></li>
</ol>
<h3 id="配置npm镜像"><a class="markdownIt-Anchor" href="#配置npm镜像"></a> 配置npm镜像<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h3>
<p>npm是nodeJs的包管理工具，用于从NPM服务器下载第三方包到本地使用或上传自己编写的包，但是国内直接使用npm的官方镜像往往较慢，因此建议使用<code>淘宝镜像</code>，可以通过两种方式达到这个目地：</p>
<ul>
<li><strong>更改npm的默认镜像</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看当前镜像地址</span></span><br><span class="line">npm get registry</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置为淘宝镜像</span></span><br><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org/</span><br><span class="line"></span><br><span class="line"><span class="comment">#还原为原始配置</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>安装淘宝定制的cnpm工具</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装cnpm工具</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用cnpm工具</span></span><br><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure>
<h2 id="博客初始化"><a class="markdownIt-Anchor" href="#博客初始化"></a> 博客初始化</h2>
<h3 id="安装hexo-2"><a class="markdownIt-Anchor" href="#安装hexo-2"></a> 安装hexo</h3>
<p>通过npm工具安装hexo，使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure>
<h3 id="博客初始化-2"><a class="markdownIt-Anchor" href="#博客初始化-2"></a> 博客初始化</h3>
<p>使用hexo初始化博客，初始化文件夹为空或不存在</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#初始化+安装npm</span></span><br><span class="line">hexo init myblog;<span class="built_in">cd</span> myblog;sudo npm install</span><br></pre></td></tr></table></figure>
<p>安装完成后，得到以下文件结构</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041145.png" alt="" /></p>
<h3 id="测试博客"><a class="markdownIt-Anchor" href="#测试博客"></a> 测试博客</h3>
<p>在新建的博客目录下，使用以下命令测试博客是否初始化完成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>浏览器打开：<a href="http://localhost:4000/%E5%90%8E%EF%BC%8C%E5%BE%97%E5%88%B0%E4%BB%A5%E4%B8%8B%E9%A1%B5%E9%9D%A2%EF%BC%8C%E8%A1%A8%E9%9D%A2%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%A7%8B%E5%8C%96%E6%88%90%E5%8A%9F">http://localhost:4000/后，得到以下页面，表面博客初始化成功</a></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041396.png" alt="" /></p>
<h2 id="发布博客到github-page"><a class="markdownIt-Anchor" href="#发布博客到github-page"></a> 发布博客到Github Page</h2>
<h3 id="配置本地及github"><a class="markdownIt-Anchor" href="#配置本地及github"></a> 配置本地及github</h3>
<p>为了将博客部署到github，需要在本地生成SSH key，并将公钥配置到github</p>
<h5 id="本地生成公钥及密钥"><a class="markdownIt-Anchor" href="#本地生成公钥及密钥"></a> 本地生成公钥及密钥</h5>
<p>使用以下命令，一直回车生成公钥和密钥</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-kengen -t rsa -C <span class="string">&quot;yourmail&quot;</span></span><br></pre></td></tr></table></figure>
<p>生成之后的公钥及密钥保存在目录<code>~/.ssh</code>内，其中<code>id_rsa</code>为私钥，不可泄漏，id_rsa.pub为公钥，将配置到github上，上传代码时，公钥和私钥相互匹配，才能顺利上传代码。</p>
<h5 id="公钥配置到github"><a class="markdownIt-Anchor" href="#公钥配置到github"></a> 公钥配置到github</h5>
<p>登录github后，依次进入<code>Settings</code>-&gt;<code>SSH and GPG keys</code>，然后点击<code>New SSH key</code>，将公钥文件id_rsa.pub里面的内容全部填到<code>Key</code>上</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041223.png" alt="" /></p>
<h5 id="测试是否配置成功"><a class="markdownIt-Anchor" href="#测试是否配置成功"></a> 测试是否配置成功</h5>
<p>使用以下命令检查，配置是否成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<h3 id="安装部署插件"><a class="markdownIt-Anchor" href="#安装部署插件"></a> 安装部署插件</h3>
<p>通过npm安装git插件，以便进行github部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h3 id="新建github-pages仓库"><a class="markdownIt-Anchor" href="#新建github-pages仓库"></a> 新建github pages仓库</h3>
<p>推送前需先新建一个用于存储博客的仓库，该仓库为用户的github page（GitHub Pages is a static site hosting service designed to host your  personal, organization, or project pages directly from a GitHub  repository）<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>，以下两个操作完成此步骤：</p>
<ol>
<li>新建一个公开（Public）仓库，仓库名为<code>你的用户名.github.io</code>；</li>
<li>进入仓库的<code>Settings</code>，找到Github Page，在<code>Source</code>选择分支，并保存</li>
<li>浏览器访问<code>https://[YourUserName].github.io/</code>，成功访问即配置成功（这可能需要科学上网）</li>
</ol>
<h3 id="设置博客部署仓库"><a class="markdownIt-Anchor" href="#设置博客部署仓库"></a> 设置博客部署仓库</h3>
<p>将远程仓库地址配置到博客配置文件中，部署时往此仓库推送，打开<code>_config.yml</code>文件，在最后找到Deployment配置项，按以下方式配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/[YourUserName]/[YourUserName].github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<h3 id="推送博客到github-pages仓库"><a class="markdownIt-Anchor" href="#推送博客到github-pages仓库"></a> 推送博客到github pages仓库</h3>
<p>使用以下命令推送hexo博客到github page仓库上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean;hexo generate;hexo deploy</span><br></pre></td></tr></table></figure>
<p>在浏览器上再次访问<code>https://[YourUserName].github.io/</code>，出现以下画面表示成功</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041120.png" alt="" /></p>
<h2 id="绑定域名"><a class="markdownIt-Anchor" href="#绑定域名"></a> 绑定域名</h2>
<p>每次访问博客，均需使用<code>https://[YourUserName].github.io/</code>打开，本着<s>装逼</s>的原则，申请一个个人使用的域名，即可以便于记忆/宣传，又隐藏博客在github page的行为，代价是需要RMB（一年几十）。</p>
<h3 id="申请域名"><a class="markdownIt-Anchor" href="#申请域名"></a> 申请域名</h3>
<p>我是在腾讯云申请的域名，阿里云也可以通过申请，访问：<a href="https://dnspod.cloud.tencent.com/%EF%BC%8C%E6%90%9C%E7%B4%A2%E8%87%AA%E5%B7%B1%E8%AE%A1%E5%88%92%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%8C%E9%80%89%E6%8B%A9%E5%AE%8C%E6%88%90%E5%90%8E%E4%BB%98%E8%B4%B9%EF%BC%8C%E5%AE%8C%E6%88%90%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81%EF%BC%8B%E5%A4%87%E6%A1%88%EF%BC%8C%E5%8D%B3%E5%8F%AF%E4%BD%BF%E7%94%A8%E3%80%82">https://dnspod.cloud.tencent.com/，搜索自己计划使用的域名，选择完成后付费，完成实名认证＋备案，即可使用。</a></p>
<p>完成域名申请后，需配置域名的解析地址，按照以下方式添加两个记录</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041040.png" alt="image-20210218163454662" /></p>
<h3 id="绑定域名-2"><a class="markdownIt-Anchor" href="#绑定域名-2"></a> 绑定域名</h3>
<p>通过以下两个步骤完成域名的绑定</p>
<p><strong>1.配置Hexo博客</strong></p>
<p>在hexo/source目录下新建一个名为<code>CNAME</code>的文件，然后将申请的域名填写到里面</p>
<p><strong>2.配置Github Pages</strong></p>
<p>到仓库的Github Pages页面，在<code>Custom domain</code>配置申请的域名（注意：配置成功后不会立马生效）</p>
<p><img src="./.images/image-20210218165026184.png" alt="image-20210218165026184" /></p>
<p>在浏览器上通过申请的域名访问博客，如果成功，则配置成功！！！</p>
<h2 id="发文流程"><a class="markdownIt-Anchor" href="#发文流程"></a> 发文流程</h2>
<p>使用以下命令新建一个博文，然后使用markdwn格式写博文，再然后部署到github pages上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文件名.md&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="遇到的问题"><a class="markdownIt-Anchor" href="#遇到的问题"></a> 遇到的问题</h2>
<p>1.<code>sudo npm install -g hexo</code>遇到rollbackFailedOptional: verb npm-session<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<p>原因：（1）网络原因；（2）未配置国内镜像服务器；</p>
<p>解决：配置npm使用淘宝镜像服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry http:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>参考资料<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup><sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup><sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup><sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>：</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.runoob.com/nodejs/nodejs-npm.html">NPM 使用介绍</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/shangrila_kun/article/details/89633374">npm的镜像替换成淘宝</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://docs.github.com/en/enterprise/2.14/user/articles/what-is-github-pages">What is GitHub Pages?</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://blog.csdn.net/qq_34458791/article/details/82705345">npm install rollbackFailedOptional: verb npm-session</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html">使用hexo+github搭建免费个人博客详细教程</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://segmentfault.com/a/1190000017986794">超详细Hexo+Github Page搭建技术博客教程【持续更新】</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a href="https://cloud.tencent.com/developer/article/1520557">这可能是迄今为止最全的hexo博客搭建教程</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>404</title>
    <url>/2021/02/15/404/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>书摘：《从行动开始（与其花3小时想，不如花5分钟做。为你系统介绍在日本和美国广受欢迎的行为科学管理方法！）》-石田淳</title>
    <url>/2021/02/11/%E4%B9%A6%E6%91%98_%E4%BB%8E%E8%A1%8C%E5%8A%A8%E5%BC%80%E5%A7%8B%EF%BC%88%E4%B8%8E%E5%85%B6%E8%8A%B13%E5%B0%8F%E6%97%B6%E6%83%B3%EF%BC%8C%E4%B8%8D%E5%A6%82%E8%8A%B15%E5%88%86%E9%92%9F%E5%81%9A%E3%80%82%E4%B8%BA%E4%BD%A0%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D%E5%9C%A8%E6%97%A5%E6%9C%AC%E5%92%8C%E7%BE%8E%E5%9B%BD%E5%B9%BF%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%E8%A1%8C%E4%B8%BA%E7%A7%91%E5%AD%A6%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95%EF%BC%81%EF%BC%89-%E7%9F%B3%E7%94%B0%E6%B7%B3.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/26828557">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28858263.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s28858263.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>从行动开始</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>[日]石田淳</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2016-9</span></div>
			<div class="douban-card-item"><span>评分: </span><span>7.1</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="自序"><a class="markdownIt-Anchor" href="#自序"></a> 自序</h2>
<blockquote>
<p>认为只要拥有坚强的意志，就能够比别人更加努力，就能更好地控制自己的感情，就能够成功，认为改变自己首先必须让自己变成一个意志坚强的人，这种想法本身就是错误的。也正因为你有这样的想法，所以你才一直都没有改变。</p>
</blockquote>
<blockquote>
<p>能够导出结果的只有“行动”。不管你有多么坚强的意志，如果没有行动的话仍然不会产生任何结果。反之，就算意志非常薄弱，但如果采取行动的话一样能够收获成功。明明只要将注意力都集中在简单的“行动”上就好了，可是你却将注意力集中在所谓抽象的“意志”上。</p>
</blockquote>
<blockquote>
<p>我们每个人都有“负面思考”的习惯，在这种习惯的影响下，我们总是把事情往坏的方向想，所以要想“凭借坚强的意志让事情走上正轨”是非常困难的。要记住，最重要的是结果，而能够导出结果的只有行动，与意志无关。</p>
</blockquote>
<h2 id="第一章你之所以难以改变的原因"><a class="markdownIt-Anchor" href="#第一章你之所以难以改变的原因"></a> 第一章你之所以难以改变的原因</h2>
<blockquote>
<p>在行动科学管理术的理论中，一切结果都是行动的积累。好的结果是好的行动不断重复带来的，而不断重复坏的行动只能带来坏的结果。所以，我们应该关注的不是“性格”和“态度”，而是“行动”。</p>
</blockquote>
<blockquote>
<p>一个打算戒烟的人一整天都没有吸烟，会认为自己的意志力很强，第二天他只吸了一根，却会立刻陷入“为什么我的意志力这么薄弱”的自责之中。</p>
</blockquote>
<blockquote>
<p>这种认知的偏差是人类特有的思维方式，其他动物并没有。</p>
</blockquote>
<blockquote>
<p>向别人展示的不是你坚强的意志；同样的，你也没有必要对自己展示坚强的意志。你只要取得结果就够了。而要想取得结果，必不可少的是行动。</p>
</blockquote>
<blockquote>
<p>与很久之后不确定的结果相比，能够立刻得到的结果对人类的行动会产生决定性的影响。明知道吃蛋糕会增加体重却仍然打算吃蛋糕，也是因为同样的理由。增加体重是几天之后的事，甚至有可能所增加的体重并没有想象中那么多。与之相比，“美味的满足”却是立刻而且确实能够获得的结果。所以人们才会选择吃蛋糕。</p>
</blockquote>
<blockquote>
<p>人类的思考从根本上就带有偏见，尤其是涉及“金钱”这个最应该理性对待的问题时，偏见会变得更加严重。</p>
</blockquote>
<blockquote>
<p>人类之所以不愿意接受确定的损失，是因为“不愿承认自己失败”。我们就是这样害怕失败。</p>
</blockquote>
<blockquote>
<p>据说每个人每天会出现700次自动思考。在这些思考之中有内容比较清晰的，也有意识模糊不清的，但基本上都是负面思考。也就是说，在你的大脑中每天会出现700条负面信息。</p>
</blockquote>
<blockquote>
<p>比如，你的邻居在街上与你擦肩而过但却没有打招呼。明明那个人只是没注意到你而已，但是你心里却会有“他是不是讨厌我啊？上个月我是不是得罪了他？”的想法……或者你在工作中只是出现了一点小问题，可你会想“哎呀，我又犯错误了。</p>
</blockquote>
<blockquote>
<p>我们要正确认识眼前的情况，然后设定好必须要做的事情。接着我们要思考什么是应该最先做的，按照先后顺序采取行动。如果出现问题，应该思考原因，然后正确应对。</p>
</blockquote>
<blockquote>
<p>人类是行动和意志不协调的麻烦的生物，那么我们作为“无法完全理性行动的人类”，要想为实现目标而改变自己，应该怎么做呢？如果还像以前一样企图凭意志的力量来控制自己，只会不断地失败。</p>
</blockquote>
<blockquote>
<p>当你想要实现某种目标，或者想要变成理想中的自己时，都应该把焦点放在“行动”上。只有行动起来，才会发现自己好的地方和坏的地方，以及应该改善的地方。至于改善的方案是否有效，是需要通过行动来进行判断的。</p>
</blockquote>
<h2 id="第二章戒除那些毁掉你人生的习惯"><a class="markdownIt-Anchor" href="#第二章戒除那些毁掉你人生的习惯"></a> 第二章戒除那些毁掉你人生的习惯</h2>
<blockquote>
<p>一个被“认知偏差”的臆想所束缚的人，在采取明确的行动之前，很容易产生许多乱七八糟的想法。</p>
</blockquote>
<blockquote>
<p>来说，“正念”就是将注意力全部集中在此刻，不被过去和未来所影响，只专注于眼前事物。</p>
</blockquote>
<blockquote>
<p>逃避一时的困难，将来只会给自己带来更大的麻烦。虽然道理很简单，但是很多人却仍然选择眼前的安逸。就好像很多人明明有重要的工作要做，但却把时间都浪费在浏览网页上一样。</p>
</blockquote>
<h2 id="第三章小心你深信不疑的陷阱"><a class="markdownIt-Anchor" href="#第三章小心你深信不疑的陷阱"></a> 第三章小心你“深信不疑”的陷阱</h2>
<blockquote>
<p>不安、猜疑等负面情绪，都是由我们大脑中的自动化思考所引发的，是非理性思维的不断强化。这时候我们往往会失去冷静的判断力，在面对重要的问题时做出错误的选择。</p>
</blockquote>
<blockquote>
<p>当你在人际交往中受到刺激时，请冷静地回想一下当时的状况，然后试着分析当时对话的内容。如果你能够将那些对话都写在纸上冷静地阅读一下，就会发现其实“并没有什么大不了的”。</p>
</blockquote>
<blockquote>
<p>谁也无法回到过去，所以也无法消除那些不愉快的往事。但是，已经过去的事根本没有消除的必要，因为过去已经不存在了。不管是多么不愉快的事，它们都只存在于我们的记忆之中，而并非存在于现实之中。所以，沉浸于过去的人相当于被不存在的东西束缚住了。</p>
</blockquote>
<blockquote>
<p>只要将注意力集中在“现在”的“现实”之上，就可以解决绝大多数的问题。甚至可以说，没有什么问题是这种方法不能解决的。反之，总是沉浸在过去之中的人，会经常出现许多问题。而且因为谁也无法回到过去，所以那些问题永远也无法得到解决。</p>
</blockquote>
<blockquote>
<p>不同的人对事物的认知方式存在差异，人们的认知大体可以分为“让自己感到轻松的认知”和“让自己感到辛苦的认知”两种。“让自己感到轻松的认知”建立在对眼前发生的事的冷静判断之上，而“让自己感到辛苦的认知”则是由对事实扭曲的认识和毫无根据的臆测所带来的。</p>
</blockquote>
<blockquote>
<p>总而言之，关键在于不要过分关注自己做不到的事。因为在我们的脑海中，一天浮现出700次的“自动化思考”几乎都是负面信息，而我们经常会将负面信息放大。</p>
</blockquote>
<blockquote>
<p>问题不在于“做不到”，而在于你“不肯原谅自己”。因为你不肯原谅自己，这种狭隘的态度会给你造成多余的压力，使你连本来能够做到的事情都做不到了。</p>
</blockquote>
<blockquote>
<p>开始”。你之所以一直无法改变，是因为你每次开始的时候都因为“认知偏差”而感觉自己“这次肯定也不行”。从今往后请原谅真实的自己，这样一来，你就可以对一切进行自我管理。</p>
</blockquote>
<blockquote>
<p>当发生某件事情的时候，应该只将意识集中在“眼前的事实”上，排除多余的印象、思考、喜恶，只接受其最真实的状态。这种方法被称为“正念”或者“ACT（Acceptance&amp;CommitmentTherapy）”，在心理和精神医疗领域都很被重视。</p>
</blockquote>
<blockquote>
<p>找出客观的原因，用正确的认知来应对，然后通过多次乘车来达到“就算坐车也不会肚子疼”的状态时，你才能彻底从苦痛之中解脱出来。这就是认知行为疗法。</p>
</blockquote>
<blockquote>
<p>用“正念”法来进行自我管理，就是让自己彻底面对现实。或许会有人觉得这是非常难的，但实际上这是非常简单的，因为我们只要不考虑事实以外的事情就好。人类总是习惯于逃避事实，特别是在事实让人不愉快的时候。</p>
</blockquote>
<blockquote>
<p>关键在于，愤怒和不安等负面情绪有时候是完全与“现在”和“现实”无关的。只要冷静地想一下就会发现，所有的负面情绪都是因为对过去的后悔和对未来的担忧而产生的。所以，只要敢于正视这些负面的情绪，就会发现其实事实并没有那么可怕。当你感觉自己将要被负面情绪吞噬的时候，千万不要放任负面情绪，而应该将意识集中在“现实”和“现在”。</p>
</blockquote>
<blockquote>
<p>事实上，并没有人会故意去轻视别人，但没有采取充分的应对措施，的确会使人产生被轻视的感觉。这正是“认知偏差”的典型案例。</p>
</blockquote>
<blockquote>
<p>如果将自己愤怒的原因归结于外在因素，那么就说明你被周围的环境和他人的言行所左右了。</p>
</blockquote>
<blockquote>
<p>如果你不能凭借自己的行动来改变现状，那么就无法从负面的情绪中摆脱出来。人在一帆风顺的时候，一旦稍微遇到点不如意的事就很容易自暴自弃。但是，就这样彻底松开方向盘真的对吗？</p>
</blockquote>
<blockquote>
<p>不要因为过去的事情而懊悔，不要因为对未来的不安而畏缩不前，更不要因为周围的环境而心存怨恨。只有把握“现在”和“现实”，你的人生才会变得更加灿烂。</p>
</blockquote>
<h2 id="第四章从小习惯开始"><a class="markdownIt-Anchor" href="#第四章从小习惯开始"></a> 第四章从小习惯开始</h2>
<blockquote>
<p>自己的幸福度，毫无疑问是由自己决定的。</p>
</blockquote>
<blockquote>
<p>如果不能搞清楚“对自己来说什么是幸福”和“我想要变成什么样的人”，那么你只能感到不满和不幸。</p>
</blockquote>
<blockquote>
<p>“行动科学管理术”认为，无法取得理想结果的原因只有两点：1.不知道应该怎么做2.虽然知道应该怎么做，但不知道如何坚持</p>
</blockquote>
<blockquote>
<p>“行动科学管理术”为了让人们能够在无法立刻得到“好的结果”的情况下仍然能够坚持行动，专门设计了许多“报酬”，但是这些报酬最好不涉及金钱，就算涉及也最好不要涉及高价的东西。</p>
</blockquote>
<blockquote>
<p>为了将那些能够取得好结果的行动变成习惯，并且彻底摆脱导致坏结果的行动，褒奖和成就感是不可忽视的。</p>
</blockquote>
<blockquote>
<p>改变自己并不意味着否定现在的自己，而是让现在的自己得到成长。所以，请不要讨厌现在的自己。只有现在的自己，才能够取得进步。</p>
</blockquote>
<blockquote>
<p>绝对不能自暴自弃。一定要相信自己，放松心情开始行动。</p>
</blockquote>
<blockquote>
<p>改变现在的自己，并不是让你改变人格，而是努力让现在的自己变得更加优秀。但改变不可能一蹴而就，而应该循序渐进。</p>
</blockquote>
<blockquote>
<p>如果因为勉强自己而失败，会导致认知出现巨大的偏差，把自己逼入穷途末路。事实上，不管多大的失败都不能证明你这个人一无是处，但认知的偏差却会让你给自己贴上失败者的标签。如果这样的情况重复出现，那你的人生就真的完蛋了。</p>
</blockquote>
<blockquote>
<p>为了尽可能地减轻我们在日常生活中出现的压力，应该排除模糊不清的因素，使一切都“可视化”。不要总是思考那些模糊不清的内容。</p>
</blockquote>
<blockquote>
<p>所谓“实况转播”，简单来说就是“将自己正在做的事情用语言文字的形式在脑海中确认一遍”。通过将自己的行动读给自己听，可以完全排除过去和将来的干扰，将意识完全集中于现在。</p>
</blockquote>
<blockquote>
<p>每天都努力工作却总是看不到头的日子会使人产生巨大的压力。人们会对工作越来越厌倦并最终放弃。</p>
</blockquote>
<h2 id="第五章避开陷阱"><a class="markdownIt-Anchor" href="#第五章避开陷阱"></a> 第五章避开陷阱</h2>
<blockquote>
<p>很多人认为压力与发生的事情有直接的联系。但实际上并不是“发生事情→产生压力”，而是“发生事情→个人认知→产生压力”，人类对所发生事情的“认知”才是产生压力的主要因素。如果认知出现偏差，即便只是一些无谓的小事也会产生多余的负面情绪，导致产生巨大的压力。</p>
</blockquote>
<blockquote>
<p>“正念法”可以让你的注意力完全集中在“现在”和“现实”之上，排除过去和未来对你的干扰。只要时刻将注意力完全集中在“现在发生的事情”上，在认识事物的时候就能够摘掉有色眼镜，不会使自己产生无谓的压力。</p>
</blockquote>
<blockquote>
<p>消除压力最重要的还是面对自我。与“行动科学管理术”类似的认知行为疗法也认为，不逃避压力，正视压力而采取行动才能够从根本上解决问题。</p>
</blockquote>
<blockquote>
<p>困扰你的问题，并不是因为你的性格导致的，更不是毅力能够解决的。只有正视现实并且采取行动，才是解决问题的不二法门。</p>
</blockquote>
<blockquote>
<p>要想战胜眼前的诱惑，首先你必须充分了解“人类很难坚持做任何事”（也就是说不要责备自己无法坚持），然后专门制定一套能够帮助自己坚持下去的方法。</p>
</blockquote>
<blockquote>
<p>只有以自己为基准在力所能及的范围内一点一点地改变，才能坚持行动。如果你真的想要改变自己，就不要被周围的价值观所左右，循序渐进地做自己想做的事，这才是最重要的。</p>
</blockquote>
<blockquote>
<p>不管面对多么困难的状况，都不要认为自己是个没用的人，因为这种想法是毫无意义的。自我贬低只会造成“认知偏差”。冷静客观地分析状况，寻找解决方法，然后实践这个方法，这样就能避免陷入毫无根据的“认知偏差”之中。不要冲动，保持理性。不要主观，保持客观。不要抽象，保持具体。</p>
</blockquote>
<blockquote>
<p>遇到问题的时候，只要从当事人视角转换到第三者视角，就能够调整心态，明白“现在应该做什么”。</p>
</blockquote>
<blockquote>
<p>绝对不要忘记，你想要实现什么目标，你想要变成什么样子，都是由现在的你决定的，而不是由世俗的价值观和流行的标准决定的。</p>
</blockquote>
<blockquote>
<p>人类总是背负着超出自己认知的思维负担，这会使人产生多余的思考。</p>
</blockquote>
<blockquote>
<p>坐禅也好，散步也好，甚至只是闭上眼睛也好。“现在，我要整理自己的感情，从“认知偏差”中摆脱出来，让意识回到现实。”只要这样想一想就足够了。在每天睡觉之前拿出5分钟来整理自己的感情，可以很好地减轻你的压力。如果不这样做，任凭由“认知偏差”产生的负面感情蔓延，那么你的未来恐怕也很难变好。</p>
</blockquote>
<h2 id="第六章认同自己"><a class="markdownIt-Anchor" href="#第六章认同自己"></a> 第六章认同自己</h2>
<blockquote>
<p>1.自己成功的经历：在此之前有过相同或者相似的成功经历。2.替代性经历：虽然自己没有经历过，但看别人成功，因此认为自己也能够成功。3.语言说服：即便自己对行动的成功毫无自信，但别人对你说“你能行”。4.情绪和生理的变化：由成就感和喜悦导致生理状态发生变化。当你想要做什么事的时候，可以利用上述四点来提高你的自我激励能力。</p>
</blockquote>
<blockquote>
<p>你之所以无法达成目标，想要改变却迟迟无法行动，就是因为你太过依赖“干劲”和“毅力”等抽象的东西。</p>
</blockquote>
<blockquote>
<p>如果感到不安却不去解决，自己总放不下心来。为了能够随心所欲地行动，为了能够变成更好的自己，为了构建出满意的人生，请多和自己交流沟通。</p>
</blockquote>
<blockquote>
<p>如果不能最大限度地利用自己的时间，那么你既不能达成目标，也无法改变自己。请将杂乱无章的项目整理清楚，把有限的时间和精力都集中在必要的行动上吧。</p>
</blockquote>
<blockquote>
<p>我们既想达成目标，让自己变得更好，又想最大限度地享受现在的快乐，关键在于在这两者之间找到一个平衡。找不到平衡的人，很难实现理想的人生。</p>
</blockquote>
<blockquote>
<p>我们的情绪很容易出现波动，尽管我们知道应该以自己作为判断的基准，但遇到实际情况时还是可能产生“认知偏差”。在感情混乱的情况下，我们会在不经意间以世俗或他人为标准对事物进行判断，结果陷入与事实不符的臆想之中。如果对这种偏差置之不理，那么你好不容易积累起来的好的习惯都将失去意义，人生的道路也会朝着错误的方向越走越远。</p>
</blockquote>
<blockquote>
<p>首先，人类很容易产生“认知偏差”，而“认知偏差”会妨碍你达成目标和改变自己。其次，为了实现你的目标，成为理想中的自己，你需要的不是坚强的意志，而是从小做起的行动。因为这些内容我都已经反复强调过，想必大家应该都已经理解了。从今往后请不要再重复同样的错误，更加自信地改变自己的人生吧。最后我还有一个请求，那就是不要说“从明天开始”。</p>
</blockquote>
<blockquote>
<p>你能够不以世俗的价值观为基准，而以自己为基准改变自己的人生；你能够从小的行动开始，踏实地积累和坚持；你能够专注于现实和现在；你会对这样的自己感到喜悦，并给予褒奖。这样的你将无所不能，你可以随心所欲地改变自己。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>MobileNetv2：Inverted Residuals and Linear Bottlenecks</title>
    <url>/2021/02/11/MobileNetv2%EF%BC%9AInverted%20Residuals%20and%20Linear%20Bottlenecks/</url>
    <content><![CDATA[<p>MobileNetv2在MobileNetv1的基础上，借鉴残差网络的思想，设计出“倒残差”瓶颈结构，使得网络更轻量高效</p>
<a id="more"></a>
<ul>
<li>什么是MobileNetv2?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv2-20230408140535.png" alt="" /></li>
<li>MobileNetv1的基础上，引“倒残差”瓶颈，即通过先升维再降维，增强梯度的传播，显著减少推理期间所需的内存占用</li>
<li>在线性瓶颈上去掉高维向低维的卷积后Relu，保留特征多样性，增强网络的表达能力</li>
</ul>
</li>
<li>MobileNetv2的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv2-20230408140535-1.png" alt="" /></li>
<li>t、c、n、s分别是瓶颈层升维的倍数、特征的维数、重复的次数，第一个conv的步幅，s=2表示对featrue map进行降维处理</li>
<li>MobileNetV2主要使用6的扩展因子应用于输入张量的大小。 例如对于采用64通道输入张量，中间扩展层为 64×6 = 384 通道</li>
</ul>
</li>
<li>MobileNetv2的“倒残差”瓶颈( Inverted Residuals Bottlenecks)?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv2-20230408140536.png" alt="" /></li>
<li><strong>经典残差块 (residual block)=沙漏</strong>：1x1 (降维)–&gt;3x3 (卷积)–&gt;1x1 (升维)，深度可分离卷积提取特征限制于输入特征维度，若采用残差块，先经过1x1的逐点卷积操作先将输入特征图压缩，再经过深度卷积后，提取的特征会更少</li>
<li><strong>mobileNetV2=纺锤</strong>：先经过1x1的逐点卷积操作将特征图的通道进行扩张，丰富特征数量，进而提高精度。<strong>这一过程刚好和残差块的顺序颠倒，这也就是倒残差的由来</strong>：1x1 (升维)–&gt;3x3 (dw conv+relu)–&gt;1x1 (降维+线性变换)</li>
<li>stride=1的“倒残差”瓶颈使用跨连接，stride=2的“倒残差”瓶颈是下采样，两类结构在最后高维转换到低维时，均使线性瓶颈(Linear Bottlenecks)，减少信息的丢失 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv2-20230408140535.png" alt="" /></li>
</ul>
</li>
<li>MobileNetv2 的线性瓶颈 (Linear Bottlenecks)?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv4-20230408140605.png" alt="GoogleNetv4-20230408140605" /></li>
<li>对于MobileNetv1的深度可分离卷积而言， 宽度乘数压缩后的M维空间后会通过一个非线性变换ReLU，根Relu的&quot;死亡神经元&quot;特点，一旦权重参数变为负值时，后续一直激活为0，这激活函数导致进一步的信息损失</li>
<li>Mobilenetv2认为relu将信息从低纬度到高纬度不会存在信息丢失，但是从高纬度到低纬度转换时，会存在信息丢失，所以去掉Relu而使用Linear激活函数</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLACT：Real-time Instance Segmentation</title>
    <url>/2021/02/10/YOLACT%EF%BC%9AReal-time%20Instance%20Segmentation/</url>
    <content><![CDATA[<p>YOLACT (You Only Look At CoefficienTs)是第一个用于实例分割的实时模型，首先通过类似目标检测模型生成 anchor 的预测结果+一批 prototype mask，然后根据 anchor 的结果线性组合 prototype mask 得到当前目标的 mask</p>
<a id="more"></a>
<h1 id="什么是-yolact"><a class="markdownIt-Anchor" href="#什么是-yolact"></a> 什么是 yolact ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolact-20230508212509.png" alt="" /></li>
<li><strong>YOLACT (You Only Look At CoefficienTs)</strong> 是第一个用于实例分割的实时模型，首先通过类似目标检测模型生成 anchor 的预测结果+一批 prototype mask，然后根据 anchor 的结果线性组合 prototype mask 得到当前目标的 mask</li>
<li>YOLACT 通过双分支预测目标位置、全局 Mask，然后通过目标检测分支的<strong>mask coefficients</strong>去关联全局 Mask，所以两个分支可以同时训练，所以是一个 one-satge 模型</li>
<li>如图所示，YOLACT 比 two-satge 的实例分割模型精度差，但是其在速度上有优势</li>
</ul>
<h1 id="yolact-的网络结构"><a class="markdownIt-Anchor" href="#yolact-的网络结构"></a> yolact 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolact-20230508212509-1.png" alt="" /></li>
<li><strong>Featrue Backbone&amp;Featrue Pyramid</strong>：使用 ResNet101 提取图片特征，然后使用 FPN 结构进行特征融合</li>
<li><strong>prototypes</strong>：从 P3 级别的特征生成全局的 prototype mask (138,138,32)，这里固定是 32 个 mask，后续所有实例的 mask 是这 32 个 mask 的线性组合</li>
<li><strong>Mask coefficients</strong>：为每个 anchor 预测长度为 32 的向量，用于加权 prototypes，得到当前 anchor 的 mask 预测</li>
<li><strong>corp&amp;Threashold</strong>：根据定位结果和 Mask 预测结果，裁剪目标区域，并使用二值化求得目标的Mask</li>
</ul>
<h1 id="yolact-的数据流过程"><a class="markdownIt-Anchor" href="#yolact-的数据流过程"></a> yolact 的数据流过程？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolact-20230508212510.png" alt="" /></li>
<li>1）<strong>目标检测分支</strong>：对 P3-P7 的 5 个级别特征进行目标检测，每个位置检测 3 个 anchor。总计输出 19248 个 anchor 的预测结果</li>
<li>2）<strong>Fast NMS 处理</strong>：对 19248 个 anchor 进行快速非极大值抑制，假设最终保留 n 个预测 box</li>
<li>3）<strong>全局 Mask (prototypes) 生成</strong>：基于 P3 的特征，生成全局的 Mask (138,138,32)</li>
</ul>
<h1 id="yolact-的-prototype-masks-解析"><a class="markdownIt-Anchor" href="#yolact-的-prototype-masks-解析"></a> yolact 的 prototype masks 解析？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolact-20230508212510-1.png" alt="" /></li>
<li>YOLACT 实际上是学习了一种分布表示，<strong>在一张图片中可能有多个类别，但不同类别之间的物体共享 prototypes 的组合</strong>，如上图所示，每个 mask 激活图像的不同区域。除此之外，prototype masks 的数量与物体类别无关 (类别数量可能多于 prototypes 的数量)</li>
<li><strong>YOLACT 是针对每张图片学习 prototypes，即：不同图片生成的 prototypes 会有差异</strong>； BoF 对整个数据集所学习的全局共享的 prototypes，BOF 是一种图像特征提取方法，假设图像相当于一个文本，图像中的不同局部区域或特征可以看作是构成图像的词汇，根据得到的图像的词汇，统计每个单词的频次，即可得到图片的特征向量<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolact-20230508212510-2.png" alt="" /></li>
</ul>
<h1 id="yolact-的-fast-nms"><a class="markdownIt-Anchor" href="#yolact-的-fast-nms"></a> yolact 的 Fast nms?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolact-20230508212511.png" alt="" /></li>
<li>假设属于狗这一类目前有3个预测框，并且已经按得分降序排列，1 是预测框之间的 <code>IoU</code> 值</li>
<li><strong>NMS</strong>：使用原始 NMS 时，首先选择 bbox1，然后根据 0.7&gt;0.5 去掉 bbox2，最后选择 bbox3，因此最终输出 bbox1、bbox3</li>
<li><strong>Fast NMS</strong>：得到 1 的 IOU 阈值后，将 IOU 矩阵的下三角置 0，然后按列取最大值，如果列最大值超过阈值则去掉，否则保留，最终只有 bbox 1 保留。所以 <code>fast-NMS</code> 倾向去掉更多的框</li>
<li>Fast NMS 精度上比 NMS 有损失，但是速度却有很大提升</li>
</ul>
<h1 id="yolact-的模型输出解析"><a class="markdownIt-Anchor" href="#yolact-的模型输出解析"></a> yolact 的模型输出解析？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/yolact-20230508212510.png" alt="" /></li>
<li><strong>1）获得 n 个目标的全局 Mask</strong>：模型最终输出如图所示，现在已经有 n 个目标的位置，后续需要解析出 n 个目标的 mask？首先已有全局 prototypes (M，138x 138 x 32)和 Mask coefficients (C，nx 32)，执行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>P</mi><mo>×</mo><msup><mi>C</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mtext>（</mtext><mn>138</mn><mo separator="true">,</mo><mn>138</mn><mo separator="true">,</mo><mi>n</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">M=\sigma(P\times C^T)=（138,138,n）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mord">3</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">）</span></span></span></span> ，也就是 n 个目标的全局Mask 结果</li>
<li><strong>2）细化目标 Mask</strong>：目标的全局 Mask 存在很多非目标区域的激活，因此为了准确，结合 box（n, 4）提取 M 目标区域的 Mask 值，然后通过 0.5 阈值对该区域二值化，即得到目标的 Mask</li>
<li><strong>3）生成实例</strong>：结合目标位置 box 及目标 Mask 可以得到一张图片的所有实例</li>
</ul>
<h1 id="yolact-的损失函数"><a class="markdownIt-Anchor" href="#yolact-的损失函数"></a> yolact 的损失函数？</h1>
<ul>
<li>根据 yolact 的输出，损失函数包含 3 部分，即类损失、box 定位损失、mask 损失</li>
<li>其中类别损失使用 smooth L1，box 损失使用 smooth L1，mask 损失使用二值化交差熵</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_36523492/article/details/117198752">YOLACT_liangbaqiang的博客-CSDN博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/76470432">【ICCV 2019】一文读懂实时实例分割模型 YOLACT - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/358135157">初探分割：YOLACT - 知乎</a></li>
<li><a href="https://blog.csdn.net/qq_36530992/article/details/103069285">【深度学习】【目标检测】NMS、Soft-NMS、fast-NMS_fast nms_Hanawh的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/qq_41204464/article/details/130417487">【经典论文解读】YOLACT 实例分割（yolv5、yolv8实例分割的基础）_一颗小树x的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>实例分割</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《你的自律给你自由》-小椰子</title>
    <url>/2021/02/09/%E4%B9%A6%E6%91%98_%E4%BD%A0%E7%9A%84%E8%87%AA%E5%BE%8B%E7%BB%99%E4%BD%A0%E8%87%AA%E7%94%B1-%E5%B0%8F%E6%A4%B0%E5%AD%90.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/30424251">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s29970134.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s29970134.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>你的自律给你自由</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>小椰子</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2018-8</span></div>
			<div class="douban-card-item"><span>评分: </span><span>6.0</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="你的不自律正在慢慢毁掉你"><a class="markdownIt-Anchor" href="#你的不自律正在慢慢毁掉你"></a> 你的不自律，正在慢慢毁掉你</h2>
<blockquote>
<p>我见过的最不求上进的人，他们为现状焦虑，又没有毅力践行决心去改变自己。三分钟热度，时常憎恶自己的不争气，坚持最多的事情就是坚持不下去。终日混迹社交网络，脸色蜡黄地对着手机和电脑的冷光屏，可以说上几句话的人却寥寥无几。他们以最普通的身份埋没在人群中，却过着最最煎熬的日子。</p>
</blockquote>
<blockquote>
<p>唯有自律，才是解决人生痛苦的根本途径。</p>
</blockquote>
<blockquote>
<p>许多人习惯将自己不自律的原因推卸给他人和外界环境</p>
</blockquote>
<blockquote>
<p>推卸责任的时候，可能感觉舒服和痛快，却永远无法进步，心智永远无法成熟。趋利避害、逃避责任是人类的天性，但是每个人的人生轨迹都是由自己主宰的。</p>
</blockquote>
<blockquote>
<p>推卸责任容易，坚持一件事很难。想要变得自律，必须从敢于承担责任开始。</p>
</blockquote>
<blockquote>
<p>假如我们像动物一样，听从欲望、逃避痛苦，我们并不是真的自由，因为我们成了欲望和冲动的奴隶。我们不是在选择，而是在服从。唯有自律，自律使我们与众不同，自律令我们活得更高级。</p>
</blockquote>
<h2 id="一个人开始废掉的三种迹象"><a class="markdownIt-Anchor" href="#一个人开始废掉的三种迹象"></a> 一个人开始废掉的三种迹象</h2>
<blockquote>
<p>在大城市里，搞废一个人的方式特别简单。给你一个安静狭小的空间，给你一根网线，最好再加一个外卖电话。好了，你开始废了。</p>
</blockquote>
<blockquote>
<p>低质量的长期宅，确实能改变一个人的心智、外貌，甚至是人生。</p>
</blockquote>
<blockquote>
<p>人喜欢在舒适熟悉的环境中待着。而这种舒适区一旦建立，你就会变得无比依赖，慢慢地爱上周围的墙，恋上舒适的小屋，从而不愿意飞出去看看，怕看到外面熙熙攘攘的世界。</p>
</blockquote>
<blockquote>
<p>一个人开始废掉的迹象之一，就是不再走出自己的舒适区。</p>
</blockquote>
<blockquote>
<p>一个人老去的标志，绝不是老成稳重、沉默寡言，而是不肯再尝试，不肯再容许自己置身不熟悉的境地。</p>
</blockquote>
<blockquote>
<p>当你停止了学习、故步自封，将自己囚禁在得过且过的牢笼中，那么你已经朝平庸迈进了一大步。</p>
</blockquote>
<blockquote>
<p>一个人开始废掉的迹象之二，便是沉溺于短期快感之中，不再做长期投入。</p>
</blockquote>
<blockquote>
<p>毁掉我们的不是我们所憎恨的东西，而恰恰是我们所热爱的东西。</p>
</blockquote>
<blockquote>
<p>任何时候，一个人都不应该做自己情绪的奴隶，不应该使一切行动都受制于自己的情绪，而应该反过来控制情绪。无论境况多么糟糕，你应该去努力支配你的环境，把自己从黑暗中拯救出来。</p>
</blockquote>
<blockquote>
<p>一个人开始废掉的迹象之三，是沦为情绪的奴隶。</p>
</blockquote>
<h2 id="二十几岁你凭什么穷得心安理得"><a class="markdownIt-Anchor" href="#二十几岁你凭什么穷得心安理得"></a> 二十几岁，你凭什么穷得心安理得</h2>
<blockquote>
<p>二十几岁的日子，应该是炙热的、丰富的、无所畏惧的。我只想跳脱出理所当然的平庸，拒绝我不愿妥协的一切。</p>
</blockquote>
<blockquote>
<p>二十几岁，穷并不可怕，但是千万不要穷得心安理得。</p>
</blockquote>
<h2 id="比赚钱更重要的是培养这三种思维方式"><a class="markdownIt-Anchor" href="#比赚钱更重要的是培养这三种思维方式"></a> 比赚钱更重要的是培养这三种思维方式</h2>
<blockquote>
<p>财富是一个人思考能力的产物。”唯有去连接更多的人和信息，突破自己的认知局限，转变自己的思维方式，进而转化成行动，才能让自己摆脱又穷又忙的窘境。</p>
</blockquote>
<h2 id="千万别让这三种心态害了你"><a class="markdownIt-Anchor" href="#千万别让这三种心态害了你"></a> 千万别让这三种心态害了你</h2>
<blockquote>
<p>现实生活中，我们总能看到一些安于现状的人。他们胆小而拘谨，害怕做出任何改变。就算机会摆在眼前，他们也会因为害怕而不敢向前一步。</p>
</blockquote>
<blockquote>
<p>生活并不会遵从某个人的愿望发展。改变随时有可能降临，但积极地面对改变却会让你发现更好的奶酪。</p>
</blockquote>
<blockquote>
<p>02</p>
</blockquote>
<blockquote>
<p>嫉妒为何物？自己不去努力，不去付诸行动，揪着对方的弱点不放，连自己也落得下作，这就叫嫉妒。</p>
</blockquote>
<blockquote>
<p>在我们的生活中，有多少人敢于抓住机会，推荐自己？我们的心态，更像成语“守株待兔”中的主人公，守着一个叫作“机会”的树桩，幻想着能够被机遇和好运砸中。</p>
</blockquote>
<blockquote>
<p>人生有时就像一场赛跑，任何的拖沓都可能导致结果的不理想。机遇总是稍纵即逝，没有人会等你，现实更不会迁就你。不要抱着“守株待兔”的心态，让失败和懊悔一步步向你逼近。</p>
</blockquote>
<h2 id="为什么你奋斗了那么久还是挤不进有钱阶层"><a class="markdownIt-Anchor" href="#为什么你奋斗了那么久还是挤不进有钱阶层"></a> 为什么你奋斗了那么久，还是挤不进“有钱阶层”</h2>
<blockquote>
<p>阻碍你通往财富自由的，不是你的原生家庭，也不是你不够努力，而是你的思维方式。</p>
</blockquote>
<blockquote>
<p>穷人总是倾向于得到一份稳定的薪水或计时工资。每个月的同一时间，有一笔固定的钱汇到他们的账户上，这能让他们有安全感。然而这份安全感也是有代价的，代价便是：凭着每个月稳定的固定工资，你永远无法实现财富自由。</p>
</blockquote>
<blockquote>
<p>富人，通常都有着自己的赚钱体系。或创业，自己成立公司，或成为某一领域不可替代的专家。他们往往早早就建立好了自己的系统，利用别人的时间赚钱。完成了初期的资本积累后，剩下的就是让钱生钱。房产增值、利息、股权收益……</p>
</blockquote>
<blockquote>
<p>如果你的目标是舒适，你就永远没有成为富人的机会。但如果你的目标是成为有钱人，那你终将会有大把舒适的机会。</p>
</blockquote>
<h2 id="有这种想法的人只会越过越穷"><a class="markdownIt-Anchor" href="#有这种想法的人只会越过越穷"></a> 有这种想法的人，只会越过越穷</h2>
<blockquote>
<p>穷人通常目光短浅、精神短视，恐惧未知、拒绝改变，因此重复做着错误的选择。</p>
</blockquote>
<blockquote>
<p>反观我们自身，有多少人会把轻松的事情留给今天的自己，把困难的事情留给明天？对于穷人来说更是如此。</p>
</blockquote>
<blockquote>
<p>贫穷，既是贫穷的原因，也是贫穷的结果。希望你我能从这四点贫穷的本质中获得启发，学会跳出局限性、用长远的眼光看待问题；积极拓宽获取知识的途径，明确自己的目标；克服拖延和懒惰，学会自控。</p>
</blockquote>
<h2 id="一个人有没有见识就藏在这三个细节里"><a class="markdownIt-Anchor" href="#一个人有没有见识就藏在这三个细节里"></a> 一个人有没有见识，就藏在这三个细节里</h2>
<blockquote>
<p>我始终相信，我读过的所有书都不会白读，它总会在未来日子的某一个场合帮助我表现得更出色，读书是可以给人以力量的，它更能给人快乐。</p>
</blockquote>
<blockquote>
<p>那些看似无用的诗词歌赋、历史人文，其实会潜藏到一个人的气质里、谈吐上。有见识的人，总会坚持阅读，不断刷新自己的眼界，挑战新的领域。所以他们才能气质如兰、口吐莲花，能对身边的事物都有着自己深刻的见解。</p>
</blockquote>
<blockquote>
<p>有见识的人，会从一个地方去到另一个地方，去感受不同文化的差异、不同思想的碰撞，让自己的视野和格局都得到进一步的提升。</p>
</blockquote>
<blockquote>
<p>旅行，不是单纯的“上车睡觉、下车拍照”，而是一种改变。去看日出日落、星辰大海，见天地、见众生、见自己，与自己进行深层次的交流。</p>
</blockquote>
<blockquote>
<p>缺见识，让多少人平庸一辈子。别总拘泥在你以为熟悉又舒适的小圈子里，世界从来不只是你身边的样子。</p>
</blockquote>
<h2 id="世界正在惩罚不爱思考的人"><a class="markdownIt-Anchor" href="#世界正在惩罚不爱思考的人"></a> 世界正在惩罚不爱思考的人</h2>
<blockquote>
<p>外表看起来勤奋，却忽略了更重要的精神上的思考。越来越多的人在逃避思考，希望能用战术上的勤奋，来掩饰战略的懒惰。</p>
</blockquote>
<blockquote>
<p>不爱思考的人，将自己有限的时间和精力都安排得满满当当，效果却不理想。不爱思考，你的勤奋和忙碌毫无价值。</p>
</blockquote>
<blockquote>
<p>我们刷着公众号、微博、今日头条、知乎，被刺激性的标题所吸引，打开正文后匆匆扫了两眼又马上关掉；占领着热搜榜的永远是明星八卦、丑闻爆料、矛盾纠葛，对个人成长毫无意义，最大的用处就是成为人们津津乐道的谈资；我们在游戏中寻找成就感，却不知自己的上升空间正被一点一点占据；我们越来越缺乏耐心去好好看完一本书，相对的，却收藏了越来越多篇“干货”，渴望通过一篇文章就能摆脱平庸、发家致富。</p>
</blockquote>
<blockquote>
<p>逃避思考、只顾当下的娱乐，也许会让我们暂时过得很轻松。然而，时间一长，你会发现：不爱思考的人，正在慢慢失去深度思考的能力，变得越来越肤浅、越来越缺乏内涵。</p>
</blockquote>
<blockquote>
<p>选择目标、找到重点，过滤掉不必要的信息，才能让你告别低水平勤奋。</p>
</blockquote>
<blockquote>
<p>我们的大脑，本质上是排斥深度思考的。一方面，深度思考要求投入大量的精力，另一方面，我们进行深度思考时，接收不到外界的刺激。</p>
</blockquote>
<blockquote>
<p>我们宁愿将碎片时间拿来愉悦自己，用各种不费脑的娱乐来取悦自己。</p>
</blockquote>
<blockquote>
<p>你想要学会深度思考，就去练习深度思考。即使刻意练习的过程中，会伴随着一定程度的痛苦。但当你一步一步接近自己的目标时，你会乐在其中，获得更高级的愉悦。</p>
</blockquote>
<blockquote>
<p>人生最终的价值在于觉醒和思考的能力，而不只在于生存。”如果你不想总是脑袋空空，带着混沌的大脑碌碌无为地度过一生，你应该拥有思考的能力。</p>
</blockquote>
<h2 id="你活得那么累为什么还生活在社会底层"><a class="markdownIt-Anchor" href="#你活得那么累为什么还生活在社会底层"></a> 你活得那么累，为什么还生活在社会底层</h2>
<blockquote>
<p>在这个快节奏的社会中，收获并不是与付出成正比的，而是与付出的稀缺性成正比。</p>
</blockquote>
<blockquote>
<p>一个人是否能够创造价值，决定其是否值钱；而一个人所拥有的能力是否稀缺，决定其能够值多少钱。</p>
</blockquote>
<blockquote>
<p>为什么你那么辛苦，却仍然生活在社会底层？决定你待遇的，不是你有多努力，甚至也不是你有多能干，而是你的位置有多不可取代，你的核心竞争力有多强，你有多不可复制。</p>
</blockquote>
<h2 id="别让你的精致仅仅是生活在朋友圈里"><a class="markdownIt-Anchor" href="#别让你的精致仅仅是生活在朋友圈里"></a> 别让你的精致，仅仅是生活在朋友圈里</h2>
<blockquote>
<p>不少人沉溺在他人对自我的评价里，因此费力地迎合着别人的喜好、刻意讨好，在朋友圈里营造着假象、发着违心的话语。</p>
</blockquote>
<blockquote>
<p>幸福是一种内心的稳定。当你开始关注自己、认真生活，你会发现，比起虚拟世界的点赞，每天都在进步的自己更值得期待。</p>
</blockquote>
<h2 id="未来的你会感谢现在自律的自己"><a class="markdownIt-Anchor" href="#未来的你会感谢现在自律的自己"></a> 未来的你，会感谢现在自律的自己</h2>
<blockquote>
<p>及时享乐，放纵自己的欲望，看上去活得随心所欲。但她却不知道：每一个不自律的行为，都会给她带来更大的痛苦。</p>
</blockquote>
<blockquote>
<p>不自律，让一个人在浑浑噩噩、随波逐流的日子里，毫无意义地耗费着生命。到头来，身体和意志力都在自我放纵中逐渐沉沦，一个人离毁灭也就不远了。</p>
</blockquote>
<blockquote>
<p>我们上班摸鱼、刷朋友圈，下班打游戏、看没有营养的网文和狗血电视剧。我们毫无顾忌地吃垃圾食品，放弃健身和有益的阅读。我们熬夜修仙，仿佛时间永远不够用，内心的空虚和迷茫却渐渐将我们吞噬。</p>
</blockquote>
<blockquote>
<p>年少时，我以为随心所欲才是自由。直到现在才明白，自律，才能带来真正的自由。</p>
</blockquote>
<blockquote>
<p>当自律成为一种习惯、一种生活方式，一个人的人格和智慧也会变得更加完善。</p>
</blockquote>
<blockquote>
<p>节制的本质就是认识自己。只有自律，才能让你洗尽铅华，遇见最本真的自己，收获最纯粹的快乐。</p>
</blockquote>
<blockquote>
<p>我不再暴躁地吃下很多东西，而是学会享受食物最原本的滋味。慢慢地咀嚼每一口米饭、每一根青菜，只要一点点美味就足以让我心满意足；我不再浮躁地追求别人拥有的东西，而是让心灵真正沉静下来，做些对自己来说最重要的事情；我开始倾听内心的声音，开始爱上了规律的生活。</p>
</blockquote>
<blockquote>
<p>那些活得极度不自律的人，大部分都作茧自缚，在堕落中慢慢沉沦。做欲望的奴隶看似轻松，到头来却只会给我们带来更大的痛苦。</p>
</blockquote>
<blockquote>
<p>不懂节制的人，总是在内疚、焦虑和无尽的悔恨中煎熬。而自律，才是唯一的救赎。月满则亏，水满则溢。节制，让自己更能珍惜生活中的每一寸感动，获得真正的喜悦。</p>
</blockquote>
<h2 id="毁掉你的不是高房价而是没有方向的自己"><a class="markdownIt-Anchor" href="#毁掉你的不是高房价而是没有方向的自己"></a> 毁掉你的不是高房价，而是没有方向的自己</h2>
<blockquote>
<p>没有方向的努力，不是投资自己，而是瞎忙活、花钱打水漂。看起来正能量无比，实际上毫无意义。除了感动自己，永远也不可能让你成为成功者，过上你想要的生活。</p>
</blockquote>
<blockquote>
<p>选对方向，比盲目前进更重要。投资自己也要讲究回报，正确地投资自己不单单是为了赚取金钱和所谓的房子，更重要的是让我们活得更有尊严、更有价值。</p>
</blockquote>
<h2 id="层次越低的人越喜欢花时间在这三件事上"><a class="markdownIt-Anchor" href="#层次越低的人越喜欢花时间在这三件事上"></a> 层次越低的人越喜欢花时间在这三件事上</h2>
<blockquote>
<p>层次越低的人，越喜欢花时间在娱乐八卦上。越来越多的人患上了网络依存症，对各类娱乐新闻上瘾、产生依赖，人云亦云，附和跟风，沉溺在虚拟的世界中不能自拔。</p>
</blockquote>
<blockquote>
<p>你的时间花在哪，你就会成为什么样的人。格局高的人，不会花太多时间在娱乐上。</p>
</blockquote>
<blockquote>
<p>层次越低的人，比起关注自己，越喜欢花更多的时间在关注他人上。</p>
</blockquote>
<blockquote>
<p>当一个人把他的精力和时间从关注外界转向关注自身的成长时，才能拥有更高的格局。</p>
</blockquote>
<blockquote>
<p>层次越低的人，越喜欢花时间在不重要不紧急的事上。</p>
</blockquote>
<h2 id="第3章圈子决定了你的层次"><a class="markdownIt-Anchor" href="#第3章圈子决定了你的层次"></a> 第3章圈子决定了你的层次</h2>
<blockquote>
<p>一辈子很长，要和有趣的人在一起。</p>
</blockquote>
<h2 id="人际交往中这样说话的人不可深交"><a class="markdownIt-Anchor" href="#人际交往中这样说话的人不可深交"></a> 人际交往中这样说话的人不可深交</h2>
<blockquote>
<p>对亲近的人挑剔是本能，但克服本能，做到对亲近的人不挑剔，则是种教养。</p>
</blockquote>
<blockquote>
<p>跟有同理心的人聊天。和这样的人说话，总是有如沐春风之感。同理心，又叫换位思考，是指站在对方立场设身处地思考的一种方式。有同理心的人，能够体会他人的情绪，理解他人的立场和感受。</p>
</blockquote>
<h2 id="边界感才是人与人之间最宝贵的品质"><a class="markdownIt-Anchor" href="#边界感才是人与人之间最宝贵的品质"></a> 边界感，才是人与人之间最宝贵的品质</h2>
<blockquote>
<p>真正成熟的人，在对待朋友的时候，懂得明确界限、自尊自爱。当界限感逐渐缺失，朋友间所有的东西都拿来共享，反而不利于关系的稳定和持续。</p>
</blockquote>
<blockquote>
<p>真正成熟的人，对待亲人的时候，懂得真诚沟通、保持各自的人格独立。很多人在试图维系亲人间的亲近感时，不自觉地放弃或者模糊了与亲人的界限，这样做无疑会损害彼此的关系。</p>
</blockquote>
<h2 id="判断一个人是否靠谱就看这三点"><a class="markdownIt-Anchor" href="#判断一个人是否靠谱就看这三点"></a> 判断一个人是否靠谱，就看这三点</h2>
<blockquote>
<p>真正靠谱的人，拥有很强的执行力，凡是答应别人的事就一定会做到。正因如此，我们才更愿意安心地把事情交给他，我们才会发自内心去信任他。</p>
</blockquote>
<blockquote>
<p>一个靠谱的人，为人处世坦荡磊落、问心无愧。这样的人，往往更容易得到信赖与尊重，人生更容易顺风顺水。</p>
</blockquote>
<blockquote>
<p>如果一件事情很烦琐，他会列出所有的细节，分解任务。如果一件事情很重要，他会预留出时间多检查几遍。如果一件事情可能有漏洞，他会尽可能地预想出每一种意外情况，事先想好补救措施。</p>
</blockquote>
<blockquote>
<p>在物欲横流、浮躁焦虑的现代社会，一个执行力强、做事磊落、喜欢未雨绸缪的人，更能带给我们稳妥和信赖。</p>
</blockquote>
<h2 id="这几种人会不断拖垮你一定要远离"><a class="markdownIt-Anchor" href="#这几种人会不断拖垮你一定要远离"></a> 这几种人会不断拖垮你，一定要远离</h2>
<blockquote>
<p>几乎99.9%的父母都会不自觉地对小孩进行情感勒索，这种情况只会让小孩越来越觉得跟父母相处是被迫的，也无法享受跟父母相处的快乐，甚至觉得跟父母通个电话都有压力。</p>
</blockquote>
<h2 id="人际交往中永远不要和这三类人纠缠"><a class="markdownIt-Anchor" href="#人际交往中永远不要和这三类人纠缠"></a> 人际交往中，永远不要和这三类人纠缠</h2>
<blockquote>
<p>生活只有10%是靠你创造的，而有90%则是看你如何去对待的。”我们一生的精力十分有限，不是每个人都值得你去浪费口舌。</p>
</blockquote>
<h2 id="什么样的朋友最值得你用心交"><a class="markdownIt-Anchor" href="#什么样的朋友最值得你用心交"></a> 什么样的朋友最值得你用心交</h2>
<blockquote>
<p>有趣的朋友在一起，他们在一念之间就能计划出一个令人惊喜的行程，喜欢即刻出发，喜欢未知的挑战；他们对生活充满好奇与热情，就像一个永不疲倦的小太阳，随时散发着正能量；他们有时脑洞奇大无比，有时又像小孩子般纯真，总是想尝试新鲜的事物。</p>
</blockquote>
<blockquote>
<p>有趣的人，他不是走进你的世界，而是为你打开一扇窗去参观他的世界。</p>
</blockquote>
<h2 id="一个人的涵养有多高看这三点就知道"><a class="markdownIt-Anchor" href="#一个人的涵养有多高看这三点就知道"></a> 一个人的涵养有多高，看这三点就知道</h2>
<blockquote>
<p>越有涵养的人，越喜欢在低调中修炼自己。低调的人，理性又不浮躁，谦虚却不卑微，不争强好胜、不事事张扬。</p>
</blockquote>
<blockquote>
<p>腹有诗书气自华。读书，才是体现一个人涵养高低的最好方式。</p>
</blockquote>
<blockquote>
<p>一个人的外表，会随着时间的流逝而悄然改变，唯有内在的涵养会历久弥新。</p>
</blockquote>
<h2 id="迷茫时培养这三种思维方式让自己增值"><a class="markdownIt-Anchor" href="#迷茫时培养这三种思维方式让自己增值"></a> 迷茫时，培养这三种思维方式让自己增值</h2>
<blockquote>
<p>所谓的绿灯思维便是，对自己接触到的新信息，保持一种开放的心态，不要带有任何偏见或先入为主。只要一有人提出任何想法或建议，你就要开始思考：为什么这个想法或建议是可行的。</p>
</blockquote>
<blockquote>
<p>学习不只是一段在脑子里完成的过程，只有当你真正将自己学会的东西变成实际行动时，你才是在真正地学习。</p>
</blockquote>
<h2 id="做对这三点一年时间快速提升学习和工作能力"><a class="markdownIt-Anchor" href="#做对这三点一年时间快速提升学习和工作能力"></a> 做对这三点，一年时间快速提升学习和工作能力</h2>
<blockquote>
<p>人最终要走上一条由自我意志推动的路。那种意志你可能一时看不清，却能感受到它和周围磕磕绊绊的摩擦。摩擦越剧烈，人就越痛苦。而你越痛苦，就越说明周遭环境和你的意志之间不匹配，所以你不得不改变你的处境。</p>
</blockquote>
<blockquote>
<p>一个人如果长期没有目标，得过且过，自然会对生活感到厌倦，容易精神疲乏，甚至造成忧郁、焦虑等症状。想要走出这种困境，首先应为自己订立生活目标。</p>
</blockquote>
<blockquote>
<p>对生活现状的不满意，是你想要进步的证据。年轻时的投资肯定能收回成本，只有不断学习下去，你才能遇见更好的自己。</p>
</blockquote>
<h2 id="每天早上六点起床你的人生赚了什么"><a class="markdownIt-Anchor" href="#每天早上六点起床你的人生赚了什么"></a> 每天早上六点起床，你的人生赚了什么</h2>
<blockquote>
<p>能控制早晨的人，方可控制人生。</p>
</blockquote>
<blockquote>
<p>你怎样度过一个早上，基本就怎样度过一生。</p>
</blockquote>
<h2 id="哪个瞬间会让你觉得读书真有用"><a class="markdownIt-Anchor" href="#哪个瞬间会让你觉得读书真有用"></a> 哪个瞬间会让你觉得读书真有用</h2>
<blockquote>
<p>读书的用处，不一定在于功成名就、荣华富贵，更重要的是提升了一个人的修养和谈吐，拓展了眼界和见识，让你拥有更多选择的权利，获得内心的平静。</p>
</blockquote>
<blockquote>
<p>读书让人拥有富足的心灵、无可比拟的气质。一个人的美貌会随着岁月的流逝而慢慢消失殆尽，而美好的气质却能够永存不朽。</p>
</blockquote>
<blockquote>
<p>读书的意义大概就是，用生活所感去读书，用读书所得去生活吧。</p>
</blockquote>
<blockquote>
<p>一日不读书，尘生其中；两日不读书，言语乏味；三日不读书，面目可憎。</p>
</blockquote>
<blockquote>
<p>你读过的书，暴露了你的人生层次。身处这样一个浮躁的时代，能坚持读书的人，更显可贵。而总有一天，你会发现，你读过的书、学过的知识会由量变到质变，进而给你的人生带来意想不到的改变。</p>
</blockquote>
<h2 id="坚持做这三件事活成自己想要的模样"><a class="markdownIt-Anchor" href="#坚持做这三件事活成自己想要的模样"></a> 坚持做这三件事，活成自己想要的模样</h2>
<blockquote>
<p>如果我们连续打了五个小时的游戏，或者连续逛了五个小时的网店、看了五个小时的电视剧，我们通常会产生一些罪恶感。这种罪恶感达到一定的阈值后，我们会开始暗示自己的大脑：要开始学习或工作了。</p>
</blockquote>
<blockquote>
<p>连续做五个小时的轻松、熟练、无关紧要的伪工作，却不会引起我们的罪恶感。虽然同样是浪费时间，但伪工作却会麻痹我们的大脑，让我们自欺欺人地以为我们在做的是正经事。</p>
</blockquote>
<blockquote>
<p>花在处理不重要的琐事上的时间，丝毫不能证明你的能力。当明白这个道理后，我开始拒绝做伪工作，过滤掉那些不必要、完全是消磨时间的工作，集中精力去做那些最重要的事。</p>
</blockquote>
<blockquote>
<p>为了不让自己脑袋变得越来越空，我一直坚持深度阅读。在阅读过程中，读到有感触的内容，有时候会摘抄进笔记本里，有时候会在旁边标注读书笔记。</p>
</blockquote>
<blockquote>
<p>静下心来读一本书，可以跨越时空，接触到那些最杰出的想法，体味最美妙的文笔。坚持深度阅读，让我学会了深度思考，遇到生活中的一些问题可以更加游刃有余地处理解决。</p>
</blockquote>
<blockquote>
<p>一心多用，很可能让我们的大脑受到伤害。一心多用，是对深度思考能力的摧残。</p>
</blockquote>
<blockquote>
<p>专注，是这个时代最稀缺又最重要的品质。</p>
</blockquote>
<blockquote>
<p>除非你去改变一些你每天都做的事情，否则，你的生活只能一如既往。成功的秘密就隐藏在你的日常行为中。</p>
</blockquote>
<h2 id="为什么有的女生活得像开了挂"><a class="markdownIt-Anchor" href="#为什么有的女生活得像开了挂"></a> 为什么有的女生活得像开了挂</h2>
<blockquote>
<p>每一个不自律的行为，都只会让自己离理想的状态越来越远。每一个开挂的人生背后，都是扎扎实实的努力和付出。</p>
</blockquote>
<blockquote>
<p>在人生的道路上，为追求真正属于自己的生活而竭尽全力，饱尝辛酸和痛苦的人生才是魅力的人生。</p>
</blockquote>
<blockquote>
<p>人生没有白走的路，每一步都算数。在漫长的岁月里，你是否为自己的生命注入了新的东西？还是依旧浑浑噩噩，羡慕着别人开挂般的人生，自己却不肯付出努力？</p>
</blockquote>
<h2 id="不摆脱这种思维模式将会毁掉你的一生"><a class="markdownIt-Anchor" href="#不摆脱这种思维模式将会毁掉你的一生"></a> 不摆脱这种思维模式，将会毁掉你的一生</h2>
<blockquote>
<p>悲观的人很容易放弃，常常陷入对自我的怀疑、批判之中。习惯性的悲观想法会导致更多不顺利的事降临到我们头上，而且这种想法会使我们很容易陷入抑郁状态，使我们不能发挥出原有的能力。</p>
</blockquote>
<blockquote>
<p>用悲观的思维模式看待人生的人，常常在开始做一件事情之前就想到种种失败的可能性。大量关于失败的悲观预想，会让一个人沉浸在挫败和痛苦之中。为了避开这些痛苦，悲观的人干脆不再尝试，不再付诸行动。这样只会导致失去更多的机会，失去从头再来的可能性，变得愈加平庸。</p>
</blockquote>
<blockquote>
<p>轻度的悲观可以让我们在做事之前三思，不会做出愚蠢的决定。但总是用悲观的思维模式去看待事物，我们永远不敢去尝试新事物，也不会知道我们的潜力有多大。</p>
</blockquote>
<h2 id="正确的思维方式比所谓的努力更重要"><a class="markdownIt-Anchor" href="#正确的思维方式比所谓的努力更重要"></a> 正确的思维方式，比所谓的努力更重要</h2>
<blockquote>
<p>世界并不是非对即错、非黑即白。单一思维会让我们思想僵化，缺乏创新。我们需要学习不陷入固有的思维模式，用更经济的方式解决问题。只有这样，才能跳出局限，以前所未有的新视角、新观点去认识事物。</p>
</blockquote>
<blockquote>
<p>省钱”的最高境界，就是投资自己。将自己的时间和精力花费在未来能够增值的事情上，才能让自己变得更值钱。</p>
</blockquote>
<blockquote>
<p>低端勤奋，不需要动脑，精疲力竭后，感动了自己，导致他们不可能提升自己，没办法让自己更值钱。</p>
</blockquote>
<blockquote>
<p>当你的勤奋不能转化为价值时，你的勤奋只是低端的勤奋。低端的勤奋，把自己感动得一塌糊涂，却收效甚微。</p>
</blockquote>
<h2 id="高层次的人生从来不在这三件事上节省"><a class="markdownIt-Anchor" href="#高层次的人生从来不在这三件事上节省"></a> 高层次的人生，从来不在这三件事上节省</h2>
<blockquote>
<p>不出时间运动的人，迟早会腾出时间来减肥；腾不出时间睡觉的人，迟早会腾出时间来生病。</p>
</blockquote>
<blockquote>
<p>高层次的人生，从来不在经营人脉这件事上节省。在这个时代，人脉带来大量的知识跨界，能够让你学得更快、视野更广、思考更全面。</p>
</blockquote>
<blockquote>
<p>只有跨出自己的舒适区，去接触自己的未知领域，不断地学习和改进，才是对自己最好的投资。</p>
</blockquote>
<blockquote>
<p>高层次的人生，从来不在投资自己这件事上节省。多读书，汲取优秀的人的思想；多旅行，变得更加豁达开朗；多培养挖掘自己的技能，让自己在职场中变得不可代替，这些都能帮助我们成为更好的人。</p>
</blockquote>
<h2 id="自律的人生开了挂"><a class="markdownIt-Anchor" href="#自律的人生开了挂"></a> 自律的人生开了挂</h2>
<blockquote>
<p>当一个人缺乏自律的时候，他做的事情总是在受习惯和诱惑的影响，要么就是被他人的思想观念所扰，几乎永远不可能去做内心真正渴望的事。你会发现：那些自律到极致的人，都拥有了开挂的人生。</p>
</blockquote>
<blockquote>
<p>自律的前期是兴奋的，中期是痛苦的，后期是享受的。但有没有发现，大部分人都在自律的中期——痛苦期徘徊太久，以至于把痛苦当作自律。</p>
</blockquote>
<blockquote>
<p>千万不要放纵自己，给自己找借口。对自己严格一点，时间长了，自律便成为一种习惯、一种生活方式，你的人格和智慧也因此变得更加完美。</p>
</blockquote>
<h2 id="这个不经意的坏习惯会让你越过越穷"><a class="markdownIt-Anchor" href="#这个不经意的坏习惯会让你越过越穷"></a> 这个不经意的坏习惯，会让你越过越穷</h2>
<blockquote>
<p>如果你确实很有钱，在高档商品上随便挥霍一点倒也无妨。但假如你还只是个想要致富的普通人，那么，这样的消费不可能让你成为有钱人，永远也不会。</p>
</blockquote>
<blockquote>
<p>坚持记账，可以让自己从日常开支中总结出规律，避免自己又在不经意间增加不必要的开支。更重要的是，可以通过记账培养自己的耐心，有规律地规划自己的生活。只有逼着自己看清在消费上的坏习惯，才能真正有所成长。</p>
</blockquote>
<blockquote>
<p>不合理的消费习惯，却只会让你在物质中迷失自我、无法掌控自己的人生。不要让这个不经意的坏习惯，导致你越来越穷。</p>
</blockquote>
<h2 id="越会赚钱的人越喜欢将时间花在这三件事上"><a class="markdownIt-Anchor" href="#越会赚钱的人越喜欢将时间花在这三件事上"></a> 越会赚钱的人，越喜欢将时间花在这三件事上</h2>
<blockquote>
<p>这个世界很残酷，努力不一定有结果，但是不努力一定没结果。人生，从来不怕大器晚成，怕的是一生平庸。希望年轻的我们，都能尽力而为，不要仅仅满足于现状。</p>
</blockquote>
<h2 id="三十岁之前请逼自己成为这种人"><a class="markdownIt-Anchor" href="#三十岁之前请逼自己成为这种人"></a> 三十岁之前，请逼自己成为这种人</h2>
<blockquote>
<p>在这个国度，只有不停奔跑，才能让你保持在原地。如果你要抵达另一个地方，你必须以双倍于现在的速度奔跑。只有掌控好时间的人，才能掌控自己的人生。</p>
</blockquote>
<blockquote>
<p>生活当中，有趣和好奇心是为了取悦自己，有意思和有用是为了取悦别人。</p>
</blockquote>
<blockquote>
<p>与摄入过多垃圾食品和含糖饮料一样，“无趣的生活”会导致细胞损伤，加速人体老化，进而缩短寿命。</p>
</blockquote>
<blockquote>
<p>“走出你的舒适区，去感受、去接触奇迹发生的地方，感受尴尬、感受嘲笑、感受冒险。”接触奇怪的事情或情境，接触狂野的想法，接触让你哆嗦的事情，接触奇怪的景色、全新的声音。相信我，会很有意思的。</p>
</blockquote>
<blockquote>
<p>当一个人缺乏自律的时候，他做的事情永远受到即时诱惑的影响，永远也不可能去做内心真正渴望的事情。</p>
</blockquote>
<h2 id="层次越低的人越喜欢拖延"><a class="markdownIt-Anchor" href="#层次越低的人越喜欢拖延"></a> 层次越低的人，越喜欢拖延</h2>
<blockquote>
<p>别把窘境迁怒于命运或别人，唯一可以抱怨的，只是不够努力的自己。</p>
</blockquote>
<blockquote>
<p>我们都因拖延而焦虑，却又在焦虑中拖延。</p>
</blockquote>
<blockquote>
<p>“人们拖沓的主要原因是恐惧。”我们总是担心被他人评判或者自我评判，害怕自己的不足被发现，害怕付出最大的努力还是做得不够好，害怕达不到要求。</p>
</blockquote>
<blockquote>
<p>学习新的知识、进行一项有挑战的工作，这类任务会让我们大脑的某个部分发出疼痛的信号，你会不由自主地想将任务滞后，选择“待会儿再说”。</p>
</blockquote>
<blockquote>
<p>在做一项重要任务的时候，找一个可以让你静下心来、集中精神的工作区域。</p>
</blockquote>
<blockquote>
<p>将一项大的、复杂的任务分解成简单、具体的步骤，按照步骤来完成，并且记录进度，最好找人监督你的成果。</p>
</blockquote>
<blockquote>
<p>逃避是可耻的，也并没有用，只有行动才是治疗拖延的最佳良药。</p>
</blockquote>
<h2 id="为什么叫你不要过度自律"><a class="markdownIt-Anchor" href="#为什么叫你不要过度自律"></a> 为什么叫你不要过度自律</h2>
<blockquote>
<p>其实，大多数人的意志力都很薄弱，因为自律只是一时的行为，而失控却是生活的常态。</p>
</blockquote>
<blockquote>
<p>自律需要大量的能量。每个人的自控力就像肌肉一样有限，它被使用之后会渐渐疲惫。如果你不让肌肉休息，你就会完全失去力量，就像运动员把自己逼到筋疲力尽一样。每次使用自控力都会有消耗，任何给你的身心带来压力的东西，都有可能摧毁你的意志力。</p>
</blockquote>
<blockquote>
<p>为什么自律会这么难？因为我一开始就给自己定了一个过高的目标，这个目标让我时刻处于压力环境下。当我们感到情绪低落、感到压力巨大时，大脑更容易受到诱惑。对我来说，那高脂肪、高糖分的“安慰”食物，比什么都能缓解我的压力，却也因此，摧毁了我的自控力。</p>
</blockquote>
<blockquote>
<p>在自律这件事情上，任何挫折都会引起这种恶性循环。你可能只因多喝了一杯酒、多玩了一局游戏，或者晚起了十分钟，就会陷入无限的自责中，为了安抚这种情绪，你会倾向于喝更多的酒、玩更多局游戏、干脆赖在床上不起来。导致更多堕落的行为并不是第一次的放弃，而是第一次放弃之后产生的羞耻感、罪恶感、失控感和绝望感。</p>
</blockquote>
<blockquote>
<p>我们都知道只有自律才能获得自由。但是过度自律却容易引起适得其反的效果。每个人的意志力都是有限的，一旦你将它消耗殆尽，你在诱惑面前就会毫无防备。</p>
</blockquote>
<h2 id="你对待生活的态度暴露了你的层次"><a class="markdownIt-Anchor" href="#你对待生活的态度暴露了你的层次"></a> 你对待生活的态度，暴露了你的层次</h2>
<blockquote>
<p>现在的我们，越来越习惯凑合和将就。拿工作忙当借口，吃着油腻的快餐、放弃健身和阅读，每天顶着黑眼圈浑浑噩噩地度过。</p>
</blockquote>
<blockquote>
<p>一个人专注于寻找生活中的美好、讲究生活情趣的过程，也就是提升自己、重塑身心的过程。</p>
</blockquote>
<blockquote>
<p>层次越高的人，越不喜欢将就。你越是将就，人生就越是不讲究。你</p>
</blockquote>
<blockquote>
<p>学会培养生活的情趣，可以从简单的小事开始：买一张柔软舒适的床，遵循早睡早起的生物钟；养几株充满生命力的盆栽，将房间布置得整洁干净；冰箱里塞满水果与蔬菜，每天为自己做一顿营养又健康的早餐；坚持锻炼身体，拒绝消极的情绪，学会将元气满满的微笑挂在嘴边。</p>
</blockquote>
<blockquote>
<p>生活会用平淡消磨掉我们的热情，唯有懂得为自己的生活增添乐趣，才能对未来充满希望。</p>
</blockquote>
<h2 id="不爱计较的人活得到底有多赚"><a class="markdownIt-Anchor" href="#不爱计较的人活得到底有多赚"></a> 不爱计较的人，活得到底有多赚</h2>
<blockquote>
<p>在这不停地计较得失中，我们忘了自己的初衷，忘了真正重要的事情。当一个人的注意力被计较和算计所占据，他的格局只会越来越小。</p>
</blockquote>
<blockquote>
<p>我们经常用“格局”来评判一个人。格局大的人，你会感觉他身上有宏大的气场，有广阔的眼界，有不俗的涵养。相反，格局小的人，只对眼前的蝇头小利感兴趣，凡事斤斤计较，内涵让人一望到底。</p>
</blockquote>
<blockquote>
<p>你在乎的、计较的，往往能反映出你的水平。格局越大、层次越高的人，反而计较得越少。</p>
</blockquote>
<h2 id="月薪多少钱才能给你想要的安全感"><a class="markdownIt-Anchor" href="#月薪多少钱才能给你想要的安全感"></a> 月薪多少钱，才能给你想要的安全感</h2>
<blockquote>
<p>人的一切痛苦，本质上都是对自己无能的愤怒。</p>
</blockquote>
<blockquote>
<p>我们追求经济独立，钱不是最终的目标，钱所带来的自由选择的权利才是。</p>
</blockquote>
<h2 id="从明天起做个不好相处的人"><a class="markdownIt-Anchor" href="#从明天起做个不好相处的人"></a> 从明天起，做个“不好相处”的人</h2>
<blockquote>
<p>很多人习惯去做一个体贴、顺从的人，却把握不好那个度，结果不知不觉把自己变成了别人眼中的老好人。身边的人有事没事都喜欢麻烦你，你来者不拒，然后遇到各种情况却总是让你先退让，而他们还对此习以为常甚至不以为然，结果就是事情都让你做了，亏也全让你吃了。</p>
</blockquote>
<blockquote>
<p>生活中，我们往往因为害怕失去别人，而不懂得拒绝。殊不知，不懂拒绝，毫无底线的妥协，会让自己失去更多。</p>
</blockquote>
<blockquote>
<p>心理学上有个专业术语，叫“阿伦森效应”，指的是人们最喜欢那些对自己的喜爱、奖励、赞扬不断增加的人或物，最不喜欢那些不断减少的人或物。当有人找你帮忙，你次次都没有拒绝，为自己树立了一个“老好人”的形象，对方也习惯了你的好，变得习以为常、不再感激。</p>
</blockquote>
<blockquote>
<p>过分的牺牲和忍让只会让身边的人越来越骄纵，带不来任何的感激之心。每个人都有自己的个性和原则，没有必要为了讨好别人而勉强自己去做不想做的事。</p>
</blockquote>
<blockquote>
<p>你一开始就太好说话，什么事情都答应，什么东西都给，什么错误都原谅，对方对你的心理预期值就会处于过高的位置，无论你做什么对方都觉得理所应当。只有先抑后扬，对方才会感到惊喜。</p>
</blockquote>
<h2 id="放弃你的沉没成本别再用不分手相互折磨"><a class="markdownIt-Anchor" href="#放弃你的沉没成本别再用不分手相互折磨"></a> 放弃你的沉没成本，别再用不分手相互折磨</h2>
<blockquote>
<p>一个成熟的人应该知道，你在做任何事情的时候都有沉没成本。有时候舍弃也是一种获得。希望你不要被已经成为过去的成本所束缚，连未来的美好时光都耽误了。</p>
</blockquote>
<h2 id="定期扔这三样东西会让你活得更高级"><a class="markdownIt-Anchor" href="#定期扔这三样东西会让你活得更高级"></a> 定期扔这三样东西，会让你活得更高级</h2>
<blockquote>
<p>如果你自己不强大，那些社交其实没有什么用。只有等价的交换，才能得到合理的帮助。</p>
</blockquote>
<blockquote>
<p>放弃无用的社交，把更多的时间留给自己和家人。专心做自己喜欢做的事，因为人生最曼妙的风景，是内心的淡定与从容。</p>
</blockquote>
<blockquote>
<p>对待诱惑，不要因为便宜就去买一些自己并不需要的东西，而是买一些质量上乘、真正适合自己的物品；对待生活，定期整理房间，丢掉不再适合自己的物品，人生就不会有那么多烦恼。</p>
</blockquote>
<blockquote>
<p>我们需要的是一种深度思考、适当放空、化繁为简的能力，这需要我们学会过滤多余的信息。</p>
</blockquote>
<h2 id="独处是一个成年人最好的奢侈品"><a class="markdownIt-Anchor" href="#独处是一个成年人最好的奢侈品"></a> 独处，是一个成年人最好的奢侈品</h2>
<blockquote>
<p>以前喜欢一个人，现在喜欢一个人。独处，是一个成年人最好的奢侈品。</p>
</blockquote>
<blockquote>
<p>拥有独处的能力，是一个人情感成熟的重要标志之一。</p>
</blockquote>
<blockquote>
<p>利用独处的时间为自己增值，才能把生活的点滴过成诗。真正拉开你与他人差距的，有时候恰恰就是独处的时光。</p>
</blockquote>
<blockquote>
<p>一个人最好的状态，无非是既能享受得了繁华，也能安顿一个人的时光。在这些时光里，愿我们终将与孤独握手言和，重新拥有对抗未知的勇气。</p>
</blockquote>
<h2 id="仪式感对我们来说到底有多重要"><a class="markdownIt-Anchor" href="#仪式感对我们来说到底有多重要"></a> 仪式感对我们来说到底有多重要</h2>
<blockquote>
<p>有时候，你觉得生活太粗糙，那是因为你没有想办法让它变得精致。只有仪式感，才能让你放大每一种情绪，让缱绻在岁月中的日常琐碎，变成充满感动的细水长流。</p>
</blockquote>
<blockquote>
<p>仪式是一件很重要的事情。喝牛奶时，你替我擦掉嘴边的白泡沫，是仪式；出门时，你把我的领带给调整好，是仪式；走路时，你蹲下来帮我系好鞋带，是仪式；逛街时，你记得我喜欢的衣服买来送给我，是仪式。</p>
</blockquote>
<blockquote>
<p>一个人上班的状态其实从穿着就能看出，如果穿得过于休闲，上班的状态也会比较轻松，可能会影响工作效率。这种仪式感，意味着对自我的严格要求，对每一个场合的尊重。</p>
</blockquote>
<blockquote>
<p>有仪式感的人生，才使我们切切实实有了存在感。不是为他人留下什么印象，而是自己的心在真切地感知生命，充满热忱地面对生活。</p>
</blockquote>
<blockquote>
<p>在漫长而无边的黑夜里，只有善待自己，才能让生活变得精致而丰盛。愿你我能感受平凡生活中的小确幸，重新拾起对未来的美好向往。</p>
</blockquote>
<h2 id="你的文化层次有多高看这三点就知道"><a class="markdownIt-Anchor" href="#你的文化层次有多高看这三点就知道"></a> 你的文化层次有多高，看这三点就知道</h2>
<blockquote>
<p>文化可以用四句话表达：根植于内心的修养；无需提醒的自觉；以约束为前提的自由；为别人着想的善良。</p>
</blockquote>
<blockquote>
<p>不管环境如何浮躁或如何荒芜，有文化的人已然可以丰富自己的内心，并从中获得安宁。他们习惯独处、懂得独处、渴望独处，在独处中思考、在独处中升华。一个有文化的人，不畏惧独处，更喜欢在独处中默默提升自己。</p>
</blockquote>
<h2 id="深到骨子里的教养是从不做这件事"><a class="markdownIt-Anchor" href="#深到骨子里的教养是从不做这件事"></a> 深到骨子里的教养，是从不做这件事</h2>
<blockquote>
<p>一个人最大的恶意，就是把自己的理解强加于别人，把所有的结果理所当然用自己的过程来解释，并一直认为自己是正确的。</p>
</blockquote>
<blockquote>
<p>这一生，太多人都是在负重前行。你永远都不会知道别人经历了什么，因此也不要妄自评价。</p>
</blockquote>
<blockquote>
<p>每个人各有自己的生活取向和价值选择，不要做他人生活的审判者。</p>
</blockquote>
<blockquote>
<p>深入骨髓的教养，是从不随意评价他人。</p>
</blockquote>
<blockquote>
<p>人生最曼妙的风景，是内心的淡定与从容。专注自身，你会拥有更广阔的天空。</p>
</blockquote>
<h2 id="有一种教养叫不给别人添麻烦"><a class="markdownIt-Anchor" href="#有一种教养叫不给别人添麻烦"></a> 有一种教养，叫“不给别人添麻烦”</h2>
<blockquote>
<p>有一种教养，就是力所能及地做好自己的事，不给别人添麻烦。</p>
</blockquote>
<blockquote>
<p>朋友之间，如果长时间不联系，感情容易变淡，想要维系，需要多联系、多走动。并不代表，要理所当然地麻烦别人，让别人为难还毫无自察之心。</p>
</blockquote>
<h2 id="情商高的人都有这三种特质"><a class="markdownIt-Anchor" href="#情商高的人都有这三种特质"></a> 情商高的人，都有这三种特质</h2>
<blockquote>
<p>情商高的本质，是懂得真心实意地站在对方角度着想。</p>
</blockquote>
<blockquote>
<p>情商高的人，不会将时间花在无用的批评上，而是会尽量设身处地地去想问题：他为什么这么做？怎样才能让他不这么做？这比批评和训斥要有效得多。</p>
</blockquote>
<blockquote>
<p>一个人的成就，情商占80%，专业技术、智商占20%。为人处世的能力，有时候比智力和工作能力更为重要。拥有良好的情商，才能建立起良好的人际关系，获得他人的尊重和认可。</p>
</blockquote>
<blockquote>
<p>情商高的人，一般拥有这三种特质：不会随意评判别人、善用利他思维、懂得倾听他人的意见。真正的高情商，不是靠钻研谈话技巧、说话技术就能够练成的，最重要的是拥有一颗懂得换位思考、设身处地地替别人着想的心。</p>
</blockquote>
<h2 id="聊天时的这三个细节真的很加分"><a class="markdownIt-Anchor" href="#聊天时的这三个细节真的很加分"></a> 聊天时的这三个细节，真的很加分</h2>
<blockquote>
<p>做一个善于倾听的人，鼓励别人谈论他们自己，这是让别人喜欢你的方式之一。</p>
</blockquote>
<blockquote>
<p>做一个会说话的人，首先就要多积累、多思考。只有不断地去接触和学习新事物，积累知识、整合知识，变成自己的东西，才能不断输出。</p>
</blockquote>
<blockquote>
<p>在聊天过程中，同理心才是最终的秘诀。当你认为别人的感受和你自己的一样重要时，气氛才会融洽。每个人都有表达的欲望和被认可的期待，聊天就是让这种欲望释放的时刻。</p>
</blockquote>
<h2 id="情商高的人从不说这四句话"><a class="markdownIt-Anchor" href="#情商高的人从不说这四句话"></a> 情商高的人，从不说这四句话</h2>
<blockquote>
<p>情商越高的人，越不会用语言暴力来伤害别人。如果你懂得适当地遣词造句，不至于引起口角、抵抗，造成对别人的伤害，你与他人冲突的可能性降低，压力自然也会大大减小。</p>
</blockquote>
<blockquote>
<p>一个高情商的人，必定能够体察自己的情绪，控制和管理自己的言语。学会退步忍让，凡事三思而后行，遇到矛盾冲突时，不要为一点小事大动肝火、随意指责。</p>
</blockquote>
<blockquote>
<p>柔软对话，也是一种力量的表现。一个人的高情商，根植于为他人着想的善良中，知道别人的不易、懂得用同理心换位思考，不会用语言伤人。</p>
</blockquote>
<h2 id="生活中的三个细节能出卖一个人的人品"><a class="markdownIt-Anchor" href="#生活中的三个细节能出卖一个人的人品"></a> 生活中的三个细节，能出卖一个人的人品</h2>
<blockquote>
<p>只有最亲的人才会无休止地包容你，这份包容不应该被肆无忌惮地挥霍。</p>
</blockquote>
<blockquote>
<p>一个人品极好的人，绝不会被戾气所控，因为他们的温柔与耐心已深入骨髓。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>如何释放Linux存储空间</title>
    <url>/2021/02/06/%E5%A6%82%E4%BD%95%E9%87%8A%E6%94%BELinux%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4/</url>
    <content><![CDATA[<p>由于服务器上存储空间即将用完，不得不需要释放新的空间，及挂载新的硬盘，本文展示如何在Linux查看硬盘情况，释放硬盘空间及挂载新的硬盘</p>
<a id="more"></a>
<h2 id="查看当前硬盘情况"><a class="markdownIt-Anchor" href="#查看当前硬盘情况"></a> 查看当前硬盘情况<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">df -lh</span><br></pre></td></tr></table></figure>
<p>查看当前挂载的硬盘</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure>
<p><strong>释放空间</strong></p>
<p>通过以下命令逐级搜索Linux目录，找出占用空间的最大的文件，将其删除或移除</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du --max-depth=1 -lh</span><br></pre></td></tr></table></figure>
<h2 id="格式化分区"><a class="markdownIt-Anchor" href="#格式化分区"></a> 格式化分区</h2>
<p>在linux上挂载新硬盘前，尽量使用ext4格式，所以不是该格式的建议提前先格式化（格式化时需提前卸载硬盘）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1</span><br></pre></td></tr></table></figure>
<p>ext4格式的硬盘下，经常能看见 系统创建的lost+found的文件夹<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
<ul>
<li>通常是未链接的文件（名字已经被删除），但是这些文件还被一些进程使用（数据没有删除），在突然关机时（内核panic或者突然断电）出现，这些文件系统会自动删除。</li>
<li>当因为软件或者硬件出现错误，导致文件系统不一致，也有可能把有问题的文件放到lost+found目录。它提供了恢复丢失文件的一种方法</li>
<li>如果你不小心删除了lost+found目录，不能使用mkdir命令创建lost+found目录，应该使用mklost+found命令创建它</li>
</ul>
<h2 id="挂载硬盘"><a class="markdownIt-Anchor" href="#挂载硬盘"></a> 挂载硬盘</h2>
<p>使用以下命令将新硬盘挂载到系统上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sda1 /mnt</span><br></pre></td></tr></table></figure>
<p><strong>开机挂载硬盘</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/fatab</span><br></pre></td></tr></table></figure>
<p>在该文件内添加一行，指明待加载的硬盘<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082028616.png" alt="image-20210205155011394"></p>
<p>参数解释：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">要挂载的设备或伪文件系统：设备文件、LABEL(LABEL="")、UUID(UUID="")、伪文件系统名称(proc, sysfs)</span><br><span class="line">挂载点：指定的文件夹</span><br><span class="line">挂载选项：defaults</span><br><span class="line">转储频率：0：不做备份;1：每天转储;2：每隔一天转储</span><br><span class="line">自检次序：0：不自检；1：首先自检；一般只有rootfs才用1；</span><br></pre></td></tr></table></figure>
<h2 id="卸载磁盘"><a class="markdownIt-Anchor" href="#卸载磁盘"></a> 卸载磁盘</h2>
<p>通过以下命令卸载磁盘</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">umount /dev/sda1或/mnt</span><br></pre></td></tr></table></figure>
<p>查看分区的uuid<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure>
<p><strong>对挂载及挂载点的理解</strong><sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">根文件系统之外的其他文件要想能够被访问，都必须通过“关联”至根文件系统上的某个目录来实现，此关联操作即为“挂载”，此目录即为“挂载点”,解除此关联关系的过程称之为“卸载”</span><br></pre></td></tr></table></figure>
<ol>
<li>挂载：根文件系统外通过关联至根文件系统上的某个目录来实现访问</li>
<li>挂载点：mount_point，用于作为另一个文件系统的访问入口</li>
</ol>
<p>挂载点必须满足以下要求：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1) 事先存在；</span><br><span class="line">(2) 应该使用未被或不会被其它进程使用到的目录；</span><br><span class="line">(3) 挂载点下原有的文件将会被隐藏；</span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>Linux下挂载机械硬盘(<a href="https://blog.csdn.net/m0_37407756/article/details/79529399">https://blog.csdn.net/m0_37407756/article/details/79529399</a>) <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/cheyunhua/p/14158174.html">Linux系统中根目录下或者新挂载的磁盘目录下有一个叫lost+found，它的作用是什么？</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.linuxidc.com/linux/2016-08/134666.htm">Linux基础知识之挂载详解（mount,umount及开机自动挂载）</a> <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://www.linuxprobe.com/partition-file-system.html">Linux查看分区文件系统类型的几种方法</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux上编译带CUDA(GPU)的OpenCV</title>
    <url>/2021/02/05/%E5%A6%82%E4%BD%95%E7%BC%96%E8%AF%91opencv%EF%BC%88%E5%B8%A6cuda%E6%A8%A1%E5%9D%97%EF%BC%89/</url>
    <content><![CDATA[<p>本文介绍编译包含cuda模块的opencv，可以在GPU上完成opencv的操作，加速opencv的处理速度，本文用于记录在Linux上编译opencv的过程、问题</p>
<a id="more"></a>
<p><strong>编译环境</strong>：</p>
<ul>
<li>
<p>系统：Ubuntu 16.04</p>
</li>
<li>
<p>显卡：RTX3090</p>
</li>
<li>
<p>cmake：3.19.3</p>
</li>
<li>
<p>gcc：6.5.0</p>
</li>
</ul>
<blockquote>
<p>注：cmake、gcc系统自带版本不是3.19.3、6.5.0，为解决cmake过程中文件下载问题，升级cmake到3.19.3，但是感觉没有作用；gcc原始是5.x.x，升级之后避免了一些错误，是有效的</p>
</blockquote>
<p><strong>软件依赖</strong>：</p>
<ul>
<li>cuda    11.1</li>
<li>cudnn  8.0.5</li>
</ul>
<p>默认在以上环境下，编译<code>opencv4.4.0</code>，包括C++和Python3的接口。（编译v4.4.0之前，使用v4.2.0进行编译，一直无法找到cudnn，可能是cuda及cudnn版本较高，较低版本的opencv还未适配，所以建议对opencv4.4.0及以上版本进行编译，类似经历出现在<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>）</p>
<h2 id="下载源码"><a class="markdownIt-Anchor" href="#下载源码"></a> 下载源码</h2>
<p>从<a href="https://github.com/opencv/opencv/tags">github</a>下载opencv4.4.0及opencv_contrib-4.4.0</p>
<p>解压后，将opencv_contrib-4.4.0放进opencv4.4.0目录下，并新建编译文件夹（build），文件目录结构如下：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082027619.png" alt="image-20210205104342803"></p>
<h2 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h2>
<blockquote>
<p>以下参考：<a href="https://medium.com/@sb.jaduniv/how-to-install-opencv-4-2-0-with-cuda-10-1-on-ubuntu-20-04-lts-focal-fossa-bdc034109df3">How to install OpenCV 4.2.0 with CUDA 10.1 on Ubuntu 20.04 LTS (Focal Fossa)</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#更新系统</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译工具</span></span><br><span class="line">sudo apt install build-essential cmake pkg-config unzip yasm git checkinstall</span><br><span class="line"></span><br><span class="line"><span class="comment">#Image I/O libs</span></span><br><span class="line">sudo apt install libjpeg-dev libpng-dev libtiff-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Video/Audio Libs — FFMPEG, GSTREAMER, x264 and so on.</span></span><br><span class="line">sudo apt install libavcodec-dev libavformat-dev libswscale-dev libavresample-dev </span><br><span class="line">sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev </span><br><span class="line">sudo apt install libxvidcore-dev x264 libx264-dev libfaac-dev libmp3lame-dev libtheora-dev  </span><br><span class="line">sudo apt install libfaac-dev libmp3lame-dev libvorbis-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#OpenCore — Adaptive Multi Rate Narrow Band (AMRNB) and Wide Band (AMRWB) speech codec</span></span><br><span class="line">sudo apt install libopencore-amrnb-dev libopencore-amrwb-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Cameras programming interface libs</span></span><br><span class="line">sudo apt-get install libdc1394-22 libdc1394-22-dev libxine2-dev libv4l-dev v4l-utils </span><br><span class="line"><span class="built_in">cd</span> /usr/include/linux </span><br><span class="line">sudo ln -s -f ../libv4l1-videodev.h videodev.h </span><br><span class="line"></span><br><span class="line"><span class="comment">#GTK lib for the graphical user functionalites coming from OpenCV highghui module</span></span><br><span class="line">sudo apt-get install libgtk-3-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Python libraries for python3（本文安装至conda下，无次步骤）</span></span><br><span class="line">sudo apt-get install python3-dev python3-pip</span><br><span class="line">sudo -H pip3 install -U pip numpy</span><br><span class="line">sudo apt install python3-testresources</span><br><span class="line"></span><br><span class="line"><span class="comment">#Parallelism library C++ for CPU</span></span><br><span class="line">sudo apt-get install libtbb-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Optimization libraries for OpenCV</span></span><br><span class="line">sudo apt-get install libatlas-base-dev gfortran</span><br><span class="line"></span><br><span class="line"><span class="comment">#Optional libraries</span></span><br><span class="line">sudo apt-get install libprotobuf-dev protobuf-compiler </span><br><span class="line">sudo apt-get install libgoogle-glog-dev libgflags-dev </span><br><span class="line">sudo apt-get install libgphoto2-dev libeigen3-dev libhdf5-dev doxygen</span><br></pre></td></tr></table></figure>
<h2 id="cmake生成待编译文件"><a class="markdownIt-Anchor" href="#cmake生成待编译文件"></a> cmake生成待编译文件</h2>
<p>进入build目录下，执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE=RELEASE \</span><br><span class="line">-D CMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span> \</span><br><span class="line">-D CMAKE_C_COMPILER=/usr/bin/gcc-6 \</span><br><span class="line">-D INSTALL_PYTHON_EXAMPLES=ON \</span><br><span class="line">-D INSTALL_C_EXAMPLES=ON \</span><br><span class="line">-D OPENCV_ENABLE_NONFREE=ON \</span><br><span class="line">-D BUILD_opencv_python3=ON \</span><br><span class="line">-D WITH_CUDA=ON \</span><br><span class="line">-D WITH_CUDNN=ON \</span><br><span class="line">-D WITH_TBB=ON \</span><br><span class="line">-D OPENCV_DNN_CUDA=ON \</span><br><span class="line">-D ENABLE_FAST_MATH=1 \</span><br><span class="line">-D CUDA_FAST_MATH=1 \</span><br><span class="line">-D CUDA_ARCH_BIN=8.6 \</span><br><span class="line">-D WITH_CUBLAS=1 \</span><br><span class="line">-D OPENCV_GENERATE_PKGCONFIG=ON \</span><br><span class="line">-D OPENCV_EXTRA_MODULES_PATH=/home/xx/soft/opencv_gpu/opencv-4.4.0/opencv_contrib-4.4.0/modules \</span><br><span class="line">-D PYTHON3_EXECUTABLE=/home/xx/anaconda3/envs/py37/bin/python3.7m \</span><br><span class="line">-D PYTHON3_INCLUDE_DIR=/home/xx/anaconda3/envs/py37/include/python3.7m \</span><br><span class="line">-D PYTHON3_LIBRARY=/home/xx/anaconda3/envs/py37/lib/libpython3.7m.so \</span><br><span class="line">-D PYTHON3_NUMPY_INCLUDE_DIRS=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages/numpy/core/include \</span><br><span class="line">-D PYTHON3_PACKAGES_PATH=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages \</span><br><span class="line">-D PYTHON_DEFAULT_EXECUTABLE=/home/xx/anaconda3/envs/py37/bin/python3.7m \</span><br><span class="line">-D CUDNN_LIBRARY=/usr/<span class="built_in">local</span>/cuda/lib64/libcudnn.so.8.0.5 \</span><br><span class="line">-D CUDNN_INCLUDE_DIR=/usr/<span class="built_in">local</span>/cuda/include  \</span><br><span class="line">-D CUDA_CUDA_LIBRARY=/usr/<span class="built_in">local</span>/cuda/lib64/stubs/libcuda.so \</span><br><span class="line">-D OPENCV_PYTHON3_INSTALL_PATH=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages \</span><br><span class="line">-D WITH_WEBP=OFF \</span><br><span class="line">-D WITH_OPENCL=OFF \</span><br><span class="line">-D ETHASHLCL=OFF \</span><br><span class="line">-D ENABLE_CXX11=ON \</span><br><span class="line">-D BUILD_EXAMPLES=OFF \</span><br><span class="line">-D OPENCV_ENABLE_NONFREE=ON \</span><br><span class="line">-D WITH_OPENGL=ON \</span><br><span class="line">-D WITH_GSTREAMER=ON \</span><br><span class="line">-D WITH_V4L=ON \</span><br><span class="line">-D WITH_QT=OFF \</span><br><span class="line">-D BUILD_opencv_python3=ON \</span><br><span class="line">-D BUILD_opencv_python2=OFF \</span><br><span class="line">-D HAVE_opencv_python3=ON   ..</span><br></pre></td></tr></table></figure>
<p><strong>关键参数说明</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BUILD_opencv_python3：</span><br><span class="line">CUDA_ARCH_BIN:显卡算力,Nvidia官网查询，RTX3090对应8.6</span><br><span class="line">OPENCV_GENERATE_PKGCONFIG：生成pkg-config，这个务必打开，不然安装成功找不到opencv</span><br></pre></td></tr></table></figure>
<p>cmake后最终确认得到以下输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-- General configuration <span class="keyword">for</span> OpenCV 4.4.0 =====================================</span><br><span class="line">Version control:               unknown</span><br><span class="line">-- </span><br><span class="line">Extra modules:</span><br><span class="line">  Location (extra):            /home/xx/soft/opencv_gpu/opencv-4.4.0/opencv_contrib-4.4.0/modules</span><br><span class="line">  Version control (extra):     unknown</span><br><span class="line">-- </span><br><span class="line">Platform:</span><br><span class="line">  Timestamp:                   2021-02-05T02:31:19Z</span><br><span class="line">  Host:                        Linux 4.15.0-133-generic x86_64</span><br><span class="line">  CMake:                       3.19.3</span><br><span class="line">  CMake generator:             Unix Makefiles</span><br><span class="line">  CMake build tool:            /usr/bin/make</span><br><span class="line">  Configuration:               RELEASE</span><br><span class="line">-- </span><br><span class="line">CPU/HW features:</span><br><span class="line">  Baseline:                    SSE SSE2 SSE3</span><br><span class="line">    requested:                 SSE3</span><br><span class="line">  Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX</span><br><span class="line">    requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX</span><br><span class="line">    SSE4_1 (17 files):         + SSSE3 SSE4_1</span><br><span class="line">    SSE4_2 (2 files):          + SSSE3 SSE4_1 POPCNT SSE4_2</span><br><span class="line">    FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX</span><br><span class="line">    AVX (5 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX</span><br><span class="line">    AVX2 (31 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2</span><br><span class="line">    AVX512_SKX (7 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX</span><br><span class="line">-- </span><br><span class="line">C/C++:</span><br><span class="line">  Built as dynamic libs?:      YES</span><br><span class="line">  C++ standard:                11</span><br><span class="line">  C++ Compiler:                /usr/bin/c++  (ver 6.5.0)</span><br><span class="line">  C++ flags (Release):         -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-psabi -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG</span><br><span class="line">  C++ flags (Debug):           -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-psabi -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG</span><br><span class="line">  C Compiler:                  /usr/bin/gcc-6</span><br><span class="line">  C flags (Release):           -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-psabi -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG</span><br><span class="line">  C flags (Debug):             -fsigned-char -ffast-math -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-psabi -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG</span><br><span class="line">  Linker flags (Release):      -Wl,--gc-sections -Wl,--as-needed  </span><br><span class="line">  Linker flags (Debug):        -Wl,--gc-sections -Wl,--as-needed  </span><br><span class="line">  ccache:                      NO</span><br><span class="line">  Precompiled headers:         NO</span><br><span class="line">  Extra dependencies:          m pthread cudart_static dl rt nppc nppial nppicc nppidei nppif nppig nppim nppist nppisu nppitc npps cublas cudnn cufft -L/usr/<span class="built_in">local</span>/cuda/lib64 -L/usr/lib/x86_64-linux-gnu</span><br><span class="line">  3rdparty dependencies:</span><br><span class="line">-- </span><br><span class="line">OpenCV modules:</span><br><span class="line">  To be built:                 alphamat aruco bgsegm bioinspired calib3d ccalib core cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev datasets dnn dnn_objdetect dnn_superres dpm face features2d flann freetype fuzzy gapi hdf hfs highgui img_hash imgcodecs imgproc intensity_transform line_descriptor ml objdetect optflow phase_unwrapping photo plot python3 quality rapid reg rgbd saliency sfm shape stereo stitching structured_light superres surface_matching text tracking ts video videoio videostab xfeatures2d ximgproc xobjdetect xphoto</span><br><span class="line">  Disabled:                    python2 world</span><br><span class="line">  Disabled by dependency:      -</span><br><span class="line">  Unavailable:                 cnn_3dobj cvv java js julia matlab ovis viz</span><br><span class="line">  Applications:                tests perf_tests apps</span><br><span class="line">  Documentation:               NO</span><br><span class="line">  Non-free algorithms:         YES</span><br><span class="line">-- </span><br><span class="line">GUI: </span><br><span class="line">  GTK+:                        YES (ver 3.18.9)</span><br><span class="line">    GThread :                  YES (ver 2.48.2)</span><br><span class="line">    GtkGlExt:                  NO</span><br><span class="line">  OpenGL support:              NO</span><br><span class="line">  VTK support:                 NO</span><br><span class="line">-- </span><br><span class="line">Media I/O: </span><br><span class="line">  ZLib:                        /usr/lib/x86_64-linux-gnu/libz.so (ver 1.2.8)</span><br><span class="line">  JPEG:                        /usr/lib/x86_64-linux-gnu/libjpeg.so (ver 80)</span><br><span class="line">  PNG:                         /usr/lib/x86_64-linux-gnu/libpng.so (ver 1.2.54)</span><br><span class="line">  TIFF:                        /usr/lib/x86_64-linux-gnu/libtiff.so (ver 42 / 4.0.6)</span><br><span class="line">  JPEG 2000:                   OpenJPEG (ver 2.4.0)</span><br><span class="line">  OpenEXR:                     build (ver 2.3.0)</span><br><span class="line">  HDR:                         YES</span><br><span class="line">  SUNRASTER:                   YES</span><br><span class="line">  PXM:                         YES</span><br><span class="line">  PFM:                         YES</span><br><span class="line">-- </span><br><span class="line">Video I/O:</span><br><span class="line">  DC1394:                      YES (2.2.4)</span><br><span class="line">  FFMPEG:                      YES</span><br><span class="line">    avcodec:                   YES (56.60.100)</span><br><span class="line">    avformat:                  YES (56.40.101)</span><br><span class="line">    avutil:                    YES (54.31.100)</span><br><span class="line">    swscale:                   YES (3.1.101)</span><br><span class="line">    avresample:                YES (2.1.0)</span><br><span class="line">  GStreamer:                   YES (1.8.3)</span><br><span class="line">  v4l/v4l2:                    YES (linux/videodev2.h)</span><br><span class="line">-- </span><br><span class="line">Parallel framework:            TBB (ver 4.4 interface 9002)</span><br><span class="line">-- </span><br><span class="line">Trace:                         YES (with Intel ITT)</span><br><span class="line">-- </span><br><span class="line">Other third-party libraries:</span><br><span class="line">  Lapack:                      YES (/usr/lib/libopenblas.so)</span><br><span class="line">  Eigen:                       YES (ver 3.2.92)</span><br><span class="line">  Custom HAL:                  NO</span><br><span class="line">  Protobuf:                    build (3.5.1)</span><br><span class="line">-- </span><br><span class="line">NVIDIA CUDA:                   YES (ver 11.1, CUFFT CUBLAS FAST_MATH)</span><br><span class="line">  NVIDIA GPU arch:             86</span><br><span class="line">  NVIDIA PTX archs:</span><br><span class="line">-- </span><br><span class="line">cuDNN:                         YES (ver 8.0.5)</span><br><span class="line">-- </span><br><span class="line">Python 3:</span><br><span class="line">  Interpreter:                 /home/xx/anaconda3/envs/py37/bin/python3.7m (ver 3.7.9)</span><br><span class="line">  Libraries:                   /home/xx/anaconda3/envs/py37/lib/libpython3.7m.so (ver 3.7.9)</span><br><span class="line">  numpy:                       /home/xx/anaconda3/envs/py37/lib/python3.7/site-packages/numpy/core/include (ver 1.19.2)</span><br><span class="line">  install path:                /home/xx/anaconda3/envs/py37/lib/python3.7/site-packages/cv2/python-3.7</span><br><span class="line">-- </span><br><span class="line">Python (<span class="keyword">for</span> build):            /home/xx/anaconda3/envs/py37/bin/python3.7m</span><br><span class="line">-- </span><br><span class="line">Java:                          </span><br><span class="line">  ant:                         NO</span><br><span class="line">  JNI:                         NO</span><br><span class="line">  Java wrappers:               NO</span><br><span class="line">  Java tests:                  NO</span><br><span class="line">-- </span><br><span class="line">Install to:                    /usr/<span class="built_in">local</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：系统用户名使用<code>xx</code>替代</p>
</blockquote>
<h2 id="gcc编译"><a class="markdownIt-Anchor" href="#gcc编译"></a> gcc编译</h2>
<p>在build目录下执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make -j16</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：虽然直接make出问题的概率更小，但是为了加速编译速度，这里指使用16个多线程进行编译，这里多线程数量一般不大于CPU核心数，可以通过<code>nproc</code>命令查看CPU核心数。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
</blockquote>
<h2 id="安装到系统"><a class="markdownIt-Anchor" href="#安装到系统"></a> 安装到系统</h2>
<p>在build目录下执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<h2 id="配置环境变量"><a class="markdownIt-Anchor" href="#配置环境变量"></a> 配置环境变量</h2>
<p>执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /bin/bash -c <span class="string">'echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf.d/opencv.conf'</span></span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>
<p>如果想将opencv安装到Python，建议在cmake编译参数中使用<code>-D OPENCV_PYTHON3_INSTALL_PATH</code>指定安装目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-D OPENCV_PYTHON3_INSTALL_PATH=/home/xx/anaconda3/envs/py37/lib/python3.7/site-packages \</span><br></pre></td></tr></table></figure>
<h2 id="查看opencv是否安装成功"><a class="markdownIt-Anchor" href="#查看opencv是否安装成功"></a> 查看opencv是否安装成功</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkg-config --modversion opencv</span><br><span class="line">pkg-config --libs opencv4</span><br></pre></td></tr></table></figure>
<h2 id="编译过程遇到的问题"><a class="markdownIt-Anchor" href="#编译过程遇到的问题"></a> 编译过程遇到的问题</h2>
<p>编译opencv主要有两个过程，cmake和make，错误主要出现在cmake阶段，根据出现的错误情况，主要分为以下几类</p>
<h3 id="下载失败"><a class="markdownIt-Anchor" href="#下载失败"></a> 下载失败</h3>
<p>cmake过程中，需要下载的文件会放在opencv4.4.0下的隐藏目录<code>.cache</code>下，如果下载失败，可以手动下载，放入相应目录解决。</p>
<p><strong>xfeatures2d</strong><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">boostdesc_bgm.i</span><br><span class="line">boostdesc_bgm_bi.i</span><br><span class="line">boostdesc_bgm_hd.i</span><br><span class="line">boostdesc_lbgm.i</span><br><span class="line">boostdesc_binboost_064.i</span><br><span class="line">boostdesc_binboost_128.i</span><br><span class="line">boostdesc_binboost_256.i</span><br><span class="line">vgg_generated_120.i</span><br><span class="line">vgg_generated_64.i</span><br><span class="line">vgg_generated_80.i</span><br><span class="line">vgg_generated_48.i</span><br></pre></td></tr></table></figure>
<p>进入opencv4.4.0下的隐藏目录<code>.cache/xfeatures2d</code>，执行以下命令解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> boostdesc</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_lbgm.i &gt; 0ae0675534aa318d9668f2a179c2a052-boostdesc_lbgm.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_binboost_256.i &gt; e6dcfa9f647779eb1ce446a8d759b6ea-boostdesc_binboost_256.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_binboost_128.i &gt; 98ea99d399965c03d555cef3ea502a0b-boostdesc_binboost_128.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_binboost_064.i &gt; 202e1b3e9fec871b04da31f7f016679f-boostdesc_binboost_064.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_bgm_hd.i &gt; 324426a24fa56ad9c5b8e3e0b3e5303e-boostdesc_bgm_hd.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_bgm_bi.i &gt; 232c966b13651bd0e46a1497b0852191-boostdesc_bgm_bi.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_bgm.i &gt; 0ea90e7a8f3f7876d450e4149c97c74f-boostdesc_bgm.i</span><br><span class="line"><span class="built_in">cd</span> vgg</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_120.i &gt; 151805e03568c9f490a5e3a872777b75-vgg_generated_120.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_64.i &gt; 7126a5d9a8884ebca5aea5d63d677225-vgg_generated_64.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_48.i &gt; e8d0dcd54d1bcfdc29203d011a797179-vgg_generated_48.i</span><br><span class="line">curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/fccf7cd6a4b12079f73bbfb21745f9babcd4eb1d/vgg_generated_80.i &gt; 7cd47228edec52b6d82f46511af325c5-vgg_generated_80.i</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：如何curl无法下载，可以通过浏览器挨个下载，并按照以上进行命名各文件</p>
</blockquote>
<p><strong>ippicv</strong></p>
<p>手动从<a href="https://link.jianshu.com/?t=https%3A%2F%2Fraw.githubusercontent.com%2FItseez%2Fopencv_3rdparty%2F81a676001ca8075ada498583e4166079e5744668%2Fippicv%2Fippicv_linux_20151201.tgz">github</a>下载，放入<code>.cache/ppicv</code>目录下</p>
<p>**face_landmark_model.dat **</p>
<p>手动从<a href="https://raw.githubusercontent.com/opencv/opencv_3rdparty/8afa57abc8229d611c4937165d20e2a2d9fc5a12/face_landmark_model.dat">github</a>下载，放入<code>.cache/data</code>目录下，注意文件名前部是该文件的md5值，可以通过命令<code>md5sum file</code>计算该值</p>
<h3 id="软件未安装not-found"><a class="markdownIt-Anchor" href="#软件未安装not-found"></a> 软件未安装（Not Found）</h3>
<p>此类错误比较简单，缺什么安装什么，比如安装过程中遇到以下缺失软件的解决办法</p>
<p><strong>tesserocr安装失败</strong><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libleptonica-dev libtesseract-dev</span><br><span class="line">python -m pip install tesserocr</span><br></pre></td></tr></table></figure>
<p><strong>lapacke.h缺失</strong><sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
<p>明明已经按照该软件，但是OpenBLAS一致没找到该文件，但是搜索文件发现该文件在<code>/usr/include/</code>下，只能手动拷贝<code>ls /usr/include/lapacke*</code>文件至<code>/usr/include/openblas/</code>目录下</p>
<p><strong>Could NOT find CUDNN: Found unsuitable version “…”, but required is at least “7.5” (found /usr/local/cuda-10.2/lib64/libcudnn.so)</strong></p>
<p>这是在编译opencv4.2.0时出现的错误，实际已经安装cudnn，也满足7.5以上的要求，但是就是找不，可以在cmake中加入参数：<code>-D CUDNN_VERSION='8.0'</code>解决<sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup>，但是后续还会遇到其他问题，编译opencv4.4.0时，该问题不再出现</p>
<p><strong>No package ‘gtk±3.0’ found</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libgtk-3-dev</span><br></pre></td></tr></table></figure>
<h2 id="卸载opencv"><a class="markdownIt-Anchor" href="#卸载opencv"></a> 卸载opencv</h2>
<p>通过源码安装的opencv，可以进入编译目录下（build）执行以下命令，卸载opencv</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo make uninstall</span><br></pre></td></tr></table></figure>
<h2 id="使用cuda模块的简单例子"><a class="markdownIt-Anchor" href="#使用cuda模块的简单例子"></a> 使用cuda模块的简单例子</h2>
<p>查看opencv的cuda模块支持的功能，进入python终端，输入以下命令</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="built_in">dir</span>(cv2.cuda)</span><br><span class="line"><span class="built_in">dir</span>(cv2.cuda_GpuMat())</span><br></pre></td></tr></table></figure>
<p>例子：在GPU做resize</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#读取图片</span></span><br><span class="line">frame=cv2.imread(<span class="string">'test.jpg'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#上传到gpu进行处理</span></span><br><span class="line">gpu_frame=cv2.cuda_GpuMat()</span><br><span class="line">gpu_frame.upload(frame)</span><br><span class="line">print(gpu_frame.cudaPtr())</span><br><span class="line"></span><br><span class="line"><span class="comment">#resize</span></span><br><span class="line">gpu_resframe=cv2.cuda.resize(gpu_frame,(<span class="number">1024</span>,<span class="number">512</span>))</span><br><span class="line">cpu_resfram=gpu_resframe.download()</span><br><span class="line">print(cpu_resfram.shape)</span><br></pre></td></tr></table></figure>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://blog.csdn.net/qq_33475105/article/details/111659692">Jetson Nano编译安装opencv4.3.0并使能cuDNN加速</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.codenong.com/cs109055604/">Ubuntu20.04+GeForce RTX 2080 SUPER+cuda11.1+cudnn8.0.4+openCV4.4.0编译</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://blog.csdn.net/zhongqli/article/details/112212072">Opencv-3.4.0编译时报错缺少boostdesc_bgm.i等文件</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://stackoverflow.com/questions/43486636/error-while-trying-to-install-tesserocr/">error while trying to install tesserocr</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://github.com/opencv/opencv/issues/9953">Building against OpenBLAS complains about missing lapacke.h</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>cuda</tag>
        <tag>opencv</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>CascadePSP：Toward Class-Agnostic and Very High-Resolution Segmentation via Global and Local Refinement</title>
    <url>/2020/12/15/CascadePSP%EF%BC%9AToward%20Class-Agnostic%20and%20Very%20High-Resolution%20Segmentation%20via%20Global%20and%20Local%20Refinement/</url>
    <content><![CDATA[<p>一种通用的级联分割细化模型，它可以细化任何给定的输入分割，在不进行微调的情况下提高现有分割模型的性能</p>
<a id="more"></a>
<h1 id="什么是-cascadepsp"><a class="markdownIt-Anchor" href="#什么是-cascadepsp"></a> 什么是 CascadePSP?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142231.png" alt="" /></li>
<li>一种通用的级联分割细化模型，它可以细化任何给定的输入分割，在不进行微调的情况下提高现有分割模型的性能，</li>
<li>具体来说，模型的输入是原始高分辨率图像和其在其他网络上输出的粗分割结果，模型的输出是精细化的分割结果</li>
</ul>
<h1 id="cascadepsp的网络结构"><a class="markdownIt-Anchor" href="#cascadepsp的网络结构"></a> CascadePSP的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142231-1.png" alt="" /></li>
<li><strong>主要思路：</strong> 将输入图片<strong>缩小</strong>及<strong>其他网络上的粗略分割结果</strong>送Global Step 全局网络，得到全局的分割结果；然后将输入图片分成多个小块，将每个小块和对应的分割mask 送入Local Step 局部网络，输出精细化结果</li>
<li>全局网络、局部网络均CascadePSP的细化模块(RM) 组成，其输入是上一阶段的分割结果（多个尺寸的分割结果），输出是多个尺寸的分割结果（OS8, OS4, OS1）</li>
<li><strong>Global Step全局网络：</strong> 输入是 resize后的原图和初始的mask，输出“全局优化分割结果”<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>S</mi><msub><mn>4</mn><mrow><mo stretchy="false">(</mo><msub><mi>W</mi><mi>G</mi></msub><mo>∗</mo><msub><mi>H</mi><mi>G</mi></msub><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">OS4_{(W_G*H_G)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>S</mi><msub><mn>1</mn><mrow><mo stretchy="false">(</mo><msub><mi>W</mi><mi>G</mi></msub><mo>∗</mo><msub><mi>H</mi><mi>G</mi></msub><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">OS1_{(W_G*H_G)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><strong>Local Step局部网络：</strong> 输入是原图的crop部分和对应的mask，输出“全局优化分割结果”的所有局部<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>S</mi><msub><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>L</mi><mo>∗</mo><mi>L</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">OS1_{(L*L)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">L</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">L</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> , 为了避免边界伪影，作者将OS1的每一侧都切掉16个像素（图像边框除外）</li>
<li>合并所有的局部精细化结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>S</mi><msub><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>L</mi><mo>∗</mo><mi>L</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">OS1_{(L*L)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">L</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">L</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> ，得到最终的精细化结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>S</mi><msub><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>W</mi><mo>∗</mo><mi>H</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">OS1_{(W*H)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span> ，拼合时，由于图像有重叠，因此重叠部分采取所有像素点平均值；如果缺少某些像素点，那么这些位置使用全局步骤输出的S11来替代</li>
</ul>
<h1 id="如何认识cascadepsp的细化模块rm"><a class="markdownIt-Anchor" href="#如何认识cascadepsp的细化模块rm"></a> 如何认识CascadePSP的细化模块(RM)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142232.png" alt="CascadePSP-20230408142232" /></li>
<li>细化模块(RM)采用一幅图像和多个不同尺度的不完美分割掩模来生成细化的分割，使金字塔池化模块（Pyramid Pooling Module,PPM）捕获多尺度特征</li>
<li>输入：所有低分辨率的输入分段都被双线性向上采样到相同的大小，并与RGB图像连接后作为输入</li>
<li>输出：3种等级的优化分割结果OS8，OS4，OS1</li>
</ul>
<h1 id="cascadepsp的损失函数"><a class="markdownIt-Anchor" href="#cascadepsp的损失函数"></a> CascadePSP的损失函数？</h1>
<ul>
<li>CascadePSP的损失只要指的CascadePSP的细化模块(RM) 3个输出OS8、OS4、OS1的损失</li>
<li>对于较粗糙的OS 8，使交叉熵损失(CrossEntropyLoss)，对于较精细的OS 1，使绝对值损失(L1Loss)平方损失(MSELoss/L2Loss)，对于OS 4，使用交叉熵和L1 + L2损失的平均值</li>
<li>为了进行更好的边界细化，在 OS 1上还采用了<strong>分段梯度幅度上的 L1损失</strong>。分割梯度由一个3×3均值滤波器和 Sobel 算子组成， fm (.)表示3×3均值滤波器，∇表示由 Sobel 算子近似的梯度算子，由于梯度与像素级损失相比更稀疏，我们用α来衡量它，实验中被设置为5<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="script">L</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo>=</mo><mi>α</mi><mo>⋅</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munder><mo>∑</mo><mi>i</mi></munder><msub><mrow><mo fence="true">∥</mo><mi mathvariant="normal">∇</mi><mrow><mo fence="true">(</mo><msub><mi>f</mi><mi>m</mi></msub><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>−</mo><mi mathvariant="normal">∇</mi><mrow><mo fence="true">(</mo><msub><mi>f</mi><mi>m</mi></msub><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo fence="true">∥</mo></mrow><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\mathcal{L}_{g r a d}=\alpha \cdot \frac{1}{n} \sum_{i}\left\|\nabla\left(f_{m}\left(x_{i}\right)\right)-\nabla\left(f_{m}\left(y_{i}\right)\right)\right\|_{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.599109em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord">∇</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">∇</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>总损失<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">L</mi><mo>=</mo><msubsup><mi mathvariant="script">L</mi><mrow><mi>C</mi><mi>E</mi></mrow><mn>8</mn></msubsup><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="script">L</mi><mrow><mi>L</mi><mn>1</mn><mo>+</mo><mi>L</mi><mn>2</mn></mrow><mn>4</mn></msubsup><mo>+</mo><msubsup><mi mathvariant="script">L</mi><mrow><mi>C</mi><mi>E</mi></mrow><mn>4</mn></msubsup><mo fence="true">)</mo></mrow><mo>+</mo><msubsup><mi mathvariant="script">L</mi><mrow><mi>L</mi><mn>1</mn><mo>+</mo><mi>L</mi><mn>2</mn></mrow><mn>1</mn></msubsup><mo>+</mo><msubsup><mi mathvariant="script">L</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">\mathcal{L}=\mathcal{L}_{C E}^{8}+\frac{1}{2}\left(\mathcal{L}_{L 1+L 2}^{4}+\mathcal{L}_{C E}^{4}\right)+\mathcal{L}_{L 1+L 2}^{1}+\mathcal{L}_{g r a d}^{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">L</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">L</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1694390000000001em;vertical-align:-0.305331em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">L</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2472159999999999em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="什么是cascadepsp的global-step"><a class="markdownIt-Anchor" href="#什么是cascadepsp的global-step"></a> 什么是CascadePSP的Global Step？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142232-1.png" alt="CascadePSP-20230408142232-1" /></li>
<li>全局指将原图缩小，这样上下文信息还在，只是损失了细节</li>
<li>输入是缩放的原图+缩放的粗分割图，输出是2种全局优化分割结果图OS4，OS1</li>
<li>采用3级级联的结构，原图I大小为WxH，将其按下图公式缩放为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>G</mi></msub></mrow><annotation encoding="application/x-tex">W_G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>x<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>G</mi></msub></mrow><annotation encoding="application/x-tex">H_G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>大小，粗分割图S也做相同处理
<ul>
<li>级联结构 1：将 I 和 S* 3 共 4 张图作为 RM 结构的输入，得到 OS8 的优化结果</li>
<li>级联结构 2：将 I 和 S 和 1 中的输出 OS8* 2 作为 RM 的输入，得到新的 OS8 和 OS4 的优化结果</li>
<li>级联结构3：将I和S和新的OS8，OS4作为RM的输入，得到新的<strong>OS4</strong>和<strong>OS1</strong>的优化结果</li>
</ul>
</li>
</ul>
<h1 id="什么是cascadepsp的local-step"><a class="markdownIt-Anchor" href="#什么是cascadepsp的local-step"></a> 什么是CascadePSP的Local Step？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142233.png" alt="CascadePSP-20230408142233" /></li>
<li>局部指将原图裁剪，这样没有损失细节，但是缺失了上下文信息</li>
<li>输入：原图和全局步骤的2个输出S4、S1，输出是最终的优化结果OS1</li>
<li>采用2级级联的结构，原图I大小为WxH，S4和S1都上采样（双线性插值）到WxH的大小，然后将输入的3张图都裁剪出LxL的图像大小
<ul>
<li>级联结构 1：将 I 和 S1 和 s4* 2 共 4 张图对应裁剪出 LxL 大小，作为 RM 结构的输入，得到 OS8 和 OS4 的优化结果</li>
<li>级联结构2：将裁剪的I，S11和1中的输出OS8，OS4作为RM的输入，得到<strong>OS1</strong>的优化结果</li>
</ul>
</li>
<li>裁切规则
<ul>
<li>裁剪的图片大小为LxL，从原图左上角开始，以L//2-32的步幅移动进行裁剪</li>
<li>超出图像边界的无效裁剪被移动，以与图像的最后一列（行）对齐</li>
<li>保证裁剪后的图像没有重复的，保证裁剪后的图像不会出现大多数像素只有前景或背景</li>
</ul>
</li>
</ul>
<h1 id="cascadepsp中global-step与local-step的消融实验比较"><a class="markdownIt-Anchor" href="#cascadepsp中global-step与local-step的消融实验比较"></a> CascadePSP中Global Step与Local Step的消融实验比较？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142233-1.png" alt="CascadePSP-20230408142233-1" /></li>
<li>可知，Global Step对整体及局部进行了优化，且局部优化对mIoU的影响很小，对mBA的影响较大</li>
</ul>
<h1 id="cascadepsp进行local-step时裁切的尺寸如何确定"><a class="markdownIt-Anchor" href="#cascadepsp进行local-step时裁切的尺寸如何确定"></a> CascadePSP进行Local Step时，裁切的尺寸如何确定？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142234.png" alt="CascadePSP-20230408142234" /></li>
<li>GPU内存使用仅与L大小有关，而跟需优化的图像的分辨率无关，因为融合步骤可以在CPU上容易的执行</li>
<li>上图是使用不同L时GPU内存使用和优化质量mBA的关系，作者选择取L=900，来平衡精度和性能之间的关系</li>
</ul>
<h1 id="cascadepsp论文中不同的输入分辨率对mba的影响"><a class="markdownIt-Anchor" href="#cascadepsp论文中不同的输入分辨率对mba的影响"></a> CascadePSP论文中，不同的输入分辨率对mBA的影响？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CascadePSP-20230408142234-1.png" alt="CascadePSP-20230408142234-1" /></li>
<li>对于不同图像大小的输入，使用局部步骤与否对mBA影响不同。在测试图像max(H，W)大于900时，缺少局部步骤后mBA没有提高</li>
<li>因此，当输入图像分辨率低时，可只使用全局步骤，而对于分辨率高的图像，需使用全局+局部步骤</li>
</ul>
<h1 id="什么是平均边界精度度量-mba"><a class="markdownIt-Anchor" href="#什么是平均边界精度度量-mba"></a> 什么是平均边界精度度量 (mBA)？</h1>
<ul>
<li>对于不同大小图像的一个边界准确度的稳健估计</li>
<li>3, w+h/300]中以均匀间隔取5个值，作为半径。以图像的前景目标的边界的每个像素点为圆心，计算每个半径内的分割精度，然后平均这些值</li>
</ul>
<h1 id="cascadepsp如何做到掩码循环输入到网络中"><a class="markdownIt-Anchor" href="#cascadepsp如何做到掩码循环输入到网络中"></a> CascadePSP如何做到掩码循环输入到网络中？</h1>
<ul>
<li>通过神经网络的级联拼接实现</li>
</ul>
<h1 id="cascadepsp论文中循环输入的终止条件是"><a class="markdownIt-Anchor" href="#cascadepsp论文中循环输入的终止条件是"></a> CascadePSP论文中循环输入的终止条件是？</h1>
<ul>
<li>神经网络使用优化方法，不断减少精细化的误差，直到满意</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《成功，动机与目标》-海蒂•格兰特•霍尔沃森(heidiGrantHalvorson)</title>
    <url>/2020/11/25/%E4%B9%A6%E6%91%98_%E6%88%90%E5%8A%9F%EF%BC%8C%E5%8A%A8%E6%9C%BA%E4%B8%8E%E7%9B%AE%E6%A0%87-%E6%B5%B7%E8%92%82%E2%80%A2%E6%A0%BC%E5%85%B0%E7%89%B9%E2%80%A2%E9%9C%8D%E5%B0%94%E6%B2%83%E6%A3%AE(heidiGrantHalvorson).hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/22994632">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s26039188.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s26039188.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>成功，动机与目标</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>[美]海蒂·格兰特·霍尔沃森</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2013-3</span></div>
			<div class="douban-card-item"><span>评分: </span><span>8.8</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="序言"><a class="markdownIt-Anchor" href="#序言"></a> 序言</h2>
<blockquote>
<p>人是可以改变的。改变不容易，但在正确的动机与方法的引导下便是可能的。</p>
</blockquote>
<h2 id="导言"><a class="markdownIt-Anchor" href="#导言"></a> 导言</h2>
<blockquote>
<p>自制力是依照目标采取行动的能力。它能使你抵制诱惑、专心投入、克服困难，从而坚持不懈。自制力至关重要，它是实现目标最关键的元素之一。</p>
</blockquote>
<p>就我个人感觉而言。自制力这个东西。兽兽影响有两个东西。一个是那个现实的场景。有时候你很累，你自己的都很差，有时候心情很好，自己就上去了。吊哥，是那个量面对的东西。如果你那个。有决心去完成一个东西，自制力真的很强。如果你只是。随便完成而已。那就不一定能完成了。</p>
<h2 id="成功者不会事事成功"><a class="markdownIt-Anchor" href="#成功者不会事事成功"></a> 成功者不会事事成功</h2>
<blockquote>
<p>每个人都知道少吃多运动能够帮我们减轻体重。然而知道是一回事，真正去行动则是彻头彻尾的另一回事。</p>
</blockquote>
<p>这样的例子比比皆是。减肥是一方面吧！其实还有更多领域。我想要找到好的工作就必须复习认真地看书，然后去追寻职场。最新的动态。但现实中我确实没有这么去做。</p>
<h2 id="自制力的真实面目"><a class="markdownIt-Anchor" href="#自制力的真实面目"></a> 自制力的真实面目</h2>
<blockquote>
<p>当你刚做完一件需要很多自制力的事时（比如制作一期电视节目），自制力也会消耗不少。</p>
</blockquote>
<p>那其实这样子看来。人的智力就像一壶水。总会有被倒完的那一刻。又被填满的时候，所以其实是一个动态的变化过程。但是当你在一个市场花卉的知识力太多。你就较少的自制力去应对新的东西。</p>
<blockquote>
<p>那些在一个或多个人生领域里获得巨大成功的人恰恰是把大部分自制力投入到了那些相应的领域中了。如果每天面临很多压力，无论是谁都会感到乏力，无法达到某些目标。</p>
</blockquote>
<p>其实样子也给我提了一个醒。人的自制力是有限度的。我们必须把自制力投放到应对主要的事情上、关键的事情上。这也和一个观点相佐证。不要每天都在瞎忙，其实是在浪费你的自制力</p>
<h2 id="你能做什么"><a class="markdownIt-Anchor" href="#你能做什么"></a> 你能做什么</h2>
<blockquote>
<p>你让自制力歇息一会儿，它的能量就能恢复。消耗只是暂时的，你在刚刚用尽自制力能源时也是最脆弱的。</p>
</blockquote>
<p>这个体会很深切。现实生活中确实有还自制力就开始自暴自弃、看视频、打游戏什么的，反正就是很难约束自己。</p>
<blockquote>
<p>还</p>
</blockquote>
<p>在这一点上，你是有切身体会的。如之前想看抖音。之前还刷了一段时间的抖音，那时候真是着迷一样。然后来。等我多方路径查到抖音实际上是有那个。一定的手段让你一直眯着浪费时间在这app上，而且里面的质量一般，趋向于同化要认识到这个视频，对自己提升不是很大。要对这个视频就产生了厌恶感，然后进了。就没有一直没有用这个视频了。</p>
<blockquote>
<p>以奖励的方法增强动机可以暂时弥补受损的自制力。</p>
</blockquote>
<p>其实就奖励而言。主要分为两种的。第一种是别人给的。他这种就存在外部监督的情况。就比较好完成。第二种就是那个。自己为了完成某种目标而给自己一个未来的奖励。那这种就没有监督所以说我们最后完成那个事情的。概率就下降了。</p>
<blockquote>
<p>增强自制力的方式与增强肌肉性能是一样的——你需要定期锻炼。最近的研究表明，每天坚持锻炼身体、记账或者记录进食，甚至仅仅时不时地提醒自己坐直都能帮助一个人锻炼总体的自制力。</p>
</blockquote>
<p>自制力虽然是一个消耗品。但其实也是属于一个动态的过程。你可以消耗他你也可以那个补充他，锻炼他。</p>
<h2 id="第1章做到最好不够好"><a class="markdownIt-Anchor" href="#第1章做到最好不够好"></a> 第1章“做到最好”不够好</h2>
<blockquote>
<p>给自己立下过不少目标，但当真如此吗？还是你只是想要更开心、更健康或是更成功，却没真正决定过具体做什么？你有欲望，你想做的很多很多，但你把多少个愿望转化成真正的目标过？没有这个转化，我们的欲望就仅仅停留在那个“希望能够实现”的层面。</p>
</blockquote>
<p>确实。定了好多目标，要么就是在准备开始开工的过程中。要么就在想象目标完成之后的美好愿景中。从来没有真正行动起来过。</p>
<blockquote>
<p>当你用正确的方式聚焦于正确的细节时，成功就离你更近一步了。</p>
</blockquote>
<h2 id="别用做到最好"><a class="markdownIt-Anchor" href="#别用做到最好"></a> 别用“做到最好”</h2>
<blockquote>
<p>在全球上千例研究里，科研人员发现具体又有难度的目标比模糊或过于简单的目标更能激发优异的表现，而且差距是明显的。</p>
</blockquote>
<p>对于我个人而言。我现实生活中定了目标都是一个总体的想法。都是想到未来实现这个目标之后的愿景。但具体的目标我没有确定。这也是我们的非常缺乏的一点。</p>
<blockquote>
<p>如果奋斗的目标不明确，人们很容易向疲惫、灰心或无聊妥协，但若建立了具体的目标，你便无法欺骗自己了。达标或非达标，没有中间地带。你若是还没达标，若是还想成功，便只能继续努力。</p>
</blockquote>
<p>我就是没有对自己这么狠。没有留余地的去。实现一个目标。就想这么拖着。有想拖着他就是不想去。具体的规划具体的实施。种子一句话。应该对自己狠咯。</p>
<blockquote>
<p>你不能制定不现实或者不可能实现的目标。艰巨而具可能性才是关键。因为有难度的目标会促使你下更大功夫，更加聚精会神，更加没有二心。</p>
</blockquote>
<p>这个确实。你不能定那些目标，每天都干的。每天都是。唾手可得的都轻易完成了，那个目标完全没挑战性，你迟早会腻的。</p>
<blockquote>
<p>成功完成困难的事更使人愉悦，它能给人更大的满足感和快感，让人整体感觉更幸福。</p>
</blockquote>
<p>这个确实啊！我在研究生之前。也就本科。靠的是。成绩还算可以，水有点信心。研究生之后呢？好论是科研水平有老师的帮助，还算过得去，所以有点信心。其实每个阶段我都是靠着过往一段时间的那个成就经历。有点自信的活下去。</p>
<blockquote>
<p>对工作的满意度使人更致力于为所在机构工作，对自己更有信心，从而会给自己更多的挑战，这又带来更好的表现和更大的满意度，周而复始……制定具体而具挑战性的目标便创造了成功和幸福的无限循环。洛克和莱瑟姆称之为“高绩效循环”。</p>
</blockquote>
<p>这个就是一个比较完美的自我激励模式。在开始新书，我之前。利用已有的那一个。自信。勇敢的做新的东西。</p>
<h2 id="西瓜与芝麻"><a class="markdownIt-Anchor" href="#西瓜与芝麻"></a> 西瓜与芝麻</h2>
<blockquote>
<p>在不同情况下，一种思维方式可能比另一种更能有效地帮助人们实现目标，关键是要懂得针对不同情况而适当地转换思维方式。好消息是，这并不难实现。</p>
</blockquote>
<blockquote>
<p>当人们用“为什么”理解行为时总是会想得更宏观些——那些小的、日常的举动都变成更重大的目标的一部分。他们对长期目标更有概念。所以用“为什么”而不是“是什么”想问题的人更少冲动，更少被诱惑，还更常会为行动提早做准备。</p>
</blockquote>
<p>确实对一件事情来说，使用为什么的方式来思考问题能产生一个比较重大的成就的意义。但是这种意义是短暂的。恐怖的。就容易失去的。</p>
<blockquote>
<p>若要解决一件棘手的事，则用“是什么”思考更为恰当。学习一套新体系时需要把它拆成几个具体步骤。</p>
</blockquote>
<p>这个和前面的当面临困难问题的时候，使用为什么的方式来思考更容易启动问题。信不信矛盾了？你这面对困难的事情的时候，也同样使用一个是什么的方式来理解。应该不是一个意思吧？为什么面对的是一个不确定的困难的目标是什么？面对的是一个复杂的目标。</p>
<h2 id="现在还是未来"><a class="markdownIt-Anchor" href="#现在还是未来"></a> 现在还是未来</h2>
<blockquote>
<p>研究显示，我们偏向于用大而抽象的概念，也就是“为什么”式思维，来理解较久以后才会贯彻的计划。反之，我们理解近期计划时则会侧重于更切实际的想法——我们完成这件事需要做的“是什么”。</p>
</blockquote>
<p>在这一点上。我的体会还是蛮深刻的。我真的是一个只会思考为什么的人可以说几乎每天都在思考为什么？但是却很少用是什么去思考问题，缺少问题的规范性。</p>
<blockquote>
<p>“为什么”式思维会使你更看重心理学家所谓的“合意度”信息，意思就是说，你做成这件事或达到这个目标对你是否有好处，将会多有趣，多愉悦，多有益。</p>
</blockquote>
<blockquote>
<p>更加具体的“是什么”式思维会使你更加重视“可行度”信息——你是否真的能做到你要做的事？有多大把握成功？你面临着什么阻碍？当我们在考虑近期要执行的事时，这些是我们想得更多的问题。</p>
</blockquote>
<blockquote>
<p>我们大多数人都一次次地掉入这样的陷阱里，因为我们习惯于用“为什么”来考虑未来的事，而较少思考究竟如何实现这些目标。于是我们选择了有潜在丰厚报酬的目标，却带来了一场噩梦。</p>
</blockquote>
<p>确实害处很大呢，这样子思考。它相当于给你画了一个饼。然后你每天吃的这个饼感觉很舒服。但是你就没有去实现它。这难道不就是自己给自己下的毒药吗？</p>
<blockquote>
<p>当我们思考比较久远的事时，我们会牺牲实际的考虑而选择潜在的回报；当我们思考近期要做什么时就满脑子官司，放下了愉悦。换言之，说到未来，我们都像探险家；说到当下，就都像会计了。</p>
</blockquote>
<blockquote>
<p>用“是什么”方式思考目标不仅能让你更好地安排时间，还能防止拖延时间。</p>
</blockquote>
<p>我就是一个经常用为什么的方式来思考问题的人。结果到处都是拖延症，都不知道怎么往下走。</p>
<blockquote>
<p>用“是什么”方式看待目标能让你更专注于具体的必要行动，让你能更快地达到目标。太注重“为什么”做一件事则可能会让人行动比较拖拉。</p>
</blockquote>
<blockquote>
<p>具体地说,是视目标而定。对目标采取“为什么”式的大体思维能使你更有动力、备受鼓舞，专注于你能得到的回报，并增强自制力与毅力。而“是什么”的细节式思维在你做困难或生疏的事时最有帮助。它能使你专注于操作性细节，从而完成任务，并且能帮助你防止拖延。大的成就不是采用一种固定的思维方式就能得到的。</p>
</blockquote>
<p>这里就不了解是很好的解释了。什么情况下该用为什么？什么情况下可以用是什么的是个问题。</p>
<h2 id="正面思考"><a class="markdownIt-Anchor" href="#正面思考"></a> 正面思考</h2>
<blockquote>
<p>相信目标艰巨的人会做更多准备，下更大功夫，为目标做出更多行动。他们预料到要努力奋斗，便也是这样做的。</p>
</blockquote>
<p>相信自己成功很重要。但是如果是亲人相信自己亲人轻而易举的成功。确实不一样。</p>
<blockquote>
<p>那么怎样才能最好地树立并实现目标而不是活在白日梦中呢？最佳策略是用乐观的方式看待目标，同时用实际的方式思考具体需要做什么才能实现目标。奥丁根把它叫做“心理对照</p>
</blockquote>
<blockquote>
<p>放弃梦想可能是痛苦并让人失望的，但为你的身心着想也可能是重要和必需的。只有意识到某些目标无法实现我们才能为可实现的理想腾出空间。</p>
</blockquote>
<p>这就意味着他有些目标定的不是很好。有可能不是很好能实现。</p>
<blockquote>
<p>通过无数调查发现，当认为自己能完成目标的人运用了心理对照策略时，他们通常比只幻想美好结局的人表现得更好。心理对照带来了更大的努力、更多的能量和计划以及普遍更高的成就。</p>
</blockquote>
<p>生活之中我经常是只做了第一步。点我完全没做。</p>
]]></content>
  </entry>
  <entry>
    <title>DMNet：Dynamic Multi-Scale Filters for Semantic Segmentation</title>
    <url>/2020/11/23/DMNet%EF%BC%9ADynamic%20Multi-Scale%20Filters%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>DMNet和APCNet是同一作者的论文，其基本思想一致，主要改进是每个分支不通过注意力机制学习特征，而是学习卷积核和要被卷积的特征，想法新颖</p>
<a id="more"></a>
<h1 id="什么是-dmnet"><a class="markdownIt-Anchor" href="#什么是-dmnet"></a> 什么是 DMNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DMNet-20230408142900.png" alt="DMNet-20230408142900" /></li>
<li>本文设计了一种自适应金字塔上下文模型，它和 APCNet几乎是一样的结构，关键变化是将 ACM 改为 DCM，DCM 被定义为上下文感知过滤器，使得这些filters能够适应输入的图像，捕获图像内部的不同尺寸信息</li>
</ul>
<h1 id="dmnet-的网络结构"><a class="markdownIt-Anchor" href="#dmnet-的网络结构"></a> DMNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DMNet-20230408142900.png" alt="DMNet-20230408142900" /></li>
<li>输入图片经过 CNN（backbone 网络）后，得到 Feature Map，接着将 Feature Map 送入 DCM模块，不同的 DCM 模块有着不同大小的卷积核，对应的感受野也不同，将特征图 concat 后送入语义分割 head 进行像素级分割</li>
</ul>
<h1 id="dmnet-的-dcm-模块"><a class="markdownIt-Anchor" href="#dmnet-的-dcm-模块"></a> DMNet 的 DCM 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DMNet-20230408142900.png" alt="DMNet-20230408142900" /></li>
<li><strong>上分支</strong>：输入的特征图 x 经过一个卷积层来减少通道数，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_k(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></li>
<li><strong>下分支</strong>：x 经过一个 AdaptiveAvgPooling (k)，k 值是自定义的一个量。经过卷积后生成 k×k×512大小的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_k(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，</li>
<li><strong>特征融合</strong>：将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_k(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 看作卷积核 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>k</mi><mo>×</mo><mi>k</mi><mo>×</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">1\times k \times k \times 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span>)，与上分支的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_k(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 作 Depth-wise conv，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>w</mi><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">h\times w\times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的特征，然后使用 1 x 1 卷积调整通道数</li>
</ul>
<h1 id="dmnet-的多尺度特征感受模块"><a class="markdownIt-Anchor" href="#dmnet-的多尺度特征感受模块"></a> DMNet 的多尺度特征感受模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DMNet-20230408142917.png" alt="DMNet-20230408142917" /></li>
<li><strong>Inception</strong>：用多个不同大小的卷积核并行，来处理多尺度问题，同样引入了相当一部分的计算量，而且，参数多了就容易导致过拟合</li>
<li><strong>DeepLab 系列</strong>：用空洞卷积来扩大感受野以捕获多尺度信息，但是，这种卷积操作引入了大量的计算量，而且容易引起局部邻域的信息丢失。同时，空洞卷积有一个比较致命的问题，就是这个扩张数率的选择，选择过大的速率，小物体就会丢失信息，导致一些网格效应、边界效应</li>
<li><strong>DMNet</strong>：和 APCNet一样，借鉴 PSPNet的金字塔池化模块 PPM 进行多尺度提取，同时设计上下午的尺度感知结构，对不同的图使用不同 size 的过滤器 (filter)</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《生活需要自律力》-童小言</title>
    <url>/2020/10/23/%E4%B9%A6%E6%91%98_%E7%94%9F%E6%B4%BB%E9%9C%80%E8%A6%81%E8%87%AA%E5%BE%8B%E5%8A%9B-%E7%AB%A5%E5%B0%8F%E8%A8%80.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/33700841">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s32567412.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s32567412.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>生活需要自律力</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>童小言</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2019-6-1</span></div>
			<div class="douban-card-item"><span>评分: </span><span>5.3</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="自序"><a class="markdownIt-Anchor" href="#自序"></a> 自序</h2>
<blockquote>
<p>我相信命运在此之前，已为我做好种种铺垫。我的原生家庭、所受的教育、看过的书、行过的路、遇见过的人，塑造了我的性格和观念，它们让我在面临某些选择时做出适合自己的决定。</p>
</blockquote>
<blockquote>
<p>自律是一种选择，也是一种决定，当你决定开始自律时，你的人生也会从此不同。</p>
</blockquote>
<blockquote>
<p>如果你想过自己想要的生活，自律是你一定要坚持锤炼的心性。放纵可以带来短暂的快感，但人生终究是一场马拉松，短暂不能持久，而自律带给你的喜悦与成就，经历岁月，历久弥香。</p>
</blockquote>
<h2 id="那些出人头地都源于自律"><a class="markdownIt-Anchor" href="#那些出人头地都源于自律"></a> 那些出人头地，都源于自律</h2>
<blockquote>
<p>知道自己要什么，思考怎样做，然后专注且高执行力地去实现它，这就是自律的态度！</p>
</blockquote>
<h2 id="自律是管好你的嘴"><a class="markdownIt-Anchor" href="#自律是管好你的嘴"></a> 自律是管好你的嘴</h2>
<blockquote>
<p>我之所以不在乎别人对我的看法，是因为别人看到的我不是真实的我，只是他眼里的我。</p>
</blockquote>
<blockquote>
<p>越长大，“别人眼中的我”越不重要，“我心里的我”越重要。</p>
</blockquote>
<blockquote>
<p>自律的人，都善于管住自己的嘴，不会对任何人、任何事妄加评论。</p>
</blockquote>
<h2 id="自律是不麻烦别人"><a class="markdownIt-Anchor" href="#自律是不麻烦别人"></a> 自律是不麻烦别人</h2>
<blockquote>
<p>我们更愿意帮助那些有能力、肯努力、正直、善良、美好、懂事、有责任感的人，他们知感恩，尽管我们不期待他们回报什么。</p>
</blockquote>
<blockquote>
<p>生活就是，有时你冷了，别人正好为你披上外套，可最终，你得把外套还回去，独自走自己的路，所以，不必贪恋那一时的温度。</p>
</blockquote>
<h2 id="自律是坚持自己接纳不同"><a class="markdownIt-Anchor" href="#自律是坚持自己接纳不同"></a> 自律是坚持自己，接纳不同</h2>
<blockquote>
<p>现代人常常感到无聊，其实是“更高精神满足感的需求”与“远远不足的知识补给”之间的落差。所以，无聊时去啃书，去学习。人生如逆水行舟，不进则退。</p>
</blockquote>
<h2 id="凡事有交代件件有着落事事有回音"><a class="markdownIt-Anchor" href="#凡事有交代件件有着落事事有回音"></a> 凡事有交代，件件有着落，事事有回音</h2>
<blockquote>
<p>明智的人在经历各种沉浮时都始终盯紧稳健的基本面；而轻浮的人跟着感觉走，做出情绪化的反应，对于热门的东西一拥而上，不热的时候又马上放弃。</p>
</blockquote>
<blockquote>
<p>做事没有闭环，不落地，或有始无终，称不靠谱。沟通没有闭环，有些人，你问他问题从来得不到及时回应，甚至你不追到他眼前就永远没有回应，也没有交代，也是不靠谱。</p>
</blockquote>
<blockquote>
<p>大智论道，中智论事，小智论人</p>
</blockquote>
<blockquote>
<p>一个人的人生经验，来自读过的书、走过的路和遇见过的人。经历过的，成功与失败，都是镜子，让我们在拼拼凑凑中找到自己。</p>
</blockquote>
<h2 id="越自律越幸运"><a class="markdownIt-Anchor" href="#越自律越幸运"></a> 越自律，越幸运</h2>
<blockquote>
<p>经历带来经验，经验本就是财富，它使你懂得将来再遇到事情的时候该如何应对。你不会不够强大的，只要你对未来还有憧憬，只要你还在为此努力，挫折会把你摔得更强大。哪怕过去的经验有时会误导你，让你在面对类似的问题时条件反射般地泛起熟悉又久违的害怕，几乎缴械投降。</p>
</blockquote>
<blockquote>
<p>心境得靠自己走出来。也许有人觉得当下的处境糟透了，其实拉长时间轴，你会发现并不是。老天只是觉得你应该最大化地去体验生活，淋漓尽致地品味酸甜苦辣。老天在一个你尚且可以承受、可以转弯、可以选择的阶段安排这一切，包括让你遇见那些崭新的人以及他们的观念和生活方式，让你感受和感触，就足以证明老天对你还是有善意和安排的。</p>
</blockquote>
<blockquote>
<p>任何事都不是容易的，任何所得都不会如外界以为的那么轻易。没那么多矫情的正能量，最好的正能量就是过好自己的生活，然后让别人看到你的生活就充满动力。</p>
</blockquote>
<h2 id="自律是生活里的仪式感"><a class="markdownIt-Anchor" href="#自律是生活里的仪式感"></a> 自律是生活里的仪式感</h2>
<blockquote>
<p>朋友是：听得懂，聊得来，互相看得上。闺蜜是：听得懂，愿意听，聊得来，愿意聊，互相看得上，互相损得起。知己是：知道我为何而来，知道我向往何方，一个眼神的长度，便能把我看穿。</p>
</blockquote>
<blockquote>
<p>仪式是什么？”小王子问道。“这也是经常被遗忘的事情。”狐狸说，“它就是使某一天与其他日子不同，使某一时刻与其他时刻不同。”</p>
</blockquote>
<blockquote>
<p>博尔赫斯在《朋友之树》中所说，我们生命中的每位过客都是独一无二的。他们会留下自己的一些印记，也会带走我们的部分气息。我需要你，我生命之树的叶子，就像需要和平、爱与健康一样，无论现在还是永远。</p>
</blockquote>
<h2 id="自律的人拥有两倍人生"><a class="markdownIt-Anchor" href="#自律的人拥有两倍人生"></a> 自律的人，拥有两倍人生</h2>
<blockquote>
<p>逻辑可以带你从A到B，想象力可以带你到任何地方。</p>
</blockquote>
<blockquote>
<p>人生命的长度终是有限的，但我们可以无限拓宽生命的宽度和厚度。拥有自律，你就拥有了两倍的人生。</p>
</blockquote>
<blockquote>
<p>机会不会主动告诉你去把握它，它会“易容”成其他模样，有时是细节、有时是尊重、有时是大局观……机会靠近你，直到有些人抓住了，有些人不屑地走开，它才找到了自己的主人。而那些当时有太多理由走开的人，他们内心总在抱怨——为什么机会从来没有眷顾过我。</p>
</blockquote>
<h2 id="自律通往优秀优秀吸引人脉"><a class="markdownIt-Anchor" href="#自律通往优秀优秀吸引人脉"></a> 自律通往优秀，优秀吸引人脉</h2>
<blockquote>
<p>人生如品茶，再优秀的人长期和乌合之众在一起，也终将褪去优秀，沦为乌合之众。纵然“优秀”，也只是和乌合之众相比而言的优秀，又能够优秀到哪里去呢？</p>
</blockquote>
<blockquote>
<p>人很重要，到一个能让你施展才华与光芒的优异环境，也很重要。</p>
</blockquote>
<blockquote>
<p>要想真正进入更高级的圈子，人脉是没有用的，还得自己有能力。掌握越多别人所没有的东西，越能创造自己的稀缺性，你的价值才越大，人脉才能被催化。</p>
</blockquote>
<blockquote>
<p>参照性权利是指对拥有理想的资源或个人特质的人的认同而形成的权力。如果景仰一个人到了要模仿他的行为和态度的地步，那么这个人对你就拥有了参照性权利。这就是大家常说的各领域的KOL[关键意见领袖（KeyOpinionLeader）]。</p>
</blockquote>
<blockquote>
<p>人脉若来自你的个人特质，即才华、学识、人品、个人魅力、精神共鸣等等的吸引，则是相对稳固的，是relationship（强连接），欣赏大于利益，可能已上升到友谊了。如果你的资源是基于平台，如家庭、工作，那么也许这些资源会随着变化而自然消失</p>
</blockquote>
<blockquote>
<p>要么够优秀、要么够魅力，资源才是自己的，不是认识就叫人脉。</p>
</blockquote>
<h2 id="优质的环境让自律事半功倍"><a class="markdownIt-Anchor" href="#优质的环境让自律事半功倍"></a> 优质的环境，让自律事半功倍</h2>
<blockquote>
<p>如何获得机会，我给出的建议是：假如你没有慧眼，就多试！</p>
</blockquote>
<blockquote>
<p>一个人的一生就是让自己不断变得值钱的过程，不断变得值钱就意味着自身不断进步。在一个市场化的社会里，每一个人都有自己的定价，如果你值钱了，讨价还价的机会就多，工作的机会就多，升迁的机会就多，让生命自由的机会也就增多。</p>
</blockquote>
<blockquote>
<p>你想要修炼自己，不窝在一寸地里当井底之蛙，想看看世界上的其他人都在干些什么</p>
</blockquote>
<blockquote>
<p>常到陌生圈子走动，会有意外收获。人脉，前提是有人，窝在家里的沙发上，当然不可能认识什么人。你必须走出去，见识多元，开阔视野，寻得同伴，彼此有信念，互相是人脉。</p>
</blockquote>
<h2 id="自律的敌人是明日复明日"><a class="markdownIt-Anchor" href="#自律的敌人是明日复明日"></a> 自律的敌人，是“明日复明日”</h2>
<blockquote>
<p>想到就去做的执行力，是通向成功的起点。自律的敌人，永远是“明日复明日”。</p>
</blockquote>
<h2 id="选择信息社会最重要的能力是删繁就简"><a class="markdownIt-Anchor" href="#选择信息社会最重要的能力是删繁就简"></a> 选择：信息社会，最重要的能力是删繁就简</h2>
<blockquote>
<p>观察一个人，不要听他说了什么，要看他做了什么。因为说话是没有成本的，行动才是有成本的。</p>
</blockquote>
<blockquote>
<p>如果你对未来还有要求，倒推回来，也许你不知道自己现在该做什么，但至少你该知道自己不该做什么。</p>
</blockquote>
<h2 id="从容慢慢来有时比较快"><a class="markdownIt-Anchor" href="#从容慢慢来有时比较快"></a> 从容：慢慢来，有时比较快</h2>
<blockquote>
<p>既紧急又重要的事，放在第一位，优先处理。重要但不紧急的事，早点规划起来，按照计划逐步实行。如果一直搁置，到了临近截止期限，就会成为“既紧急又重要”，拖延症或者时间管理不当的结果就是让自己非常忙碌。紧急但不重要的事，授权别人去做，不要什么事都想自己做，不要抱着“与其花时间跟别人交代不如自己完成”的心态，也许当时你的事情很多，但别人正好有时间。对你来说，此事的优先级很低，要把排在它前面的10件事办完你才会来考虑它，但对别人来说，听完你的交代，可以立刻处理完毕。如果你没交代下去，结果当你处理完第9件事时，突然插进来新的“重要”事项，那件“紧急但不重要”的事就又会被耽搁，而且你明明知道它是“紧急”的。最后，“不紧急不重要”的事，要学会抛弃，尽量不要浪费时间。</p>
</blockquote>
<h2 id="挫折做最坏的打算但拼死找一条生路"><a class="markdownIt-Anchor" href="#挫折做最坏的打算但拼死找一条生路"></a> 挫折：做最坏的打算，但拼死找一条生路</h2>
<blockquote>
<p>成长的烦恼以不同的形状和深浅进入人生的各个阶段，到了30岁，真真切切地感受到烦恼本身，才觉得小时候的烦恼大多是自己想出来的，就跟棉花糖一样，尝过以后，化在嘴里还有点甜。</p>
</blockquote>
<h2 id="格局想当将军就别用兵的思维"><a class="markdownIt-Anchor" href="#格局想当将军就别用兵的思维"></a> 格局：想当将军，就别用兵的思维</h2>
<blockquote>
<p>鸡毛蒜皮”和“细节”不同，细节是对事态有影响的事，虽然微小，但不能被忽略。所以细节很重要，而“鸡毛蒜皮”是“非重点”</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>APCNet：Adaptive Pyramid Context Network for Semantic Segmentation</title>
    <url>/2020/09/22/APCNet%EF%BC%9AAdaptive%20Pyramid%20Context%20Network%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>APCNet提出ACM模块，满足语义分割的分辨率自适应、多尺度、自注意力3个条件，使得模型效果更好</p>
<a id="more"></a>
<h1 id="什么是-apcnet"><a class="markdownIt-Anchor" href="#什么是-apcnet"></a> 什么是 APCNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/APCNet-20230408142056.png" alt="APCNet-20230408142056" /></li>
<li>本文设计了一种自适应金字塔上下文模型，与其他现有的语义分割模型相比，它包含了多尺度(Multi-scale)、自适应区域(Adaptive)、全局和局部的信息融合权重(Global-guidedLocalAffinity,GLA)三大特性</li>
<li>已经有相关工作证明，多尺度、自适应以及全局指导局部亲和力三大特性都可以提升语义分割模型的性能，但是当前现有的的一些模型都忽略了其中一个或一些特性，因此作者提出了一种包含了这三个特性的模型，得到了很好的效果<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/APCNet-20230408142056-1.png" alt="APCNet-20230408142056-1" /></li>
</ul>
<h1 id="apcnet-的网络结构"><a class="markdownIt-Anchor" href="#apcnet-的网络结构"></a> APCNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/APCNet-20230408142056.png" alt="APCNet-20230408142056" /></li>
<li><strong>多尺度特性</strong>：体现在使用多个 ACM 模块对经 CNN 生成的 feature map 进行处理，每个 ACM 模块将 feature map 变成了不同尺度的局部信息；</li>
<li><strong>自适应性</strong>：体现在 s 的取值可变，即可以通过 ACM 模块中的 Adaptive Pooling 调整生成的 feature map 尺寸为 sxsx512；</li>
<li><strong>GLA 特性</strong>：体现在 ACM 模块中有两条支路，上面的支路包含的是全局信息，它产生的亲和力系数（类似权重，越大说明越重要）用来指导下面支路中的局部信息。最终将各个 ACM 模块生成的自适应上下文向量进行级联来预测语义标</li>
</ul>
<h1 id="apcnet-的-acm-模块"><a class="markdownIt-Anchor" href="#apcnet-的-acm-模块"></a> APCNet 的 ACM 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/APCNet-20230408142056.png" alt="APCNet-20230408142056" /></li>
<li>每个 ACM 模块包括 2 个分支，其中上分支是全局信息，通过对每个 featrue map 进行全局池化然后对通道进行加权，得到权重 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>w</mi><mo>×</mo><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">hw\times s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 全局权重；下分支是局部信息，通过自适应池化 (size=s)+1 x 1 卷积，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup><mo>×</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">s^2\times 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span> 局部权重；将局部权重和全局权重相乘，得到最终权重，然后和输入相乘，得到加权后的 featrue map</li>
</ul>
<h1 id="语义分割模型的多尺度问题-multi-scale问题"><a class="markdownIt-Anchor" href="#语义分割模型的多尺度问题-multi-scale问题"></a> 语义分割模型的多尺度问题 (Multi-scale)问题？</h1>
<ul>
<li>对于语义分割任务而言，物体往往存在尺寸不同、位置不同的特点，对于一些没有聚合上下文信息的模型来说，检测这种尺寸相差较大的物体比较困难，同时会丢失一些细节信息</li>
</ul>
<h1 id="语义分割模型如何解决自适应区域-adaptive问题"><a class="markdownIt-Anchor" href="#语义分割模型如何解决自适应区域-adaptive问题"></a> 语义分割模型如何解决自适应区域 (Adaptive)问题？</h1>
<ul>
<li>在图像中，并不是所有的区域都与被分割物体有关，或者说有些像素点对于物体正确分割的影响大，而有些像素点则没有什么影响。同时，这些像素点或者叫相关区域的位置不一定就在被分割物体的周围，也有可能远离被分割物体。这就要求模型具有自适应选择区域的能力，能够识别这些重要区域帮助物体的正确分割</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>MobileNetv1：Efficient Convolutional Neural Networks for Mobile Vision Applications</title>
    <url>/2020/08/12/MobileNetv1%EF%BC%9AEfficient%20Convolutional%20Neural%20Networks%20for%20Mobile%20Vision%20Applications/</url>
    <content><![CDATA[<p>在VGG的基础上，引入深度可分离卷积，降低模型参数量；并设计宽度因子、分辨率因子控制整个网络的规模</p>
<a id="more"></a>
<ul>
<li>
<p>什么是 MobileNetv1?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv1-20230408140355.png" alt="MobileNetv1-20230408140355" /></li>
<li>在VGG的基础上，引入深度可分离卷积，降低模型参数量</li>
<li>设计宽度因子和分辨率因子两个超参数的控制模型规模</li>
</ul>
</li>
<li>
<p>MobileNetv1的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv1-20230408140356.png" alt="MobileNetv1-20230408140356" /></li>
<li>224x224x3输入，1x1x1000输出</li>
<li>VGG中的标准卷积层换深度可分离卷积(depthwise separable convolution)就可以了。其核心思想是采用深度可分离卷积操作。在相同的权值参数数量的情况下，相较标准卷积操作，可以减少数倍的计算量，从而达到提升网络运算速度的目的</li>
</ul>
</li>
<li>
<p>MobileNetv1的宽度因子 (Width Multiplier)、分辨率因子 (Resolution Multiplier)?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv1-20230408140357.png" alt="" /></li>
<li>上图左边是标准卷积和深度可分离卷积的过程，右边是使用宽度因子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>、分辨率因子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 后对网络计算量的影响</li>
<li><strong>宽度因子</strong>：影响经过深度分离卷积 (DWConv)后的<strong>通道数</strong>，通过影响<strong>点卷积</strong>输出的通道数实现，比如原始输出 16 个通道，现在假定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">\alpha=0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>，那么这个的输出通道变为 8 了。相比较原始输出，经过因子简化后的 DWConv 成本是原来的 1/ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>α</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\alpha^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 倍 $$<br />
D_K\cdot D_K\cdot\alpha M\cdot D_F\cdot D_F+\alpha M\cdot\alpha N\cdot D_F\cdot D_F<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mi>K</mi></msub><mo>⋅</mo><msub><mi>D</mi><mi>K</mi></msub><mo>⋅</mo><mi>α</mi><mi>M</mi><mo>⋅</mo><mi>ρ</mi><msub><mi>D</mi><mi>F</mi></msub><mo>⋅</mo><mi>ρ</mi><msub><mi>D</mi><mi>F</mi></msub><mo>+</mo><mi>α</mi><mi>M</mi><mo>⋅</mo><mi>α</mi><mi>N</mi><mo>⋅</mo><mi>ρ</mi><msub><mi>D</mi><mi>F</mi></msub><mo>⋅</mo><mi>ρ</mi><msub><mi>D</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">D_K\cdot D_K\cdot\alpha M\cdot\rho D_F\cdot\rho D_F+\alpha M\cdot\alpha N\cdot\rho D_F\cdot\rho D_F
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
</li>
<li>
<p>MobileNetv1的缺点？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MobileNetv1-20230408140357-1.png" alt="" /></li>
<li>深度可分类卷积存在很多值为0的卷积核：这是因为Relu的 “死亡神经元”特点导致的</li>
<li>深度可分离卷积核的Kernel数取决于上一层的Depth，无法随意改变</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>CBST：Domain Adaptation for Semantic Segmentation via Class-Balanced Self-Training</title>
    <url>/2020/08/02/CBST%EF%BC%9ADomain%20Adaptation%20for%20Semantic%20Segmentation%20via%20Class-Balanced%20Self-Training/</url>
    <content><![CDATA[<p>针对语义分割的训练数据和测试数据不匹配问题和类别不平衡问题，该论文提出一个UDA和类别平衡方法，使得语义分割更准确</p>
<a id="more"></a>
<h1 id="什么是-cbst"><a class="markdownIt-Anchor" href="#什么是-cbst"></a> 什么是 CBST？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CBST-20230408142239.png" alt="CBST-20230408142239" /></li>
<li>CBST 用于解决语义分割的 DA 问题，通过在源域训练的模型处理目标域的数据时，选择置信度最高的伪标签训练网络，再加上空间先验（像素 n 是类别 c 的频率），用于辅助目标域的训练</li>
</ul>
<h1 id="cbst-的自我训练"><a class="markdownIt-Anchor" href="#cbst-的自我训练"></a> CBST 的自我训练？</h1>
<ul>
<li>根据在目标域高置信度的预测交替生成伪标签，然后使用这些伪标签和标注的源域数据微调网络。注意：**这个框架假设高置信度预测的目标样本有更高的预测准确率</li>
<li>同时学习模型参数和未标注数据的伪标签是很困难的，因为很难保证伪标签的正确性。一个更好的策略是采取”easy-to-hard“的策略，即由易到难的步骤学习，这需要用到自步学习。首先生成置信度较高伪标签，希望他们是正确的，然后再考察那些置信度较低的伪标签 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CBST%EF%BC%9ADomain%20Adaptation%20for%20Semantic%20Segmentation%20via%20Class-Balanced%20Self-Training-20230520190830.png" alt="" /></li>
<li>交替采用以下训练模式：（1）固定 w，训练 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mi>t</mi><mo separator="true">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat y_{t,n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>；(2)固定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mi>t</mi><mo separator="true">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat y_{t,n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，训练 w</li>
</ul>
<h1 id="什么是域适应-domain-adaptation-da"><a class="markdownIt-Anchor" href="#什么是域适应-domain-adaptation-da"></a> 什么是域适应 (domain adaptation, DA)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CBST-20230408142240.png" alt="CBST-20230408142240" /></li>
<li><strong>迁移学习不一定有效</strong>：神经网络需要大量的标记数据进行训练。手动注释它是一项费力的任务。其次，经过训练的深度学习模型只有在与训练数据来自相同的数据分布时才在测试数据上表现良好。由在手机上拍摄的照片创建的数据集与高端数码单反相机的分布明显不同。传统的迁移学习方法失败了</li>
<li><strong>重新标注成本高</strong>：对于每个新数据集，我们首先需要注释样本，然后重新训练深度学习模型以适应新数据。使用与 ImageNet 数据集一样大的数据集训练一个相当大的深度学习模型，即使一次也需要大量的计算能力（模型训练可能会持续数周），再次训练它们是不可行的</li>
<li>域适应是一种尝试解决此问题的方法。使用域自适应，在一个数据集上训练的模型不需要在新数据集上重新训练。相反，可以调整预训练的模型，以在此新数据上提供最佳性能。这节省了大量的计算资源，并且在无监督域适应 (UDA)等技术中，不需要标记新数据</li>
<li><strong>域适应是迁移学习的一种，域适应和微调是迁移学习的两种思路，当源域和目标域都有标签，可以直接微调，只有源域有标签时，使用伪标签微调</strong></li>
</ul>
<p>参考资料：</p>
<ol>
<li><a href="https://www.v7labs.com/blog/domain-adaptation-guide">计算机视觉中的域适应：您需要知道的一切</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>自监督</tag>
      </tags>
  </entry>
  <entry>
    <title>SegAN：Adversarial Network with Multi-scale L1 Loss for Medical Image Segmentation</title>
    <url>/2020/07/22/SegAN%EF%BC%9AAdversarial%20Network%20with%20Multi-scale%20L1%20Loss%20for%20Medical%20Image%20Segmentation/</url>
    <content><![CDATA[<p>借鉴 GAN 训练的思路，采用 min-max 的对抗学习模式来训练 segment 网络和 loss 网络</p>
<a id="more"></a>
<h1 id="什么是-segan"><a class="markdownIt-Anchor" href="#什么是-segan"></a> 什么是 Segan？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Segan-20230408143602.png" alt="Segan-20230408143602" /></li>
<li>借鉴 GAN 训练的思路，采用 min-max 的对抗学习模式来训练 segment 网络和 loss 网络</li>
<li>S 和 C 的训练就像玩 Min-Max 游戏一样： S 旨在最大程度地减少多尺度功能损失，但 C 试图最大化它。随着培训的进行，S 和 C 网络都变得越来越强大。最终，S将能够制作预测的标签图，这些图非常接近地面真理</li>
</ul>
<h1 id="segan-的网络结构"><a class="markdownIt-Anchor" href="#segan-的网络结构"></a> Segan 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Segan-20230408143602.png" alt="Segan-20230408143602" /></li>
<li><strong>segmentor</strong>：普通的 unet 结构, encoder 部分为4层 stride=2的卷积，decoder 部分为4层 upsample，输出为网络预测的肿瘤二值图像</li>
<li><strong>critic</strong>：网络共用 segmentor 部分 encoder 的前三层，分别向 critic 部分输入经预测的肿瘤二值图掩膜的原始输入图像，以及经真值肿瘤二值图掩膜的原始输入图像，最后的 loss 计算两个不同输出之间的 MAE 值（L1 loss）。其中 Multi-scale 体现在对 critic 部分每一个卷积层输出的特征图像都计算 MAE 值，最后的总 loss 取平均</li>
</ul>
<h1 id="segan-的损失函数"><a class="markdownIt-Anchor" href="#segan-的损失函数"></a> Segan 的损失函数？</h1>
<ul>
<li>Segan 的损失是 C 部分在多尺度特征下的损失</li>
</ul>
<h1 id="segan-是如何训练的"><a class="markdownIt-Anchor" href="#segan-是如何训练的"></a> Segan 是如何训练的？</h1>
<ul>
<li>训练方式类似于GAN的min-max对抗学习过程。首先，固定S（segmentor），对C（critic）进行一轮训练；再固定C，对S进行一轮训练，如此反复。S 旨在最大程度地减少多尺度功能损失，但 C 试图最大化它。随着培训的进行，S 和 C 网络都变得越来越强大。最终，S将能够制作预测的标签图，这些图非常接近地面真理</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>GAN</tag>
      </tags>
  </entry>
  <entry>
    <title>ShuffleNetV2：Practical Guidelines for Efficient CNN Architecture Design</title>
    <url>/2020/07/16/ShuffleNetV2%EF%BC%9APractical%20Guidelines%20for%20Efficient%20CNN%20Architecture%20Design/</url>
    <content><![CDATA[<p>ShuffleNetv2通过分析模型内存访问代价 (MAC)的规律，设计出4个降低这个指标的网络构建规则</p>
<a id="more"></a>
<ul>
<li>
<p>什么是ShuffleNetv2?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetV2-20230408141126.png" alt="ShuffleNetV2-20230408141126" /></li>
<li>ShuffleNetv2认为采用FLOPs评估模型性能不合理的，因为训练时间除了看FLOPs，还有很多过程需要消耗时间，例如文件IO，内存读取，GPU执行效率等等</li>
<li>ShuffleNetv1的分组卷积以及 bottleneck 结果均会提高内存访问代价 (MAC)，但是导致不可忽视的计算损耗</li>
<li>ShuffleNetv2从内存消耗成本， GPU并行性两个方向分析了模型的非FLOPs的损耗，提出轻量化模型设计的4个策略</li>
</ul>
</li>
<li>
<p>ShuffleNetv2的设计策略？</p>
<ul>
<li>1）<strong>当输入通道数和输出通道数相同时,MAC最小</strong></li>
<li>2）<strong>MAC与分组数量g成正比</strong></li>
<li>3）<strong>网络的分支数量降低并行能力</strong></li>
<li>4）<strong>Element-wise操作是非常耗时的</strong></li>
</ul>
</li>
<li>
<p>ShuffleNetv2的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetV2-20230408141127.png" alt="ShuffleNetV2-20230408141127" /></li>
<li>类似于ShuffleNetv1，设定stage2-4为堆叠ShuffleNetv2 Unit的结构，在全局池化前加了一个卷积来帮助特征融合</li>
<li>ShuffleNetV2不仅速度快，准确率也不低，主要得益于两个方面，首先是模型性能高，使得可以使用更大的维度以及网络容量，其次是channel split可以使得部分特征直接穿过block，相当于DenseNet的特征重用</li>
</ul>
</li>
<li>
<p>ShuffleNetv2 Unit结构?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetV2-20230408141127-1.png" alt="ShuffleNetV2-20230408141127-1" /></li>
<li>(a)和 (b)是 ShuffleNetv1 的 base unit 和下采样 unit；©、(d)是 ShuffleNetv2 设计的base unit 和下采样 unit</li>
<li>改进：(1)利用 channel split 对输入通道对半分。因为输入输出相同 MAC 最小;(2)利用 channel split 替换了 group 操作。因为 group 越少 MAC 越小;(3)将 shuffle 移到了 concat 之后。因为分支越少 MAC 越小;(4)去掉 Elementwise 改成 concat, 因为 Elementwise 越少 MAC 越小</li>
</ul>
</li>
<li>
<p>ShuffleNetv1与 DenseNet 比较?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetV2-20230408141128.png" alt="ShuffleNetV2-20230408141128" /></li>
<li>图a、b分别是对DenseNet以及ShuffleNetV2的特征重用程度进行了可视化对比</li>
<li>在 DenseNet中，相邻层的连接比其它层更强，意味着所有层的稠密连接存在冗余，而在ShuffleNetv2中，层间的影响力以倍数进行衰减，与DenseNet有一定的相似性</li>
</ul>
</li>
<li>
<p>什么是内存访问代价(Memory Access Cost,MAC)？</p>
<ul>
<li>即内存访问操作的次数</li>
<li>假设输入、输出通道数分别是 c1, c2，特征图大小是 hw，那么1x1卷积的 FLOPs 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>=</mo><mi>h</mi><mi>w</mi><msub><mi>c</mi><mn>1</mn></msub><msub><mi>c</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">B=hwc_1c_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，对应的<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mi>A</mi><mi>C</mi><mo>=</mo><mi>h</mi><mo>×</mo><mi>w</mi><mo>×</mo><mo stretchy="false">(</mo><mi>c</mi><mn>1</mn><mo>+</mo><mi>c</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mn>1</mn><mo>×</mo><mi>c</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">MAC=h \times w \times (c1+c2)+c1 \times c2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord">2</span></span></span></span></span></p>
</li>
<li>ShuffleNetv2 认为FLOPs 评估模型性能不严谨，因此提出该指标</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《机器学习——Python实践》-魏贞原</title>
    <url>/2020/07/11/%E4%B9%A6%E6%91%98_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Python%E5%AE%9E%E8%B7%B5-%E9%AD%8F%E8%B4%9E%E5%8E%9F.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/27611266">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29646619.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29646619.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>机器学习——Python实践</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>魏贞原</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2018-1</span></div>
			<div class="douban-card-item"><span>评分: </span><span>6.9</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="第一部分初始"><a class="markdownIt-Anchor" href="#第一部分初始"></a> 第一部分初始</h2>
<blockquote>
<p>机器学习（MachineLearning，ML）是一门多领域的交叉学科，涉及概率论、统计学、线性代数、算法等多门学科。</p>
</blockquote>
<blockquote>
<p>监督学习即在机器学习过程中提供对错指示。一般是在数据组中包含最终结果（0，1），通过算法让机器自己减少误差。这一类学习主要应用于分类和预测（Regression&amp;Classify）。</p>
</blockquote>
<blockquote>
<p>非监督学习又称归纳性学习（Clustering），利用K方式（KMean）建立中心（Centriole），通过循环和递减运算（Iteration&amp;Descent）来减小误差，达到分类的目的。</p>
</blockquote>
<blockquote>
<p>下面三个技巧可以有效地帮助你快速提高学习机器学习的能力。·启动一个可以在一个小时内完成的小项目。·通过每周完成一个项目来保持你的学习势头，并建立积累自己的项目工作区。·在微博、微信、Github等社交工具上分享自己的成果，或者随时随地地展示自己的兴趣，增加技能、知识，并获得反馈。</p>
</blockquote>
<blockquote>
<p>Python是一门面向对象的动态解释语言，简单易学，并且具有很好的可读性。</p>
</blockquote>
<blockquote>
<p>Python具有丰富和强大的类库，它常被称为“胶水语言”，能够很轻松地把用其他语言制作的各种模块（尤其是C/C++）联结在一起。</p>
</blockquote>
<blockquote>
<p>Python是一门动态语言，非常适合于交互性开发和大型项目的快速原型开发。</p>
</blockquote>
<blockquote>
<p>SciPy是在数学运算、科学和工程学方面被广泛应用的Python类库。它包括统计、优化、整合、线性代数模块、傅里叶变换、信号和图像处理、常微分方程求解器等，因此被广泛地应用在机器学习项目中。</p>
</blockquote>
<blockquote>
<p>NumPy：是Python的一种开源数值计算扩展。它可用来存储和处理大型矩阵，提供了许多高级的数值编程工具，如矩阵数据类型、矢量处理、精密的运算库。</p>
</blockquote>
<blockquote>
<p>Matplotlib：Python中最著名的2D绘图库，十分适合交互式地进行制图；也可以方便地将它作为绘图控件，嵌入GUI应用程序中。</p>
</blockquote>
<blockquote>
<p>Pandas：是基于NumPy的一种工具，是为了解决数据分析任务而创建的。Pandas纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具，也提供了大量能使我们快速、便捷地处理数据的函数和方法。</p>
</blockquote>
<blockquote>
<p>scikit-learn是Python中开发和实践机器学习的著名类库之一，依赖于SciPy及其相关类库来运行。scikit-learn的基本功能主要分为六大部分：分类、回归、聚类、数据降维、模型选择和数据预处理。</p>
</blockquote>
<blockquote>
<p>使用with语句，简化了对异常的处理。因此，当需要对异常进行处理时，如果对象遵循了上下文管理协议（ContextManagementProtocol），建议使用with语句来实现。</p>
</blockquote>
<h2 id="第二部分数据理解"><a class="markdownIt-Anchor" href="#第二部分数据理解"></a> 第二部分数据理解</h2>
<blockquote>
<p>下面将介绍三种将CSV数据导入到Python中的方法，以便完成对机器学习算法的训练。·通过标准的Python库导入CSV文件。·通过NumPy导入CSV文件。·通过Pandas导入CSV文件。</p>
</blockquote>
<blockquote>
<p>Python提供了一个标准类库CSV，用来处理CSV文件。这个类库中的reader（）函数用来读入CSV文件。</p>
</blockquote>
<blockquote>
<p>也可以使用NumPy的loadtxt（）函数导入数据。使用这个函数处理的数据没有文件头，并且所有的数据结构是一样的，也就是说，数据类型是一样的。</p>
</blockquote>
<blockquote>
<p>通过Pandas来导入CSV文件要使用pandas.read_csv（）函数。这个函数的返回值是DataFrame，可以很方便地进行下一步的处理。</p>
</blockquote>
<blockquote>
<p>介绍七种方法来帮助大家理解数据。·简单地查看数据。·审查数据的维度。·审查数据的类型和属性。·总结查看数据分类的分布情况。·通过描述性统计分析数据。·理解数据属性的相关性。·审查数据的分布状况。</p>
</blockquote>
<blockquote>
<p>在分类算法中，需要知道每个分类的数据大概有多少条记录，以及数据分布是否平衡。如果数据分布的平衡性很差，需要在数据加工阶段进行数据处理，来提高数据分布的平衡性。</p>
</blockquote>
<blockquote>
<p>数据属性的相关性是指数据的两个属性是否互相影响，以及这种影响是什么方式的等。非常通用的计算两个属性的相关性的方法是皮尔逊相关系数，皮尔逊相关系数是度量两个变量间相关程度的方法。它是一个介于1和-1之间的值，其中，1表示变量完全正相关，0表示无关，-1表示完全负相关。</p>
</blockquote>
<blockquote>
<p>通过分析数据的高斯分布情况来确认数据的偏离情况。高斯分布又叫正态分布，是在数据、物理及工程等领域都非常重要的概率分布，在统计学的许多方面有着重大的影响。</p>
</blockquote>
<blockquote>
<p>相关矩阵图主要用来展示两个不同属性相互影响的程度。如果两个属性按照相同的方向变化，说明是正向影响。如果两个属性朝相反方向变化，说明是反向影响。把所有属性两两影响的关系展示出来的图表就叫相关矩阵图。矩阵图法就是从多维问题的事件中找出成对的因素，排列成矩阵图，然后根据矩阵图来分析问题，确定关键点。它是一种通过多因素综合思考来探索问题的好方法。</p>
</blockquote>
<h2 id="第三部分数据准备"><a class="markdownIt-Anchor" href="#第三部分数据准备"></a> 第三部分数据准备</h2>
<blockquote>
<p>特征选择是困难耗时的，也需要对需求的理解和专业知识的掌握。在机器学习的应用开发中，最基础的是特征工程。</p>
</blockquote>
<blockquote>
<p>数据预处理需要根据数据本身的特性进行，有不同的格式和不同的要求，有缺失值的要填，有无效数据的要剔，有冗余维的要选，这些步骤都和数据本身的特性紧密相关。</p>
</blockquote>
<blockquote>
<p>介绍以下几种数据转换方法：·调整数据尺度（RescaleData）。·正态化数据（StandardizeData）。·标准化数据（NormalizeData）。·二值数据（BinarizeData）。</p>
</blockquote>
<blockquote>
<p>在scikit-learn的说明文档中，也有对这两种方法的详细说明：·适合和多重变换（FitandMultipleTransform）。·适合和变换组合（CombinedFit-and-Transform）。推荐优先选择适合和多重变换（FitandMultipleTransform）方法。首先调用fit（）函数来准备数据转换的参数，然后调用transform（）函数来做数据的预处理。适合和变换组合（CombinedFit-and-Transform）对绘图或汇总处理具有非常好的效果。</p>
</blockquote>
<blockquote>
<p>如果数据的各个属性按照不同的方式度量数据，那么通过调整数据的尺度让所有的属性按照相同的尺度来度量数据，就会给机器学习的算法模型训练带来极大的方便。这个方法通常会将数据的所有属性标准化，并将数据转换成0和1之间的值，这对于梯度下降等算法是非常有用的，对于回归算法、神经网络算法和K近邻算法的准确度提高也起到很重要的作用。</p>
</blockquote>
<blockquote>
<p>在统计学中，按照对事物描述的精确度，对所采用的尺度从低级到高级分成四个层次：定类尺度、定序尺度、定距尺度和定比尺度。定类尺度是对事物类别属性的一种测度，按照事物的属性进行分组或分类。定序尺度是对事物之间的等级或顺序的一种测度，可以比较优劣或排序。定距尺度和定比尺度是对事物类别或次序之间间距的测量，定距尺度的特点是其不仅能将事物区分为不同的类型并进行排序，而且可以准确地指出类别之间的差距。而定比尺度则更近一步，它和定距尺度的差别在于它有一个固定的绝对“零”点。由于这两种测量尺度在绝大多数统计分析中没有本质的差别，所以很多时候都没有严格的区分。</p>
</blockquote>
<blockquote>
<p>正态化数据（StandardizeData）是有效的处理符合高斯分布的数据的手段，输出结果以0为中位数，方差为1，并作为假定数据符合高斯分布的算法的输入。</p>
</blockquote>
<blockquote>
<p>标准化数据（NormalizeData）处理是将每一行的数据的距离处理成1（在线性代数中矢量距离为1）的数据又叫作“归一元”处理，适合处理稀疏数据（具有很多为0的数据），归一元处理的数据对使用权重输入的神经网络和使用距离的K近邻算法的准确度的提升有显著作用。</p>
</blockquote>
<blockquote>
<p>二值数据（BinarizeData）是使用值将数据转化为二值，大于阈值设置为1，小于阈值设置为0。这个过程被叫作二分数据或阈值转换。</p>
</blockquote>
<blockquote>
<p>数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限而已。</p>
</blockquote>
<blockquote>
<p>在开始建立模型之前，执行特征选定有助于：降低数据的拟合度：较少的冗余数据，会使算法得出结论的机会更大。提高算法精度：较少的误导数据，能够提高算法的准确度。减少训练时间：越少的数据，训练模型所需要的时间越少。</p>
</blockquote>
<blockquote>
<p>统计分析可以用来分析选择对结果影响最大的数据特征。在scikit-learn中提供了SelectKBest类，可以使用一系列统计方法来选定数据特征，是对卡方检验的实现。</p>
</blockquote>
<blockquote>
<p>经典的卡方检验是检验定性自变量对定性因变量的相关性的方法。假设自变量有N种取值，因变量有M种取值，考虑自变量等于i且因变量等于j的样本频数的观察值与期望值的差距，构建统计量。卡方检验就是统计样本的实际观测值与理论推断值之间的偏离程度，偏离程度决定了卡方值的大小，卡方值越大，越不符合；卡方值越小，偏差越小，越趋于符合；若两个值完全相等，卡方值就为0，表明理论值完全符合。</p>
</blockquote>
<blockquote>
<p>递归特征消除（RFE）使用一个基模型来进行多轮训练，每轮训练后消除若干权值系数的特征，再基于新的特征集进行下一轮训练。通过每一个基模型的精度，找到对最终的预测结果影响最大的数据特征。在scikit-learn文档中有更多的关于递归特征消除（RFE）的描述。</p>
</blockquote>
<blockquote>
<p>主要成分分析（PCA）是使用线性代数来转换压缩数据，通常被称作数据降维。常见的降维方法除了主要成分分析（PCA），还有线性判别分析（LDA），它本身也是一个分类模型。PCA和LDA有很多的相似之处，其本质是将原始的样本映射到维度更低的样本空间中，但是PCA和LDA的映射目标不一样：PCA是为了让映射后的样本具有最大的发散性；而LDA是为了让映射后的样本有最好的分类性能。所以说，PCA是一种无监督的降维方法，而LDA是一种有监督的降维方法。在聚类算法中，通常会利用PCA对数据进行降维处理，以利于对数据的简化分析和可视化。</p>
</blockquote>
<blockquote>
<p>袋装决策树算法（BaggedDecisionTress）、随机森林算法和极端随机树算法都可以用来计算数据特征的重要性。这三个算法都是集成算法中的袋装算法，</p>
</blockquote>
<h2 id="第四部分选择模型"><a class="markdownIt-Anchor" href="#第四部分选择模型"></a> 第四部分选择模型</h2>
<blockquote>
<p>学习四种不同的分离数据集的方法，用来分离训练数据集和评估数据集，并用其评估算法模型：·分离训练数据集和评估数据集。·K折交叉验证分离。·弃一交叉验证分离。·重复随机评估、训练数据集分离。</p>
</blockquote>
<blockquote>
<p>交叉验证是用来验证分类器的性能的一种统计分析方法，有时也称作循环估计，在统计学上是将数据样本切割成小子集的实用方法。基本思想是按照某种规则将原始数据进行分组，一部分作为训练数据集，另一部分作为评估数据集。</p>
</blockquote>
<blockquote>
<p>K折交叉验证是将原始数据分成K组（一般是均分），将每个子集数据分别做一次验证集，其余的K-1组子集数据作为训练集，这样会得到K个模型，再用这K个模型最终的验证集的分类准确率的平均数，作为此K折交叉验证下分类器的性能指标。K一般大于等于2，实际操作时一般从3开始取值，只有在原始数据集和数据量小的时候才会尝试取2。K折交叉验证可以有效地避免过学习及欠学习状态的发生，最后得到的结果也比较具有说服力。通常情况下，K的取值为3、5、10。</p>
</blockquote>
<blockquote>
<p>如果原始数据有N个样本，那么弃一交叉验证就是N-1个交叉验证，即每个样本单独作为验证集，其余的N-1个样本作为训练集，所以弃一交叉验证会得到N个模型，用这N个模型最终的验证集的分类准确率的平均数作为此次弃一交叉验证分类器的性能指标。</p>
</blockquote>
<blockquote>
<p>较于K折交叉验证，弃一交叉验证有两个显著的优点：·每一回合中几乎所有的样本皆用于训练模型，因此最接近原始样本的分布，这样评估所得的结果比较可靠。·实验过程中没有随机因素会影响实验数据，确保实验过程是可以被复制的。</p>
</blockquote>
<blockquote>
<p>弃一交叉验证的缺点是计算成本高，因为需要建立的模型数量与原始数据样本数量相同，当原始数据样本数量相当多时，弃一交叉验证在实际运行上便有困难，需要花费大量的时间来完成算法的运算与评估，除非每次训练分类器得到模型的速度很快，或者可以用并行化计算减少计算所需的时间。</p>
</blockquote>
<blockquote>
<p>另外一种K折交叉验证的用途是随机分离数据为训练数据集和评估数据集，但是重复这个过程多次，就如同交叉验证分离。</p>
</blockquote>
<blockquote>
<p>分类问题或许是最常见的机器学习问题，并且有多种评估矩阵来评估分类算法。本章将介绍以下几种用来评估分类算法的评估矩阵：·分类准确度。·对数损失函数（Logloss）。·AUC图。·混淆矩阵。·分类报告（ClassificationReport）。</p>
</blockquote>
<blockquote>
<p>在逻辑回归的推导中，它假设样本服从伯努利分布（0～1分布），然后求得满足该分布的似然函数，再取对数、求极值等。而逻辑回归并没有求似然函数的极值，而是把极大化当作一种思想，进而推导出它的经验风险函数为：最小化负的似然函数[maxF（y，f（x））→min-F（y，f（x））]。从损失函数的视角来看，它就成了对数（Log）损失函数了。对数损失函数越小，模型就越好，而且使损失函数尽量是一个凸函数，便于收敛计算。</p>
</blockquote>
<blockquote>
<p>ROC和AUC是评价分类器的指标。ROC是受试者工作特征曲线（ReceiverOperatingCharacteristicCurve）的简写，又称为感受性曲线（SensitivityCurve）。得此名的原因在于曲线上各点反映相同的感受性，它们都是对同一信号刺激的反应，只不过是在几种不同的判定标准下所得的结果而已。ROC是反映敏感性和特异性连续变量的综合指标，用构图法揭示敏感性和特异性的相互关系，通过将连续变量设定出多个不同的临界值计算出一系列敏感性和特异性，再以敏感性为纵坐标、（1-特异性）为横坐标绘制成曲线。AUC是ROC曲线下的面积（AreaUnderROCCurve）的简称，顾名思义，AUC的值就是处于ROCCurve下方的那部分面积的大小。通常，AUC的值介于0.5到1.0之间，AUC的值越大，诊断准确性越高。在ROC曲线上，靠近坐标图左上方的点为敏感性和特异性均较高的临界值。</p>
</blockquote>
<blockquote>
<p>混淆矩阵（CnfusionMatrix）主要用于比较分类结果和实际测得值，可以把分类结果的精度显示在一个混淆矩阵里面。</p>
</blockquote>
<blockquote>
<p>在scikit-learn中提供了一个非常方便的工具，可以给出对分类问题的评估报告，Classification_report（）方法能够给出精确率（precision）、召回率（recall）、F1值（F1-score）和样本数目（support）。在这里简单地介绍一下三个指标数据：精确率、召回率、F1值。</p>
</blockquote>
<blockquote>
<p>介绍三种评估机器学习的回归算法的评估矩阵。·平均绝对误差（MeanAbsoluteError，MAE）。·均方误差（MeanSquaredError，MSE）。·决定系数（R2）。</p>
</blockquote>
<blockquote>
<p>平均绝对误差是所有单个观测值与算术平均值的偏差的绝对值的平均值。与平均误差相比，平均绝对误差由于离差被绝对值化，不会出现正负相抵消的情况，因而，平均绝对误差能更好地反映预测值误差的实际情况。</p>
</blockquote>
<blockquote>
<p>均方误差是衡量平均误差的方法，可以评价数据的变化程度。均方根误差是均方误差的算术平方根。均方误差的值越小，说明用该预测模型描述实验数据的准确度越高。</p>
</blockquote>
<blockquote>
<p>决定系数，反映因变量的全部变异能通过回归关系被自变量解释的比例。拟合优度越大，自变量对因变量的解释程度越高，自变量引起的变动占总变动的百分比越高，观察点在回归直线附近越密集。如R2为0.8，则表示回归关系可以解释因变量80%的变异。换句话说，如果我们能控制自变量不变，则因变量的变异程度会减少80%。</p>
</blockquote>
<blockquote>
<p>决定系数（R2）的特点：·可决系数是非负的统计量。·可决系数的取值范围：0≤R2≤1。·可决系数是样本观测值的函数，是因随机抽样而变动的随机变量。为此，对可决系数的统计的可靠性也应进行检验。</p>
</blockquote>
<blockquote>
<p>审查算法前没有办法判断哪个算法对数据集最有效、能够生成最优模型，必须通过一系列实验判断出哪些算法对问题最有效，然后再进一步来选择算法。这个过程被叫作算法审查。</p>
</blockquote>
<blockquote>
<p>审查算法的几点建议：·尝试多种代表性算法。·尝试多种机器学习的算法。·尝试多种模型。</p>
</blockquote>
<blockquote>
<p>回归是一种极易理解的模型，相当于y=f（x），表明自变量x与因变量y的关系。犹如医生治病时先望、闻、问、切，再判定病人是否生病或生了什么病，此处的“望、闻、问、切”就是获取自变量x，即特征数据；判断是否生病就相当于获取因变量y，即预测分类。逻辑回归其实是一个分类算法而不是回归算法，通常是利用已知的自变量来预测一个离散型因变量的值（如二进制值0/1、是/否、真/假）。简单来说，它就是通过拟合一个逻辑函数（LogitFunction）来预测一个事件发生的概率。所以它预测的是一个概率值，它的输出值应该为0～1，因此非常适合处理二分类问题。</p>
</blockquote>
<blockquote>
<p>线性判别分析（LinearDiscriminantAnalysis，LDA），也叫作Fisher线性判别（</p>
</blockquote>
<blockquote>
<p>线性判别分析的基本思想是将高维的模式样本投影到最佳鉴别矢量空间，以达到抽取分类信息和压缩特征空间维数的效果，投影后保证模式样本在新的子空间有最大的类间距离和最小的类内距离，即模式在该空间中有最佳的可分离性。因此，它是一种有效的特征抽取方法。使用这种方法能够使投影后模式样本的类间散布矩阵最大，并且类内散布矩阵最小。就是说，它能够保证投影后模式样本在新的空间中有最小的类内距离和最大的类间距离，即模式在该空间中有最佳的可分离性。</p>
</blockquote>
<blockquote>
<p>K近邻算法是一种理论上比较成熟的方法，也是最简单的机器学习算法之一。该方法的思路是：如果一个样本在特征空间中的k个最相似（特征空间中最邻近）的样本中的大多数属于某一个类别，则该样本也属于这个类别。在KNN中，通过计算对象间距离来作为各个对象之间的非相似性指标，避免了对象之间的匹配问题，距离一般使用欧氏距离或曼哈顿距离；同时，KNN通过依据k个对象中占优的类别进行决策，而不是通过单一的对象类别决策。这就是KNN算法的优势。在scikit-learn中的实现类是KNeighborsClassifier。</p>
</blockquote>
<blockquote>
<p>贝叶斯分类器的分类原理是通过某对象的先验概率，利用贝叶斯公式计算出其在所有类别上的后验概率，即该对象属于某一类的概率，选择具有最大后验概率的类作为该对象所属的类。</p>
</blockquote>
<blockquote>
<p>分类与回归树的英文缩写是CART，也属于一种决策树，树的构建基于基尼指数。CART假设决策树是二叉树，内部结点特征的取值为“是”和“否”，左分支是取值为“是”的分支，右分支是取值为“否”的分支。这样的决策树等价于递归二分每个特征，将输入空间（特征空间）划分为有限个单元，并在这些单元上确定预测的概率分布，也就是在输入给定的条件下输出的条件概率分布。</p>
</blockquote>
<blockquote>
<p>回归算法是一种专门用于共线性数据分析的有偏估计回归方法，实际上是一种改良的最小二乘估计法，通过放弃最小二乘法的无偏性，以损失部分信息、降低精度为代价，获得回归系数更符合实际、更可靠的回归方法，对病态数据的拟合要强于最小二乘法。</p>
</blockquote>
<blockquote>
<p>套索回归算法和岭回归算法类似，套索回归算法也会惩罚回归系数，在套索回归中会惩罚回归系数的绝对值大小。此外，它能够减少变化程度并提高线性回归模型的精度。套索回归算法和岭回归算法有一点不同，它使用的惩罚函数是绝对值，而不是平方。这导致惩罚（或等于约束估计的绝对值之和）值使一些参数估计结果等于零。使用惩罚值越大，进一步估计会使缩小值越趋近零。</p>
</blockquote>
<blockquote>
<p>弹性网络回归算法是套索回归算法和岭回归算法的混合体，在模型训练时，弹性网络回归算法综合使用L1和L2两种正则化方法。当有多个相关的特征时，弹性网络回归算法是很有用的，套索回归算法会随机挑选算法中的一个，而弹性网络回归算法则会选择两个。与套索回归算法和岭回归算法相比，弹性网络回归算法的优点是，它允许弹性网络回归继承循环状态下岭回归的一些稳定性。另外，在高度相关变量的情况下，它会产生群体效应；选择变量的数目没有限制；可以承受双重收缩。在scikit-learn中的实现类是ElasticNet。</p>
</blockquote>
<blockquote>
<p>K近邻算法是按照距离来预测结果。在scikit-learn中对回归算法的K近邻算法的实现类是KNeighborsRegressor。默认的距离参数为闵式距离，可以指定曼哈顿距离作为距离的计算方式。</p>
</blockquote>
<blockquote>
<p>最合适的算法比较方法是：使用相同的数据、相同的方法来评估不同的算法，以便得到一个准确的结果。</p>
</blockquote>
<blockquote>
<p>在机器学习方面有一些可以采用的标准化流程，这些标准化流程是从共同的问题中提炼出来的，例如评估框架中的数据缺失等。在scikit-learn中提供了自动化运行流程的工具——Pipeline。Pipeline能够将从数据转换到评估模型的整个机器学习流程进行自动化处理。</p>
</blockquote>
<blockquote>
<p>在机器学习的实践中有一个很常见的错误，就是训练数据集与评估数据集之间的数据泄露，这会影响到评估的准确度。要想避免这个问题，需要有一个合适的方式把数据分离成训练数据集和评估数据集，这个过程被包含在数据的准备过程中。</p>
</blockquote>
<blockquote>
<p>Pipeline能够处理训练数据集与评估数据集之间的数据泄露问题，通常会在数据处理过程中对分离出的所有数据子集做同样的数据处理，如正态化处理。</p>
</blockquote>
<blockquote>
<p>特征选择也是一个容易受到数据泄露影响的过程。和数据准备一样，特征选择时也必须确保数据的稳固性，Pipeline也提供了一个工具（FeatureUnion）来保证数据特征选择时数据的稳固性。</p>
</blockquote>
<h2 id="第五部分优化模型"><a class="markdownIt-Anchor" href="#第五部分优化模型"></a> 第五部分优化模型</h2>
<blockquote>
<p>下面是三种流行的集成算法的方法。·装袋（Bagging）算法：先将训练集分离成多个子集，然后通过各个子集训练多个模型。·提升（Boosting）算法：训练多个模型并组成一个序列，序列中的每一个模型都会修正前一个模型的错误。·投票（Voting）算法：训练多个模型，并采用样本统计来提高模型的准确度。</p>
</blockquote>
<blockquote>
<p>装袋算法是一种提高分类准确率的算法，通过给定组合投票的方式获得最优解。比如你生病了，去n个医院看了n个医生，每个医生都给你开了药方，最后哪个药方的出现次数多，就说明这个药方越有可能是最优解，这很好理解，这也是装袋算法的思想。下面将介绍三种装袋模型：·装袋决策树（BaggedDecisionTrees）。·随机森林（RandomForest）。·极端随机树（ExtraTrees）。</p>
</blockquote>
<blockquote>
<p>装袋算法在数据具有很大的方差时非常有效，最常见的例子就是决策树的装袋算法。下面将在scikit-learn中通过BaggingClassifier实现分类与回归树算法。</p>
</blockquote>
<blockquote>
<p>随机森林是用随机的方式建立一个森林，森林由很多的决策树组成，而且每一棵决策树之间是没有关联的。得到森林之后，当有一个新的输入样本进入的时候，就让森林中的每一棵决策树分别进行判断，看看这个样本应该属于哪一类，再看看哪一类被选择最多，就预测这个样本为哪一类。</p>
</blockquote>
<blockquote>
<p>在建立每一棵决策树的过程中，有两点需要注意：采样与完全分裂。首先是两个随机采样的过程，随机森林对输入的数据要进行行、列的采样。对于行采样采用有放回的方式，也就是在采样得到的样本集合中可能有重复的样本。假设输入样本为N个，那么采样的样本也为N个。这样在训练的时候，每一棵树的输入样本都不是全部的样本，就相对不容易出现过拟合。然后进行列采样，从M个feature中选出m个（m＜＜M）。之后再对采样之后的数据使用完全分裂的方式建立决策树，这样决策树的某一个叶子节点要么是无法继续分裂的，要么所有样本都指向同一个分类。一般很多的决策树算法都有一个重要的步骤——剪枝，但是这里不这么做，因为之前的两个随机采样过程保证了随机性，所以不剪枝也不会出现过拟合。</p>
</blockquote>
<blockquote>
<p>随机森林算法：每一棵决策树就是一个精通某一个领域的专家，这样在随机森林中就有了很多个精通不同领域的专家，对于一个新的问题（新的输入数据），可以从不同的角度去看待它，最终由各个专家投票得到结果。</p>
</blockquote>
<blockquote>
<p>极端随机树是由PierreGeurts等人于2006年提出的，它与随机森林十分相似，都是由许多决策树构成。但它与随机森林有两个主要的区别：（1）随机森林应用的是Bagging模型，而极端随机树是使用所有的训练样本得到每棵决策树，也就是每棵决策树应用的是相同的全部训练样本。（2）随机森林是在一个随机子集内得到最优分叉特征属性，而极端随机树是完全随机地选择分叉特征属性，从而实现对决策树进行分叉的。</p>
</blockquote>
<blockquote>
<p>提升算法是一种用来提高弱分类算法准确度的方法，这种方法先构造一个预测函数系列，然后以一定的方式将它们组合成一个预测函数。提升算法也是一种提高任意给定学习算法准确度的方法，它是一种集成算法，主要通过对样本集的操作获得样本子集，然后用弱分类算法在样本子集上训练生成一系列的基分类器。它可以用来提高其他弱分类算法的识别率，也就是将其他的弱分类算法作为基分类算法放于提升框架中，通过提升框架对训练样本集的操作，得到不同的训练样本子集，再用该样本子集去训练生成基分类器。每得到一个样本集就用该基分类算法在该样本集上产生一个基分类器，这样在给定训练轮数n后，就可产生n个基分类器，然后提升算法将这n个基分类器进行加权融合，产生最后的结果分类器。在这n个基分类器中，每个分类器的识别率不一定很高，但它们联合后的结果有很高的识别率，这样便提高了弱分类算法的识别率。</p>
</blockquote>
<blockquote>
<p>两个非常常见的用于机器学习的提升算法：·AdaBoost.·随机梯度提升（StochasticGradientBoosting）。</p>
</blockquote>
<blockquote>
<p>AdaBoost是一种迭代算法，其核心思想是针对同一个训练集训练不同的分类器（弱分类器），然后把这些弱分类器集合起来，构成一个更强的最终分类器（强分类器）。其算法本身是通过改变数据分布来实现的，它根据每次训练集中每个样本的分类是否正确，以及上次的总体分类的准确率，来确定每个样本的权值。它将修改过权值的新数据集送给下层分类器进行训练，再将每次训练得到的分类器融合起来，作为最后的决策分类器。使用AdaBoost分类器可以排除一些不必要的训练数据特征，并放在关键的训练数据上面。在scikit-learn中的实现类是AdaBoostClassifier。</p>
</blockquote>
<blockquote>
<p>随机梯度提升法（GBM）基于的思想是：要找到某个函数的最大值，最好的办法就是沿着该函数的梯度方向探寻。梯度算子总是指向函数值增长最快的方向。由于梯度提升算法在每次更新数据集时都需要遍历整个数据集，计算复杂度较高，于是有了一个改进算法——随机梯度提升算法，该算法一次只用一个样本点来更新回归系数，极大地改善了算法的计算复杂度。在scikit-learn中的实现类是GradientBoostingClassifier。</p>
</blockquote>
<blockquote>
<p>投票算法（Voting）是一个非常简单的多个机器学习算法的集成算法。投票算法是通过创建两个或多个算法模型，利用投票算法将这些算法包装起来，计算各个子模型的平均预测状况。在实际的应用中，可以对每个子模型的预测结果增加权重，以提高算法的准确度。但是，在scikit-learn中不提供加权算法。下面通过一个例子来展示在scikit-learn中如何实现一个投票算法。在scikit-learn中的实现类是VotingClassifier。</p>
</blockquote>
<blockquote>
<p>调整算法参数是采用机器学习解决问题的最后一个步骤，有时也被称为超参数优化。学会调参是进行机器学习项目的前提，但第一次遇到这些算法和模型时，肯定会被其大量的参数吓到。其实，参数可分为两种：一种是影响模型在训练集上的准确度或防止过拟合能力的参数；另一种是不影响这两者的参数。模型在样本总体上的准确度由其在训练集上的准确度及其防止过拟合的能力共同决定，所以在调参时主要针对第一种参数进行调整，最终达到的效果是：模型在训练集上的准确度和防止过拟合能力的大和谐。</p>
</blockquote>
<blockquote>
<p>网格搜索优化参数是一种算法参数优化的方法。它是通过遍历已定义参数的列表，来评估算法的参数，从而找到最优参数。在scikit-learn中使用GridSearchCV来实现对参数的跟踪、调整与评估，从而找到最优参数。网格搜索优化参数适用于三四个（或更少）的超参数（当超参数的数量增加时，网格搜索的计算复杂度会呈现指数型增长，这时要换用随机搜索），由用户列出一个较小的超参数值域，这些超参数值域的笛卡尔集（排列组合）为一组组超参数。网格搜索算法使用每组超参数训练模型，并挑选验证集误差最小的超参数组合。</p>
</blockquote>
<blockquote>
<p>随机搜索优化参数是另一种对算法参数优化的方法。随机搜索优化参数通过固定次数的迭代，采用随机采样分布的方式搜索合适的参数。与网格搜索优化参数相比，随机搜索优化参数提供了一种更高效的解决方法（特别是在参数数量多的情况下），随机搜索优化参数为每个参数定义了一个分布函数，并在该空间中采样。在scikit-learn中通过RandomizedSearchCV类实现。</p>
</blockquote>
<blockquote>
<p>调参是算法模型生成之前很重要的一步，本章介绍了两种选择最优参数的方法：网格搜索优化参数和随机搜索优化参数。如果算法的参数少于三个，推荐使用网格搜索优化参数；如果需要优化的参数超过三个，推荐使用随机搜索优化参数。</p>
</blockquote>
<h2 id="第六部分结果部署"><a class="markdownIt-Anchor" href="#第六部分结果部署"></a> 第六部分结果部署</h2>
<blockquote>
<p>找到一个能够生成高准确度模型的算法不是机器学习最后的步骤，在实际的项目中，需要将生成的模型序列化，并将其发布到生产环境。当有新数据出现时，需要反序列化已保存的模型，然后用其预测新的数据。</p>
</blockquote>
<blockquote>
<p>pickle是标准的Python序列化的方法，可以通过它来序列化机器学习算法生成的模型，并将其保存到文件中。当需要对新数据进行预测时，将保存在文件中的模型反序列化，并用其来预测新数据的结果。</p>
</blockquote>
<blockquote>
<p>joblib是SciPy生态环境的一部分，提供了通用的工具来序列化Python的对象和反序列化Python的对象。通过joblib序列化对象时会采用NumPy的格式保存数据，这对某些保存数据到模型中的算法非常有效，如K近邻算法。</p>
</blockquote>
<h2 id="第七部分项目实践"><a class="markdownIt-Anchor" href="#第七部分项目实践"></a> 第七部分项目实践</h2>
<blockquote>
<p>分类或回归模型的机器学习项目可以分成以下六个步骤：（1）定义问题。（2）理解数据。（3）数据准备。（4）评估算法。（5）优化模型。（6）结果部署。</p>
</blockquote>
<blockquote>
<p>步骤1：定义问题主要是导入在机器学习项目中所需要的类库和数据集等，以便完成机器学习的项目，包括导入Python的类库、类和方法，以及导入数据。同时这也是所有的配置参数的配置模块。当数据集过大时，可以在这里对数据集进行瘦身处理，理想状态是可以在1分钟内，甚至是30秒内完成模型的建立或可视化数据集。</p>
</blockquote>
<blockquote>
<p>步骤2：理解数据这是加强对数据理解的步骤，包括通过描述性统计来分析数据和通过可视化来观察数据。在这一步需要花费时间多问几个问题，设定假设条件并调查分析一下，这对模型的建立会有很大的帮助。</p>
</blockquote>
<blockquote>
<p>步骤3：数据准备数据准备主要是预处理数据，以便让数据可以更好地展示问题，以及熟悉输入与输出结果的关系。包括：·通过删除重复数据、标记错误数值，甚至标记错误的输入数据来清洗数据。·特征选择，包括移除多余的特征属性和增加新的特征属性。·数据转化，对数据尺度进行调整，或者调整数据的分布，以便更好地展示问题。要不断地重复这个步骤和下一个步骤，直到找到足够准确的算法生成模型。</p>
</blockquote>
<blockquote>
<p>步骤4：评估算法评估算法主要是为了寻找最佳的算法子集，包括：·分离出评估数据集，以便于验证模型。·定义模型评估标准，用来评估算法模型。·抽样审查线性算法和非线性算法。·比较算法的准确度。在面对一个机器学习的问题的时候，需要花费大量的时间在评估算法和准备数据上，直到找到3～5种准确度足够的算法为止。</p>
</blockquote>
<blockquote>
<p>步骤5：优化模型当得到一个准确度足够的算法列表后，要从中找出最合适的算法，通常有两种方法可以提高算法的准确度：·对每一种算法进行调参，得到最佳结果。·使用集合算法来提高算法模型的准确度。</p>
</blockquote>
<blockquote>
<p>步骤6：结果部署一旦认为模型的准确度足够高，就可以将这个模型序列化，以便有新数据时使用该模型来预测数据。·通过验证数据集来验证被优化过的模型。·通过整个数据集来生成模型。·将模型序列化，以便于预测新数据。做到这一步的时候，就可以将模型展示并发布给相关人员。当有新数据产生时，就可以采用这个模型来预测新数据。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《如何想到又做到》-[美]SeanYoung</title>
    <url>/2020/06/21/%E4%B9%A6%E6%91%98_%E5%A6%82%E4%BD%95%E6%83%B3%E5%88%B0%E5%8F%88%E5%81%9A%E5%88%B0-%5B%E7%BE%8E%5DSeanYoung.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/30348435">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29891760.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29891760.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>如何想到又做到</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>[美]SeanYoung</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2018-10</span></div>
			<div class="douban-card-item"><span>评分: </span><span>7.4</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="扉页"><a class="markdownIt-Anchor" href="#扉页"></a> 扉页</h2>
<blockquote>
<p>阶梯模型：研究表明，把焦点放在小步骤上，一个人便会有更高的成功概率。然而，就算人们知道这一点，也无法把改变坚持下去。这是因为，他们不明白这些步骤要有多小，又没有模型可供参考。</p>
</blockquote>
<p>这个确实。在做日常的规划的时候，有时候能会把步骤目标理想混混搅在一起。经常规划一些。很大很大的步骤，无法在短期内完成，如此便导致了。不能形成对自己的持续激励。很容易放弃。</p>
<blockquote>
<p>极度容易：人们往往以为自己明白容易的具体程度。“极度容易”一章将介绍怎样让事情变得真正容易，从而让你更可能坚持下去。行为在前：你是否听说过“有志者事竟成”的说法？或者是否听说过“想法到位了，行动就会跟上”？“思想决定行为”是许多畅销励志书和流行心理学图书的理论基础。这些书会宣扬：人们可以通过自我改变的想象和意愿，来改变自己的行为。可惜这根本是错的。</p>
</blockquote>
<p>在这里我想说一个问题就是。我这个人管不住自己，平常经常做一些控制不了自己的事情。应该是属于冲动行为。如。看视频。看电视剧看电影，看动漫看比赛。甚至玩游戏。是不是我在日常生活中把这件事情安排的太简单？触手可及。没有设置障碍。所以比较容易养这种习惯了。</p>
<blockquote>
<p>社会心理学家现在知道，真实情况应该是反过来的。人们需要改变自己的行为，思想才会随之改变。你要“哄着”大脑，让它意识到改变可行。</p>
</blockquote>
<p>这是一个比较新的观点。以前我一直执着于要先把自己的想法内心去改变。自己的行为是跟着改变。读了这本书之后。感觉是行动，在先。用行动的影响对于行为改变而是一个逐步改变的过程，不是一个。是观念的改变，有行动，突然改变了一个突变的过程。</p>
<blockquote>
<p>致命吸引：你该怎样把一件事情变得有吸引力，让自己不停地做下去呢？一种流行的方法是将其“游戏化”。具体就是，通过奖励人们积分、徽章和金钱，让某种活动或产品变得有吸引力，进而使人们愿意继续做或继续使用下去</p>
</blockquote>
<p>在致命私隐这一环节。我想比较或者几乎没有为自己的行为。是如果类似的奖励。有很多奖励，又不是一个成功兑现的过程。这会目标任务设置一下。这次的奖励太大，无法实现。就是欺骗自己。</p>
<blockquote>
<p>反复铭刻：很多成功人士会告诉你，他们之所以成功不是因为智力或才华出众，而是因为知道该怎样有效地利用个人时间。</p>
</blockquote>
<p>坚持这件事情，如果单纯说坚持。心疼的习惯那就是没问题。我们心脏希望。那这个过程就是痛苦的。</p>
<blockquote>
<p>人类的大脑渴望高效运转，它的一项功能就是让人付出最少，做事更多。如果你反复看到、听到或闻到某种东西（哪怕你并未意识到），大脑也会存储相关信息，让你无须思考便可迅速认出它、检索它。</p>
</blockquote>
<p>是的，对此深有感触。这也解释了。人为什么天性就是懒的。</p>
<blockquote>
<p>把所有的精力都放在实现第一步上，然后花时间回顾你的进展。接着在第二步中重复这个过程。</p>
</blockquote>
<blockquote>
<p>大多数人以为自己正在朝着目标迈小步子，但实际上他们的步子还不够小。毕竟，小的概念很主观。如果你让5个人列出完成同一项任务所需的所有小步骤，那么每个人都会想出不同大小的步骤来。</p>
</blockquote>
<blockquote>
<p>针对“锚定效应”的研究表明，环境确实会改变人们的答案。不同的环境会让一个人把注意力集中在那些本不相关却能影响最终决定的事情上。</p>
</blockquote>
<blockquote>
<p>人们往往以为自己规划的就是达成目标的小步骤，但实际上，他们设计的步骤相当大。那</p>
</blockquote>
<blockquote>
<p>很多时候人们以为自己规划的是步骤，但其实规划的是目标或梦想。</p>
</blockquote>
<blockquote>
<p>一开始，你说不定会觉得设定一个个“阶梯”太难了。毕竟，阶梯模型依赖于你能否准确地估计实现某件事需要多长时间。但人们不见得总是精于预测。这就是为什么我会建议你找3个值得信任的人来帮忙的原因。你要先自己设定目标，再征求他们的意见，看看你设定的目标是不是真正的目标。如果他们说你要花3个月以上的时间才能完成它，那么它说不定就是你的梦想。把梦想刻在脑海里以保持动力，接着选择一个大约要用1个星期到1个月的时间来实现的真正的目标，然后去规划实现该目标的小步骤。</p>
</blockquote>
<blockquote>
<p>社群要想对成员产生持久的影响，就需要有足够多的人为社群提供力量，创造社交磁力。对于规模非常小的社群，比如5人以下的社群来说，每个人都需要付出努力来建立社交磁力。而对于较大的社群来说，需要15%的参与者投身社交磁力的建设工作。</p>
</blockquote>
<p>所以在这方面是我的弱项。天上的热霞。反正我觉得是天生。姐，以后怎么解决？现在还没有思路。反正真是一个妈。</p>
<blockquote>
<p>你越是积极地参与，其社交磁力就越强，你也就越有可能实现持久的改变。</p>
</blockquote>
<blockquote>
<p>大多数心理学家认为，人天生并没有所谓的动机型人格。人是因为环境的关系，因为在正确的时间处在了正确的或错误的位置，才去做事情的。</p>
</blockquote>
<blockquote>
<p>●头三件最重要的东西是：金钱、社会关系和健康。</p>
</blockquote>
<blockquote>
<p>金钱、社会关系和健康，从人生之初就很重要。对大多数人来说，它们在此后的生命里仍将同等重要。健康和社会关系能很好地激励人们坚持做事的原因就在于此。金钱能激励股票经纪人每个月去寻找新客户。对亲密关系的需求能激励情侣长年厮守，哪怕他们偶有争执。对健康的承诺，诱使人们终身购买膳食补剂。</p>
</blockquote>
<blockquote>
<p>生活可以让人们产生新的动机、新的做事理由。如果我们学会把焦点放在真正重要的事情上，哪怕是悲剧事件上，也能拥有快乐和幸福。</p>
</blockquote>
<blockquote>
<p>你会为了更健康、更多的钱、跟亲友更亲近而改变吗？只要你找到了对你真正重要的东西，就可以应用本书中其他的几种武器来激发重要性的力量，让自己为目标而坚持。</p>
</blockquote>
<blockquote>
<p>人们总是希望事情很容易做。他们喜欢容易做的事情，也会坚持做那些极度容易的事情。</p>
</blockquote>
<blockquote>
<p>面对障碍，人很快就会放弃做某件事。反过来说，如果你学会了怎样消除障碍，就能很容易继续做下去。</p>
</blockquote>
<blockquote>
<p>虽然人们总以为自己希望拥有更多的选择，但实际上，选择太多会让一个人难以做事。</p>
</blockquote>
<blockquote>
<p>很显然，人们会不断去做对自己来说容易做的事情，这看起来很符合直觉思维。但是只知道这一点没有什么用，人们还是难以坚持。</p>
</blockquote>
<blockquote>
<p>让事情变得简单、容易，才是聪明的做法，有助于我们坚持到底。</p>
</blockquote>
<blockquote>
<p>简而言之，如果你无法坚持某件事情，请消除那些妨碍你做它的因素。就是这么容易。</p>
</blockquote>
<blockquote>
<p>持久的行为改变通常并不始于意识告诉身体要做出持久的改变；它始于先做一些小小的行为改变，接着让意识反映出这种改变</p>
</blockquote>
<blockquote>
<p>神经记忆可以让人们回顾自己过去的行为，看到自己的改变，从而坚持做之前没法做到的事情。</p>
</blockquote>
<blockquote>
<p>制造神经记忆的另一种方法是直面那些让你恐惧的东西。一</p>
</blockquote>
<blockquote>
<p>不必控制自己的想法，只要对自己的行为做一些小小的改变，你的意识就会跟着改变。</p>
</blockquote>
<blockquote>
<p>有大量研究表明，人们会凭借自己的生理和情绪征兆，了解自己是什么人、在想些什么、怎样采取行动。例</p>
</blockquote>
<blockquote>
<p>我们无须努力控制自己意识里冒出来的想法，只需要应用微不足道的生理或情绪层面的神经记忆法，就能带来意识和行为上的重大变化。</p>
</blockquote>
<blockquote>
<p>阶梯模型能发挥作用的一个原因是，人们完成的每一步，都提升了他们坚持下去的承诺感。</p>
</blockquote>
<blockquote>
<p>持久的行为改变始于行为的实际的、实体的变化，而不是思想中的变化。</p>
</blockquote>
<blockquote>
<p>把无聊的事情变得有趣、具有奖励的性质，有助于你坚持目标，不管你的目标是什么。</p>
</blockquote>
<blockquote>
<p>日常生活中，我们只是习惯了以某种方式行事。如果做某件事的结果不好，我们就不会再做；如果结果好，我们就会重复这种行动或行为。</p>
</blockquote>
<blockquote>
<p>人不需要额外的奖励去做本来就感兴趣的事情。如果你开始为这些活动附加奖励，人们说不定会认为这些活动不像自己想象的那么有趣，因为竟然需要奖励才有人去做它。</p>
</blockquote>
<blockquote>
<p>如果你反复做一些对自己有益的事情，比如吃得更健康、采取更安全的工作方式、更具当下意识，这些活动就会铭刻到大脑中，让你更容易坚持做下去。</p>
</blockquote>
<blockquote>
<p>怎样用其他事情取代看似牢不可破的习惯，以此来实现持久改变。</p>
</blockquote>
<blockquote>
<p>一旦习惯建立起来，大脑便达到一种稳定的平衡状态，并能够放松下来。如此一来，习惯就变成了默认行为。</p>
</blockquote>
<blockquote>
<p>冥想会给人们的健康、幸福、人际关系和生产能力带来持久的变化，甚至改变大脑的解剖结构。</p>
</blockquote>
<p>我没有正儿八经的使用过冥想这个方法。</p>
<blockquote>
<p>把行为变成习惯，有助于将它铭刻在大脑里，增加“黏性”，以便坚持。</p>
</blockquote>
<blockquote>
<p>实施某种行为（穿上跑鞋）可以变成“磁铁”，导致另一件相关且可取的行为（跑步）发生。</p>
</blockquote>
<blockquote>
<p>铭刻是一种能帮你坚持到底的强大力量。如果你想要每天锻炼，设定好锻炼时间，点击闹钟，遵照执行。你越是能坚持，它就越是会铭刻到大脑里，你也就越容易继续做下去。</p>
</blockquote>
<blockquote>
<p>新技术给我们的生活带来了更多的娱乐、更高的效率，但它们也在损害我们的健康。智能手机、即时聊天工具和电子游戏等可以让人们更快、更轻松地沟通，带给人娱乐，但同时也让人感到紧张，失去耐心并上瘾。对从前需要等待几天甚至几个星期才能有消息的事情，我们现在总盼着立刻就能得到回复。</p>
</blockquote>
<blockquote>
<p>尽管阅读一本书能让人有改变的动力，就像听了一场励志演讲，但除非人们迅速着手行动，否则这种动力是无法持久的。</p>
</blockquote>
<blockquote>
<p>阶梯模型：实施非常小的步骤，使用步骤、目标和梦想的模型。例如，如果你正在为新公司做目标规划，别打算在本周末之前就锁定第一位客户。这或许只是个梦想，不妨先设定较小的步骤：这星期先会见3名潜在新客户。社交磁力：加入那些正在做你想做之事的人的队伍中。社会支持和社会竞争能促进行为改变。要事为先：改变要想持久，请确保这是一件对你真正重要的事情。极度容易：让事情变得更容易做。如果事情容易做，人们就会去做；如果不容易，你就很难坚持。行为在前：意识爱捉弄我们。掌握它捉弄你的窍门，为你所用。例如，按照富兰克林的建议，促使他人为你做件充满善意的事，赢得新的朋友。致命吸引：对于自己需要做的事情，如果能得到奖励，你就会坚持做下去。反复铭刻：反复做某事。大脑会因为重复和一致行为给予你奖励。改变行为的秘诀是，用新行为替代旧行为。但只有借助适当的武器，新行为才能坚持下去。</p>
</blockquote>
<blockquote>
<p>创建持续变化的过程分为两步：首先，确定你想改变的行为属于我所说的A类行为、B类行为还是C类行为；接下来，利用所需的武器来改变这种行为。</p>
</blockquote>
<blockquote>
<p>首先，确定你尝试改变的行为是A类行为、B类行为或C类行为。为了确定某事属于A类行为、B类行为，还是C类行为，你需要问自己，是什么阻止了你（或其他人）实现改变。找到问题往往比听起来更加困难，因为人们并不见得总能意识到是什么原因阻止了自己做某事。</p>
</blockquote>
<blockquote>
<p>你是否还没意识到自己在做什么，行为就发生了，也就是你是无意识地做它的？如果是，那么它可能就属于自动行为。这是不是一件你能意识到但感觉无力阻止的事情呢？如果是，那么它可能就属于冲动行为。这是不是一件你能意识到，但很难获得足够的动力去改变的事情？如果是，这可能就属于常见行为。其次，一旦你确定了某事是A类行为、B类行为还是C类行为，就可运用所需的武器去改变它。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>DFANet：Deep Feature Aggregation for Real-Time Semantic Segmentation</title>
    <url>/2020/06/20/DFANet%EF%BC%9ADeep%20Feature%20Aggregation%20for%20Real-Time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>DFANet和当下多尺度融合模块设计不同，通过设计衔接上级网络输出的子网络，不断精修预测结果</p>
<a id="more"></a>
<h1 id="什么是-dfanet"><a class="markdownIt-Anchor" href="#什么是-dfanet"></a> 什么是 DFANet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DFANet-20230408142801.png" alt="DFANet-20230408142801" /></li>
<li>关于如何提升语义分割网络的多尺度能力，现有 4 种方法</li>
<li>(a) 使用不同尺度的图片，改进网络的多尺度预测能力</li>
<li>(b) 使用空间金字塔池化，提取高级语义上下文并增加感受野。但是通常很耗时</li>
<li>©首先通过对网络输出进行上采样，然后使用另一个子网完善特征图，类似多阶段精细花分割结果。但是，随着整个结构深度的增加，高维特征和感受野通常会遭受精度损失</li>
<li>(d) c 的基础上增加同分辨率的跨连接，确保位置信息得到保留。相当于<strong>子网络不断接收上一级的输出，可以看成对结果不断精修</strong></li>
</ul>
<h1 id="dfanet-的网络结构"><a class="markdownIt-Anchor" href="#dfanet-的网络结构"></a> DFANet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DFANet-20230408142802.png" alt="DFANet-20230408142802" /></li>
<li><strong>Backbone</strong>：基本的主干是轻量级的 Xception 模型</li>
<li><strong>Decoder</strong>：对于实时推断，不会过多地专注于设计复杂的解码器模块。首先从编码器的三个主干网络浅层融合，然后再和高级表示融合。最后将高级特征双线性上采样4倍</li>
</ul>
<h1 id="dfanet-的深度特征融合"><a class="markdownIt-Anchor" href="#dfanet-的深度特征融合"></a> DFANet 的深度特征融合？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DFANet-20230408142804.png" alt="DFANet-20230408142804" /></li>
<li>聚合策略由子网聚合和子阶段聚合方法组成，上图第 2-3 行分别是 3 个子网络的输出，可以看出其结果越来越准确</li>
<li><strong>子网聚合</strong>：将前一个主干的输出馈送到下一个主干，子网聚合可以看作是一种完善的过程</li>
<li><strong>子阶段聚合</strong>：子阶段聚合的重点是在多个网络之间的阶段级融合语义和空间信息</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>FastFCN：Rethinking Dilated Convolution in the Backbone for Semantic Segmentation</title>
    <url>/2020/06/17/FastFCN%EF%BC%9ARethinking%20Dilated%20Convolution%20in%20the%20Backbone%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>FastFCN在原有FCN的基础上，提出联合金字塔上采样 (joint Pyramid upsampling, JPU)，相比较原始的双线性插值、反卷积上采样，该模块明显更有效</p>
<a id="more"></a>
<h1 id="什么是-fastfcn"><a class="markdownIt-Anchor" href="#什么是-fastfcn"></a> 什么是 FastFCN？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastFCN-20230408142953.png" alt="FastFCN-20230408142953" /></li>
<li><strong>(a)原始 FCN</strong>：使用全卷积去生成最后的完成，其 featrue map 分辨率比较低</li>
<li><strong>(b)编码器-解码器风格</strong>：在 FCN 上接上编码器，获取和还原高分辨率 featrue map ，如：[[SegNet]] 、[[UNet]]</li>
<li>©<strong>空洞卷积</strong>：进一步地，DeepLab 方法对 FCN 最后两层下采样操作并引入膨胀卷积来保持特征图感受野不变，后跟一个多尺度的语义模块从而得到最终效果。扩张卷积<strong>提高了最终特征图的分辨率</strong>，大大提升了编解码语义分割方法的分割精度，然而扩展卷积大大<strong>增加了计算复杂度和内存占用</strong></li>
<li>FastFCN 提出一种新的上采样模块，称为<strong>联合金字塔上采样 (joint Pyramid upsampling, JPU)</strong>，该模块优于其他上采样模块（双线性插值），可以插入现有的多种上采样方法，降低计算复杂度，提高性能</li>
</ul>
<h1 id="fastfcn-的网络结构"><a class="markdownIt-Anchor" href="#fastfcn-的网络结构"></a> FastFCN 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastFCN-20230408142953-1.png" alt="FastFCN-20230408142953-1" /></li>
<li><strong>BackBone</strong>：主干与原始FCN相同，其中5个feature maps (Conv1−Conv5)的空间分辨率逐渐降低了2倍</li>
<li><strong>JPU</strong>：以主干的3个特征图 (Conv3 ~ Conv5)为输入，产生 8 倍的 featrue map</li>
<li><strong>预测</strong>：使用多尺度上下文模块 (PSP /ASPP)或全局上下文模块 (Encoding)产生最终的预测结果</li>
</ul>
<h1 id="fastfcn-的联合金字塔上采样模块-joined-pyramid-upsampling-jpu"><a class="markdownIt-Anchor" href="#fastfcn-的联合金字塔上采样模块-joined-pyramid-upsampling-jpu"></a> FastFCN 的联合金字塔上采样模块 (joined pyramid upsampling, JPU) ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastFCN-20230408142954.png" alt="FastFCN-20230408142954" /></li>
<li><strong>上采样</strong>：3 个分辨率的 feature map 输入，首先通过卷积调整通道，然后对生成的特征图进行上采样和级联，得到 yc</li>
<li><strong>空洞卷积特征金字塔</strong>：然后并行使用4个膨胀率不同的可分离卷积来提取特征</li>
<li><strong>融合特征</strong>：使用 concat 组合不同膨胀率的特征，然后使用卷积融合</li>
</ul>
<h1 id="联合金字塔上采样模块与其他采样模块比较"><a class="markdownIt-Anchor" href="#联合金字塔上采样模块与其他采样模块比较"></a> 联合金字塔上采样模块与其他采样模块比较？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastFCN-20230408142955.png" alt="FastFCN-20230408142955" /></li>
<li>使用 JPU 提高分辨率具有比 Bilinear、FPN 更好的效果</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>CBAM：Convolutional Block Attention Module</title>
    <url>/2020/06/15/CBAM%EF%BC%9AConvolutional%20Block%20Attention%20Module/</url>
    <content><![CDATA[<p>通过空间全局池化生成通道注意力，通过通道全局池化生成空间注意力，并且分别使用最大池化和平均池化去生成2次注意力矩阵</p>
<a id="more"></a>
<ul>
<li>什么是CBAM(Convolutional Block Attention Module)？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CBAM-20230408135821.png" alt="" /></li>
<li>通过设计通道注意力模块（Channel Attention Module，CAM) 空间注意力模块（SAM) ，分别进行通道与空间上的赋权</li>
<li>两个注意力矩阵都是通过<strong>池化</strong>实现，比如输入特征 CHW 的注意力矩阵，如果求取通道注意力，通过<strong>全局池化</strong>去掉 HW；如果求空间注意力，<strong>在通道维度上进行池化去掉 C</strong>，这有别于其他求取空间注意力的方式，因为很多都是直接 1 x 1 卷积去掉通道 C 的</li>
</ul>
</li>
<li>CBAM的通道注意力模块（Channel Attention Module，CAM) ？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CBAM-20230408135821-1.png" alt="" /></li>
<li>通道注意力机制和 SENet 相同，但是具体操作与 SENet 略有不同，不同部分用红色进行了标记</li>
<li>首先，将输入的特征图F（H×W×C）分别经过基于H和W两个维度全局最大池化全局平均池化，得到两个1×1×C的特征图</li>
<li>然后，将两个特征图送入一个共享权值的双层神经网络（MLP）学习通道间依赖关系，两层神经层之间通过压缩比 r 实现降维</li>
<li>最后，将MLP输出的特征进行基于element-wise的加和操作，再经过sigmoid激活操作，生成最终的通道加权，即M_c</li>
</ul>
</li>
<li>CBAM的空间注意力模块（Spartial Attention Module，SAM) ？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CBAM-20230408135822.png" alt="" /></li>
<li>通道注意力模块输出的特征图F‘作为本模块的输入特征图。 首先，基于channel这个维度进行最大池化和平均池化操作，得到两个H×W×1 的特征图</li>
<li>然后，将两个特征图基于通道维度进行 concat；再然后使用7×7卷积核 (padding=3)进行通道降维，降维得到单通道的特征图，即 H×W×1</li>
<li>最后，经过sigmoid学习空间元素之间的依赖关系，生成空间维度的权重，即M_s</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOv3：An Incremental Improvement</title>
    <url>/2020/06/14/YOLOv3%EF%BC%9AAn%20Incremental%20Improvement/</url>
    <content><![CDATA[<p>YOLOv3借鉴特征金字塔网络(FeaturePyramidNetwork,FPN)思想，小尺寸特征图(深层特征)用于检测大尺寸物体，而大尺寸特征图(浅层特征)检测小尺寸物体，实现效果提升</p>
<a id="more"></a>
<h1 id="什么是yolov3"><a class="markdownIt-Anchor" href="#什么是yolov3"></a> 什么是YOLOv3?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv3-20230408141912.png" alt="" /></li>
<li>无论是YOLOv1，还YOLOv2，都有一个共同的致命缺陷：只使用了最后一个经过 32倍降采样的特征图（简称 C5特征图）。尽管YOLOv2使用了passthrough技术将16倍降采样的特征图（即 C4特征图）融合到了C5特征图中，但最终的检测仍是在 C5尺度的特征图上进行的，最终结果便是导致了模型的<strong>小目标的检测性能较差</strong></li>
<li>YOLOv3通Darknet-53主干网络，借鉴特征金字塔网络(FeaturePyramidNetwork,FPN)思想，小尺寸特征图(深层特征)用于检测大尺寸物体，而大尺寸特征图(浅层特征)检测小尺寸物体，实现效果提升</li>
</ul>
<h1 id="yolov3的网络结构"><a class="markdownIt-Anchor" href="#yolov3的网络结构"></a> YOLOv3的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv3-20230408141912.png" alt="" /></li>
<li><strong>输入</strong>：416 x 416 x 3 的图片</li>
<li><strong>输出</strong>：三个输出，分布是 13x13x255、26x26x255、52x52x255，每个输出表示对不同感受野的特征图做目标检测，255 (3x85) 是每个网格使用 3 个先验框，每个先验框计算置信度 (1)、位置 (4)、类别 (80)</li>
</ul>
<h1 id="yolov3的正负样本判定"><a class="markdownIt-Anchor" href="#yolov3的正负样本判定"></a> YOLOv3的正负样本判定？</h1>
<ul>
<li>YOLOv3 同样使用锚框的概念，根据先验框和gt框的 IOU 确定正负样本，每个 gt 框分配一个预测框</li>
<li><strong>位置判定正负样本：</strong> 但是 YOLOv3引入multi-head预测，不能再按照“映射中心”的方法给gt框分配先验框，因此使用gt框与所有先验框的IOU来分配先验框</li>
<li><strong>正样本：</strong> 任取一个gt框，与<strong>所有 head 的先验框</strong>计算 IOU，IOU 最大的预测框为正例。并且一个预测框，只能分配给一个 ground truth。例如第一个 ground truth 已经匹配了一个正例检测框，那么下一个 ground truth，就在余下的 4031 个检测框中，寻找 IOU 最大的检测框作为正例，ground truth 的先后顺序可忽略</li>
<li><strong>负样本：</strong> 正例除外，与全部ground truth的IOU都小于阈值，则为负例</li>
<li><strong>忽略样本：</strong> 正例除外，与任意一个gt框的IOU大于阈值，则为忽略样例</li>
</ul>
<h1 id="yolov3-多-head-情况下如何分配正样本"><a class="markdownIt-Anchor" href="#yolov3-多-head-情况下如何分配正样本"></a> YOLOv3 多 head 情况下如何分配正样本？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/iPkSAgqZCxq4f2NETG6FdklWRJM0oLTLQkOixJWuHzfA-S7nDb2a2IC-lEIrudpy4QGPq45olsr4duoIszYugXBSxY1i47S9zd6pSWcG0t9gNilfFFzSlaX35YJ_b8nd.png" alt="" /></li>
<li>在Yolov3的训练策略中，不再像YOLOv1、YOLOv2那样，每个cell负责中心落在该cell中的ground truth。原因是Yolov3一共产生3个特征图，3个特征图上的cell，中心是有重合的</li>
<li>训练时，可能最契合的是特征图1的第3个box，但是推理的时候特征图2的第1个box置信度最高。所以Yolov3的训练，不再按照ground truth中心点，严格分配指定cell，而是根据预测值寻找IOU最大的预测框作为正例</li>
</ul>
<h1 id="yolov3的损失函数"><a class="markdownIt-Anchor" href="#yolov3的损失函数"></a> YOLOv3的损失函数？</h1>
<ul>
<li><strong>置信度损失：</strong> 计算正、负样本的损失<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mn>1</mn><msub><mi>λ</mi><mrow><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mn>3</mn></munderover><msubsup><mn>1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msubsup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>c</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mi>λ</mi><mrow><mi>n</mi><mi>o</mi><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>×</mo><msub><mi>N</mi><mn>1</mn></msub></mrow></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mn>3</mn></munderover><msubsup><mn>1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi>n</mi><mi>o</mi><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msubsup><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>c</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">-1\lambda_{o b j} \sum_{i=0}^{N \times N} \sum_{j=0}^{3} 1_{i j}^{o b j} \log \left(c_{i j}\right)+\lambda_{n o o b j} \sum_{i=0}^{N_{1} \times N_{1}} \sum_{j=0}^{3} 1_{i j}^{n o o b j} \log \left(1-c_{i j}\right)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.2421130000000002em;vertical-align:-1.4137769999999998em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.253213em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394360000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose">]</span></span></span></span></span></p>
</li>
<li><strong>位置损失</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>λ</mi><mrow><mi>b</mi><mi>o</mi><mi>x</mi></mrow></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>×</mo><msub><mi>N</mi><mn>1</mn></msub></mrow></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mn>3</mn></munderover><msubsup><mn>1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msubsup><mrow><mo fence="true">[</mo><msup><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>x</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>y</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo fence="true">]</mo></mrow><mo>+</mo><msub><mi>λ</mi><mrow><mi>b</mi><mi>o</mi><mi>x</mi></mrow></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>×</mo><msub><mi>N</mi><mn>1</mn></msub></mrow></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mn>3</mn></munderover><msubsup><mn>1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msubsup><mrow><mo fence="true">[</mo><msup><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>w</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>h</mi></msub><mo>−</mo><msubsup><mi>t</mi><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\lambda_{b o x} \sum_{i=0}^{N_{1} \times N_{1}} \sum_{j=0}^{3} 1_{i j}^{o b j}\left[\left(t_{x}-t_{x}^{\prime}\right)^{2}+\left(t_{y}-t_{y}^{\prime}\right)^{2}\right]+\lambda_{b o x} \sum_{i=0}^{N_{1} \times N_{1}} \sum_{j=0}^{3} 1_{i j}^{o b j}\left[\left(t_{w}-t_{w}^{\prime}\right)^{2}+\left(t_{h}-t_{h}^{\prime}\right)^{2}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.253213em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394360000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0059em;"><span style="top:-3.254792em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.054008em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.253213em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394360000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0059em;"><span style="top:-3.254792em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0059em;"><span style="top:-3.254792em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span></span></p>
</li>
<li><strong>分类损失：</strong> 使用 sigmoid 激活函数替代 YOLOv2 中的 softmax，取消了类别之间的互斥，可以使网络更加灵活<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><msub><mi>λ</mi><mtext>class </mtext></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>×</mo><msub><mi>N</mi><mn>1</mn></msub></mrow></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mn>3</mn></munderover><msubsup><mn>1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msubsup><munder><mo>∑</mo><mrow><mi>c</mi><mo>∈</mo><mtext> classes </mtext></mrow></munder><mrow><mo fence="true">[</mo><msubsup><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">-\lambda_{\text {class }} \sum_{i=0}^{N_{1} \times N_{1}}\sum_{j=0}^{3} 1_{i j}^{o b j} \sum_{c \in \text { classes }}\left[p_{i j}^{\prime}(c) \log \left(p_{i j}(c)\right)+\left(1-p_{i j}^{\prime}(c)\right) \log \left(1-p_{i j}(c)\right)\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.253213em;vertical-align:-1.4137769999999998em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">class </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8394360000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.311105em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">∈</span><span class="mord text mtight"><span class="mord mtight"> classes </span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.329483em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="yolov3中的darknet53"><a class="markdownIt-Anchor" href="#yolov3中的darknet53"></a> YOLOv3中的Darknet53?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/p2dFxiwPjNU37FtVW8S1vx-0vtfZt2BSIoVetr1FcsW27X7fDXPwWjP0hRZ1rJlFph-Qn79o3oTUY9h1foEcpZWvqcIQEJ7mR4nRLG156IeC-Z1IeAJWJ1SCJbE-SUbJ.png" alt="" /></li>
<li>在 YOLOv2使用 Darknet19基础上加深网络，并且借鉴 ResNet的思想，添加了大量残差块 (residual block)，模型的最大池化层也改为 stride=2 的卷积来实现</li>
</ul>
<h1 id="yolov1-yolov2-yolov3-yolov4-yolov5-设置先验框的区别"><a class="markdownIt-Anchor" href="#yolov1-yolov2-yolov3-yolov4-yolov5-设置先验框的区别"></a> YOLOv1、YOLOv2、YOLOv3、YOLOv4、YOLOv5 设置先验框的区别？</h1>
<ul>
<li><strong>YOLOv1</strong>：没有设置先验框，而是使用 2 个框（任意框）直接回归框位置</li>
<li><strong>YOLOv2</strong>：生成及设置先验框：通过聚类得到 5 个先验框，为每个网格放置 5 个先验框，使用 Kmeans 聚类：通过聚类得到 9 个先验框，(10×13)，(16×30)，(33×23)，(30×61)，(62×45)，(59× 119)， (116 × 90)， (156 × 198)，(373 × 326) ，每个尺度的网格放置 3 个先验框</li>
<li><strong>YOLOv3</strong>：按照&quot;小尺寸特征图 (深层特征) 用于检测大尺寸物体，而大尺寸特征图 (浅层特征) 检测小尺寸物体&quot;的思想，前 3 个先验框使用为 52x52 使用；中间 3 个先验框为 26x26 使用；最后 3 个先验框为 13x13 使用</li>
<li><strong>YOLOv4</strong>：YOLOv3 一致</li>
<li><strong>YOLOv5</strong>：在开始训练之前对数据集核查，计算此数据集针对默认锚定框的最佳召回率，当最佳召回率大于或等于 0.98，则不需要更新锚定框；如果最佳召回率小于 0.98，则需要重新计算此数据集的锚定框</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
        <tag>one-satge</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLO9000：Better, Faster, Stronger</title>
    <url>/2020/06/09/YOLO9000%EF%BC%9ABetter,%20Faster,%20Stronger/</url>
    <content><![CDATA[<p>YOLOv1的基础上，引入锚框的思想，并通过新的骨干网Darknet19、批规范化(BatchNormalization,BN)、先验框、多尺度训练等技术，实现比 YOLOv1更快、更好的目标</p>
<a id="more"></a>
<h1 id="什么是-yolov2"><a class="markdownIt-Anchor" href="#什么是-yolov2"></a> 什么是 YOLOv2?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141742.png" alt="" /></li>
<li>YOLOv1的基础上，通过新的骨干网 Darknet19、批规范化(BatchNormalization,BN)、先验框、多尺度训练 (Multi-Scale Training) 等技术，实现比 YOLOv1更快、更好的目标</li>
<li>YOLOv2又称YOLO9000，即通过对YOLOv2的分类层进行修改，并通过联合训练目标检测数据集COCO及分类数据集ImageNet，获得对超过9000类目标的识别，实现比YOLOv1更强的目标</li>
</ul>
<h1 id="yolov2的网络结构"><a class="markdownIt-Anchor" href="#yolov2的网络结构"></a> YOLOv2的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141742-1.png" alt="" /></li>
<li>YOLOv2 的 backbone 使 Darknet19，并使用 C5 的特征做目标检测</li>
<li><strong>输入</strong>：416x416x3的图片</li>
<li><strong>输出</strong>：13x13x125，在13x13大小的特征图上做预测，125指为每个网格预测5个框，每个框20个类别+4个座标点+1个置信度，一共是长度为5*(20+4+1)=125的特征向量</li>
</ul>
<h1 id="yolov2的正负样本判定"><a class="markdownIt-Anchor" href="#yolov2的正负样本判定"></a> YOLOv2的正负样本判定？</h1>
<ul>
<li>YOLOv2 引入<strong>锚框（先验框）</strong> 的概念，通过<strong>计算先验框和gt框的 IOU 确定正负样本，为1 个gt框分配 1 个先验框</strong></li>
<li><strong>位置判定正负样本：</strong> gt框对应cell位置的先验框分为正负样本</li>
<li><strong>正样本：</strong> 如果cell对应的先验框<strong>存在IOU&gt;阈值</strong>，则取IOU最大的先验框为正样本，其余先验框忽略</li>
<li><strong>负样本：</strong> 如果cell对应的先验框<strong>均IOU&lt;阈值</strong>，则取IOU最大的先验框为负样本，其余先验框忽略</li>
</ul>
<h1 id="yolov2的正样本制作过程"><a class="markdownIt-Anchor" href="#yolov2的正样本制作过程"></a> YOLOv2的正样本制作过程？</h1>
<ul>
<li><strong>框的中心：</strong> YOLOv1一样，学习先验框中心和gt框的偏差，假设真实座标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_{min},y_{min},x_{max},y_{max})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>
<ul>
<li>(1)计算中心<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> center </mtext><mi>x</mi><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>min</mi><mo>⁡</mo></msub><mo>+</mo><msub><mi>x</mi><mi>max</mi><mo>⁡</mo></msub></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mtext> center </mtext><mi>y</mi></msub><mo>=</mo><mfrac><mrow><msub><mi>y</mi><mi>min</mi><mo>⁡</mo></msub><mo>+</mo><msub><mi>y</mi><mi>max</mi><mo>⁡</mo></msub></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l} \text { center } x=\frac{x_{\min }+x_{\max }}{2} \\ \text { center }_{y}=\frac{y_{\min }+y_{\max }}{2} \end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4144390000000007em;vertical-align:-0.9572195000000006em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4572195000000001em;"><span style="top:-3.6172195em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> center </span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">i</span><span class="mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">a</span><span class="mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.402780499999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord"> center </span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">i</span><span class="mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">a</span><span class="mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9572195000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li>(2)计算映射到的网格<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo><mi mathvariant="normal">anchor_box</mi><mo>⁡</mo></mo><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">⌊</mo><mfrac><mtext> center </mtext><mtext> stride </mtext></mfrac><mo fence="true">⌋</mo></mrow><msub><mo><mi mathvariant="normal">anchor_box</mi><mo>⁡</mo></mo><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">⌊</mo><mfrac><mtext> center </mtext><msup><mtext> stride </mtext><mi>y</mi></msup></mfrac><mo fence="true">⌋</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{anchor\_box}_{x}=\left\lfloor\frac{\text { center }}{\text { stride }}\right\rfloor \operatorname{anchor\_box}_{y}=\left\lfloor\frac{\text { center }}{\text { stride }^{y}}\right\rfloor 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0541399999999999em;vertical-align:-0.3597em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">n</span><span class="mord mathrm">c</span><span class="mord mathrm">h</span><span class="mord mathrm">o</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.02778em;">_</span><span class="mord mathrm">b</span><span class="mord mathrm">o</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.058308000000000026em;"><span style="top:-2.3403em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3597em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> stride </span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> center </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">⌋</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">n</span><span class="mord mathrm">c</span><span class="mord mathrm">h</span><span class="mord mathrm">o</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.02778em;">_</span><span class="mord mathrm">b</span><span class="mord mathrm">o</span><span class="mord mathrm">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.058308000000000026em;"><span style="top:-2.3403em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.495808em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord"> stride </span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.748732em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> center </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">⌋</span></span></span></span></span></span></span></p>
</li>
<li>(3)计算量化误差，量化误差即是网络学习的目标，可知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 \leq c_{x}, c_{y} \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>c</mi><mi>x</mi></msub><mo>=</mo><mfrac><mrow><mtext> center </mtext><msub><mi>r</mi><mi>x</mi></msub></mrow><mtext> stride </mtext></mfrac><mo>−</mo><mi>a</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi>o</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>b</mi><mi>o</mi><msub><mi>x</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>c</mi><mi>y</mi></msub><mo>=</mo><mfrac><mrow><mtext> center </mtext><msub><mi>r</mi><mi>y</mi></msub></mrow><mtext> stride </mtext></mfrac><mo>−</mo><mi>a</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi>o</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>b</mi><mi>o</mi><msub><mi>x</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l} c_{x}=\frac{\text { center } r_{x}}{\text { stride }}-anchor\_box_{x} \\ c_{y}=\frac{\text { center } r_{y}}{\text { stride }}- anchor\_box_{y} \end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.498532em;vertical-align:-0.9992660000000002em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4992659999999998em;"><span style="top:-3.65861em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8406559999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> stride </span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> center </span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3607339999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9378759999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> stride </span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> center </span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9992660000000002em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
</ul>
</li>
<li>框的宽高―
<ul>
<li>(1) 计算框的宽、高<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><mi>h</mi><mo>=</mo><msub><mi>y</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w=x_{max}-x_{min}, h=y_{max}-x_{min}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>(2) 归一化：图像的宽高通常是远大于 1 的实数，直接用这个做标签，loss 值和其他部分差距很大，因此将其进行归一化处理，最后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\leq w, h \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><mfrac><mi>w</mi><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo>×</mo><msub><mi>w</mi><mrow><mi>a</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi>o</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>b</mi><mi>o</mi><mi>x</mi></mrow></msub></mrow></mfrac><mo separator="true">,</mo><mi>h</mi><mo>=</mo><mfrac><mi>h</mi><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo>×</mo><msub><mi>h</mi><mrow><mi>a</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi>o</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>b</mi><mi>o</mi><mi>x</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">w=\frac {w} {stride \times w_{anchor\_box}}, h=\frac {h} {stride \times h_{anchor\_box}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1605600000000003em;vertical-align:-1.053em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.053em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4244399999999997em;vertical-align:-1.053em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.053em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>取对数：因为线性回归数是任意实数，对归一化后的参数取对数即可<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>h</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w=log(w)\\ h=log(h)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
</li>
</ul>
<h1 id="yolov2的损失如何计算"><a class="markdownIt-Anchor" href="#yolov2的损失如何计算"></a> YOLOv2的损失如何计算？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141743.png" alt="" /></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mrow><mi>M</mi><mi>a</mi><mi>x</mi><mi>I</mi><mi>O</mi><mi>U</mi><mo>&lt;</mo><mi>T</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">1_{MaxIOU&lt;Thresh}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.82181em;vertical-align:-0.17737em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999985em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span></span></span></span>：表示忽略样本，只计算置信度损失</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mrow><mi>t</mi><mo>&lt;</mo><mn>128000</mn></mrow></msub></mrow><annotation encoding="application/x-tex">1_{t&lt;128000}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.82181em;vertical-align:-0.17737em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">&lt;</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">8</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span></span></span></span> ：前128000次迭代计入误差。注意这里是预测框与先验框的误差，而不是与gt框的误差。可能是为了在训练早期使模型更快学会先预测先验框的位置</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mn>1</mn><mi>k</mi><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>t</mi><mi>h</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">1^{truth}_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.132216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span> 表示预测框是否负责预测物体，该anchor与标注框的IoU最大对应的预测框负责预测物体</li>
</ul>
<h1 id="yolov2的训练步骤"><a class="markdownIt-Anchor" href="#yolov2的训练步骤"></a> YOLOv2的训练步骤？</h1>
<ul>
<li>（1）<strong>预训练 Darknet-19：</strong> 先在 ImageNet 分类数据集上预训练 Darknet-19，此时模型输入为 224 x 224 ，共训练 160 个 epochs</li>
<li>（2）<strong>高分辨率调整：</strong> 将网络的输入调整为 448 x 448 ，继续在 ImageNet 数据集上 finetune 分类模型，训练 10 个 epochs</li>
<li>（3）<strong>训练目标检测网络：</strong> 修改 Darknet-19 分类模型为检测模型，移除最后一个卷积层、global avgpooling 层以及 softmax 层，并且新增了三个 3x3x1024 卷积层，同时增加了一传递层（passthrough layer），最后使用 1x1 卷积层输出预测结果，输出的 channels 数为：<em><em>num_anchors</em>(5+num_classes)</em>*</li>
</ul>
<h1 id="相比较-yolov1yolov2-引入锚框的作用"><a class="markdownIt-Anchor" href="#相比较-yolov1yolov2-引入锚框的作用"></a> 相比较 YOLOv1，YOLOv2 引入锚框的作用？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-06%2010.05.54.excalidraw.png" alt="Drawing 2023-02-06 10.05.54.excalidraw" /></li>
<li>如图，假设图片上有个待识别的圆形区域，其中 A、B、C 是模型初始化预测值，D 是真实值，根据距离关系，A、B、C 被优化到 D 的难易程度是 A&gt;B&gt;C</li>
<li>YOLOv1 没有使用任何锚框，所以其初始预测框由模型随机权重决定，所以其收敛更慢</li>
<li>YOLOv2 引擎锚框，而且其锚框是从大量数据统计出来的，因此其锚框很大概率比随机权重更接近gt框，因此其收敛更快</li>
</ul>
<h1 id="yolov2与yolov1在类别预测及回归预测的差异"><a class="markdownIt-Anchor" href="#yolov2与yolov1在类别预测及回归预测的差异"></a> YOLOv2与YOLOv1在类别预测及回归预测的差异？</h1>
<ul>
<li><strong>YOLOv1：</strong> 类别是针对一个 cell 而言的，即每个格子对应 B 个 Bounding Box，每个 cell 预测特征长度是 5 x B +C</li>
<li><strong>YOLOv2：</strong> 类别是对于每个 box 而言，对每个 box 会预测 5 +C 长度的向量，假设数量为 B 个，最终会预测 B x（5 + C）个输出维度</li>
</ul>
<h1 id="使得-yolov2效果更好-better的措施有哪些"><a class="markdownIt-Anchor" href="#使得-yolov2效果更好-better的措施有哪些"></a> 使得 YOLOv2效果更好 (Better)的措施有哪些？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141842.png" alt="YOLOv2-20230408141842" /></li>
<li><strong>批归一化(Batch Normalization)</strong>：所有卷积层增加BN，mAP提升了2%。使用BN，可以去掉dropout而不过拟合</li>
<li><strong>高分辨率训练(High Resolution Classiﬁer)</strong>：原始的YOLO预训练分类器网络输入是224x224，YOLOv2首先在 ImageNet 上以 448×448 的全分辨率微调分类网络 10 个 epoch。 然后，我们在检测时微调生成的网络。 这种高分辨率分类网络使我们的 mAP 增加了近 4%</li>
<li><strong>带AnchorBox的卷积(Convolutional With Anchor Boxes)</strong>： 使用锚框，我们的准确性会略有下降。 YOLO 仅预测每张图像 98 个框，但使用锚框，我们的模型预测超过 1000 个框。在没有锚框的情况下，我们的中间模型得到 69.5 mAP，召回率为 81%。使用锚框，我们的模型获得 69.2 mAP，召回率为 88%</li>
<li><strong>先验框维度聚类</strong>YOLOv2生成及设置先验框</li>
<li><strong>直接位置预测(Direct location prediction)</strong>：使用维度聚类和直接预测bounding box中心位置，比FasterRCNN中的anchor box方法提升了近5%的mAP</li>
<li><strong>细粒度特征</strong>（Fin<strong>e-Grained Features）</strong>：添加一传递层（passthrough layer），与ResNet的恒等映射相似，传递层通过将相邻的特征图堆叠到不同的通道，而不是空间位置，将较高分辨率和较低分辨率的feature map相连。将26×26×512特征映射转换为13×13×2048特征映射，这样可以直接与原始的特征拼接。这一点改进获得了1%的性能提升</li>
<li><strong>多尺度训练(Multi-Scale Training)</strong>： 不固定输入图像的尺寸，而是在每几次迭代中改变网络的输入图像尺寸。每10个batch，网络随机选择一个新的输入图像尺寸，由于下采样的因子是32，所以输入尺寸都是32的倍数：{320，352，…，608}。这个策略迫使网络学习在不同的输入分辨率下预测好的结果，意味着相同的网络可以实现不同分辨率的检测</li>
</ul>
<h1 id="yolov2如何设计传递层passthrough-layer"><a class="markdownIt-Anchor" href="#yolov2如何设计传递层passthrough-layer"></a> YOLOv2如何设计传递层（passthrough layer）？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141842-1.png" alt="" /></li>
<li>在最后一个 pooling 之前，特征图的大小是26 x26x512，将其1拆4，直接传递到 pooling 后（并且又经过一组卷积）的特征图，两者叠加到一起作为输出的特征图</li>
<li>1拆4的规则为 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141844.png" alt="" /></li>
<li>传递层可以扩大感受野，提升对大尺度目标的预测能力</li>
</ul>
<h1 id="yolov2如何使用高分辨率分类训练网络"><a class="markdownIt-Anchor" href="#yolov2如何使用高分辨率分类训练网络"></a> YOLOv2如何使用高分辨率分类训练网络？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141845.png" alt="" /></li>
<li>原YOLO：224×224大小的图像上训练分类器，检测时分辨率提高至448。网络须同时切换至学习物体检测，并调整至新的输入分辨率</li>
<li>YOLOv2：ImageNet上按448×448分辨率，微调分类网络10个周期（epochs）；检测数据上微调网络。高分辨率的分类网络使mAP提高4%</li>
</ul>
<h1 id="什么是darknet19"><a class="markdownIt-Anchor" href="#什么是darknet19"></a> 什么是Darknet19?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141845-1.png" alt="YOLOv2-20230408141845-1" /></li>
<li>YOLOv2中被提出，由于其包含19个卷积层，因此称为Darknet19</li>
<li>共19个卷积层和5个最大池化层，DarkNet-19比VGG-16小一些，精度不弱于VGG-16，但浮点运算量减少到约1/5，以保证更快的运算速度</li>
</ul>
<h1 id="使得yolov2更快faster的措施有哪些"><a class="markdownIt-Anchor" href="#使得yolov2更快faster的措施有哪些"></a> 使得YOLOv2更快(Faster)的措施有哪些？</h1>
<ul>
<li>设计了全新的分类模Darknet19 ，并频繁使深度可分离卷积(depthwiseseparableconvolution)，使得计算量大大减少</li>
</ul>
<h1 id="yolov2如何生成-设置先验框"><a class="markdownIt-Anchor" href="#yolov2如何生成-设置先验框"></a> YOLOv2如何生成、设置先验框?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141846.png" alt="YOLOv2-20230408141846" /></li>
<li>取代手工选取anchor box尺寸，用K-Means在<strong>训练集</strong>的bounding box上进行聚类，自动地找到好的先验box</li>
<li>使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mtext> box </mtext><mo separator="true">,</mo><mtext> centroid </mtext><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi mathvariant="normal">IoU</mi><mo>⁡</mo><mo stretchy="false">(</mo><mtext> box </mtext><mo separator="true">,</mo><mtext> centroid </mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(\text { box }, \text { centroid })=1-\operatorname{IoU}(\text { box }, \text { centroid })</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord text"><span class="mord"> box </span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord"> centroid </span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">o</span><span class="mord mathrm">U</span></span><span class="mopen">(</span><span class="mord text"><span class="mord"> box </span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord"> centroid </span></span><span class="mclose">)</span></span></span></span> 作为k-means距离的衡量标准</li>
<li>从图可知，当K=5时，既能保证模型的复杂度，又能保证一个高的查全率，因此YOLOv2每个位置预测5个锚框</li>
</ul>
<h1 id="yolov2论文中的直接位置预测direct-location-prediction"><a class="markdownIt-Anchor" href="#yolov2论文中的直接位置预测direct-location-prediction"></a> YOLOv2论文中的直接位置预测(Direct location prediction)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141846-1.png" alt="YOLOv2-20230408141846-1" /></li>
<li>YOLOv1的预测锚框时，模型不稳定</li>
<li>由于σ函数将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">t_x,t_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>约束在(0,1)范围内，所以根据上面的计算公式，预测边框的蓝色<strong>中心点</strong>被约束在蓝色背景的网格内。约束边框位置使得模型更容易学习，且预测更为稳定</li>
</ul>
<h1 id="yolov2如何进行联合分类和检测"><a class="markdownIt-Anchor" href="#yolov2如何进行联合分类和检测"></a> YOLOv2如何进行联合分类和检测?</h1>
<ul>
<li>基本的思路是，如果是检测样本，训练时其Loss包括分类误差和定位误差，如果是分类样本，则Loss只包括分类误差</li>
<li>YOLO9000 依然采用 YOLO2 的网络结构，不过 5 个先验框减少到 3 个先验框，以减少计算量。YOLO2 的输出是 13 x 13x5x (4+1+20)，现在 YOLO9000 的输出是 13x13x3x (4+1+9418)。假设输入是 416x416x3</li>
</ul>
<h1 id="yolov2和ssd处理多尺度目标的差异"><a class="markdownIt-Anchor" href="#yolov2和ssd处理多尺度目标的差异"></a> YOLOv2和SSD处理多尺度目标的差异？</h1>
<ul>
<li>SSD使用不同层次的CNN特征做多尺度目标预测，参考SSD的网络结构</li>
<li>YOLOv2 没有在网络结构上针对多尺度优化，而是在训练网络时使用不同分辨率图片进行训练</li>
<li>两个处理多目标方法优劣无法直接判定，整体效果上YOLOv2更优秀</li>
</ul>
<h1 id="yolo9000的输出如何设计"><a class="markdownIt-Anchor" href="#yolo9000的输出如何设计"></a> YOLO9000的输出如何设计？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141847.png" alt="YOLOv2-20230408141847" /></li>
<li>标签进行<strong>分级分类后，对同一概念下的同义词进行softmax分类来完成最终分类loss的运算</strong></li>
</ul>
<h1 id="yolo9000的wordtree如何构建"><a class="markdownIt-Anchor" href="#yolo9000的wordtree如何构建"></a> YOLO9000的WordTree如何构建？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv2-20230408141847-1.png" alt="YOLOv2-20230408141847-1" /></li>
<li>要检测更多对象，比如从原来的VOC的20种对象，扩展到ImageNet的9000种对象。简单来想的话，好像把原来输出20维的softmax改成9000维的softmax就可以了，但是，ImageNet的对象类别与COCO的对象类别不是互斥的。比如COCO对象类别有“狗”，而ImageNet细分成100多个品种的狗，狗与100多个狗的品种是包含关系，而不是互斥关系。一个Norfolk terrier同时也是dog，这样就不适合用单个softmax来做对象分类，而是要采用一种多标签分类模型</li>
<li>YOLO2于是根据WordNe5]，将ImageNet和COCO中的名词对象一起构建了一个WordTree，以physical object为根节点，各名词依据相互间的关系构建树枝、树叶，节点间的连接表达了对象概念之间的蕴含关系（上位/下位关系）</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLO9000%EF%BC%9ABetter,%20Faster,%20Stronger-20230521105516.png" alt="" /></li>
<li>整个 WordTree 中的对象之间不是互斥的关系，但对于单个节点，属于它的所有子节点之间是互斥关系。比如 terrier 节点之下的 Norfolk terrier、Yorkshire terrier、Bedlington terrier 等，各品种的 terrier 之间是互斥的，所以计算上可以进行 softmax 操作。上面图10只画出了3个 softmax 作为示意，实际中每个节点下的所有子节点都会进行 softmax</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/64233792?utm_id=0">【目标检测】YOLOv2 + YOLO9000 - 知乎</a></li>
<li><a href="https://blog.csdn.net/x_iunknown/article/details/83513745">YOLOv2 / YOLO9000 深入理解_x_iunknown的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
        <tag>one-stage</tag>
      </tags>
  </entry>
  <entry>
    <title>You Only Look Once：Unified Real-Time Object Detection</title>
    <url>/2020/06/02/You%20Only%20Look%20Once%EF%BC%9AUnified%20Real-Time%20Object%20Detection/</url>
    <content><![CDATA[<p>目标检测全新检测方式，相比较过去的二阶段检测方法，YOLO 系列系列将模型输出看作网格，图片的目标落在网格上，输出“网格数量的”预测实现对目标的检测</p>
<a id="more"></a>
<h1 id="什么是-yolov1"><a class="markdownIt-Anchor" href="#什么是-yolov1"></a> 什么是 YOLOv1?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141723.png" alt="YOLOv1-20230408141723" /></li>
<li>将输入图像分成SxS个格子，每个格子负责检测<strong>落入</strong>该格子的物体。图中物体马的中心点（红色原点）落入第4行、第3列的格子内，所以这个格子负责预测图像中的物体马 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141723-1.png" alt="" /></li>
</ul>
<h1 id="yolov1的网络结构"><a class="markdownIt-Anchor" href="#yolov1的网络结构"></a> YOLOv1的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141725.png" alt="" /></li>
<li>YOLOv1的Backbone借鉴了GoogleNetv1设计，共包含24个卷积层，2个全连接层</li>
<li><strong>输入：</strong> 448 x 448 x 3，由于存在全连接层，因此要求输入固定</li>
<li><strong>输出：</strong> 最后一个 FC 层得到 1470 x 1 的输出，reshape 一下得到 <strong>7 x 7 x 30</strong> 的一个 tensor，即最终每个单元格都有一个 30 维的输出，表示每个单元格分为 20 类+2 个预测框，每个预测框包括 4 个位置信息及 1 个置信度。具体如何制作、学习这 30 维变量的学习样本，参考：YOLOv1的正负样本判定、YOLOv1正样本制作过程</li>
</ul>
<h1 id="yolov1如何计算损失"><a class="markdownIt-Anchor" href="#yolov1如何计算损失"></a> YOLOv1如何计算损失？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141725-1.png" alt="" /></li>
<li>YOLOv1的损失包含3部分，分别是<strong>座标回归误差、置信度回归误差、类别误差</strong></li>
<li>注意：只有框真实置信度=1，才表示该框需要被学习位置信息和类别信息；框真实置信度=0（该框无预测目标），只计算框置信度损失</li>
<li>由此可知，有物体的地方，我们让网络去学习，逼近它，而<strong>没有物体</strong>的地方，理论上应该让 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">c_x,c_y,w,h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span></span></span></span>都是零</li>
</ul>
<h1 id="yolov1的正负样本判定"><a class="markdownIt-Anchor" href="#yolov1的正负样本判定"></a> YOLOv1的正负样本判定？</h1>
<ul>
<li><strong>YOLOv1不存在锚框，因此通过预测框与真实框的IOU判定正负样本，动态变化</strong></li>
<li><strong>位置判定正负样本：</strong> 根据真实框对应 cell 位置，将预测框分为正负样本，每个真实框分配 1 个预测框</li>
<li><strong>正样本：</strong> 取cell对应的预测框IOU最大的样本为<strong>正样本</strong></li>
<li><strong>负样本：</strong> cell位置上除正样本外的预测框</li>
</ul>
<h1 id="yolov1正样本制作过程"><a class="markdownIt-Anchor" href="#yolov1正样本制作过程"></a> YOLOv1正样本制作过程？</h1>
<ul>
<li>
<p>YOLOv1 输出是 7x7x30，将图像的真实目标映射到所有网格的 30 维向量即完成样本制作</p>
</li>
<li>
<p><strong>框置信度：</strong> 如果目标的中心落在网格内，则c=1，否则c=0</p>
</li>
<li>
<p><strong>框的中心：</strong> 假设真实座标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_{min},y_{min},x_{max},y_{max})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<ul>
<li>(1)计算中心<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> center </mtext><mi>x</mi><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>min</mi><mo>⁡</mo></msub><mo>+</mo><msub><mi>x</mi><mi>max</mi><mo>⁡</mo></msub></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mtext> center </mtext><mi>y</mi></msub><mo>=</mo><mfrac><mrow><msub><mi>y</mi><mi>min</mi><mo>⁡</mo></msub><mo>+</mo><msub><mi>y</mi><mi>max</mi><mo>⁡</mo></msub></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l} \text { center } x=\frac{x_{\min }+x_{\max }}{2} \\ \text { center }_{y}=\frac{y_{\min }+y_{\max }}{2} \end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4144390000000007em;vertical-align:-0.9572195000000006em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4572195000000001em;"><span style="top:-3.6172195em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> center </span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">i</span><span class="mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">a</span><span class="mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.402780499999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord"> center </span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">i</span><span class="mtight">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">a</span><span class="mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9572195000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li>(2)计算映射到的网格<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo><mi mathvariant="normal">grid</mi><mo>⁡</mo></mo><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">⌊</mo><mfrac><mtext> center </mtext><mtext> stride </mtext></mfrac><mo fence="true">⌋</mo></mrow><msub><mo><mi mathvariant="normal">grid</mi><mo>⁡</mo></mo><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">⌊</mo><mfrac><mtext> center </mtext><msup><mtext> stride </mtext><mi>y</mi></msup></mfrac><mo fence="true">⌋</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{grid}_{x}=\left\lfloor\frac{\text { center }}{\text { stride }}\right\rfloor \operatorname{grid}_{y}=\left\lfloor\frac{\text { center }}{\text { stride }^{y}}\right\rfloor 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop"><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">r</span><span class="mord mathrm">i</span><span class="mord mathrm">d</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> stride </span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> center </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">⌋</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop"><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">r</span><span class="mord mathrm">i</span><span class="mord mathrm">d</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252000000000025em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.380248em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord"> stride </span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.748732em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> center </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">⌋</span></span></span></span></span></span></span></p>
</li>
<li>(3) 计算量化误差，量化误差即是网络学习的目标，可知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 \leq c_{x}, c_{y} \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>c</mi><mi>x</mi></msub><mo>=</mo><mfrac><mrow><mtext> center </mtext><msub><mi>r</mi><mi>x</mi></msub></mrow><mtext> stride </mtext></mfrac><mo>−</mo><mrow><mo fence="true">⌊</mo><mfrac><mrow><mtext> center </mtext><msub><mi>r</mi><mi mathvariant="normal">x</mi></msub></mrow><mtext> stride </mtext></mfrac><mo fence="true">⌋</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>c</mi><mi>y</mi></msub><mo>=</mo><mfrac><mrow><mtext> center </mtext><msub><mi>r</mi><mi>y</mi></msub></mrow><mtext> stride </mtext></mfrac><mo>−</mo><mrow><mo fence="true">⌊</mo><mfrac><mrow><mtext> center </mtext><msub><mi>r</mi><mi mathvariant="normal">y</mi></msub></mrow><mtext> stride </mtext></mfrac><mo fence="true">⌋</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l} c_{x}=\frac{\text { center } r_{x}}{\text { stride }}- \left\lfloor\frac{\text { center } r_{\mathrm{x}}}{\text { stride }}\right\rfloor \\ c_{y}=\frac{\text { center } r_{y}}{\text { stride }}-\left\lfloor\frac{\text { center } r_{\mathrm{y}}}{\text { stride }}\right\rfloor \end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.01002em;vertical-align:-1.25501em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75501em;"><span style="top:-4.05501em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8406559999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> stride </span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> center </span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8406559999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> stride </span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> center </span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌋</span></span></span></span></span><span style="top:-2.54501em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9378759999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> stride </span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> center </span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9378759999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> stride </span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight"> center </span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25501em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
</ul>
</li>
<li>
<p>框的宽高―</p>
<ul>
<li>(1) 计算框的宽、高<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mtext>，</mtext><mi>h</mi><mo>=</mo><msub><mi>y</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w=x_{max}-x_{min}， h=y_{max}-x_{min}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>(2)归一化：图像的宽高通常是远大于1的实数，直接用这个做标签，loss 值和其他部分差距很大，因此将其进行归一化处理，最后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 \leq w, h \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><mfrac><mi>w</mi><msub><mi>w</mi><mrow><mi>i</mi><mi>m</mi><mi>a</mi><mi>g</mi><mi>e</mi></mrow></msub></mfrac><mspace linebreak="newline"></mspace><mi>h</mi><mo>=</mo><mfrac><mi>h</mi><msub><mi>h</mi><mrow><mi>i</mi><mi>m</mi><mi>a</mi><mi>g</mi><mi>e</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">w=\frac {w} {w_{image}}\\ h=\frac {h} {h_{image}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.079668em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.343548em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>取对数：因为线性回归数是任意实数，而宽高始终大于 0，所以通过对数函数转换其范围<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>h</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w=log(w)\\ h=log(h)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第一个目标使用13*13的那个框进行预测，并计算中心偏差、大小及权重</span></span><br><span class="line"><span class="comment"># 以下框的位置及大小的预测：位置使用(7,9)网格进行预测，预测参数为0.6049999999999995 0.4986666666666668 3.9269510260123828 4.9557894982104695</span></span><br><span class="line">xmin, ymin, xmax, ymax = gt_label[:-<span class="number">1</span>]</span><br><span class="line">print(xmin, ymin, xmax, ymax) <span class="comment"># 0.524 0.56 0.646 0.9013333333333333 经过缩放的框x,y,w,h</span></span><br><span class="line"><span class="comment"># 计算边界框的中心点</span></span><br><span class="line">c_x = (xmax + xmin) / <span class="number">2</span> * w</span><br><span class="line">c_y = (ymax + ymin) / <span class="number">2</span> * h</span><br><span class="line">box_w = (xmax - xmin) * w</span><br><span class="line">box_h = (ymax - ymin) * h</span><br><span class="line">print(c_x,c_y,box_w,box_h) <span class="comment"># 243.35999999999999 303.95733333333334 50.751999999999995 141.99466666666663 原始的框x,y,w,h</span></span><br><span class="line"><span class="comment"># 计算中心点所在的网格坐标</span></span><br><span class="line">c_x_s = c_x / s</span><br><span class="line">c_y_s = c_y / s</span><br><span class="line">grid_x = <span class="built_in">int</span>(c_x_s)</span><br><span class="line">grid_y = <span class="built_in">int</span>(c_y_s)</span><br><span class="line">print(c_x_s,c_y_s,grid_x,grid_y) <span class="comment"># 7.6049999999999995 9.498666666666667 7 9 确定模拟待拟合的中心，即原始的框映射到预测位置 </span></span><br><span class="line"><span class="comment"># 计算中心点偏移量和宽高的标签</span></span><br><span class="line">tx = c_x_s - grid_x</span><br><span class="line">ty = c_y_s - grid_y</span><br><span class="line">tw = np.log(box_w)</span><br><span class="line">th = np.log(box_h)</span><br><span class="line">print(tx,ty,tw,th) <span class="comment"># 0.6049999999999995 0.4986666666666668 3.9269510260123828 4.9557894982104695 确定模型待拟合的参数，x,y的偏差,w,h的对数值</span></span><br><span class="line"><span class="comment"># 计算边界框位置参数的损失权重</span></span><br><span class="line">weight = <span class="number">2.0</span> - (box_w / w) * (box_h / h) </span><br><span class="line">print(weight) <span class="comment"># 1.9583573333333333 </span></span><br></pre></td></tr></table></figure>
<h1 id="yolov1如何解析模型输出"><a class="markdownIt-Anchor" href="#yolov1如何解析模型输出"></a> YOLOv1如何解析模型输出？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141725-2.png" alt="" /></li>
<li><strong>总体步骤</strong>：使用置信度阈值，过滤低置信度的预测，然后将剩下预测还原到原图上，并使用 nms 第二次过滤</li>
<li><strong>框中心：</strong> 利用预测的框的位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>r</mi><mi>i</mi><msub><mi>d</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>g</mi><mi>r</mi><mi>i</mi><msub><mi>d</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">grid_x,grid_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>、下采样倍数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">stride</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span></span></span>、量化误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">c_x,c_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 得到框的中心<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"> 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p>
</li>
</ul>
</li>
<li>
<p>定义回归中心参数为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>x</mi></msup><mo>−</mo><msup><mi>b</mi><mi>x</mi></msup><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>w</mi></msup><mspace linebreak="newline"></mspace><mi mathvariant="normal">Δ</mi><mi>y</mi><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>y</mi></msup><mo>−</mo><msup><mi>b</mi><mi>y</mi></msup><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>h</mi></msup></mrow><annotation encoding="application/x-tex">\Delta x=\left(t^{x}-b^{x}\right) / b^{w}\\ \Delta y=\left(t^{y}-b^{y}\right) / b^{h}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141726.png" alt="" /></p>
</li>
<li>
<p>假设图中是同一目标在不同尺度下的预测效果，已知卷积神经网络具有尺度不变性 (size invariance) ，可以出现左图红框中心到绿框中心为4，红框宽高为(6,6)，右图红框中心到绿框中心为2，红框宽高为(3,3)，不使用除法时，左图平移变换距离为4，右图为2，<strong>神经网络输出需要优化&gt;1的数比较困难，因此将待优化值归一化处理(待优化值/先验框中心位置)，则左图和右图优化值均值2/3</strong></p>
</li>
</ul>
<h1 id="yolov1边框回归中尺度变换回归尺寸为什么是真实框与先验框比值取log"><a class="markdownIt-Anchor" href="#yolov1边框回归中尺度变换回归尺寸为什么是真实框与先验框比值取log"></a> YOLOv1边框回归中尺度变换(回归尺寸)，为什么是真实框与先验框比值取log？</h1>
<ul>
<li>定义尺寸变换回归参数为：<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>w</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>w</mi></msup><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>w</mi></msup><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace><mi mathvariant="normal">Δ</mi><mi>h</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>h</mi></msup><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>h</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\Delta w=\log \left(t^{w} / b^{w}\right)\\ \Delta h=\log \left(t^{h} / b^{h}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.249118em;vertical-align:-0.35001em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p>
</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141727.png" alt="" /></li>
<li>神经网络输出的放缩的尺度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>w</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">\Delta w,\Delta h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">h</span></span></span></span><strong>必须大于0</strong>。怎么保证满足大于0呢？直观的想法就是 EXP 函数，也即<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mover accent="true"><mi>g</mi><mo>^</mo></mover><mi>w</mi></msup><mo>=</mo><msup><mi>b</mi><mi>w</mi></msup><mo>∗</mo><msup><mi>e</mi><mrow><mi mathvariant="normal">Δ</mi><mi>w</mi></mrow></msup><mspace linebreak="newline"></mspace><msup><mover accent="true"><mi>g</mi><mo>^</mo></mover><mi>h</mi></msup><mo>=</mo><msup><mi>b</mi><mi>h</mi></msup><mo>∗</mo><msup><mi>e</mi><mrow><mi mathvariant="normal">Δ</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\hat g^w=b^w*e^{\Delta w} \\ \hat g^h=b^h*e^{\Delta h}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>尺度变换的目地是为了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>g</mi><mo>^</mo></mover><mi>w</mi></msub><mo>≈</mo><msub><mi>t</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>g</mi><mo>^</mo></mover><mi>h</mi></msub><mo>≈</mo><msub><mi>t</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">\hat g_w \approx t_w,\hat g_h \approx t_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，所以待学习参数计算公式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>w</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>w</mi></msup><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>w</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>h</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>h</mi></msup><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>h</mi></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\Delta w=\log \left(t^{w} / b^{w}\right), \Delta h=\log \left(t^{h} / b^{h}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></li>
</ul>
<h1 id="yolov1预测有多个靠近的格点预测了同一物体如何处理"><a class="markdownIt-Anchor" href="#yolov1预测有多个靠近的格点预测了同一物体如何处理"></a> YOLOv1预测有多个靠近的格点预测了同一物体，如何处理？</h1>
<ul>
<li>yolov1的格点设置已经确保一个格点只能预测1个类，但是由于中心点定位的偏差及相邻物体的原因，会出现多个格点预测了同一个物体的现象</li>
<li>可以借鉴YOLOv2 将分类结果绑定到bbox上，现在是1个预测位置预测：2个bbox及1个类别，改为预测2个bbox及2个类别</li>
</ul>
<h1 id="yolov1-与-fast-r-cnn-在预测结果上差异"><a class="markdownIt-Anchor" href="#yolov1-与-fast-r-cnn-在预测结果上差异"></a> YOLOv1 与 Fast R-CNN 在预测结果上差异？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141727-1.png" alt="YOLOv1-20230408141727-1" /></li>
<li>YOLOv1 的 Localization 错误率更高，直接对位置进行回归，确实不如滑窗式的检测方式准确率高</li>
<li>YOLOv1 对于背景的误检率更低，由于 Yolo 在推理时，可以“看到”整张图片，所以能够更好的区分背景与待测物体</li>
</ul>
<h1 id="yolov1-的预测框位置时模型为什么不稳定"><a class="markdownIt-Anchor" href="#yolov1-的预测框位置时模型为什么不稳定"></a> YOLOv1 的预测框位置时，模型为什么不稳定？</h1>
<ul>
<li>模型不稳定，尤其是早期迭代时。大多不稳定来自预测框中心 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>g</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(g_x,g_y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">b_x,b_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是先验框的中心位置，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">b_w,b_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为先验框的宽高，计算如下<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>g</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>x</mi></msub><mo>∗</mo><mi mathvariant="normal">Δ</mi><mi>x</mi><mo fence="true">)</mo></mrow><mo>+</mo><msub><mi>b</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>g</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>y</mi></msub><mo>∗</mo><mi mathvariant="normal">Δ</mi><mi>y</mi><mo fence="true">)</mo></mrow><mo>+</mo><msub><mi>b</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">g_x=\left(t_{x} * \Delta x \right)+b_{x}, g_y=\left(t_{y} * \Delta y \right)+b_{y}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\Delta x,\Delta y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>是要学习的参数，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\Delta x=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>g</mi><mi>x</mi></msup><mo>=</mo><msup><mi>t</mi><mi>x</mi></msup><mo>+</mo><msup><mi>b</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">g^x=t^{x} +b^{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span>，预测的位置右移一个锚箱宽度；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\Delta x=-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>g</mi><mi>x</mi></msup><mo>=</mo><msup><mi>t</mi><mi>x</mi></msup><mo>−</mo><msup><mi>b</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">g^x=t^{x} - b^{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></span>，预测的位置左移相同的宽度。该公式无约束， 因此预测边框的中心可能出现在任何位置，训练早期阶段不容易稳定。YOLOv2调整了预测公式，将预测边框的中心约束在特定gird网格内，使得训练更稳定，参考：YOLOv2论文中的直接位置预测(Directlocationprediction)</li>
</ul>
<h1 id="yolov1的缺点"><a class="markdownIt-Anchor" href="#yolov1的缺点"></a> YOLOv1的缺点？</h1>
<ul>
<li>因为YOLO中每个cell只预测两个bbox和一个类别，这就限制了能预测重叠或邻近物体的数量(论文至多49个目标)，比如说两个物体的中心点都落在这个cell中，但是这个cell只能预测一个类别</li>
<li>不像FasterRCNN一样预测offset，YOLO是直接预测bbox的位置的，这就增加了训练的难度，参考：YOLOv1的预测框位置时，模型为什么不稳定</li>
<li>YOLO是根据训练数据来预测bbox的，但是当测试数据中的物体出现了训练数据中的物体没有的长宽比时，YOLO的泛化能力低</li>
</ul>
<h1 id="什么是边框回归bounding-box-regression"><a class="markdownIt-Anchor" href="#什么是边框回归bounding-box-regression"></a> 什么是边框回归(Bounding Box Regression)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/YOLOv1-20230408141727-2.png" alt="" /></li>
<li>使用4维向量 (x, y, w, h)表示一个边框，图中的 P、G、T 分别表示 Proposal (获选框、先验框)、预测框、真实框，边框回归的目的： 寻找一种关系使得输入原始的窗口 P 经过映射得到一个“跟真实框 T 更接近的”G，即给定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><msub><mi>P</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>h</mi></msub><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(P_{x}, P_{y}, P_{w}, P_{h}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，寻找映射关系 f，使得<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mrow><mo fence="true">(</mo><mo stretchy="false">[</mo><msub><mi>P</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>h</mi></msub><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">[</mo><msub><mi>G</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>h</mi></msub><mo stretchy="false">]</mo><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>x</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>y</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>w</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>h</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">(</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>x</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>y</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>w</mi></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>h</mi></msub><mo fence="true">)</mo></mrow><mo>≈</mo><mrow><mo fence="true">(</mo><msub><mi>G</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>h</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l} f\left([P_{x}, P_{y}, P_{w}, P_{h}]+[G_{x}, G_{y}, G_{w}, G_{h}]\right)=\left(\hat{G}_{x}, \hat{G}_{y}, \hat{G}_{w}, \hat{G}_{h}\right) \\ \left(\hat{G}_{x}, \hat{G}_{y}, \hat{G}_{w}, \hat{G}_{h}\right) \approx\left(G_{x}, G_{y}, G_{w}, G_{h}\right) \end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-4.05002em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li>主要包括2个过程，分别是平移及尺度变换。图中P、G、T这3个框表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>b</mi><mi>x</mi></msup><mo separator="true">,</mo><msup><mi>b</mi><mi>y</mi></msup><mo separator="true">,</mo><msup><mi>b</mi><mi>w</mi></msup><mo separator="true">,</mo><msup><mi>b</mi><mi>h</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><mi>T</mi><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>x</mi></msup><mo separator="true">,</mo><msup><mi>t</mi><mi>y</mi></msup><mo separator="true">,</mo><msup><mi>t</mi><mi>w</mi></msup><mo separator="true">,</mo><msup><mi>t</mi><mi>h</mi></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><mi>G</mi><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>g</mi><mi>x</mi></msup><mo separator="true">,</mo><msup><mi>g</mi><mi>y</mi></msup><mo separator="true">,</mo><msup><mi>g</mi><mi>w</mi></msup><mo separator="true">,</mo><msup><mi>g</mi><msup><mi>l</mi><mn>2</mn></msup></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P=\left(b^{x}, b^{y}, b^{w}, b^{h}\right), \quad T=\left(t^{x}, t^{y}, t^{w}, t^{h}\right), \quad G=\left(g^{x}, g^{y}, g^{w}, g^{l^{2}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span> ，边框回归的目的是基于先验框<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>及真实框<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>的信息，得到<strong>回归参数</strong>，使得先验框<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>经过回归参数计算后，得到的预测框<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>G</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>更接近真实框T，回归参数共4个，分别是平移变换2个(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\Delta x,\Delta y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>)+尺度变换2个(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>w</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">\Delta w,\Delta h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">h</span></span></span></span>)</li>
<li><strong>平移变换</strong>：<strong>将先验框中心向真实框中心移动的过程，等式右边是框的更新过程，因为</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mi>w</mi></msup><mo separator="true">,</mo><msup><mi>b</mi><mi>h</mi></msup></mrow><annotation encoding="application/x-tex">b^w,b^h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span> 是图像宽高，是个常量，所以不需要求导计算更新。实际模型推理时，输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\Delta x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span></span></span></span>，则其预测框中心 x 位置为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>∗</mo><msup><mi>b</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">\Delta x*b^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>x</mi></msup><mo>−</mo><msup><mi>b</mi><mi>x</mi></msup><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>w</mi></msup><mo>⇒</mo><msup><mi>g</mi><mi>x</mi></msup><mo>=</mo><msup><mi>b</mi><mi>x</mi></msup><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>x</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">Δ</mi><mi>y</mi><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>y</mi></msup><mo>−</mo><msup><mi>b</mi><mi>y</mi></msup><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>h</mi></msup><mo>⇒</mo><msup><mi>g</mi><mi>y</mi></msup><mo>=</mo><msup><mi>b</mi><mi>y</mi></msup><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\Delta x=\left(t^{x}-b^{x}\right) / b^{w} \Rightarrow g^{x}=b^{x}+\Delta x\\ \Delta y=\left(t^{y}-b^{y}\right) / b^{h} \Rightarrow g^{y}=b^{y}+\Delta y
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7977219999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088320000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.797722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span></p>
</li>
<li><strong>尺度变换</strong>：<strong>将先验框尺寸向真实框尺寸变换的过程</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>w</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>w</mi></msup><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>w</mi></msup><mo fence="true">)</mo></mrow><mo>⇒</mo><msup><mi>g</mi><mi>w</mi></msup><mo>=</mo><msup><mi>b</mi><mi>w</mi></msup><mi mathvariant="normal">Δ</mi><mi>w</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">Δ</mi><mi>h</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>h</mi></msup><mi mathvariant="normal">/</mi><msup><mi>b</mi><mi>h</mi></msup><mo fence="true">)</mo></mrow><mo>⇒</mo><msup><mi>g</mi><mi>h</mi></msup><mo>=</mo><msup><mi>b</mi><mi>h</mi></msup><mi mathvariant="normal">Δ</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">\Delta w=\log \left(t^{w} / b^{w}\right) \Rightarrow g^{w}=b^{w} \Delta w\\ \Delta h=\log \left(t^{h} / b^{h}\right) \Rightarrow g^{h}=b^{h} \Delta h
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.249118em;vertical-align:-0.35001em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathnormal">h</span></span></span></span></span></p>
</li>
<li>这里的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>y</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>w</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">\Delta x,\Delta y,\Delta w,\Delta h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">h</span></span></span></span> 是回归过程需要学习的参数，这些参数可以根据先验框还原为预测框，并根据预测框与真实框的差距计算损失，得到损失使用随机梯度下降 (SGD) 等优化函数，更新<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>y</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>w</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">\Delta x,\Delta y,\Delta w,\Delta h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">h</span></span></span></span></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
        <tag>one-satge</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《Keras快速上手：基于Python的深度学习实战》-谢梁;鲁颖;劳虹岚</title>
    <url>/2020/06/02/%E4%B9%A6%E6%91%98_Keras%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%EF%BC%9A%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98-%E8%B0%A2%E6%A2%81;%E9%B2%81%E9%A2%96;%E5%8A%B3%E8%99%B9%E5%B2%9A.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/27093647">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29499730.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29499730.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>Keras快速上手：基于Python的深度学习实战</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>谢梁</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2017-8</span></div>
			<div class="douban-card-item"><span>评分: </span><span>4.7</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="1准备深度学习的环境"><a class="markdownIt-Anchor" href="#1准备深度学习的环境"></a> 1准备深度学习的环境</h2>
<blockquote>
<p>cuDNN是NVIDIA开发的专门强化卷积神经网络模型训练的库，全称为NVIDIACUDADeepNeuralNetworklibrary，支持常见的深度学习软件，比如CNTK、Caffe、Theano、Keras、TensorFlow等。cuDNN对卷积神经网络模型的训练速度能提升2~3倍，</p>
</blockquote>
<blockquote>
<p>CNMeM是NVIDIA开发的一个显存管理分配软件。预先给深度学习项目分配足够的显存能有效提高训练速度，一般提升10%左右。</p>
</blockquote>
<h2 id="2数据收集与处理"><a class="markdownIt-Anchor" href="#2数据收集与处理"></a> 2数据收集与处理</h2>
<blockquote>
<p>TF-IDF（TermFrequency–InverseDocumentFrequency）是一种用于进行信息检索与数据挖掘的常用加权技术，用以评估一个词对于一个段落集或一个语料库中的其中一个段落的重要程度。</p>
</blockquote>
<blockquote>
<p>Word2Vec是Google推出的用来进行词的向量表达的开源工具包，这个名字也是该工具包所代表的算法的称号。</p>
</blockquote>
<blockquote>
<p>Word2Vec的主要思想是把词表达为低维度向量的形式，含义相近的词在这个低维度向量空间中的位置相近，而不相关的词则距离较远。</p>
</blockquote>
<h2 id="3深度学习简介"><a class="markdownIt-Anchor" href="#3深度学习简介"></a> 3深度学习简介</h2>
<blockquote>
<p>大多数神经网络中都包含四类函数：组合函数（CombinationFunction）、激活函数（ActivationFunction）、误差函数（ErrorFunction）和目标函数（ObjectFunction）。</p>
</blockquote>
<blockquote>
<p>在网络中间将向量映射为标量的函数就被称为组合函数。常见的组合函数包括线性组合函数和基于欧式空间距离的函数，比如在RBF网络中常用的函数。</p>
</blockquote>
<blockquote>
<p>激活函数通常都是将一个实数域上的值映射到一个有限域中，因此也被称为塌缩函数。比如常见的tanh或者logistic函数，都是将无限的实数域上的数值压缩到（-1，1）或者（0，1）之间的有限域中。如果这个激活函数不做任何变换，则被称为Identity或者线性激活函数。激活函数的主要作用是为隐含层引入非线性。一个只有线性关系隐含层的多层神经网络不会比一般的只包含输入层和输出层的两层神经网络更加强大，因为线性函数的函数仍然是一个线性函数。但是加入非线性以后，多层神经网络的预测能力就得到了显著提高。</p>
</blockquote>
<blockquote>
<p>对于后向传播算法，激活函数必须可微，而且如果这个函数是在有限域中的话，则效果更好，因此像logistic、tanh、高斯函数等都是比较常见的选择，这类函数也被统称为sigmoid函数。</p>
</blockquote>
<blockquote>
<p>早期的理论认为sigmoid激活函数通常比threshold激活函数（比如ReLU等激活函数）好。</p>
</blockquote>
<blockquote>
<p>梯度消亡指的是梯度（误差的信号）随着隐藏层数的增加成指数减小。这是因为在后向传播算法中，对梯度的计算使用链式法则，因此在第n层时需要将前面各层的梯度都相乘，但是由于sigmoid函数的值域在（-1，1）或者（0，1）之间，因此多个很小的数相乘以后第n层的梯度就会接近于0，造成模型训练的困难。</p>
</blockquote>
<blockquote>
<p>对于输出层，读者应该尽量选择适合因变量分布的激活函数。对于只有0，1取值的双值因变量，logistic函数是一个较好的选择。对于有多个取值的离散因变量，比如0到9数字的识别，softmax激活函数是logistic激活函数的自然衍生。对于有有限值域的连续因变量，logistic或者tanh激活函数都可以用，但是需要将因变量的值域伸缩到logistic或者tanh对应的值域中。如果因变量取值为正，但是没有上限，那么指数函数是一个较好的选择。如果因变量没有有限值域，或者虽然是有限值域但是边界未知，那么最好采用线性函数作为激活函数。</p>
</blockquote>
<blockquote>
<p>模型输出值p和真实值y之间的差异一般被称为残差或者误差，但是这个值并不能直接用来衡量模型的质量。当一个模型完美的时候（虽然这不可能出现），其误差为0，而当一个模型不够完美的时候，其误差不论为负值还是正值，都偏离0；因此衡量模型质量的是误差偏离0的相对值，即误差函数的值越接近于0，模型的性能越好，反之则模型的性能越差。误差函数也被称为损失函数。常用的误差函数如下。</p>
</blockquote>
<blockquote>
<p>交叉熵可以被解释为映射到最可能的类别的概率的对数。因此，当预测值的分布和实际因变量的分布尽可能一致时，交叉熵最小。</p>
</blockquote>
<blockquote>
<p>目标函数是需要在训练阶段直接最小化的那个函数。</p>
</blockquote>
<blockquote>
<p>批量，即Batch，是深度学习中的一个重要概念。批量通常指两个不同的概念——如果对应的是模型训练方法，那么批量指的是将所有数据处理完以后一次性更新权重或者参数的估计；如果对应的是模型训练中的数据，那么批量通常指的是一次输入供模型计算用的数据量。这两个概念有着紧密的关系。</p>
</blockquote>
<blockquote>
<p>在离线学习中，所有的数据都可以被反复获取，比如上面的批量学习就是离线学习的一种。而在在线学习中，每个观测值在处理以后会被遗弃，同时参数得到更新。</p>
</blockquote>
<blockquote>
<p>离线学习有如下几个优点。对于任何固定个数的参数，目标函数都可以直接被计算出来，因此很容易验证模型训练是否在朝着所需要的方向发展。计算精度可以达到任意合理的程度。可以使用各种不同的算法来避免出现局部最优的情况。可以采用训练、验证、测试三分法对模型的普适度进行验证。可以计算预测值及其置信区间。</p>
</blockquote>
<blockquote>
<p>在深度学习中，采用sigmoid激活函数的隐藏层或者输出层的神经元通常在计算网络输入时加入一个偏移值，称为Bias。对于线性输出神经元，偏移项就是回归中的截距项。</p>
</blockquote>
<blockquote>
<p>三个常见的“标准化”数据处理动作。（1）重放缩（Rescaling）：通常指将一个向量加上或者减去一个常量，再乘以或者除以一个常量。比如将华氏温度转换为摄氏温度就是一个重放缩的过程。（2）规范化（Normalization）：通常指将一个向量除以其范数，比如采用欧式空间距离，则用向量的方差作为范数来规范化向量。在深度学习中，规范化通常采用极差为范数，即将向量减去最小值，并除以其极差，从而使数值范围在0到1之间。（3）标准化（Standardization）：通常指将一个向量移除其位置和规模的度量。比如一个服从正态分布的向量，可以减去其均值，并除以其方差来标准化数据，从而获得一个服从标准正态分布的向量。</p>
</blockquote>
<h2 id="4keras入门"><a class="markdownIt-Anchor" href="#4keras入门"></a> 4Keras入门</h2>
<blockquote>
<p>Keras针对几种常见的输入深度学习模型和输入数据形态，提供了几个易于使用的工具来处理数据，包括针对序列模型的数据预处理、针对文字输入的数据处理，以及针对图片输入的数据处理。所有函数都在Keras.preprocessing这个库里面，分别有text、sequence和image三个子库。</p>
</blockquote>
<blockquote>
<p>在文字的建模实践中，一般都需要把原始文字拆解成单字、单词或者词组，然后将这些拆分后的要素进行索引、标记化供机器学习算法使用。这种预处理叫作标注（Tokenize）。</p>
</blockquote>
<blockquote>
<p>对于已经读入的文字的预处理包含以下几个步骤。（1）文字拆分。（2）建立索引。（3）序列补齐（Padding）。（4）转换为矩阵。（5）使用标注类批量处理文本文件。所有跟文字相关的预处理函数都在Keras.preprocessing.text这个子库里。但是这是为英文文字设计的，如果是处理中文，因为中英文的差异，建议使用结巴分词里提供的切分函数cut来进行文字拆分。</p>
</blockquote>
<blockquote>
<p>根据结巴分词的介绍，其使用了如下算法来进行中文分词。基于前缀词典实现高效的词图扫描，生成句子中汉字所有可能成词情况所构成的有向无环图（DAG）。采用动态规划查找最大概率路径，找出基于词频的最大切分组合。对于未登录词，采用了基于汉字成词能力的HMM模型，使用Viterbi算法。</p>
</blockquote>
<blockquote>
<p>完成分词以后，得到的单字或者单词并不能直接用于建模，还需要将它们转换成数字序号，才能进行后续处理。这就是建立索引。建立索引的方法很简单，对于拆分出来的每一个单字或者单词，排序之后编号即可。</p>
</blockquote>
<blockquote>
<p>建立索引也可以使用OneHot编码法，即对于K个不同的单字或者单词，依次设定一个1到K之间的数值来索引这K个单字或者单词构成的词汇表。</p>
</blockquote>
<blockquote>
<p>一般要将大量不同的数据映射到一个有限空间中，通常采用的方法都是哈希表，one_hot函数也不例外。</p>
</blockquote>
<blockquote>
<p>最终索引之后的文字信息会被按照索引编号放入多维矩阵中用来建模。这个多维矩阵的行宽对应于所有拆分后的单字或者单词，但是在将索引放入矩阵中之前，需要先进行序列补齐的工作。这是因为将一段话拆分成单一的词以后，丢失了重要的上下文信息，因此将上下文的一组词放在一起建模能保持原来的上下文信息，从而提高建模的质量。</p>
</blockquote>
<blockquote>
<p>序列补齐分两种情况。</p>
</blockquote>
<blockquote>
<p>第一种情况是自然的文本序列，比如微博或者推特上的一段话，都是一个自然的单字或者单词序列，而待建模的数据是由很多微博或者推特组成的，或者对一组文章进行建模，每篇文章中的每一句话构成一个文本序列。这个时候每句话的长度不一，需要进行补齐为统一长度。第二种情况是将一个由K个（K较大）具备一定顺序的单词串拆分成小块的连续子串，每个子串只有M个（M&lt;K）单词。</p>
</blockquote>
<blockquote>
<p>所有的建模都只能使用多维矩阵，因此最后必须将索引过的文字元素转换成可以用于建模的矩阵。Keras提供了两种方法。第一种方法是使用pad_sequences函数。</p>
</blockquote>
<blockquote>
<p>第二种方法是使用下面将要介绍的标注类来进行。</p>
</blockquote>
<blockquote>
<p>当批量处理文本文件时，需要一种更高效的方法。Keras提供了一个标注类（Tokenizerclass）来进行文本处理。</p>
</blockquote>
<blockquote>
<p>另外一种对序列数据的处理方法叫作跳跃语法（SkipGram）模型。这是TomasMikolov在2013年提出的单词表述（WordRepresentation）模型，它把每个单词映射到一个M维的空间，它有一个更著名的别名，即Word2Vec。</p>
</blockquote>
<blockquote>
<p>在Keras的预处理模块中有一个skipgrams的函数，将一个词向量索引标号按照两种可选方式转化为一系列两两元素的组合（w1，w2）和标注z。如果w2跟w1是紧挨着的，则标注z为1，为正样本；如果w2是从不相邻的其他元素中随机抽取的，则标注z为负样本。</p>
</blockquote>
<blockquote>
<p>Keras为图片数据的输入提供了一个很好的接口，即Keras.preprocessing.image.ImageDataGenerator类。这个类生成一个数据生成器（Generator）对象，依照循环批量产生对应于图像信息的多维矩阵。</p>
</blockquote>
<blockquote>
<p>在Keras中设定了两类深度学习模型：一类是序列模型（Sequential类）；一类是通用模型（Model类）。</p>
</blockquote>
<blockquote>
<p>通用模型可以用来设计非常复杂、任意拓扑结构的神经网络，例如有向无环网络、共享层网络等。类似于序列模型，通用模型通过函数化的应用接口来定义模型。</p>
</blockquote>
<blockquote>
<p>对于序列模型和通用模型，它们的主要差异在于如何定义从输入层到输出层的各层结构。首先，在序列模型里，是先定义序列模型对象的；而在通用模型中是先定义从输入层到输出层各层要素的，包括尺寸结构。其次，在序列模型中，当有了一个模型对象以后，可以通过add方法对其依次添加各层信息，包括激活函数和网络尺寸来定义整个神经网络；而在通用模型中，是通过不停地封装含有各层网络结构的函数作为参数来定义网络结构的。最后，在序列模型中，各层只能依次线性添加；而在通用模型中，因为采用了封装的概念，可以在原有的网络结构上应用新的结构来快速生成新的模型，因此灵活度要高很多，特别是在具有多种类型的输入数据的情况下，比如在Keras手册中就举了一个教神经网络看视频进行自然语言问答的例子。在这个例子中，输入数据有两种：一是视频图像；二是自然语言的提问。首先通过构造多层卷积神经网络使用序列模型来对图像编码，然后将这个模型放入TimeDistributed函数中建立视频编码，最后使用LSTM对编码建模，同时对自然语言也进行从文字到向量的转换，在合并两个网络以后，将合并的网络作为参数输入下一个全连接层进行计算，并输出可能的回答。</p>
</blockquote>
<blockquote>
<p>Keras预先定义了很多对象用于帮助构造Keras的网络结构，比如常用的激活函数、参数初始化方法、正则化方法等。</p>
</blockquote>
<blockquote>
<p>选择。Keras提供了大量预定义好的激活函数，方便定制各种不同的网络结构。在Keras中使用激活对象有两种方法：一是单独定义一个激活层；二是在前置层里面通过激活选项来定义所需的激活函数。</p>
</blockquote>
<blockquote>
<p>初始化对象（Initializer）用于随机设定网络层激活函数中的权重值或者偏置项的初始值，包括kernel_initializer和bias_initializer。好的权重初始化值能帮助加快模型收敛速度。Keras预先定义了很多不同的初始化对象，包括：Zeros，将所有参数值都初始化为0。Ones，将所有参数值都初始化为1。Constant（value=1），将所有参数值都初始化为某一个常量，比如这里设置为1。RandomNormal，将所有参数值都按照一个正态分布所生成的随机数来初始化。正态分布的均值默认为0，而标准差默认为0.05。可以通过mean和stddev选项来修改。TruncatedNormal，使用一个截断正态分布生成的随机数来初始化参数向量，默认参数均值为0，标准差为0.05。对于均值的两个标准差之外的随机数会被遗弃并重新取样。这种初始化方法既有一定的多样性，又不会产生特别偏的值，因此是比较推荐的方法。针对不同的常用分布选项，Keras还提供了两个基于这种方法的特例，即glorot_normal和he_normal。前者的标准差不再是0.05，而是输入向量和输出向量的维度的函数：￼其中n1是输入向量的维度，而n2是输出向量的维度；后者的标准差只是输入向量的维度的函数：￼RandomUniform，按照均匀分布所生成的随机数来初始化参数值，默认的分布参数最小值为-0.05，最大值为0.05，可以通过minval和maxval选项分别修改。针对常用的分布选项，Keras还提供了两个基于这个分布的特例即glorot_uniform和he_uniform。前者均匀分布的上下限是输入向量和输出向量的维度的函数：￼而在后者上下限只是输入向量的维度的函数：￼自定义，用户可以自定义一个与参数维度相符合的初始化函数。下面的例子来自于Keras手册，使用后台的正态分布函数生成一组初始值，在定义网络层的时候调用这个函数即可。</p>
</blockquote>
<blockquote>
<p>在建模的时候，正则化是防止过度拟合的一个很常用的手段。在神经网络中也提供了正则化的手段，分别应用于权重参数、偏置项以及激活函数，对应的选项分别是kernel_regularizer、bias_reuglarizier和activity_regularizer。它们都可以应用Keras.regularizier.Regularizer对象，这个对象提供了定义好的一阶、二阶和混合的正则化方法，分别将前面的Regularizier替换为l1（x）、l2（x）和l1_l2（x1，x2），其中x或者x1，x2为非负实数，表明正则化的权重。</p>
</blockquote>
<blockquote>
<p>核心层（CoreLayer）是构成神经网络最常用的网络层的集合，包括：全连接层、激活层、放弃层、扁平化层、重构层、排列层、向量反复层、Lambda层、激活值正则化层、掩盖层。所有的层都包含一个输入端和一个输出端，中间包含激活函数以及其他相关参数等。（1）全连接层。在神经网络中最常见的网络层就是全连接层，在这个层中实现对神经网络里面的神经元的激活。</p>
</blockquote>
<blockquote>
<p>（2）激活层。激活层是对上一层的输出应用激活函数的网络层，这是除应用activation选项之外，另一种指定激活函数的方式。其用法很简单，只要在参数中指明所需的激活函数即可，预先定义好的函数直接引用其名字的字符串，或者使用TensorFlow和Theano自带的激活函数。</p>
</blockquote>
<blockquote>
<p>（3）放弃层。放弃层（Dropout）是对该层的输入向量应用放弃策略。在模型训练更新参数的步骤中，网络的某些隐含层节点按照一定比例随机设置为不更新状态，但是权重仍然保留，从而防止过度拟合。</p>
</blockquote>
<blockquote>
<p>（4）扁平化层。扁化层（Flatten）是将一个维度大于或等于3的高维矩阵按照设定“压扁”为一个二维的低维矩阵。</p>
</blockquote>
<blockquote>
<p>（5）重构层。重构层（Reshape）的功能和Numpy的Reshape方法一样，将一定维度的多维矩阵重新排列构造为一个新的保持同样元素数量但是不同维度尺寸的矩阵。</p>
</blockquote>
<blockquote>
<p>（6）排列层。排列层（Permute）按照给定的模式来排列输入向量的维度。这个方法在连接卷积网络和时间递归网络的时候非常有用。其参数是输入矩阵的维度编号在输出矩阵中的位置。</p>
</blockquote>
<blockquote>
<p>（7）向量反复层。顾名思义，向量反复层就是将输入矩阵重复多次。</p>
</blockquote>
<blockquote>
<p>（8）Lambda层。Lambda层可以将任意表达式包装成一个网络层对象。参数就是表达式，一般是一个函数，可以是一个自定义函数，也可以是任意已有的函数。</p>
</blockquote>
<blockquote>
<p>（9）激活值正则化层。这个网络层的作用是对输入的损失函数更新正则化。（10）掩盖层。该网络层主要使用在跟时间有关的模型中，比如LSTM。其作用是输入张量的时间步，在给定位置使用指定的数值进行“屏蔽”，用以定位需要跳过的时间步。</p>
</blockquote>
<blockquote>
<p>针对常见的卷积操作，Keras提供了相应的卷积层API，包括一维、二维和三维的卷积操作、切割操作、补零操作等。卷积在数学上被定义为作用于两个函数f和g上的操作来生成一个新的函数z。这个新的函数是原有两个函数的其中一个（比如f）在另一个（比如g）的值域上的积分或者加权平均。</p>
</blockquote>
<blockquote>
<p>卷积操作分为一维、二维和三维，对应的方法分别是Conv1D、Conv2D和Conv3D，这些方法有同样的选项，只是作用于不同维度的数据上，因此适用于不同的业务情景。</p>
</blockquote>
<blockquote>
<p>一维卷积通常被称为时域卷积，因为其主要应用在以时间排列的序列数据上，其使用卷积核对一维数据的邻近信号进行卷积操作来生成一个张量。二维卷积通常被称为空域卷积，一般应用在与图像相关的输入数据上，也是使用卷积核对输入数据进行卷积操作的。三维卷积也执行同样的操作。</p>
</blockquote>
<blockquote>
<p>Conv1D、Conv2D和Conv3D的选项几乎相同。filters：卷积滤子输出的维度，要求整数。kernel_size：卷积核的空域或时域窗长度。要求是整数或整数的列表，或者是元组。如果是单一整数，则应用于所有适用的维度。strides：卷积在宽或者高维度的步长。要求是整数或整数的列表，或者是元组。如果是单一整数，则应用于所有适用的维度。如果设定步长不为1，则dilation_rate选项的取值必须为1。padding：补齐策略，取值为valid、same或causal。causal将产生因果（膨胀的）卷积，即output[t]不依赖于input[t+1：]，在不能违反时间顺序的时序信号建模时有用。请参考WaveNet：AGenerativeModelforRawAudio，section2.1.。valid代表只进行有效的卷积，即对边界数据不处理。same代表保留边界处的卷积结果，通常会导致输出shape与输入shape相同。data_format：数据格式，取值为channels_last或者channels_first。这个选项决定了数据维度次序，其中channels_last对应的数据维度次序是（批量数，高，宽，频道数），而channels_first对应的数据维度次序为（批量数，频道数，高，宽）。activation：激活函数，为预定义或者自定义的激活函数名，请参考前面的“网络层对象”部分的介绍。如果不指定该选项，将不会使用任何激活函数（即使用线性激活函数：a（x）=x）。dilation_rate：该选项指定扩张卷积（DilatedConvolution）中的扩张比例。要求为整数或由单个整数构成的列表/元组，如果dilation_rate不为1，则步长一项必须设为1。use_bias：指定是否使用偏置项，取值为True或者False。kernel_initializer：权重初始化方法，为预定义初始化方法名的字符串，或用于初始化权重的函数。请参考前面的“网络层对象”部分的介绍。bias_initializer：偏置初始化方法，为预定义初始化方法名的字符串，或用于初始化偏置的函数。请参考前面的“网络层对象”部分的介绍。kernel_regularizer：施加在权重上的正则项，请参考前面的关于网络层对象中正则项的介绍。bias_regularizer：施加在偏置项上的正则项，请参考前面的关于网络层对象中正则项的介绍。activity_regularizer：施加在输出上的正则项，请参考前面的关于网络层对象中正则项的介绍。kernel_constraints：施加在权重上的约束项，请参考前面的关于网络层对象中约束项的介绍。bias_constraints：施加在偏置项上的约束项，请参考前面的关于网络层对象中约束项的介绍。</p>
</blockquote>
<blockquote>
<p>除上面介绍的卷积层以外，还有一些特殊的卷积层，比如SeparableConv2D、Conv2DTranspose、UpSampling1D、UpSampling2D、UpSampling3D、ZeroPadding1D、ZeroPadding2D、ZeroPadding3D等，</p>
</blockquote>
<blockquote>
<p>池化（Pooling）是在卷积神经网络中对图像特征的一种处理，通常在卷积操作之后进行。池化的目的是为了计算特征在局部的充分统计量，从而降低总体的特征数量，防止过度拟合和减少计算量。</p>
</blockquote>
<blockquote>
<p>Keras的池化层按照计算的统计量分为最大统计量池化和平均统计量池化；按照维度分为一维、二维和三维池化层；按照统计量计算区域分为局部池化和全局池化。</p>
</blockquote>
<blockquote>
<p>（1）最大统计量池化方法：</p>
</blockquote>
<blockquote>
<p>（2）平均统计量池化方法：这个方法的选项和数据格式要求跟最大化统计量池化方法一样，只是池化方法使用局部平均值而不是局部最大值作为充分统计量，</p>
</blockquote>
<blockquote>
<p>（3）全局池化方法：该方法应用全部特征维度的统计量来代表特征，因此会压缩数据维度。</p>
</blockquote>
<blockquote>
<p>在局部池化方法中，输出维度和输入维度是一样的，只是特征的维度尺寸因为池化变小；但是在全局池化方法中，输出维度小于输入维度，如在二维全局池化方法中输入维度为（样本数，频道数，行，列），全局池化以后行和列的维度都被压缩到全局统计量中，因此输出维度只有（样本数，频道数）二维。</p>
</blockquote>
<blockquote>
<p>循环层（RecurrentLayer）用来构造跟序列有关的神经网络。但是其本身是一个抽象类，无法实例化对象，在使用时应该使用LSTM，GRU和SimpleRNN三个子类来构造网络层。</p>
</blockquote>
<blockquote>
<p>简单循环层。SimpleRNN是循环层的一个子类，用来构造全连接的循环层，是循环网络最直接的应用，使用recurrent.SimipleRNN来调用。长短记忆层。LSTM是循环层的另一个子类，和简单循环层相比，其隐藏状态的权重网络稀疏。带记忆门的循环层（GRU）。</p>
</blockquote>
<blockquote>
<p>嵌入层（EmbeddingLayer）是使用在模型第一层的一个网络层，其目的是将所有索引标号映射到致密的低维向量中，</p>
</blockquote>
<blockquote>
<p>合并层是指将多个网络产生的张量通过一定方法合并在一起，</p>
</blockquote>
<blockquote>
<p>合并层支持不同的合并方法，包括：元素相加（merge.Add）、元素相乘（merge.Multiply）、元素取平均（merge.Average）、元素取最大（merge.Maximum）、叠加（merge.Concatenate）、矩阵相乘（merge.Dot）。</p>
</blockquote>
<blockquote>
<p>奇异值矩阵分解是一种基本的数学工具，被应用于大量的数据挖掘算法中，比较有名的有协同过滤（CollaborativeFiltering），PCA回归</p>
</blockquote>
<blockquote>
<p>矩阵分解的目的是解析矩阵的结构，提取重要信息，去除噪声，实现数据压缩等。比如在奇异值矩阵分解中，信息都集中在头几个特征向量中，使用这几个向量有可能较好地（即均方差尽可能小地）复原原来的矩阵，同时只需要保留较少的数据。</p>
</blockquote>
<blockquote>
<p>SVD基于以下线性代数定理：任何m×n的实数矩阵X可以表示为如下三个矩阵的乘积：m×r的酉矩阵U，被称为左特征向量矩阵；r×r的对角阵S，被称为特征值矩阵；r×n的酉矩阵VT，被称为右特征向量矩阵，其中r≤n。</p>
</blockquote>
<h2 id="5推荐系统"><a class="markdownIt-Anchor" href="#5推荐系统"></a> 5推荐系统</h2>
<blockquote>
<p>矩阵分解可以认为是一种信息压缩。这里有两种理解。第一种理解，用户和内容不是孤立的，用户喜好有相似性，内容也有相似性。压缩是把用户和内容数量化，压缩成k维的向量。</p>
</blockquote>
<blockquote>
<p>第二种理解，从深度学习的角度，用户表示输入层（UserRepresentation）通常用OneHot编码，这没问题，但是通过第一层全连接神经网络就可以到达隐藏层，就是所谓的嵌入层（EmbeddingLayer），也就是我们之前提到的向量压缩过程。</p>
</blockquote>
<blockquote>
<p>从机器学习的角度来说，模型是为了抓住数据的主要特征，去掉噪声。越复杂、越灵活的模型带来的噪声越多，降低维度则可以有效地避免过度拟合现象的出现。</p>
</blockquote>
<blockquote>
<p>一般批量大小为几百，迭代次数可以达到上百到几百范围。损失一般一开始会下降得比较快，随后慢慢下降。通常做法是等损失稳定下来后再结束训练会比较好。</p>
</blockquote>
<blockquote>
<p>训练数据拟合得好，只能说明算法本身是在做正确的优化事情，并不能说明模型在未知的数据集上是否是好的，也不能说明模型抓住了本质，排除了噪声。</p>
</blockquote>
<blockquote>
<p>交替最小二乘法的想法很简单，我们要解决的是分解矩阵M近似等于两个新矩阵A和B的乘积，限制条件是A、B的值不能太大，并且部分M的数据已知。类似于坐标下降法（CoordinateDescent）的想法，我们可以先固定A，这样求B就是一个最小二乘法的问题。类似的，得到了B以后固定B，再求A，循环迭代。如果最后A、B都收敛，即它们在两次迭代间的变换小于一个阈值时，就可以认为找到了问题的解。</p>
</blockquote>
<blockquote>
<p>宽深模型适用的场合是有多个特征，有些特征需要用交叉项特征合成（宽度模型），而有些特征需要进行高维抽象（深度模型）。宽深模型很好地结合了宽度模型和深度模型，同时具有记忆性和普适性，从而提高准确率。</p>
</blockquote>
<blockquote>
<p>协同过滤的含义是，利用众人的数据协助推断。一个经典的例子是，很多人买了牛奶的同时都买了面包，已知你买了牛奶，那么给你推荐面包就是很自然的事情。在实际数据上，这种方法效果一般，原因是类似于亚马逊等网站的商品太多了，用户之间很少能找到有很多重复的商品项，所以相似用户的构造会不准确。因而类似的规则便有很多噪声。</p>
</blockquote>
<blockquote>
<p>因子分解机是谷歌研究科学家S.Rendle教授提出的。它是矩阵分解的推广，可以使用多维特征变量。</p>
</blockquote>
<blockquote>
<p>玻尔兹曼向量机是谷歌副总裁、深度学习的开山鼻祖GeoffreyHinton提出的。该模型建立了电影及其表征之间的概率联系。从用户的行为可以推断出用户对于电影表征的偏好的概率表示；反过来，这些电影表征的偏好又可以用来给用户推荐电影。这种概率联系是通过RBM模型学出来的。</p>
</blockquote>
<blockquote>
<p>评判模型一般有两种指标：线上和线下。</p>
</blockquote>
<blockquote>
<p>线上需要设计实验，基于一定的随机规则对用户、设备或者浏览器Cookie进行分组，然后设定一些指标，观察这些指标在实验期运用新模型是否比旧模型好。</p>
</blockquote>
<blockquote>
<p>线上指标的优点是快速和因果关系明确；缺点是无法测试对长期目标的影响，并且容易不太稳定，受比如新奇效果（NoveltyEffect）或者实验渗透率的影响。</p>
</blockquote>
<blockquote>
<p>通常的做法是，在线下建模型的时候，用线下指标给出一个最好的模型。然后，把这个新模型和现有的在线模型拿到线上去，进行数据收集和统计分析，利用短期指标给出是否要推广新模型的结论。</p>
</blockquote>
<blockquote>
<p>在推荐系统中，评分类的数据一般用均方差（MeanSquaredError）作为评判标准；而对于隐含回馈数据，一般用基于信息检索的概念中的精确率（推荐10部电影，用户看了几部）和召回率（用户感兴趣的5部电影，是否都在推荐列表里）作为最常用的指标。</p>
</blockquote>
<h2 id="6图像识别"><a class="markdownIt-Anchor" href="#6图像识别"></a> 6图像识别</h2>
<blockquote>
<p>卷积神经网络（见图6.3）是一种自动化特征提取的机器学习模型。</p>
</blockquote>
<blockquote>
<p>神经网络就是建立了这样一个映射关系，或者称为函数。它通过建立网状结构，辅以矩阵的加、乘等运算，最后输出每个图像属于每个类别的概率，并且取概率最高的作为我们的决策依据。</p>
</blockquote>
<blockquote>
<p>用深度学习解决图像识别的问题，从直观上讲，是一个从细节到抽象的过程。</p>
</blockquote>
<blockquote>
<p>抽象就是把图像中的各种零散的特征通过某种方式汇总起来，形成新的特征，而利用这些新的特征更容易区分图像的类别。</p>
</blockquote>
<blockquote>
<p>深度神经网络最上层的特征是最抽象的。</p>
</blockquote>
<blockquote>
<p>后向传播算法的本质是高等代数里的链式法则。其原理就是机器不断通过现有参数在批量数据上所得到的标注和这些批量数据的真实标注的差距，给网络指示怎么调整网络模型和过滤器，即各种参数，从而在下一次批量数据上表现更好一些。下一次批量数据经过调整后的模型可能仍有很大的误差，网络会提示怎么进一步调整模型的权重和过滤器。这样不断反复，最终等过滤器和网络权重稳定下来，网络的训练就完成了。</p>
</blockquote>
<blockquote>
<p>卷积神经网络是深度学习的一种模型。它和一般的深度学习模型的主要区别是对模型有两个强假设。一般的深度学习模型只是假设模型有几层，每层有几个节点，然后把上下层之间的节点全部连接起来，这种模型的优点是灵活，缺点是灵活带来的副作用，即过度拟合。</p>
</blockquote>
<blockquote>
<p>过滤器一般需要的参数比较少，比如5×5×3的过滤器需要75个参数就可以了。这和多层神经网络相比，相当于我们只是把隐含层和局部输入联系在一起，而这两层之间的权重只需要75个参数。其他超过这个局部范围的区域的网络权重都是0。</p>
</blockquote>
<blockquote>
<p>第二个是局部像素的相关性，即局部区域的像素值一般差的不太多。基于此衍生了一种处理技术——MaxPooling，即在局部，比如在224×224的格子里，取局部区域像素值的最大值。</p>
</blockquote>
<blockquote>
<p>从另一个角度看，任何一个卷积神经网络其实都是通过对整个神经网络权重附加参数共享这一限制而实现的。所以卷积神经网络和全连接神经网络是可以相互转换的。</p>
</blockquote>
<blockquote>
<p>一般一个卷积层包括3个部分：卷积步骤、非线性变化（一般是relu、tanh、sigmoid等）和MaxPooling。有的网络还包括了Dropout这一步。总结来说，一些流行的卷积神经网络，比如LeNet、VGG16等，都是通过构造多层的卷积层，使得原来“矮胖”型的图像输入层（224×224×3）立体，变成比如1×1×4096之类的“瘦长”型立体，最后做一个单层的网络，把“瘦长”型立体和输出层（类别）联系在一起。</p>
</blockquote>
<blockquote>
<p>在局部扫描的过程中，有一个参数叫步长，就是指过滤器以多大的跨度上下或左右平移地扫描。</p>
</blockquote>
<blockquote>
<p>对于经由过滤器局部扫描后的卷积层图像，由于处理边界不同，一般有两种处理方式。一种是在局部扫描过程中对图像边界以外的一层或多层填上0，平移的时候可以将其移出边界到达0的区域。这样的好处是在以1为步长的局部扫描完以后，所得的新图像和原图像长宽一致，被称作zeropadding（samepadding）。另一种是不对边界外做任何0的假定，所有平移都在边界内，被称作validpadding，使用这种方式通常扫描完的图像尺寸会比原来的小。</p>
</blockquote>
<h2 id="7自然语言情感分析"><a class="markdownIt-Anchor" href="#7自然语言情感分析"></a> 7自然语言情感分析</h2>
<blockquote>
<p>进行情感分析有如下难点：第一，文字非结构化，有长有短，很难适合经典的机器学习分类模型。第二，特征不容易提取。文字可能是谈论这个主题的，也可能是谈论人物、商品或事件的。人工提取特征耗费的精力太大，效果也不好。第三，词与词之间有联系，把这部分信息纳入模型中也不容易。</p>
</blockquote>
<blockquote>
<p>深度学习适合做文字处理和语义理解，是因为深度学习结构灵活，其底层利用词嵌入技术可以避免文字长短不均带来的处理困难。使用深度学习抽象特征，可以避免大量人工提取特征的工作。深度学习可以模拟词与词之间的联系，有局部特征抽象化和记忆功能。</p>
</blockquote>
<blockquote>
<p>第一，文字分词。英语分词可以按照空格分词，中文分词可以参考jieba。第二，建立字典，给每个词标号。第三，把段落按字典翻译成数字，变成一个array。</p>
</blockquote>
<blockquote>
<p>为了克服文字长短不均和将词与词之间的联系纳入模型中的困难，人们使用了一种技术——词嵌入。简单说来，就是给每个词赋一个向量，向量代表空间里的点，含义接近的词，其向量也接近，这样对于词的操作就可以转化为对于向量的操作了，在深度学习中，这被叫作张量（tensor）。</p>
</blockquote>
<blockquote>
<p>从优化的角度讲，深度学习网络还有其他一些梯度下降优化方法，比如Adagrad等。它们的本质都是解决在调整神经网络模型过程中如何控制学习速度的问题。</p>
</blockquote>
<h2 id="8文字生成"><a class="markdownIt-Anchor" href="#8文字生成"></a> 8文字生成</h2>
<blockquote>
<p>基于深度学习的检索式对话系统在后两点上有较大的改进。通过机器学习，可以实现软匹配，不需要询问语句模式一定要在库里出现，如果通过对词汇和其组织顺序的建模发现有较高概率匹配的数据点，就能实现比较好的回应。其次，深度学习方法提供了更高的灵活性，能够实现记忆和识别等功能。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>CCNet：Criss-Cross Attention for Semantic Segmentation</title>
    <url>/2020/05/26/CCNet%EF%BC%9ACriss-Cross%20Attention%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>对于每个位置的空间注意力，Non-local 建立的是所有点与其的注意力，而 CCNet 仅建立与其十字架内点的注意力，可以大幅点降低构建注意力的成本，并通过堆叠 2 个交叉注意力模块，实现双向空间注意力</p>
<a id="more"></a>
<h1 id="什么是-ccnet"><a class="markdownIt-Anchor" href="#什么是-ccnet"></a> 什么是 CCNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CCNet-20230408142244.png" alt="CCNet-20230408142244" /></li>
<li>CCNet 设计<strong>criss-cross attention</strong>(CCA)模块获取交叉路径上其周围像素的上下文信息。通过采取进一步的循环操作，每个像素最终可以捕获所有像素的远程依赖关系</li>
<li>与non-local相比，recurrent CCA模块所需的GPU内存使用量减少且计算效率提高</li>
</ul>
<h1 id="ccnet-的网络结构"><a class="markdownIt-Anchor" href="#ccnet-的网络结构"></a> CCNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CCNet-20230408142244.png" alt="CCNet-20230408142244" /></li>
<li><strong>BackBone</strong>：输入图像经过深度卷积神经网络（DCNN），该深度卷积神经网络是全卷积网络，然后生成特征图 X</li>
<li><strong>CCA 注意力模块</strong>：将降维后的特征图 H 送入 CCA 模块，生成的新特征图 H’，仅在水平和垂直方向上聚合上下文信息。为了获取更丰富和更密集的上下文信息，将特征图 H’再次输入到 CCA 模块中，这样得到的特征图 H’'中的每个位置就收集了所有像素的信息</li>
<li><strong>分割</strong>：将密集的上下文特征 H’'和局部表示特征 X 连接起来，将融合的特征图送入分割网络层</li>
</ul>
<h1 id="ccnet-的交叉注意力模块"><a class="markdownIt-Anchor" href="#ccnet-的交叉注意力模块"></a> CCNet 的交叉注意力模块?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142304.png" alt="BiSeNetv3-20230408142304" /></li>
<li><strong>产生关联矩阵 A</strong>：输入 H 为 CxWxH，通过 1 x 1 卷积得到 C’xWxH (C’设置为 C 的 1/8)  Q 和 K，用 Q 和 K 生成 (H+W-1) xWxH 的 A 。具体地，提取 Q 的某一像素位置1 xC’的值，然后提取 K 上十字位置的特征向量，则其大小为 (H+W-1) xC’，进行 affinity 操作得到 (H+W-1) xWxH，再对 (H+W-1) 维度进行 softmax 操作，得到 A (H+W-1) xWxH</li>
<li><strong>聚合特征 aggregation</strong>：将 CxWxH 大小的 V 取<strong>十字特征向量与 A 特征图进行对应元素按位相乘</strong>，得到 H’ (CxWxH)，这里是利用前一步学习到的十字权重，对十字权重位置的值进行加权处理</li>
<li><strong>为什么需要重复执行两次 CCA？</strong> Loop 1是十字计算权重，所以深绿和深蓝位置并没有关联；但是经过 loop 2，浅绿位置已经有了深绿和深蓝位置的上下文信息，就可以将深蓝和深绿位置关联起来，两次 CCA 任意一个位置都可以感知矩阵所有位置的信息<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142305.png" alt="BiSeNetv3-20230408142305" /></li>
</ul>
<h1 id="ccnet-的注意力模块和-non-local-注意力模块差异"><a class="markdownIt-Anchor" href="#ccnet-的注意力模块和-non-local-注意力模块差异"></a> CCNet 的注意力模块和 Non-local 注意力模块差异？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNetv3-20230408142305-1.png" alt="BiSeNetv3-20230408142305-1" /></li>
<li><strong>Non-local 模块</strong>：每个位置都会生成密集的注意力图，该图的权重为 H×W（绿色）</li>
<li><strong>criss-cross 模块</strong>：每个位置会生成一个稀疏的注意图，该图仅具有 H+W-1个权重。循环操作后，最终输出特征图中的每个位置（例如红色）都可以捕获所有像素的远程依赖关系</li>
<li>与non-local相比，recurrent CCA模块所需的GPU内存使用量减少且计算效率提高</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>注意力</tag>
      </tags>
  </entry>
  <entry>
    <title>FPN：Feature Pyramid Networks for Object Detection</title>
    <url>/2020/05/24/FPN%EF%BC%9AFeature%20Pyramid%20Networks%20for%20Object%20Detection/</url>
    <content><![CDATA[<p>一种特征融合网络，能有效融合底层的特征和高层的语义信息，常用于目标检测。解决目标检测小尺寸物体检测问题</p>
<a id="more"></a>
<h1 id="什么是特征金字塔网络feature-pyramid-networkfpn"><a class="markdownIt-Anchor" href="#什么是特征金字塔网络feature-pyramid-networkfpn"></a> 什么是特征金字塔网络(Feature Pyramid Network,FPN)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FPN-20230408141534.png" alt="FPN-20230408141534" /></li>
<li>一种<strong>特征融合网络</strong>，能有效融合底层的特征和高层的语义信息，常用于目标检测。解决目标检测<strong>小尺寸物体检测问题</strong></li>
<li>（a）<strong>多尺度训练多尺度预测</strong>：先把图片弄成不同尺寸的，然后再对每种尺寸的图片提取不同尺度的特征，再对每个尺度的特征都进行单独的预测，优点是不同尺度的特征都可以包含很丰富的语义信息，但是缺点就是时间成本太高</li>
<li>（b）<strong>最后一层预测</strong>：SPPnet，Fast R-CNN，Faster R-CNN 中使用的，就是在网络的最后一层的特征图上进行预测。优点是计算速度会比较快，但是缺点就是最后一层的特征图分辨率低，不能准确的包含物体的位置信息</li>
<li>（c）<strong>多尺度预测</strong>：在不同尺寸的特征图上都进行预测，如 SSD高层语义信息接触不了底层位置信息，特征融合不够彻底</li>
<li>（d）<strong>多尺度融合最高层预测</strong>：FPN 的做法，引入了高层特征向低层融合的路径，并在多个尺度进行预测</li>
</ul>
<h1 id="特征金字塔网络-fpn-的组成"><a class="markdownIt-Anchor" href="#特征金字塔网络-fpn-的组成"></a> 特征金字塔网络 FPN 的组成？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FPN-20230408141534-1.png" alt="FPN-20230408141534-1" /></li>
<li><strong>Bottom-up</strong>：将图片输入到 backbone ConvNet 中提取特征的过程中。Backbone 输出的 feature map 的尺寸有的是不变的，有的是成 2 倍的减小的。以 ResNet 为例，将卷积块 conv2， conv3， conv4， conv5 的输出定义为{C2 , C3, C4, C5} ，这些都是每个 stage 中最后一个残差块的输出，这些输出分别是原图的{ 1/4, 1/8, 1/16, 1/32 }倍</li>
<li><strong>Top-Down</strong>：将高层得到的feature map进行上采样然后往下传递，这样做是因为高层的特征包含丰富的语义信息，经过top-down的传播就能使得这些语义信息传播到低层特征上，使得低层特征也包含丰富的语义信息。本文采样方法是最近邻上采样</li>
<li><strong>Lateral connection</strong>：Bottom-up 的某个 stage 使用 1x1 卷积降低通道数，然后和 Top-Down 的某个 stage 的 2xup 特征融合，融合的目的为了消除<strong>上采样</strong>产生的混叠效应，混叠效应应该就是指上边提到的‘插值生成的图像灰度不连续，在灰度变化的地方可能出现明显的锯齿状</li>
</ul>
<h1 id="特征金字塔网络-fpn-应用于-rpn"><a class="markdownIt-Anchor" href="#特征金字塔网络-fpn-应用于-rpn"></a> 特征金字塔网络 FPN 应用于 RPN？</h1>
<ul>
<li>将 FPN 和 RPN 结合起来，那 RPN 的输入就会变成多尺度的 feature map，那我们就需要在金字塔的每一层后边都接一个 RPN head (一个 3x3 卷积，两个 1x1 卷积) <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FPN-20230408141536.png" alt="FPN-20230408141536" /></li>
<li>在生成anchor的时候，因为输入是多尺度特征，就不需要再对每层都使用3种不同尺度的anchor了，所以只为每层设定一种尺寸的anchor，图中绿色的数字就代表每层anchor的size，但是每种尺寸还是会对应3种宽高比。所以总共会有15种anchors。此外，anchor的ground truth label和Faster R-CNN中的定义相同，即如果某个anchor和ground-truth box有最大的IoU，或者IoU大于0.7，那这个anchor就是正样本，如果IoU小于0.3，那就是负样本</li>
</ul>
<h1 id="特征金字塔网络-fpn-应用于-fast-rcnn"><a class="markdownIt-Anchor" href="#特征金字塔网络-fpn-应用于-fast-rcnn"></a> 特征金字塔网络 FPN 应用于 Fast RCNN？</h1>
<ul>
<li>在Fast R-CNN 中有一个ROI Pooling层，它是使用region proposal的结果和特征图作为输入，得到的每个proposal对应的特征然后pooling，之后再分别用于分类结果和边框回归。之前Fast R-CNN使用的是单尺度的特征图，但是现在使用不同尺度的特征图，那么RoI需要在哪一个尺度的特征图上提取对应的特征呢？</li>
<li>假设 FPN 产生了特征金字[P2, P3, P4, P5, P6]，通过下列公式决定宽 w 和高 h 的 ROI 到底要从哪个 Pk 来切<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">⌊</mo><msub><mi>k</mi><mn>0</mn></msub><mo>+</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy="false">(</mo><msqrt><mrow><mi>w</mi><mi>h</mi></mrow></msqrt><mi mathvariant="normal">/</mi><mn>224</mn><mo stretchy="false">)</mo><mo fence="true">⌋</mo></mrow></mrow><annotation encoding="application/x-tex">k=\left\lfloor k_{0}+\log _{2}(\sqrt{w h} / 224)\right\rfloor
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">h</span></span></span><span style="top:-2.941095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.058904999999999985em;"><span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span></span></span></span></span></p>
<ul>
<li>其中 224 表示预训练 ImageNet 图片大小，k0 表示面积为 wxh=224x224 的 ROI 所在层级，论文将 k0 设置为 p4，如果 ROI 小于 224，比如说 122x122，则使用 k0-1=4-1=3 层特征池化</li>
<li>这种做法很合理，大尺度的ROI要从低分辨率的feature map上切，有利于检测大目标，小尺度的ROI要从高分辨率的feature map上切，有利于检测小目标</li>
</ul>
</li>
</ul>
<h1 id="特征金字塔网络-fpn-应用于-faster-rcnn"><a class="markdownIt-Anchor" href="#特征金字塔网络-fpn-应用于-faster-rcnn"></a> 特征金字塔网络 FPN 应用于 Faster RCNN？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FPN-20230408141537.png" alt="FPN-20230408141537" /></li>
<li>和普通的 Faster R-CNN 相同，为每个 RoI 提取特征之后，需要经过 RoI pooling 层将 RoI 的特征 resize 成相同大小的，这里是 resize 成 7x7 的，之后再连接两个 1024-d 的 FC layer，然后再并行的输入到两个 FC layer 中分别进行分类和回归，便得到最终的结果</li>
</ul>
<h1 id="fpn系列的演进方向"><a class="markdownIt-Anchor" href="#fpn系列的演进方向"></a> FPN系列的演进方向？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FPN-20230408141538.png" alt="" /></li>
<li><strong>1）无融合：</strong> 直接利用不同stage的特征图分别负责不同scale大小物体的检测SSD使用该思想</li>
<li><strong>2）自上而下：</strong> 自上而下单向融合特征金字塔(Feature Pyramid Network,FPN)，事实上仍然是当前物体检测模型的主流融合模式。如我们常见Faster RCNNMask RCNNYOLOv3、RetinaNet、Cascade RCNN等</li>
<li><strong>3）简单双向：</strong> PAN是第一个提出从下向上二次融合的模型</li>
<li><strong>4）复杂双向：</strong> EfficientDet是google出品，在FPN中寻找一个有效的block，然后重复叠加，这样就可以弹性的控制FPN的大小</li>
</ul>
<h1 id="faster-rcnn-mask-rcnn-yolov3-retinanet-cascade-rcnn使用fpn的区别"><a class="markdownIt-Anchor" href="#faster-rcnn-mask-rcnn-yolov3-retinanet-cascade-rcnn使用fpn的区别"></a> Faster RCNN、Mask RCNN、YOLOv3、RetinaNet、Cascade RCNN使用FPN的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FPN-20230408141538-1.png" alt="" /></li>
<li><strong>1)Faster/Mask/CascadeRCNN：</strong> 利用了C2-C6五个stage的特征，其中C6是从C5直接施加1x1/2的MaxPooling操作得到。FPN融合后得到P2-P6，其中P6直接等于C6，P5是先经过1x1Conv，再经过3x3Conv得到，P2-P4均是先经过1x1Conv，再融合上一层2xUpsample的特征，再经过3x3Conv得到-</li>
<li><strong>2)RetinaNet：</strong> 基本与Faster/Master/CascadeRCNN中的FPN一脉相承。只是利用的stage的特征略有差别，Faster/Master/CascadeRCNN利用了高分辨率低语义的C2，RetinaNet利用了更低分辨率更高语义的C7。其他都是细微的差别</li>
<li><strong>3)YOLOv3：</strong> FPN与上述两个有比较大的区别。首先，YOLOv3中的FPN只利用到了C3-C5三个stage的特征；其次，从C5征到P5特征，会先经过5层Conv，然后再经过一层3x3Conv；最后，C3-C4到P3-P4特征，上一层特征会先经过1x1Conv+2xUpsample，然后先与本层特征concatenate，再经过5层Conv，之后经过一层3x3Conv</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>FasterRCNN：Towards Real-Time Object Detection with Region Proposal Networks</title>
    <url>/2020/05/20/FasterRCNN%EF%BC%9ATowards%20Real-Time%20Object%20Detection%20with%20Region%20Proposal%20Networks/</url>
    <content><![CDATA[<p>一种two-stage的目标检测算法，基Fast RCNN，主要改进是：使Region Proposal Networks(RPN) 替选择性搜索(Selective Search,SS) 生成获选框，实现了端到端训练</p>
<a id="more"></a>
<h1 id="什么是-faster-rcnn"><a class="markdownIt-Anchor" href="#什么是-faster-rcnn"></a> 什么是 Faster RCNN?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141448.png" alt="" /></li>
<li>一种two-stage的目标检测算法，基Fast RCNN，主要改进是：使Region Proposal Networks(RPN) 替选择性搜索(Selective Search,SS) 生成获选框，实现了端到端训练</li>
<li>Fast RCNN的目标检测思想RCNN SPPNet Fast RCNN等网络一样，先通过CNN提取获选框的固定长度的特征，然后通过一维特征进行获选框的分类及回归</li>
</ul>
<h1 id="faster-rcnn的网络结构"><a class="markdownIt-Anchor" href="#faster-rcnn的网络结构"></a> Faster RCNN的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141449.png" alt="" /></li>
<li><strong>Conv layers：</strong> 首先使用一组基础的conv+relu+pooling层提取image的feature maps，该feature maps被共享用于后续RPN层和全连接层，输出为：<strong>(M/16)x(N/16)</strong></li>
<li><strong>Region Proposal Networks：</strong> RPN网络用于生成region proposals。该层通过softmax判断anchors属于positive或者negative，再利用bounding box regression修正anchors获得精确的proposals</li>
<li><strong>Roi Pooling：</strong> 该层收集输入的feature maps和proposals，综合这些信息后提取proposal feature maps，送入后续全连接层判定目标类别</li>
<li><strong>Classification：</strong> 利用proposal feature maps计算proposal的类别，同时再次bounding box regression获得检测框最终的精确位置</li>
</ul>
<h1 id="faster-rcnn目标检测任务步骤"><a class="markdownIt-Anchor" href="#faster-rcnn目标检测任务步骤"></a> Faster RCNN目标检测任务步骤？</h1>
<ul>
<li>1）<strong>预训练网络</strong>：将整张图片输入 CNN，预训练网络</li>
<li>2）<strong>生成建议框</strong>：RPN 在 Anchor box 的基础上生成一批建议窗口</li>
<li>3）<strong>映射建议框</strong>：把建议窗口映射到 CNN 的最后一层卷积 feature map 上</li>
<li>4）<strong>提取建议框固定长度特征</strong>：通过 RoI pooling 层使每个 RoI 生成固定尺寸的 feature map</li>
<li>5）<strong>建议框分类与回归</strong>：利用 Softmax Loss (探测分类概率) 和 Smooth L1 Loss (探测边框回归) 对分类概率和边框回归 (Bounding box regression) 联合训练</li>
</ul>
<h1 id="faster-rcnn训练head时的正负样本划分"><a class="markdownIt-Anchor" href="#faster-rcnn训练head时的正负样本划分"></a> Faster RCNN训练Head时的正负样本划分?</h1>
<ul>
<li>训练Head时，是冻结RPN的，此时划分正负样本是为了在Head后面计算损失</li>
<li><strong>正样本：</strong> 与gt box的IoU大于0.5的proposal box作为正样本，注意，是将 proposal box与gt box计算IoU</li>
<li><strong>负样本：</strong> 其余IoU0.1,0.5}之间的作为负样本，低于 0.1的作为难例挖掘时的启发式样本</li>
</ul>
<h1 id="faster-rcnn的损失有哪些"><a class="markdownIt-Anchor" href="#faster-rcnn的损失有哪些"></a> Faster RCNN的损失有哪些？</h1>
<ul>
<li>RPN 分类（区分物体前景/背景）</li>
<li>RPN 回归（Anchor⇒ROI）</li>
<li>Fast RCNN 分类（区分对象类）</li>
<li>Fast RCNN 回归（ROI⇒边界框）</li>
</ul>
<h1 id="什么是region-proposal-networksrpn"><a class="markdownIt-Anchor" href="#什么是region-proposal-networksrpn"></a> 什么是Region Proposal Networks(RPN)？</h1>
<ul>
<li>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141450.png" alt="" /></p>
</li>
<li>
<p>主要作用是生成建议框，主要步骤包括：anchors分类、<strong>bbox reg</strong>回归及Proposal</p>
</li>
<li>
<p>参Faster RCNN的锚框(Anchor)，RPN每个位置生成9个锚框。MxN大小图像输入后，到RPN网络前变为(M/16)x(N/16)</p>
</li>
<li>
<p><strong>anchors分类</strong>：通过softmax分类anchors获得positive和negative分类</p>
<ul>
<li>1）使用1x1的卷积，将输入调整为WxHx18，表示每个位置9个锚框的2分类结果</li>
<li>2）第一个Reshape是将数据由(N,18,W,H)调整为(N,2,9xW,H)，适配进行softmax进行二分类</li>
<li>3）第二个Reshape将数据由(N,2,9xW,H)还原为(N,18,W,H)</li>
</ul>
</li>
<li>
<p><strong>bbox reg</strong>回归：计算对于anchors的bounding box regression偏移量，以获得精确的proposal。使用1x1的卷积，将输入调整为36，表示每个位置9个锚框的x,y,w,h</p>
</li>
<li>
<p><strong>Proposal层：</strong> 综合positive anchors和对应bounding box regression偏移量获取proposals，同时剔除太小和超出边界的proposals</p>
</li>
</ul>
<h1 id="faster-rcnn的rpn中的proposal层的步骤"><a class="markdownIt-Anchor" href="#faster-rcnn的rpn中的proposal层的步骤"></a> Faster RCNN的RPN中的Proposal层的步骤？</h1>
<ul>
<li>1）生成anchors，利用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><msub><mi>d</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>h</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[d_{x}(A), d_{y}(A), d_{w}(A), d_{h}(A)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>对所有的anchors做bbox regression回归（这里的anchors生成和训练时完全一致）</li>
<li>2）按照输入的positive softmax scores由大到小排序anchors，提取前pre_nms_topN(e.g. 6000)个anchors，即提取修正位置后的positive anchors</li>
<li>3）限定超出图像边界的positive anchors为图像边界，防止后续roi pooling时proposal超出图像边界</li>
<li>4）剔除尺寸非常小的positive anchors</li>
<li>5）对剩余的positive anchors进非极大值抑制（NMS）</li>
<li>6）Proposal 输出 positive anchorsx1, y1, x2, y2]，该位置对应的是 MxN 尺度的</li>
</ul>
<h1 id="faster-rcnn-训练-rpn-时的正负样本划分"><a class="markdownIt-Anchor" href="#faster-rcnn-训练-rpn-时的正负样本划分"></a> Faster RCNN 训练 RPN 时的正负样本划分？</h1>
<ul>
<li>在所有预测的box中确定正负样本，因为一个anchor对应一个预测的box和类别，那么确定预测的box是正例还是负例等价于确定 anchor box的是正例还是反例</li>
<li><strong>正样本：</strong> 与 gt box的IoU为 最大或者大于 0.7的anchor box被设置为正样本，这会导致一个 gt box与多个预测 box计算损失， 即允许多个 box预测同一对象，</li>
<li><strong>负样本：</strong> 与 gt box 的 IoU 小于 0.3 的 anchor box 被设置为负样本，其余的忽略掉，即不参与 loss 计算</li>
</ul>
<h1 id="region-proposal-networks-rpn-扫描-anchor-有多快-47lhf0"><a class="markdownIt-Anchor" href="#region-proposal-networks-rpn-扫描-anchor-有多快-47lhf0"></a> Region Proposal Networks (RPN) 扫描 Anchor 有多快？ ^47lhf0</h1>
<ul>
<li>一张图上存在非常锚框(Anchor)，但Region Proposal Networks(RPN) 扫描速度极快</li>
<li>首先，滑动窗口是由RPN的卷积过程实现的，可以使用GPU并行地扫描所有区域</li>
<li>其次，RPN 并不会直接扫描图像，而是扫描featrue map，这使得 RPN 可以有效地复用提取的特征，并避免重复计算</li>
<li>通过这些优化手段，RPN 可以在 10ms 内完成扫描</li>
</ul>
<h1 id="faster-rcnn-如何使用-roipooling"><a class="markdownIt-Anchor" href="#faster-rcnn-如何使用-roipooling"></a> Faster RCNN 如何使用 RoIPooling？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141450-1.png" alt="" /></li>
<li>感兴趣区域池化(RoIPooling) 是 Fast RCNN 提出的池化技术，用于将不同大小的特征池化到相同大小。在 Faster RCNN包括有 2 个输入：(1) 原始的 feature maps；(2) RPN 输出的 proposal boxes（大小各不相同）</li>
<li>由于proposal是对应MxN尺度的，所以首先使用spatial_scale参数将其映射回(M/16)x(N/16)大小的feature map尺度</li>
<li>再将每个 proposal 对应的 feature map 区域水平分为 pooled_w x pooled_h 网格，对网格的每一份都进行全局 max pooling 处理，论文是 7x7</li>
</ul>
<h1 id="faster-rcnn-如何进行框的分类与回归"><a class="markdownIt-Anchor" href="#faster-rcnn-如何进行框的分类与回归"></a> Faster RCNN 如何进行框的分类与回归？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141451.png" alt="" /></li>
<li>Classification部分利用已经获得的proposal feature maps，通过全连接层与softmax计算每个proposal具体属于那个类别（如人，车，电视等），输出cls_prob概率向量</li>
<li>利用bounding box regression获得每个proposal的位置偏移量bbox_pred，用于回归更加精确的目标检测框</li>
</ul>
<h1 id="faster-rcnn-的锚框-anchor-是什么"><a class="markdownIt-Anchor" href="#faster-rcnn-的锚框-anchor-是什么"></a> Faster RCNN 的锚框 (Anchor) 是什么？</h1>
<ul>
<li>锚框是图片上的矩形，实际上是由锚点+长宽+长宽比定义的，Faster RCNN为每个锚点定义3种尺度{ 32，64，128 }及3个长宽比{ 1：1，1:2，2：1}，每个锚点生成9个锚框 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141451-1.png" alt="" /></li>
<li>RPN的输入大小是50x38，一共生成17100个锚框 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141452.png" alt="" /></li>
<li>注意：全部anchors拿去训练太多了，训练程序会在合适的anchors中<strong>随机</strong>选取128个postive anchors+128个negative anchors进行训练</li>
</ul>
<h1 id="faster-rcnn-引入锚框的作用"><a class="markdownIt-Anchor" href="#faster-rcnn-引入锚框的作用"></a> Faster RCNN 引入锚框的作用？</h1>
<ul>
<li><strong>收敛速度</strong>：Faster RCNN 之前，目标候选框都是通过 选择性搜索实现的，搜索速度慢且质量不高，并且导致模型始终不是 end-to-end 的，引入锚框后，通过神经网络学习锚框信息，替代了选择性搜索的过程，其速度更快、质量更高</li>
<li><strong>固定输出</strong>：对一张图进行学习时，分类任务一定输出定长的向量，但是进行目标检测任务时，由于其目标数量不定，所以对神经网络的输出产生疑惑，总不能这张图神经网络输出 2 个目标，那张图输出 5 个目标。有了锚框后，所有图片的某一个位置只能输出固定数量的向量</li>
</ul>
<h1 id="什么是faster-r-cnn-fpn"><a class="markdownIt-Anchor" href="#什么是faster-r-cnn-fpn"></a> 什么是Faster R-CNN-FPN?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FasterRCNN-20230408141452-1.png" alt="" /></li>
<li>Faster R-CNN结合FPN的二阶段目标检测网络，对小目标的检测能力大大提升</li>
<li><strong>1）backbone</strong>： 原图短边被 resize到800像素，输出为4个不同尺寸的 feature map（C2、C3、C4、 C5 )</li>
<li><strong>2） FPN</strong>: 4个不同尺寸的 feature map（C2、C3、C4、C5）作为输入，输 出5个不同尺寸的 feature map（P2、P3、P4、P5、P6）</li>
<li><strong>3） RPN</strong>：输入为 FPN 产生的 feature map（P2、P3、P4、P5、P6）；由于 RPN 是在5个输入 feature map 上进行独立的预测，则每个 feature map 都会输出 proposal box，因此不可能将所有的 proposal box 都提供给 Fast R-CNN，这里的做法是对每个 feature map 上产生的 proposal box 按类别概率进行排序（每个 feature map 上的 proposal box 独立进行），然后选择前 k 个 proposal box， 5个 feature map 一共会产生5K 个 proposal box，训练时 k=2000 ，推理时 k=1000，最后将所有的5K 个 proposal box 合并后统一进行 NMS（IoU threshold=0.7）去掉冗余的 box，最后选择前 m 个输出给 Fast R-CNN，训练和测试时 m 都取1000</li>
<li><strong>4） Fast R-CNN</strong>：输入为FPN产生的前4个feature map和RPN输出的proposal box，4个feature map 为P2、P3、P4、P5、P6</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《统计学习方法》-李航</title>
    <url>/2020/05/15/%E4%B9%A6%E6%91%98_%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-%E6%9D%8E%E8%88%AA.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/10590856">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s9108113.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s9108113.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>统计学习方法</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>李航</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2012-3</span></div>
			<div class="douban-card-item"><span>评分: </span><span>8.9</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="第1章-统计学习方法概论"><a class="markdownIt-Anchor" href="#第1章-统计学习方法概论"></a> 第1章　统计学习方法概论</h2>
<blockquote>
<p>首先叙述统计学习的定义、研究对象与方法；然后叙述监督学习，这是本书的主要内容；接着提出统计学习方法的三要素：模型、策略和算法；介绍模型选择，包括正则化、交叉验证与学习的泛化能力；介绍生成模型与判别模型；最后介绍监督学习方法的应用：分类问题、标注问题与回归问题。</p>
</blockquote>
<h2 id="11-统计学习"><a class="markdownIt-Anchor" href="#11-统计学习"></a> 1.1　统计学习</h2>
<blockquote>
<p>统计学习（learning）是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测与分析的一门学科。统计学习也称为统计机器学习（machinelearning）。</p>
</blockquote>
<blockquote>
<p>统计学习的对象是数据（data）。它从数据出发，提取数据的特征，抽象出数据的模型，发现数据中的知识，又回到对数据的分析与预测中去。</p>
</blockquote>
<blockquote>
<p>统计学习关于数据的基本假设是同类数据具有一定的统计规律性，这是统计学习的前提。这里的同类数据是指具有某种共同性质的数据，例如英文文章、互联网网页、数据库中的数据等</p>
</blockquote>
<blockquote>
<p>统计学习用于对数据进行预测与分析，特别是对未知新数据进行预测与分析。</p>
</blockquote>
<blockquote>
<p>对数据的预测与分析是通过构建概率统计模型实现的。统计学习总的目标就是考虑学习什么样的模型和如何学习模型，以使模型能对数据进行准确的预测与分析，同时也要考虑尽可能地提高学习效率。</p>
</blockquote>
<blockquote>
<p>统计学习的方法是基于数据构建统计模型从而对数据进行预测与分析。统计学习由监督学习（learning）、非监督学习（learning）、半监督学习（learning）和强化学习（learning）等组成。</p>
</blockquote>
<blockquote>
<p>data）集合出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个函数的集合，称为假设空间（space）；应用某个评价准则（criterion），从假设空间中选取一个最优的模型，使它对已知训练数据及未知测试数据（data）在给定的评价准则下有最优的预测；最优模型的选取由算法实现。这样，统计学习方法包括模型的假设空间、模型选择的准则以及模型学习的算法，称其为统计学习方法的三要素，简称为模型（model）、策略（strategy）和算法（algorithm）。实现统计学习方法的步骤如下：（1）得到一个有限的训练数据集合；（2）确定包含所有可能的模型的假设空间，即学习模型的集合；（3）确定模型选择的准则，即学习的策略；（4）实现求解最优模型的算法，即学习的算法；（5）通过学习方法选择最优模型；（6）利用学习的最优模型对新数据进行预测或分析。</p>
</blockquote>
<blockquote>
<p>统计学习研究一般包括统计学习方法（learningmethod）、统计学习理论（learningtheory）及统计学习应用（ofstatisticallearning）三个方面。统计学习方法的研究旨在开发新的学习方法；统计学习理论的研究在于探求统计学习方法的有效性与效率，以及统计学习的基本理论问题；统计学习应用的研究主要考虑将统计学习方法应用到实际问题中去，解决实际问题。</p>
</blockquote>
<h2 id="121-基本概念"><a class="markdownIt-Anchor" href="#121-基本概念"></a> 1.2.1　基本概念</h2>
<blockquote>
<p>在监督学习中，将输入与输出所有可能取值的集合分别称为输入空间（space）与输出空间（space）。输入与输出空间可以是有限元素的集合，也可以是整个欧氏空间。输入空间与输出空间可以是同一个空间，也可以是不同的空间；但通常输出空间远远小于输入空间。每个具体的输入是一个实例（instance），通常由特征向量（vector）表示。这时，所有特征向量存在的空间称为特征空间（space）。</p>
</blockquote>
<blockquote>
<p>监督学习从训练数据（data）集合中学习模型，对测试数据（data）进行预测。训练数据由输入（或特征向量）与输出对组成</p>
</blockquote>
<blockquote>
<p>输入与输出对又称为样本（sample）或样本点。</p>
</blockquote>
<blockquote>
<p>根据输入、输出变量的不同类型，对预测任务给予不同的名称：输入变量与输出变量均为连续变量的预测问题称为回归问题；输出变量为有限个离散变量的预测问题称为分类问题；输入变量与输出变量均为变量序列的预测问题称为标注问题。</p>
</blockquote>
<blockquote>
<p>监督学习假设输入与输出的随机变量X和Y遵循联合概率分布P(X,Y)。P(X,Y)表示分布函数，或分布密度函数。注意，在学习过程中，假定这一联合概率分布存在，但对学习系统来说，联合概率分布的具体定义是未知的。训练数据与测试数据被看作是依联合概率分布P(X,Y)独立同分布产生的。统计学习假设数据存在一定的统计规律，X和Y具有联合概率分布的假设就是监督学习关于数据的基本假设。</p>
</blockquote>
<blockquote>
<p>监督学习的目的在于学习一个由输入到输出的映射，这一映射由模型来表示。</p>
</blockquote>
<h2 id="122-问题的形式化"><a class="markdownIt-Anchor" href="#122-问题的形式化"></a> 1.2.2　问题的形式化</h2>
<blockquote>
<p>监督学习利用训练数据集学习一个模型，再用模型对测试样本集进行预测（prediction）。</p>
</blockquote>
<h2 id="131-模型"><a class="markdownIt-Anchor" href="#131-模型"></a> 1.3.1　模型</h2>
<blockquote>
<p>统计学习首要考虑的问题是学习什么样的模型。在监督学习过程中，模型就是所要学习的条件概率分布或决策函数。模型的假设空间（space）包含所有可能的条件概率分布或决策函数。</p>
</blockquote>
<blockquote>
<p>由决策函数表示的模型为非概率模型，由条件概率表示的模型为概率模型。</p>
</blockquote>
<h2 id="132-策略"><a class="markdownIt-Anchor" href="#132-策略"></a> 1.3.2　策略</h2>
<blockquote>
<p>有了模型的假设空间，统计学习接着需要考虑的是按照什么样的准则学习或选择最优的模型。</p>
</blockquote>
<blockquote>
<p>理论上模型f(X)关于联合分布P(X,Y)的平均意义下的损失，称为风险函数（riskfunction）或期望损失（expectedloss）。</p>
</blockquote>
<blockquote>
<p>模型f(X)关于训练数据集的平均损失称为经验风险（risk）或经验损失（loss）</p>
</blockquote>
<blockquote>
<p>期望风险exp(f)是模型关于联合分布的期望损失，经验风险emp(f)是模型关于训练样本集的平均损失。根据大数定律，当样本容量N趋于无穷时，经验风险emp(f)趋于期望风险exp(f)。所以一个很自然的想法是用经验风险估计期望风险。但是，由于现实中训练样本数目有限，甚至很小，所以用经验风险估计期望风险常常并不理想，要对经验风险进行一定的矫正。</p>
</blockquote>
<blockquote>
<p>结构风险最小化（riskminimization，SRM）是为了防止过拟合而提出来的策略。结构风险最小化等价于正则化（regularization）。结构风险在经验风险上加上表示模型复杂度的正则化项（regularizer）或罚项（term）。</p>
</blockquote>
<h2 id="133-算法"><a class="markdownIt-Anchor" href="#133-算法"></a> 1.3.3　算法</h2>
<blockquote>
<p>算法是指学习模型的具体计算方法。</p>
</blockquote>
<h2 id="141-训练误差与测试误差"><a class="markdownIt-Anchor" href="#141-训练误差与测试误差"></a> 1.4.1　训练误差与测试误差</h2>
<blockquote>
<p>通常将学习方法对未知数据的预测能力称为泛化能力（generalizationability）</p>
</blockquote>
<h2 id="142-过拟合与模型选择"><a class="markdownIt-Anchor" href="#142-过拟合与模型选择"></a> 1.4.2　过拟合与模型选择</h2>
<blockquote>
<p>如果一味追求提高对训练数据的预测能力，所选模型的复杂度则往往会比真模型更高。这种现象称为过拟合（over-fitting）</p>
</blockquote>
<h2 id="151-正则化"><a class="markdownIt-Anchor" href="#151-正则化"></a> 1.5.1　正则化</h2>
<blockquote>
<p>模型选择的典型方法是正则化（regularization）。正则化是结构风险最小化策略的实现，是在经验风险上加一个正则化项（regularizer）或罚项term)。正则化项一般是模型复杂度的单调递增函数，模型越复杂，正则化值就越大。</p>
</blockquote>
<blockquote>
<p>在所有可能选择的模型中，能够很好地解释已知数据并且十分简单才是最好的模型，也就是应该选择的模型。</p>
</blockquote>
<h2 id="161-泛化误差"><a class="markdownIt-Anchor" href="#161-泛化误差"></a> 1.6.1　泛化误差</h2>
<blockquote>
<p>学习方法的泛化能力（ability）是指由该方法学习到的模型对未知数据的预测能力，是学习方法本质上重要的性质。</p>
</blockquote>
<h2 id="17-生成模型与判别模型"><a class="markdownIt-Anchor" href="#17-生成模型与判别模型"></a> 1.7　生成模型与判别模型</h2>
<blockquote>
<p>监督学习方法又可以分为生成方法（approach）和判别方法（approach）。所学到的模型分别称为生成模型（model）和判别模型（model）。生成方法由数据学习联合概率分布P(X,Y)，然后求出条件概率分布P(Y|X)作为预测的模型，即生成模型</p>
</blockquote>
<blockquote>
<p>这样的方法之所以称为生成方法，是因为模型表示了给定输入X产生输出Y的生成关系。典型的生成模型有：朴素贝叶斯法和隐马尔可夫模型</p>
</blockquote>
<blockquote>
<p>判别方法由数据直接学习决策函数f(X)或者条件概率分布P(Y|X)作为预测的模型，即判别模型。判别方法关心的是对给定的输入X，应该预测什么样的输出Y。典型的判别模型包括：k近邻法、感知机、决策树、逻辑斯谛回归模型、最大熵模型、支持向量机、提升方法和条件随机场等</p>
</blockquote>
<blockquote>
<p>生成方法的特点：生成方法可以还原出联合概率分布P(X,Y)，而判别方法则不能；生成方法的学习收敛速度更快，即当样本容量增加的时候，学到的模型可以更快地收敛于真实模型；当存在隐变量时，仍可以用生成方法学习，此时判别方法就不能用。判别方法的特点：判别方法直接学习的是条件概率P(Y|X)或决策函数f(X)，直接面对预测，往往学习的准确率更高；由于直接学习P(Y|X)或f(X)，可以对数据进行各种程度上的抽象、定义特征并使用特征，因此可以简化学习问题。</p>
</blockquote>
<h2 id="18-分类问题"><a class="markdownIt-Anchor" href="#18-分类问题"></a> 1.8　分类问题</h2>
<blockquote>
<p>评价分类器性能的指标一般是分类准确率（accuracy），其定义是：对于给定的测试数据集，分类器正确分类的样本数与总样本数之比。</p>
</blockquote>
<blockquote>
<p>对于二类分类问题常用的评价指标是精确率（precision）与召回率（recall）。通常以关注的类为正类，其他类为负类，</p>
</blockquote>
<h2 id="19-标注问题"><a class="markdownIt-Anchor" href="#19-标注问题"></a> 1.9　标注问题</h2>
<blockquote>
<p>标注问题的输入是一个观测序列，输出是一个标记序列或状态序列。标注问题的目标在于学习一个模型，使它能够对观测序列给出标记序列作为预测。</p>
</blockquote>
<blockquote>
<p>评价标注模型的指标与评价分类模型的指标一样，常用的有标注准确率、精确率和召回率。</p>
</blockquote>
<blockquote>
<p>标注常用的统计学习方法有：隐马尔可夫模型、条件随机场。</p>
</blockquote>
<h2 id="110-回归问题"><a class="markdownIt-Anchor" href="#110-回归问题"></a> 1.10　回归问题</h2>
<blockquote>
<p>回归问题的学习等价于函数拟合：选择一条函数曲线使其很好地拟合已知数据且很好地预测未知数据（</p>
</blockquote>
<blockquote>
<p>回归问题按照输入变量的个数，分为一元回归和多元回归；按照输入变量和输出变量之间关系的类型即模型的类型，分为线性回归和非线性回归。</p>
</blockquote>
<h2 id="本章概要"><a class="markdownIt-Anchor" href="#本章概要"></a> 本章概要</h2>
<blockquote>
<p>分类问题、标注问题和回归问题都是监督学习的重要问题。</p>
</blockquote>
<h2 id="第2章-感知机"><a class="markdownIt-Anchor" href="#第2章-感知机"></a> 第2章　感知机</h2>
<blockquote>
<p>感知机（perceptron）是二类分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取+1和–1二值</p>
</blockquote>
<h2 id="21-感知机模型"><a class="markdownIt-Anchor" href="#21-感知机模型"></a> 2.1　感知机模型</h2>
<blockquote>
<p>感知机模型的假设空间是定义在特征空间中的所有线性分类模型（linearclassificationmodel）或线性分类器(linearclassifier)，即函数集合{f|f(x)＝w·x+b}。</p>
</blockquote>
<h2 id="222-感知机学习策略"><a class="markdownIt-Anchor" href="#222-感知机学习策略"></a> 2.2.2　感知机学习策略</h2>
<blockquote>
<p>假设训练数据集是线性可分的，感知机学习的目标是求得一个能够将训练集正实例点和负实例点完全正确分开的分离超平面。为了找出这样的超平面，即确定感知机模型参数w,b，需要确定一个学习策略，即定义（经验）损失函数并将损失函数极小化。</p>
</blockquote>
<blockquote>
<p>感知机学习的策略是在假设空间中选取使损失函数式（2.4）最小的模型参数w,b，即感知机模型。</p>
</blockquote>
<h2 id="231-感知机学习算法的原始形式"><a class="markdownIt-Anchor" href="#231-感知机学习算法的原始形式"></a> 2.3.1　感知机学习算法的原始形式</h2>
<blockquote>
<p>感知机学习算法是误分类驱动的，具体采用随机梯度下降法（gradientdescent）。首先，任意选取一个超平面0,b0，然后用梯度下降法不断地极小化目标函数（2.5）。极小化过程中不是一次使M中所有误分类点的梯度下降，而是一次随机选取一个误分类点使其梯度下降。</p>
</blockquote>
<blockquote>
<p>感知机学习算法由于采用不同的初值或选取不同的误分类点，解可以不同。</p>
</blockquote>
<h2 id="232-算法的收敛性"><a class="markdownIt-Anchor" href="#232-算法的收敛性"></a> 2.3.2　算法的收敛性</h2>
<blockquote>
<p>训练数据集线性可分时，感知机学习算法原始形式迭代是收敛的。</p>
</blockquote>
<blockquote>
<p>感知机学习算法存在许多解，这些解既依赖于初值的选择，也依赖于迭代过程中误分类点的选择顺序。为了得到唯一的超平面，需要对分离超平面增加约束条件。</p>
</blockquote>
<blockquote>
<p>训练集线性不可分时，感知机学习算法不收敛，迭代结果会发生震荡。</p>
</blockquote>
<h2 id="第3章-k近邻法"><a class="markdownIt-Anchor" href="#第3章-k近邻法"></a> 第3章　k近邻法</h2>
<blockquote>
<p>近邻法假设给定一个训练数据集，其中的实例类别已定。分类时，对新的实例，根据其k个最近邻的训练实例的类别，通过多数表决等方式进行预测。</p>
</blockquote>
<h2 id="323-k值的选择"><a class="markdownIt-Anchor" href="#323-k值的选择"></a> 3.2.3　k值的选择</h2>
<blockquote>
<p>如果选择较小的k值，就相当于用较小的邻域中的训练实例进行预测，“学习”的近似误差（error）会减小，只有与输入实例较近的（相似的）训练实例才会对预测结果起作用。但缺点是“学习”的估计误差（error）会增大，预测结果会对近邻的实例点非常敏感[2]。如果邻近的实例点恰巧是噪声，预测就会出错。换句话说，k值的减小就意味着整体模型变得复杂，容易发生过拟合。如果选择较大的k值，就相当于用较大邻域中的训练实例进行预测。其优点是可以减少学习的估计误差。但缺点是学习的近似误差会增大。这时与输入实例较远的（不相似的）训练实例也会对预测起作用，使预测发生错误。k值的增大就意味着整体的模型变得简单。</p>
</blockquote>
<h2 id="331-构造kd树"><a class="markdownIt-Anchor" href="#331-构造kd树"></a> 3.3.1　构造kd树</h2>
<blockquote>
<p>kd树是一种对k维空间中的实例点进行存储以便对其进行快速检索的树形数据结构。kd树是二叉树，表示对k维空间的一个划分（partition）。构造kd树相当于不断地用垂直于坐标轴的超平面将k维空间切分，构成一系列的k维超矩形区域。kd树的每个结点对应于一个k维超矩形区域。</p>
</blockquote>
<h2 id="第4章-朴素贝叶斯法"><a class="markdownIt-Anchor" href="#第4章-朴素贝叶斯法"></a> 第4章　朴素贝叶斯法</h2>
<blockquote>
<p>朴素贝叶斯（Bayes）法是基于贝叶斯定理与特征条件独立假设的分类方法[1]。对于给定的训练数据集，首先基于特征条件独立假设学习输入/输出的联合概率分布；然后基于此模型，对给定的输入x，利用贝叶斯定理求出后验概率最大的输出y。</p>
</blockquote>
<h2 id="412-后验概率最大化的含义"><a class="markdownIt-Anchor" href="#412-后验概率最大化的含义"></a> 4.1.2　后验概率最大化的含义</h2>
<blockquote>
<p>朴素贝叶斯法将实例分到后验概率最大的类中。这等价于期望风险最小化。</p>
</blockquote>
<h2 id="513-决策树与条件概率分布"><a class="markdownIt-Anchor" href="#513-决策树与条件概率分布"></a> 5.1.3　决策树与条件概率分布</h2>
<blockquote>
<p>决策树还表示给定特征条件下类的条件概率分布。这一条件概率分布定义在特征空间的一个划分（partition）上。将特征空间划分为互不相交的单元（cell）或区域（region），并在每个单元定义一个类的概率分布就构成了一个条件概率分布。</p>
</blockquote>
<h2 id="522-信息增益"><a class="markdownIt-Anchor" href="#522-信息增益"></a> 5.2.2　信息增益</h2>
<blockquote>
<p>在信息论与概率统计中，熵（entropy）是表示随机变量不确定性的度量。</p>
</blockquote>
<blockquote>
<p>熵越大，随机变量的不确定性就越大。</p>
</blockquote>
<blockquote>
<p>特征A对训练数据集D的信息增益g(D,A)，定义为集合D的经验熵H(D)与特征A给定条件下D的经验条件熵H(D|A)之差</p>
</blockquote>
<h2 id="523-信息增益比"><a class="markdownIt-Anchor" href="#523-信息增益比"></a> 5.2.3　信息增益比</h2>
<blockquote>
<p>特征A对训练数据集D的信息增益比gR(D,A)定义为其信息增益g(D,A)与训练数据集D的经验熵H(D)之比</p>
</blockquote>
<h2 id="552-cart剪枝"><a class="markdownIt-Anchor" href="#552-cart剪枝"></a> 5.5.2　CART剪枝</h2>
<blockquote>
<p>剪枝算法由两步组成：首先从生成算法产生的决策树T0底端开始不断剪枝，直到T0的根结点，形成一个子树序列{T0，T1,…,Tn}；然后通过交叉验证法在独立的验证数据集上对子树序列进行测试，从中选择最优子树。</p>
</blockquote>
<h2 id="第6章-逻辑斯谛回归与最大熵模型"><a class="markdownIt-Anchor" href="#第6章-逻辑斯谛回归与最大熵模型"></a> 第6章　逻辑斯谛回归与最大熵模型</h2>
<blockquote>
<p>逻辑斯谛回归（regression）是统计学习中的经典分类方法。最大熵是概率模型学习的一个准则，将其推广到分类问题得到最大熵模型（entropymodel）。逻辑斯谛回归模型与最大熵模型都属于对数线性模型。</p>
</blockquote>
<h2 id="612-二项逻辑斯谛回归模型"><a class="markdownIt-Anchor" href="#612-二项逻辑斯谛回归模型"></a> 6.1.2　二项逻辑斯谛回归模型</h2>
<blockquote>
<p>二项逻辑斯谛回归模型（logisticregressionmodel）是一种分类模型，由条件概率分布P(Y|X)表示，形式为参数化的逻辑斯谛分布。这里，随机变量X取值为实数，随机变量Y取值为1或0。我们通过监督学习的方法来估计模型参数。</p>
</blockquote>
<h2 id="621-最大熵原理"><a class="markdownIt-Anchor" href="#621-最大熵原理"></a> 6.2.1　最大熵原理</h2>
<blockquote>
<p>最大熵原理是概率模型学习的一个准则。最大熵原理认为，学习概率模型时，在所有可能的概率模型（分布）中，熵最大的模型是最好的模型。通常用约束条件来确定概率模型的集合，所以，最大熵原理也可以表述为在满足约束条件的模型集合中选取熵最大的模型。</p>
</blockquote>
<h2 id="63-模型学习的最优化算法"><a class="markdownIt-Anchor" href="#63-模型学习的最优化算法"></a> 6.3　模型学习的最优化算法</h2>
<blockquote>
<p>逻辑斯谛回归模型、最大熵模型学习归结为以似然函数为目标函数的最优化问题，通常通过迭代算法求解。从最优化的观点看，这时的目标函数具有很好的性质。它是光滑的凸函数，因此多种最优化的方法都适用，保证能找到全局最优解。常用的方法有改进的迭代尺度法、梯度下降法、牛顿法或拟牛顿法。牛顿法或拟牛顿法一般收敛速度更快。</p>
</blockquote>
<h2 id="第7章-支持向量机"><a class="markdownIt-Anchor" href="#第7章-支持向量机"></a> 第7章　支持向量机</h2>
<blockquote>
<p>支持向量机（vectormachines，SVM）是一种二类分类模型。它的基本模型是定义在特征空间上的间隔最大的线性分类器，间隔最大使它有别于感知机</p>
</blockquote>
<blockquote>
<p>支持向量机还包括核技巧，这使它成为实质上的非线性分类器。支持向量机的学习策略就是间隔最大化，可形式化为一个求解凸二次规划（convexquadraticprogramming）的问题，也等价于正则化的合页损失函数的最小化问题</p>
</blockquote>
<blockquote>
<p>支持向量机学习方法包含构建由简至繁的模型：线性可分支持向量机（supportvectormachineinlinearlyseparablecase）、线性支持向量机（supportvectormachine）及非线性支持向量机（supportvectormachine）。</p>
</blockquote>
<blockquote>
<p>当训练数据线性可分时，通过硬间隔最大化（hardmarginmaximization），学习一个线性的分类器，即线性可分支持向量机，又称为硬间隔支持向量机</p>
</blockquote>
<blockquote>
<p>当训练数据近似线性可分时，通过软间隔最大化（softmarginmaximization），也学习一个线性的分类器，即线性支持向量机，又称为软间隔支持向量机</p>
</blockquote>
<blockquote>
<p>当训练数据线性不可分时，通过使用核技巧（kerneltrick）及软间隔最大化，学习非线性支持向量机。</p>
</blockquote>
<blockquote>
<p>通过使用核函数可以学习非线性支持向量机，等价于隐式地在高维的特征空间中学习线性支持向量机。这样的方法称为核技巧。核方法（kernelmethod）是比支持向量机更为一般的机器学习方法。</p>
</blockquote>
<h2 id="711-线性可分支持向量机"><a class="markdownIt-Anchor" href="#711-线性可分支持向量机"></a> 7.1.1　线性可分支持向量机</h2>
<blockquote>
<p>线性可分支持向量机、线性支持向量机假设这两个空间的元素一一对应，并将输入空间中的输入映射为特征空间中的特征向量。</p>
</blockquote>
<blockquote>
<p>输入都由输入空间转换到特征空间，支持向量机的学习是在特征空间进行的。</p>
</blockquote>
<blockquote>
<p>学习的目标是在特征空间中找到一个分离超平面，能将实例分到不同的类。分</p>
</blockquote>
<blockquote>
<p>一般地，当训练数据集线性可分时，存在无穷个分离超平面可将两类数据正确分开。感知机利用误分类最小的策略，求得分离超平面，不过这时的解有无穷多个。线性可分支持向量机利用间隔最大化求最优分离超平面，这时，解是唯一的。</p>
</blockquote>
<h2 id="712-函数间隔和几何间隔"><a class="markdownIt-Anchor" href="#712-函数间隔和几何间隔"></a> 7.1.2　函数间隔和几何间隔</h2>
<blockquote>
<p>一致能够表示分类是否正确。所以可用量y(w·x+b)来表示分类的正确性及确信度，这就是函数间隔（functionalmargin）的概念。</p>
</blockquote>
<blockquote>
<p>对于给定的训练数据集T和超平面(w,b)，定义超平面(w,b)关于样本点(xi，yi)的函数间隔为</p>
</blockquote>
<blockquote>
<p>定义超平面(w,b)关于训练数据集T的函数间隔为超平面(w,b)关于T中所有样本点i，yi)的函数间隔之最小值</p>
</blockquote>
<blockquote>
<p>定义超平面(w,b)关于训练数据集T的几何间隔为超平面(w,b)关于T中所有样本点i，yi)的几何间隔之最小值</p>
</blockquote>
<blockquote>
<p>超平面(w,b)关于样本点i，yi)的几何间隔一般是实例点到超平面的带符号的距离（distance），当样本点被超平面正确分类时就是实例点到超平面的距离。</p>
</blockquote>
<blockquote>
<p>如果||w||＝1，那么函数间隔和几何间隔相等。如果超平面参数w和b成比例地改变（超平面没有改变），函数间隔也按此比例改变，而几何间隔不变。</p>
</blockquote>
<h2 id="713-间隔最大化"><a class="markdownIt-Anchor" href="#713-间隔最大化"></a> 7.1.3　间隔最大化</h2>
<blockquote>
<p>支持向量机学习的基本想法是求解能够正确划分训练数据集并且几何间隔最大的分离超平面。对线性可分的训练数据集而言，线性可分分离超平面有无穷多个（等价于感知机），但是几何间隔最大的分离超平面是唯一的。这里的间隔最大化又称为硬间隔最大化</p>
</blockquote>
<blockquote>
<p>间隔最大化的直观解释是：对训练数据集找到几何间隔最大的超平面意味着以充分大的确信度对训练数据进行分类。也就是说，不仅将正负实例点分开，而且对最难分的实例点（离超平面最近的点）也有足够大的确信度将它们分开。这样的超平面应该对未知的新实例有很好的分类预测能力。</p>
</blockquote>
<blockquote>
<p>若训练数据集T线性可分，则可将训练数据集中的样本点完全正确分开的最大间隔分离超平面存在且唯一。</p>
</blockquote>
<blockquote>
<p>在线性可分情况下，训练数据集的样本点中与分离超平面距离最近的样本点的实例称为支持向量（vector）</p>
</blockquote>
<blockquote>
<p>在决定分离超平面时只有支持向量起作用，而其他实例点并不起作用。如果移动支持向量将改变所求的解；但是如果在间隔边界以外移动其他实例点，甚至去掉这些点，则解是不会改变的。由于支持向量在确定分离超平面中起着决定性作用，所以将这种分类模型称为支持向量机。支持向量的个数一般很少，所以支持向量机由很少的“重要的”训练样本确定。</p>
</blockquote>
<h2 id="714-学习的对偶算法"><a class="markdownIt-Anchor" href="#714-学习的对偶算法"></a> 7.1.4　学习的对偶算法</h2>
<blockquote>
<p>通过求解对偶问题（dualproblem）得到原始问题（primalproblem）的最优解，这就是线性可分支持向量机的对偶算法（dualalgorithm）。这样做的优点，一是对偶问题往往更容易求解；二是自然引入核函数，进而推广到非线性分类问题。</p>
</blockquote>
<blockquote>
<p>对于线性可分问题，上述线性可分支持向量机的学习（硬间隔最大化）算法是完美的。但是，训练数据集线性可分是理想的情形。在现实问题中，训练数据集往往是线性不可分的，即在样本中出现噪声或特异点。</p>
</blockquote>
<h2 id="73-非线性支持向量机与核函数"><a class="markdownIt-Anchor" href="#73-非线性支持向量机与核函数"></a> 7.3　非线性支持向量机与核函数</h2>
<blockquote>
<p>对解线性分类问题，线性分类支持向量机是一种非常有效的方法。但是，有时分类问题是非线性的，这时可以使用非线性支持向量机。</p>
</blockquote>
<h2 id="731-核技巧"><a class="markdownIt-Anchor" href="#731-核技巧"></a> 7.3.1　核技巧</h2>
<blockquote>
<p>非线性问题往往不好求解，所以希望能用解线性分类问题的方法解决这个问题。所采取的方法是进行一个非线性变换，将非线性问题变换为线性问题，通过解变换后的线性问题的方法求解原来的非线性问题。</p>
</blockquote>
<blockquote>
<p>核技巧应用到支持向量机，其基本想法就是通过一个非线性变换将输入空间（欧氏空间n或离散集合）对应于一个特征空间（希尔伯特空间），使得在输入空间n中的超曲面模型对应于特征空间中的超平面模型（支持向量机）。这样，分类问题的学习任务通过在特征空间中求解线性支持向量机就可以完成。</p>
</blockquote>
<blockquote>
<p>在核函数K(x,z)给定的条件下，可以利用解线性分类问题的方法求解非线性分类问题的支持向量机。学习是隐式地在特征空间进行的，不需要显式地定义特征空间和映射函数。这样的技巧称为核技巧，</p>
</blockquote>
<h2 id="74-序列最小最优化算法"><a class="markdownIt-Anchor" href="#74-序列最小最优化算法"></a> 7.4　序列最小最优化算法</h2>
<blockquote>
<p>支持向量机的学习问题可以形式化为求解凸二次规划问题。这样的凸二次规划问题具有全局最优解，并且有许多最优化算法可以用于这一问题的求解。</p>
</blockquote>
<h2 id="811-提升方法的基本思路"><a class="markdownIt-Anchor" href="#811-提升方法的基本思路"></a> 8.1.1　提升方法的基本思路</h2>
<blockquote>
<p>在概率近似正确（probablyapproximatelycorrect，PAC）学习的框架中，一个概念（一个类），如果存在一个多项式的学习算法能够学习它，并且正确率很高，那么就称这个概念是强可学习的</p>
</blockquote>
<blockquote>
<p>一个概念，如果存在一个多项式的学习算法能够学习它，学习的正确率仅比随机猜测略好，那么就称这个概念是弱可学习的。</p>
</blockquote>
<blockquote>
<p>在PAC学习的框架下，一个概念是强可学习的充分必要条件是这个概念是弱可学习的。</p>
</blockquote>
<blockquote>
<p>对于分类问题而言，给定一个训练样本集，求比较粗糙的分类规则（弱分类器）要比求精确的分类规则（强分类器）容易得多。提升方法就是从弱学习算法出发，反复学习，得到一系列弱分类器（又称为基本分类器），然后组合这些弱分类器，构成一个强分类器。大多数的提升方法都是改变训练数据的概率分布（训练数据的权值分布），针对不同的训练数据分布调用弱学习算法学习一系列弱分类器。</p>
</blockquote>
<blockquote>
<p>对提升方法来说，有两个问题需要回答：一是在每一轮如何改变训练数据的权值或概率分布；二是如何将弱分类器组合成一个强分类器。关于第1个问题，AdaBoost的做法是，提高那些被前一轮弱分类器错误分类样本的权值，而降低那些被正确分类样本的权值。这样一来，那些没有得到正确分类的数据，由于其权值的加大而受到后一轮的弱分类器的更大关注。于是，分类问题被一系列的弱分类器“分而治之”。至于第2个问题，即弱分类器的组合，AdaBoost采取加权多数表决的方法。具体地，加大分类误差率小的弱分类器的权值，使其在表决中起较大的作用，减小分类误差率大的弱分类器的权值，使其在表决中起较小的作用。</p>
</blockquote>
<h2 id="83-adaboost算法的解释"><a class="markdownIt-Anchor" href="#83-adaboost算法的解释"></a> 8.3　AdaBoost算法的解释</h2>
<blockquote>
<p>AdaBoost算法还有另一个解释，即可以认为AdaBoost算法是模型为加法模型、损失函数为指数函数、学习算法为前向分步算法时的二类分类学习方法。</p>
</blockquote>
<h2 id="84-提升树"><a class="markdownIt-Anchor" href="#84-提升树"></a> 8.4　提升树</h2>
<blockquote>
<p>提升树是以分类树或回归树为基本分类器的提升方法。提升树被认为是统计学习中性能最好的方法之一。</p>
</blockquote>
<h2 id="841-提升树模型"><a class="markdownIt-Anchor" href="#841-提升树模型"></a> 8.4.1　提升树模型</h2>
<blockquote>
<p>提升方法实际采用加法模型（即基函数的线性组合）与前向分步算法。以决策树为基函数的提升方法称为提升树（tree）。对分类问题决策树是二叉分类树，对回归问题决策树是二叉回归树。</p>
</blockquote>
<h2 id="第10章-隐马尔可夫模型"><a class="markdownIt-Anchor" href="#第10章-隐马尔可夫模型"></a> 第10章　隐马尔可夫模型</h2>
<blockquote>
<p>隐马尔可夫模型（Markovmodel,HMM）是可用于标注问题的统计学习模型，描述由隐藏的马尔可夫链随机生成观测序列的过程，属于生成模型。</p>
</blockquote>
<h2 id="1011-隐马尔可夫模型的定义"><a class="markdownIt-Anchor" href="#1011-隐马尔可夫模型的定义"></a> 10.1.1　隐马尔可夫模型的定义</h2>
<blockquote>
<p>隐马尔可夫模型是关于时序的概率模型，描述由一个隐藏的马尔可夫链随机生成不可观测的状态随机序列，再由各个状态生成一个观测而产生观测随机序列的过程</p>
</blockquote>
<blockquote>
<p>隐藏的马尔可夫链随机生成的状态的序列，称为状态序列（statesequence）；每个状态生成一个观测，而由此产生的观测的随机序列，称为观测序列（observationsequence）。序列的每一个位置又可以看作是一个时刻。</p>
</blockquote>
<h2 id="1013-隐马尔可夫模型的3个基本问题"><a class="markdownIt-Anchor" href="#1013-隐马尔可夫模型的3个基本问题"></a> 10.1.3　隐马尔可夫模型的3个基本问题</h2>
<blockquote>
<p>隐马尔可夫模型有3个基本问题：（1）概率计算问题。</p>
</blockquote>
<blockquote>
<p>（2）学习问题。</p>
</blockquote>
<blockquote>
<p>（3）预测问题，</p>
</blockquote>
<h2 id="103-学习算法"><a class="markdownIt-Anchor" href="#103-学习算法"></a> 10.3　学习算法</h2>
<blockquote>
<p>隐马尔可夫模型的学习，根据训练数据是包括观测序列和对应的状态序列还是只有观测序列，可以分别由监督学习与非监督学习实现。本节首先介绍监督学习算法，而后介绍非监督学习算法——Baum-Welch算法（也就是EM算法）。</p>
</blockquote>
<h2 id="104-预测算法"><a class="markdownIt-Anchor" href="#104-预测算法"></a> 10.4　预测算法</h2>
<blockquote>
<p>隐马尔可夫模型预测的两种算法：近似算法与维特比算法（Viterbialgorithm）。</p>
</blockquote>
<h2 id="1042-维特比算法"><a class="markdownIt-Anchor" href="#1042-维特比算法"></a> 10.4.2　维特比算法</h2>
<blockquote>
<p>维特比算法实际是用动态规划解隐马尔可夫模型预测问题，即用动态规划（programming）求概率最大路径（最优路径）。这时一条路径对应着一个状态序列。</p>
</blockquote>
<h2 id="第11章-条件随机场"><a class="markdownIt-Anchor" href="#第11章-条件随机场"></a> 第11章　条件随机场</h2>
<blockquote>
<p>条件随机场（randomfield,CRF）是给定一组输入随机变量条件下另一组输出随机变量的条件概率分布模型，其特点是假设输出随机变量构成马尔可夫随机场。</p>
</blockquote>
<h2 id="111-概率无向图模型"><a class="markdownIt-Anchor" href="#111-概率无向图模型"></a> 11.1　概率无向图模型</h2>
<blockquote>
<p>概率无向图模型（undirectedgraphicalmodel），又称为马尔可夫随机场（randomfield），是一个可以由无向图表示的联合概率分布。</p>
</blockquote>
<h2 id="1111-模型定义"><a class="markdownIt-Anchor" href="#1111-模型定义"></a> 11.1.1　模型定义</h2>
<blockquote>
<p>设有联合概率分布P(Y)，由无向图G＝(V,E)表示，在图G中，结点表示随机变量，边表示随机变量之间的依赖关系。如果联合概率分布P(Y)满足成对、局部或全局马尔可夫性，就称此联合概率分布为概率无向图模型（probabilityundirectedgraphicalmodel），或马尔可夫随机场（Markovrandomfield）。</p>
</blockquote>
<blockquote>
<p>事实上，概率无向图模型的最大特点就是易于因子分解。下</p>
</blockquote>
<h2 id="1112-概率无向图模型的因子分解"><a class="markdownIt-Anchor" href="#1112-概率无向图模型的因子分解"></a> 11.1.2　概率无向图模型的因子分解</h2>
<blockquote>
<p>将概率无向图模型的联合概率分布表示为其最大团上的随机变量的函数的乘积形式的操作，称为概率无向图模型的因子分解</p>
</blockquote>
<h2 id="1121-条件随机场的定义"><a class="markdownIt-Anchor" href="#1121-条件随机场的定义"></a> 11.2.1　条件随机场的定义</h2>
<blockquote>
<p>条件随机场（randomfield）是给定随机变量X条件下，随机变量Y的马尔可夫随机场。这里主要介绍定义在线性链上的特殊的条件随机场，称为线性链条件随机场（chainconditionalrandomfield）。线性链条件随机场可以用于标注等问题。</p>
</blockquote>
<h2 id="本章概要-2"><a class="markdownIt-Anchor" href="#本章概要-2"></a> 本章概要</h2>
<blockquote>
<p>概率无向图模型或马尔可夫随机场的联合概率分布可以分解为无向图最大团上的正值函数的乘积的形式。</p>
</blockquote>
<blockquote>
<p>条件随机场是给定输入随机变量X条件下，输出随机变量Y的条件概率分布模型，其形式为参数化的对数线性模型。条件随机场的最大特点是假设输出变量之间的联合概率分布构成概率无向图模型，即马尔可夫随机场。条件随机场是判别模型。</p>
</blockquote>
<blockquote>
<p>线性链条件随机场是定义在观测序列与标记序列上的条件随机场。线性链条件随机场一般表示为给定观测序列条件下的标记序列的条件概率分布，由参数化的对数线性模型表示。模型包含特征及相应的权值，特征是定义在线性链的边与结点上的。</p>
</blockquote>
<h2 id="第12章-统计学习方法总结"><a class="markdownIt-Anchor" href="#第12章-统计学习方法总结"></a> 第12章　统计学习方法总结</h2>
<blockquote>
<p>感知机、k近邻法、朴素贝叶斯法、决策树、逻辑斯谛回归与最大熵模型、支持向量机、提升方法是分类方法。原始的感知机、支持向量机以及提升方法是针对二类分类的，可以将它们扩展到多类分类</p>
</blockquote>
<blockquote>
<p>感知机、k近邻法、朴素贝叶斯法、决策树是简单的分类方法，具有模型直观、方法简单、实现容易等特点。逻辑斯谛回归与最大熵模型、支持向量机、提升方法是更复杂但更有效的分类方法，往往分类准确率更高</p>
</blockquote>
<blockquote>
<p>隐马尔可夫模型、条件随机场是主要的标注方法。通常条件随机场的标注准确率更高。</p>
</blockquote>
<blockquote>
<p>分类问题与标注问题的预测模型都可以认为是表示从输入空间到输出空间的映射。它们可以写成条件概率分布P(Y|X)或决策函数Y＝f(X)的形式。前者表示给定输入条件下输出的概率模型，后者表示输入到输出的非概率模型。有时，模型更直接地表示为概率模型，或者非概率模型</p>
</blockquote>
<blockquote>
<p>朴素贝叶斯法、隐马尔可夫模型是概率模型。感知机、k近邻法、支持向量机、提升方法是非概率模型。而决策树、逻辑斯谛回归与最大熵模型、条件随机场既可以看作是概率模型，又可以看作是非概率模型。直接学习条件概率分布P(Y|X)或决策函数Y＝f(X)的方法为判别方法，对应的模型是判别模型。感知机、k近邻法、决策树、逻辑斯谛回归与最大熵模型、支持向量机、提升方法、条件随机场是判别方法</p>
</blockquote>
<blockquote>
<p>首先学习联合概率分布P(X,Y)，从而求得条件概率分布P(Y|X)的方法是生成方法，对应的模型是生成模型。朴素贝叶斯法、隐马尔可夫模型是生成方法。</p>
</blockquote>
<blockquote>
<p>决策树是定义在一般的特征空间上的，可以含有连续变量或离散变量。感知机、支持向量机、k近邻法的特征空间是欧氏空间（更一般地，是希尔伯特空间）</p>
</blockquote>
<blockquote>
<p>提升方法的模型是弱分类器的线性组合，弱分类器的特征空间就是提升方法模型的特征空间。感知机模型是线性模型，而逻辑斯谛回归与最大熵模型、条件随机场是对数线性模型。k近邻法、决策树、支持向量机（包含核函数）、提升方法使用的是非线性模型。</p>
</blockquote>
<blockquote>
<p>在二类分类的监督学习中，支持向量机、逻辑斯谛回归与最大熵模型、提升方法各自使用合页损失函数、逻辑斯谛损失函数、指数损失函数。</p>
</blockquote>
<blockquote>
<p>概率模型的学习可以形式化为极大似然估计或贝叶斯估计的极大后验概率估计。这时，学习的策略是极小化对数似然损失或极小化正则化的对数似然损失。</p>
</blockquote>
<blockquote>
<p>决策树学习的策略是正则化的极大似然估计，损失函数是对数似然损失，正则化项是决策树的复杂度。逻辑斯谛回归与最大熵模型、条件随机场的学习策略既可以看成是极大似然估计（或正则化的极大似然估计），又可以看成是极小化逻辑斯谛损失（或正则化的逻辑斯谛损失）。朴素贝叶斯模型、隐马尔可夫模型的非监督学习也是极大似然估计或极大后验概率估计，但这时模型含有隐变量。</p>
</blockquote>
<blockquote>
<p>朴素贝叶斯法与隐马尔可夫模型的监督学习，最优解即极大似然估计值，可以由概率计算公式直接计算。感知机、逻辑斯谛回归与最大熵模型、条件随机场的学习利用梯度下降法、拟牛顿法等。这些都是一般的无约束最优化问题的解法。支持向量机学习，可以解凸二次规划的对偶问题。有序列最小最优化算法等方法。决策树学习是基于启发式算法的典型例子。可以认为特征选择、生成、剪枝是启发式地进行正则化的极大似然估计。提升方法利用学习的模型是加法模型、损失函数是指数损失函数的特点，启发式地从前向后逐步学习模型，以达到逼近优化目标函数的目的。EM算法是一种迭代的求解含隐变量概率模型参数的方法，它的收敛性可以保证，但是不能保证收敛到全局最优。支持向量机学习、逻辑斯谛回归与最大熵模型学习、条件随机场学习是凸优化问题，全局最优解保证存在。而其他学习问题则不是凸优化问题。</p>
</blockquote>
<h2 id="附录a-梯度下降法"><a class="markdownIt-Anchor" href="#附录a-梯度下降法"></a> 附录A　梯度下降法</h2>
<blockquote>
<p>梯度下降法（descent）或最速下降法（descent）是求解无约束最优化问题的一种最常用的方法，有实现简单的优点。梯度下降法是迭代算法，每一步需要求解目标函数的梯度向量。</p>
</blockquote>
<h2 id="附录b-牛顿法和拟牛顿法"><a class="markdownIt-Anchor" href="#附录b-牛顿法和拟牛顿法"></a> 附录B　牛顿法和拟牛顿法</h2>
<blockquote>
<p>牛顿法（method）和拟牛顿法（Newtonmethod）也是求解无约束最优化问题的常用方法，有收敛速度快的优点。牛顿法是迭代算法，每一步需要求解目标函数的海赛矩阵的逆矩阵，计算比较复杂</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Fast R-CNN</title>
    <url>/2020/05/15/Fast%20R-CNN/</url>
    <content><![CDATA[<p>一种two-stage的目标检测算法，设计感兴趣区域池化(RoIPooling)，并去掉SVM训练的获选框分类器；最终，在选择性搜索(SelectiveSearch,SS)之后，神经网络可以进行端到端训练</p>
<a id="more"></a>
<h1 id="什么是-fast-rcnn"><a class="markdownIt-Anchor" href="#什么是-fast-rcnn"></a> 什么是 Fast RCNN？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141501.png" alt="" /></li>
<li>是一种two-stage的目标检测算法，借鉴SPPNet 设计感兴趣区域池化(RoIPooling)，并去掉SVM训练的获选框分类器；最终，在选择性搜索(SelectiveSearch,SS)之后，神经网络可以进行端到端训练</li>
</ul>
<h1 id="fast-rcnn-的目标识别任务步骤"><a class="markdownIt-Anchor" href="#fast-rcnn-的目标识别任务步骤"></a> Fast RCNN 的目标识别任务步骤？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141502.png" alt="FastRCNN-20230408141502" /></li>
<li>1）<strong>获得候选框</strong>：利用选择性搜索 (Selective Search, SS) 在图像提取 2000 个左右建议窗口 (Region Proposal)</li>
<li>2）<strong>网络学习整张图片</strong>：将整张图片输入 CNN，进行特征提取</li>
<li>3）<strong>获得获选框最后一层特征</strong>：把候选框映射到 CNN 的最后一层卷积 feature map 上</li>
<li>4）<strong>获得获选框固定长度特征</strong>：通过 RoI pooling 层使每个获选框特征变为固定长度</li>
<li>5）<strong>获选框的分类与回归</strong>：利用 Softmax Loss (探测分类概率) 和 Smooth L1 Loss (探测边框回归) 对分类概率和边框回归 (Bounding box regression) 联合训练</li>
</ul>
<h1 id="什么是感兴趣区域池化roipooling"><a class="markdownIt-Anchor" href="#什么是感兴趣区域池化roipooling"></a> 什么是感兴趣区域池化(RoIPooling)?</h1>
<ul>
<li>RoIPooling 是 Pooling 层的一种，而且是针对感兴趣区域 (RoI) 的 Pooling，其特点是输入特征图尺寸不固定，但是输出特征图尺寸固定</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141503.png" alt="" /></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141504.gif" alt="" /></li>
</ul>
<h1 id="roipooling如何计算池化结果"><a class="markdownIt-Anchor" href="#roipooling如何计算池化结果"></a> ROIPooling如何计算池化结果？</h1>
<ul>
<li>假设模型输入是：3x512x512，经过特征提取得到512x16x16的特征，即数据下采样512/16=32倍，现有目标位置(192,296)，大小145x200 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/MNC-20230408143921.png" alt="" /></li>
<li><strong>ROI映射：</strong> 计算得到该目标在特征图上位置为：(296/32=9.25,192/32=6)，大小为(200/32=6.25,145/32=4.53)，ROIPooling会将小数舍去，如此将使用下图黄色+绿色的区域下采样，舍弃蓝色区域 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141504-1.png" alt="" /></li>
<li><strong>ROI区域池化：</strong> 假设特张图上的值如下图，对上图黄色+绿色区域进行3x3的ROI pooling，由于4/3=1.3,所以每个bin为1行数据下采样，最终得到绿色3x3新特征图，由图可知我们彻底失去最后一行 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141505.gif" alt="" /></li>
</ul>
<h1 id="roipooling-的反向传播"><a class="markdownIt-Anchor" href="#roipooling-的反向传播"></a> ROIPooling 的反向传播？</h1>
<ul>
<li>类比最大池化层做反向传播 ，不同在于，最大池化前</li>
</ul>
<h1 id="fast-rcnn中roi-pooling的输入是什么"><a class="markdownIt-Anchor" href="#fast-rcnn中roi-pooling的输入是什么"></a> Fast RCNN中ROI Pooling的输入是什么？</h1>
<ul>
<li>输入包含两部分</li>
<li><strong>特征图（feature map）：</strong> 指的是上面所示的特征图，在 Fast RCNN 中，它位于 RoI Pooling 之前，在 Faster RCNN 中，它是与 RPN 共享那个特征图，通常我们常常称之为“share_conv”</li>
<li><strong>RoIs：</strong> 其表示所有 RoI 的 N* 5 的矩阵。其中 N 表示 RoI 的数量，第一列表示图像 index，其余四列表示其余的左上角和右下角坐标。在 Fast RCNN 中，指的是选择性搜索 (Selective Search, SS) 的输出；在 Faster RCNN 中指的是 Region Proposal Networks (RPN) 的输出，一堆矩形候选框，形状为 1x5x1x1（4 个坐标+索引 index）</li>
</ul>
<h1 id="fast-rcnn的roi-pooling与sppnet的spatial-pyramid-pooling有什么区别"><a class="markdownIt-Anchor" href="#fast-rcnn的roi-pooling与sppnet的spatial-pyramid-pooling有什么区别"></a> Fast RCNN的ROI Pooling与SPPNet的Spatial Pyramid Pooling有什么区别？</h1>
<ul>
<li>ROI(Region of Interest) Pooling是Pooling的一种， 是针对RoIs的Pooling，其特点是输入特征图尺寸不固定，但是输出特征图尺寸固定</li>
<li>ROI Pooling 的思想来自于 SPPNet 中的空间金字塔池化(SpatialPyramidPooling,SPP)，将 SPPNet 中多尺度的池化简化了为<strong>单尺度，且按原始位置排列（不像 SPP 将特征排成一行）</strong></li>
</ul>
<h1 id="fast-rcnn如何进行训练为什么比sppnet快"><a class="markdownIt-Anchor" href="#fast-rcnn如何进行训练为什么比sppnet快"></a> Fast RCNN如何进行训练？为什么比SPPNet快？</h1>
<ul>
<li>没有单独训练 SVM 分类器：Fast RCNN 将候选框的分类及定位任务都在卷积网络中完成，</li>
<li>Fast RCNN能够使用反向传播来更新训练所有的网络权重。SPPNet不能更新所有的权重，不能更新spp之前层的参数。 根本原因是当每个训练样本（即RoI）来自不同的图像时，通过SPP层的反向传播是非常低效的</li>
</ul>
<h1 id="fast-rcnn的输入中多个感兴趣区域如何产生最后的输出"><a class="markdownIt-Anchor" href="#fast-rcnn的输入中多个感兴趣区域如何产生最后的输出"></a> Fast RCNN的输入中，多个感兴趣区域，如何产生最后的输出？</h1>
<ul>
<li>输入的维度是[N, C,  H,  W]，表示 N 张图片累加的 C 个感兴趣区域，论文 N=2，C=128，表示每个 batch 使用 2 张图片，每张图片拟合 64 个感兴趣区域</li>
<li>就一张图片而言，虽然其目标的数量不定，但是感兴趣区域却被固定为64，所以输出也是固定为64</li>
</ul>
<h1 id="fast-rcnn的roi池化时选择单尺度还是多尺度"><a class="markdownIt-Anchor" href="#fast-rcnn的roi池化时选择单尺度还是多尺度"></a> Fast RCNN的ROI池化时，选择单尺度还是多尺度？</h1>
<ul>
<li>这里多尺度的5表示输入图像采用5中不同的尺寸，比如[480,576,688,864,1200]，在测试的时候发现多尺度虽然能在mAP上取得一点提升，但是时间代价也比较大，直接原因是：深度卷积网络可以学习尺度不变性</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141505.png" alt="FastRCNN-20230408141505" /></li>
</ul>
<h1 id="fast-rcnn的直接在卷积神经网络进行多任务训练有用吗"><a class="markdownIt-Anchor" href="#fast-rcnn的直接在卷积神经网络进行多任务训练有用吗"></a> Fast RCNN的直接在卷积神经网络进行多任务训练有用吗？</h1>
<ul>
<li>一共有S，M，L三个组，每个组有4列，分别表示：1、仅采用分类训练，测试也没有回归；2、采用论文中的分类加回归训练，但是测试时候没有回归；3、采用分段训练，测试时候有回归；4、采用论文中的分类加回归训练，且测试时候有回归 ，可以看出多任务训练有效</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141506.png" alt="FastRCNN-20230408141506" /></li>
</ul>
<h1 id="fast-rcnn使用softmax替换svm分类有什么作用"><a class="markdownIt-Anchor" href="#fast-rcnn使用softmax替换svm分类有什么作用"></a> Fast RCNN使用softmax替换SVM分类，有什么作用？</h1>
<ul>
<li>softmax 略微优于所有三个网络的 SVM。这种效果很小，但表明与以前的多阶段训练方法相比，“一次性” 微调就足够了。我们注意到，softmax 与二分类的 svm 不同，在 scorin 时引入了 class之间的竞争</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141506-1.png" alt="FastRCNN-20230408141506-1" /></li>
</ul>
<h1 id="fast-rcnn的损失函数"><a class="markdownIt-Anchor" href="#fast-rcnn的损失函数"></a> Fast RCNN的损失函数？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FastRCNN-20230408141507.png" alt="" /></li>
<li><strong>losscls 层评估分类代价</strong>：由真实分类 u 对应的概率决定  $$L_{c l s}=-\log p_{u}$$</li>
<li><strong>lossbbox 评估检测框定位代价</strong>：比较真实分类对应的预测参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>t</mi><mi>u</mi></msup></mrow><annotation encoding="application/x-tex">t^u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span></span></span></span></span></span></span></span> 和真实平移缩放参数为 v 的差别 $$L_{l o c}=\Sigma_{i=1}^{4} g\left(t_{i}^{u}-v_{i}\right)$$，g 为平滑绝对值损失 (Smooth L1 Loss)，对 outlier 不敏感 $$g(x)= \begin{cases}0.5 x^{2} &amp; |x|&lt;1 \ |x|-0.5 &amp; \text { otherwise }\end{cases}$$</li>
<li>总代价为两者加权和，如果分类为背景则不考虑定位代价 $$L= \begin{cases}L_{c l s}+\lambda L_{l o c} &amp; u \text { 为前景 } \ L_{c l s} &amp; u \text { 为背景 }\end{cases}$$</li>
</ul>
<h1 id="fast-rcnn-相比较-r-cnn有什么不同"><a class="markdownIt-Anchor" href="#fast-rcnn-相比较-r-cnn有什么不同"></a> Fast RCNN 相比较 R-CNN，有什么不同？</h1>
<ul>
<li>最后一层卷积层后加了一个ROI pooling layer</li>
<li>损失函数使用了多任务损失函数(multi-task loss)，将边框回归直接加入到CNN网络中训练</li>
</ul>
<h1 id="fast-rcnn-相比较-r-cnn-sppnet有哪些改进"><a class="markdownIt-Anchor" href="#fast-rcnn-相比较-r-cnn-sppnet有哪些改进"></a> Fast RCNN 相比较 R-CNN、SPPNet，有哪些改进？</h1>
<ul>
<li>SPPNet算法来解决RCNN中重复卷积的问题，但是SPPNet依然存在和RCNN一样的一些缺点比如：训练步骤过多，需要训练SVM分类器，需要额外的回归器，特征也是保存在磁盘上</li>
<li>Fast RCNN相当于全面改进了原有的这两个算法，不仅训练步骤减少了，也不需要额外将特征保存在磁盘上</li>
<li>Fast RCNN算法在训练速度上比RCNN快了将近9倍，比SPPNet快大概3倍；测试速度比RCNN快了213倍，比SPPNet快了10倍</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
        <tag>two-stage</tag>
      </tags>
  </entry>
  <entry>
    <title>CSPNet：A New Backbone that can Enhance Learning Capability of CNN</title>
    <url>/2020/05/13/CSPNet%EF%BC%9AA%20New%20Backbone%20that%20can%20Enhance%20Learning%20Capability%20of%20CNN/</url>
    <content><![CDATA[<p>CSP可以看作是DenseNet的升级版，主要是通过split channel减少重复梯度的传递，使得网络更快</p>
<a id="more"></a>
<ul>
<li>
<p>什么是CSPNet(Cross-Stage-Partial-connections)?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CSPNet-20230408135826.png" alt="CSPNet-20230408135826" /></li>
<li>CSPNet认为<strong>推理计算过高的问题是由于网络优化中的梯度信息重复导致的</strong>。 因此先将基础层的特征映射划分为两部分，然后通过跨阶段层次结构将它们合并，在减少了计算量的同时可以保证准确率</li>
<li>可以看DenseNet的升级版本，改进了密集块和过渡层的信息流，优化了梯度反向传播路径，提升了网络的学习能力，同时在处理速度和内存方面提升了不少</li>
</ul>
</li>
<li>
<p>CSPNet的网络结构？</p>
<ul>
<li>CSPNet 包括 Partial Dense block、Partial Transition block</li>
<li>CSPNet 将 feature map 拆成两个部分，一部分进行卷积操作，另一部分和上一部分卷积操作的结果进行 concate，实际代码中，两个分支都包含全部的 channel，先分别通过1x1卷积，分别得到1\2的 output channel</li>
</ul>
</li>
<li>
<p>CSPNet的Partial Dense block？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CSPNet-20230408135827.png" alt="" /></li>
<li><strong>DenseNet</strong>：每个阶段都包含 1 个 <strong>DenseBlock</strong> 和1 个 <strong>Transition</strong> 组成，每个 DenseBlock 由 K 个 dense layer 组成，Transition 负责串联两个 DenseBlock。大量的梯度信息被重用来更新不同稠密层的权值。<strong>这将导致无差异的稠密层反复学习同样的梯度信息</strong></li>
<li><strong>CSPDenseNet</strong>：每个阶段由<strong>partial DenseBlock</strong> 和<strong>partial Transition</strong>组成，partial DenseBlock 由 K 个 dense layer 组成，每个保留了 DenseNet重用特征的有点，同时<strong>截断梯度流防止过多的重复梯度</strong></li>
</ul>
</li>
<li>
<p>CSPNet的Partial Transition block？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CSPNet-20230408135827-1.png" alt="CSPNet-20230408135827-1" /></li>
<li>设计局部过渡层的目的是**使梯度组合的差异最大化。部分过渡层是一种层次化的特征融合机制，它采用截断梯度流的策略来防止不同层学习重复的梯度信息</li>
<li><strong>Fusion First：</strong> 先将两个部分进行 concatenate，然后再进行输入到 Transion layer 中，采用这种做法会是的大量特梯度信息被重用，有利于网络学习</li>
<li><strong>Fusion Last：</strong> 先将部分特征输入 Transition layer，然后再进行 concatenate，这样梯度信息将被截断，损失了部分的梯度重用，但是由于 Transition 的输入维度比 ©图少，大大减少了计算复杂度</li>
<li><strong>CSPNet 采用的 (b)：</strong> 其结合了 ©、(d) 的特点，提升了学习能力的同时也提高了一些计算复杂度</li>
</ul>
</li>
<li>
<p>CSPNet的梯度传播特点？</p>
<ul>
<li><strong>CSPNet将基础层的特征图分成两部分</strong>，一部分将经过密集块和过渡层；然后将另一部分与传输的特征图组合到下一阶段 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CSPNet-20230408135828.png" alt="" /></li>
<li>前馈传递和权重更新方程变为<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CSPNet-20230408135828-1.png" alt="" /></li>
<li>可知： 来自密集层的梯度是单独集成的， <strong>两边都不包含属于其他边的重复梯度信息</strong></li>
</ul>
</li>
<li>
<p>什么是EFM?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CSPNet-20230408135829.png" alt="CSPNet-20230408135829" /></li>
<li>CSPNet提出的采用跨通道方法建立的**特征融合模块，**特征金字塔(Feature Pyramid Network,FPN)是同类型的模块</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>SPPNet：Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition</title>
    <url>/2020/05/10/SPPNet%EF%BC%9ASpatial%20Pyramid%20Pooling%20in%20Deep%20Convolutional%20Networks%20for%20Visual%20Recognition/</url>
    <content><![CDATA[<p>SPPNet 的目标检测思想和 RCNN 一致，<strong>都是提取候选区域的一维特征进行获选区域分类及位置回归</strong>，通过引入空间金字塔池化 (SpatialPyramidPooling, SPP)实现<strong>任意大小图片输入得到得到固定长度输出</strong>，避免 R-CNN 重复卷积的过程，提高了运行速度</p>
<a id="more"></a>
<h1 id="什么是-sppnet"><a class="markdownIt-Anchor" href="#什么是-sppnet"></a> 什么是 SPPNet?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPPNet-20230408141616.png" alt="SPPNet-20230408141616" /></li>
<li>SPPNet 的目标检测思想和 RCNN 一致，<strong>都是提取候选区域的一维特征进行获选区域分类及位置回归</strong>，通过引入空间金字塔池化 (SpatialPyramidPooling, SPP)实现<strong>任意大小图片输入得到得到固定长度输出</strong>，避免 R-CNN 重复卷积的过程，提高了运行速度</li>
</ul>
<h1 id="sppnet进行目标检测的步骤"><a class="markdownIt-Anchor" href="#sppnet进行目标检测的步骤"></a> SPPNet进行目标检测的步骤?</h1>
<ul>
<li>1）<strong>获得候选框</strong>：使用选择性搜索(SelectiveSearch,SS) 生成候选区域</li>
<li>2）<strong>获得获选框固定长度特征</strong>：预训练分类网络后，全图输入 CNN，拿到 conv5 的 featrue map，然后利用金字塔池化拿到不同目标的“固定长度特征”，然后接 fc5-&gt;fc6-&gt;fc8，为了微调 fc 层，进行 <strong>N+1 分类监督学习</strong>，其中输入是这张图片所有目标“固定长度特征”-&gt;fc5-&gt;fc6-&gt;fc8（N+1 分类）</li>
<li>3）<strong>获选框分类</strong>：将候选区域特征输入到 支持向量机(SVM)分类器，判别<strong>输入类别</strong></li>
<li>4）<strong>获选框位置回归</strong>：以回归的方式精修候选框位置</li>
</ul>
<h1 id="什么是空间金字塔池化spatial-pyramid-pooling-spp"><a class="markdownIt-Anchor" href="#什么是空间金字塔池化spatial-pyramid-pooling-spp"></a> 什么是空间金字塔池化(Spatial Pyramid Pooling, SPP)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPPNet-20230408141617.png" alt="" /></li>
<li><strong>典型的卷积神经网络基础结构：</strong> 卷积层-&gt;池化层-&gt;全连接层，由于全连接层的输入维数必须提前固定，因此第一层卷积的输入尺寸是固定的，一般通过裁剪、warp拉伸等操作把图片变换成固定尺寸，再输入网络，但是些操作在一定程度上会导致图片信息的丢失或者变形</li>
<li><strong>空间金字塔池化：</strong> 把卷积操作之后的特征图，以不同大小的块（池化框）来提取特征，分别是 4 x 4，2 x 2，1 x 1，将这三张网格放到下面这张特征图上，就可以得到 16+4+1=21 种不同的块，从这 21 个块中，每个块提取出一个特征（提取方式有平均池化、最大池化等），这样就得到了固定的 21 维特征向量  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">SPP</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line"><span class="comment"># Spatial Pyramid Pooling (SPP) layer https://arxiv.org/abs/1406.4729</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, c1, c2, k=(<span class="params"><span class="number">5</span>, <span class="number">9</span>, <span class="number">13</span></span>)</span>):</span></span><br><span class="line">	<span class="built_in">super</span>().__init__()</span><br><span class="line">	c_ = c1 // <span class="number">2</span>  <span class="comment"># hidden channels</span></span><br><span class="line">	self.cv1 = Conv(c1, c_, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">	self.cv2 = Conv(c_ * (<span class="built_in">len</span>(k) + <span class="number">1</span>), c2, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">	self.m = nn.ModuleList([nn.MaxPool2d(kernel_size=x, stride=<span class="number">1</span>, padding=x // <span class="number">2</span>) <span class="keyword">for</span> x <span class="keyword">in</span> k])</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">	x = self.cv1(x)</span><br><span class="line">	<span class="keyword">with</span> warnings.catch_warnings():</span><br><span class="line">		warnings.simplefilter(<span class="string">&#x27;ignore&#x27;</span>) </span><br><span class="line">		<span class="keyword">return</span> self.cv2(torch.cat([x] + [m(x) <span class="keyword">for</span> m <span class="keyword">in</span> self.m], <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="sppnet-比较-rcnn-的改进"><a class="markdownIt-Anchor" href="#sppnet-比较-rcnn-的改进"></a> SPPNet 比较 RCNN 的改进 ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPPNet-20230408141617-1.png" alt="SPPNet-20230408141617-1" /></li>
<li>RCNN 需要对候选区域做多次的特征提取，列如：上图一张图 4 个目标需要跑 4 次网络提取特征，而 SPPNet 只跑一次，然后通过映射关系直接提取 4 个目标位置的特征</li>
<li><strong>1）生成候选窗口：</strong> SPPnet和RCNN都是首先通过选择性搜索(SelectiveSearch,SS)生成待检测的2000个候选窗口</li>
<li><strong>2）提取候选框的固定长度特征：</strong> SPPNet提出了一种从候选区域到全图的特征映射(feature map)之间的对应关系，通过此种映射关系可以直接获取到候选区域的特征向量，不需要重复使用CNN提取特征，从而大幅度缩短训练时间</li>
</ul>
<h1 id="sppnet-如何在最后一层的-feature-maps-中找到对应候选区域的特征"><a class="markdownIt-Anchor" href="#sppnet-如何在最后一层的-feature-maps-中找到对应候选区域的特征"></a> SPPNet 如何在最后一层的 feature maps 中找到对应候选区域的特征？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPPNet-20230408141618.png" alt="SPPNet-20230408141618" /></li>
<li>假设 (x’, y’)表示特征图上的坐标点，坐标点 (x, y)表示原输入图片上的点，那么它们之间有如下转换关系，这种<strong>映射关心与网络结构</strong>有关： (x, y)=(Sx’, Sy’) ，反过来求候选框在特征图的位置<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>L</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo>−</mo><mi>T</mi><mi>o</mi><mi>p</mi><mo>:</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⌊</mo><mi>x</mi><mi mathvariant="normal">/</mi><mi>S</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mi>R</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>−</mo><mi>B</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi><mo>:</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⌈</mo><mi>x</mi><mi mathvariant="normal">/</mi><mi>S</mi><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ccc}Left-Top:x&#x27;=\lfloor x/S\rfloor+1\\  Right-Bottom:x&#x27;=\lceil x/S\rceil-1\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">x</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">x</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li>S就是CNN中所有的strides的乘积，包含了池化、卷积的stride</li>
</ul>
<h1 id="sppnet微调时输入-输出是什么损失如何计算"><a class="markdownIt-Anchor" href="#sppnet微调时输入-输出是什么损失如何计算"></a> SPPNet微调时，输入、输出是什么？损失如何计算?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPPNet-20230408141618-1.png" alt="SPPNet-20230408141618-1" /></li>
<li>首先，在ImageNet上先进行预训练，计算所有SS区域的SPP特征，将SPP的特征对应区域按IOU0.5划分正负样本，然后按1:3的比例微调空间金字塔池化（Spatial Pyramid Pooling,SPP） 后的全连接层</li>
<li><strong>输入</strong>：SS区域的SPP特征</li>
<li><strong>输出</strong>：N+1分类结果</li>
<li><strong>损失</strong>：交叉熵损失(CrossEntropyLoss)</li>
</ul>
<h1 id="sppnet网络微调为什么无法更新卷积层"><a class="markdownIt-Anchor" href="#sppnet网络微调为什么无法更新卷积层"></a> SPPNet网络微调为什么无法更新卷积层？</h1>
<ul>
<li>用类别样本继续训练，目的是使SPP-Layer后边的FC层输出的特征更准确。但是无法使用反向传播微调SPP-Layer前面的卷积层，<strong>无法更新前面的权重</strong></li>
<li>SPPNet 中 fine-tuning 的样本是来自 batch 的 128 张图像的所有 RoI 打散后均匀采样的，这就导致 SGD 的每个 batch 的样本来自不同的图像，<strong>根据链式求导法则，计算梯度需要 Feature Map</strong>，而同时计算和存储这些图像的 Feature Map变得 expensive</li>
<li>FastRCNN 采用分层采样思想，先采样出 N 张图像（image-centric sampling），在这 N 张图像中再采样出 R 个 RoI，具体到实际中，N=2, R=128，同一图像的 RoI 共享计算和内存，也就是只用计算和存储 2 张图像，消耗就大大减少了</li>
</ul>
<h1 id="sppnet-与-rcnn-的区别"><a class="markdownIt-Anchor" href="#sppnet-与-rcnn-的区别"></a> SPPNet 与 RCNN 的区别？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SPPNet-20230408141617-1.png" alt="SPPNet-20230408141617-1" /></li>
<li>RCNN 是让每个候选区域经过 crop/wrap 等操作变换成固定大小的图像；固定大小的图像塞给 CNN 传给后面的层做训练回归分类操作</li>
<li>SPPNet 把全图塞给 CNN 得到全图的 feature map；让 SS 算法得到候选区域与 feature map 直接映射，得到候选区域的映射特征向量 (这是映射来的，不需要过 CNN) ；映射过来的特征向量大小不固定，所以这些特征向量塞给 SPP 层 (空间金字塔变换层)，SPP 层接收任何大小的输入，输出固定大小的特征向量，再塞给 FC 层，经过映射+SPP 转换，简化了计算，速度/精确度也上去了</li>
</ul>
<p>参考资料：</p>
<ol>
<li><a href="https://blog.csdn.net/wzk4869/article/details/127762368">【目标检测】SPP-Net中候选区域在原图和feature map之间的映射关系_spp映射_旅途中的宽~的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>Gated-SCNN：Gated Shape CNNs for Semantic Segmentation</title>
    <url>/2020/04/21/Gated-SCNN%EF%BC%9AGated%20Shape%20CNNs%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>目前的语义分割还是通过逐像素点的密集分类框架完成，但有时不太理想。本文设计了一种双流模型，在常规流之外引入形状流分支额外处理形状信息，而且负责处理形状信息的网络结构不用太深就可以提升细小结构的边缘分割效果</p>
<a id="more"></a>
<h1 id="什么是-gscnn"><a class="markdownIt-Anchor" href="#什么是-gscnn"></a> 什么是 GSCNN？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GSCNN-20230408143005.png" alt="GSCNN-20230408143005" /></li>
<li>提出了双流CNN(two-stream CNN)结构,也就是将shape stream单独分离出来,与常规的CNN进行并行操作,最后将两者学习到的特征通过ASPP进行融合处理,从而提高了语义分割的性能</li>
</ul>
<h1 id="gscnn-的网络结构"><a class="markdownIt-Anchor" href="#gscnn-的网络结构"></a> GSCNN 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GSCNN-20230408143005-1.png" alt="GSCNN-20230408143005-1" /></li>
<li><strong>Regular Stream</strong>：Resnet101 &amp; WideResnet, 也可以用 VGG 或者其他的 Resnet 来代替, 输入是 Nx3xHxW, 输出 Nx3 xH/mxW/m, 其中 m 表示步长</li>
<li><strong>Shape Stream</strong>：接收<strong>Regular Stream</strong>的输入，并用于学习 GCL 参数，多次叠加 GCL 层，学习不同尺度下的目标的 Shape，这个分支使用图像梯度作为标签，使用 BCE loss 监督</li>
</ul>
<h1 id="gscnn-的双流融合的思路"><a class="markdownIt-Anchor" href="#gscnn-的双流融合的思路"></a> GSCNN 的双流融合的思路？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GSCNN-20230408143005-1.png" alt="GSCNN-20230408143005-1" /></li>
<li>将 ShapeStream 的输出 S (Nx1xHxW)(可视为 boundary feature)和 RegularStream 的输出 R (NxCxHxW)(可视为 region feature)通过 ASPP 融合 (ASPP 通过不同 rate 的 dilation 卷积获得 multi-scale 的多尺度特征。用空洞卷积替换 pooling 可以减少信息损失)</li>
</ul>
<h1 id="gscnn-的-gcl-是什么"><a class="markdownIt-Anchor" href="#gscnn-的-gcl-是什么"></a> GSCNN 的 GCL 是什么？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DMNet-20230408143032.png" alt="DMNet-20230408143032" /></li>
<li>它帮助 ShapeStream 只处理相关信息 (比如形状、纹理)而过滤掉其他无关的特征信息</li>
<li>部分卷积(Partial Convolutions) 中 Mask 更新的不合理；提出新卷积层（Gated Convolution layer ），通过在所有层的每个空间位置为每个通道提供可学习的动态特征选择机制来解决传统卷积（vanilla convolutions）将所有输入像素视为有效像素的问题的不合理性</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>Non-local Neural Networks</title>
    <url>/2020/04/16/Non-local%20Neural%20Networks/</url>
    <content><![CDATA[<p>受到计算机视觉的Non-local means(NLM)的影响，Non-local 提出Non-local operations，用于捕获长距离的关系，提升了语义分割的效果</p>
<a id="more"></a>
<h1 id="什么是-non-local-operations"><a class="markdownIt-Anchor" href="#什么是-non-local-operations"></a> 什么是 Non-local operations？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Non-local-20230408143233.png" alt="Non-local-20230408143233" /></li>
<li>CNN、RNN 都是对局部区域的操作，就是 local operations；受到计算机视觉的 [[…/C04-OpenCV/OpenCV官方指南/图像平滑#^1ni6g8|Non-local means(NLM)]] 的影响，Non-local 提出 <strong>Non-local operations</strong>，用于捕获长距离的关系，如：像素与像素之间的关系、视频帧之间的关系、NLP 的字词之间的关系</li>
<li><strong>Non-local operations 的定义</strong>：以下 x 是输入信号；i 代表的是输出位置，如空间、时间或者时空的索引，他的响应应该对 j 进行枚举然后计算得到的；<strong>f 函数</strong>计算 i 和 j 的相似度；<strong>g 函数</strong>计算 feature map 在 j 位置的表示；最终的 y 是通过响应因子 C (x) 进行标准化处理以后得到的 $$y_{i}=\frac{1}{C(x)} \sum_{\forall j} f\left(x_{i}, x_{j}\right) g\left(x_{j}\right)$$</li>
</ul>
<h1 id="non-local-operations-的-f-函数"><a class="markdownIt-Anchor" href="#non-local-operations-的-f-函数"></a> Non-local operations 的 f 函数？</h1>
<ul>
<li>一个用于计算 i 和 j 相似度的函数，作者提出了四个具体的函数可以用作 f 函数</li>
<li><strong>Gaussian function</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><msubsup><mi>x</mi><mi>i</mi><mi>T</mi></msubsup><msub><mi>x</mi><mi>j</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">e^{x_{i}^{T} x_{j}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.006365em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.006365em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 使用一个点乘来计算相似度，配合归一化，公式类似 softmax 的过程 $$\begin{array}{c}f\left(x_{i}, x_{j}\right)=e<sup>{x_{i}</sup>{T} x_{j}} \C(x)=\sum_{\forall j} f\left(x_{i}, x_{j}\right)\end{array}$$</li>
<li><strong>Embedded Gaussian</strong>：基于上面的变换，现将 xi, xj 编码到一个空间再计算相似度 $$\begin{array}{l}f\left(x_{i}, x_{j}\right)=e<sup>{\theta\left(x_{i}\right)</sup>{T} \phi\left(x_{j}\right)} \C(x)=\sum_{\forall j} f\left(x_{i}, x_{j}\right)\end{array}$$</li>
<li><strong>Dot product</strong>：$$\begin{array}{c}f\left(x_{i}, x_{j}\right)=\theta\left(x_{i}\right)^{T} \phi\left(x_{j}\right) \C(x)=N\end{array}$$</li>
<li><strong>Concatenation</strong>：$$\begin{array}{c}f\left(x_{i}, x_{j}\right)=RELU(w_f^T.[\theta\left(x_i\right)\phi\left(x_{j}\right)] \C(x)=N\end{array}$$</li>
</ul>
<h1 id="non-local-operations-的-g-函数"><a class="markdownIt-Anchor" href="#non-local-operations-的-g-函数"></a> Non-local operations 的 g 函数？</h1>
<ul>
<li>可以看做一个线性转化（Linear Embedding），可以通过空间上的1×1卷积实现，公式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">W_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是需要学习的权重矩阵 $$g(x_j)=W_gx_j$$</li>
<li>这个相当于计算得到每个待加注意力位置中间变量表示，后续注意力矩阵乘这个中间变量表示，得到加注意力的结果</li>
</ul>
<hr />
<h1 id="什么是-non-local"><a class="markdownIt-Anchor" href="#什么是-non-local"></a> 什么是 Non-local?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Non-local-20230408143234.png" alt="Non-local-20230408143234" /></li>
<li><strong>非局部神经网络模型</strong>（Non-local）用于有效捕捉序列中各个元素间的依赖关系。在这里，所谓的序列可以是单幅图像的不同位置（即空间序列），也可以是视频中的不同帧（即时间序列），还可以是视频中不同帧的不同位置（即时空序列）</li>
<li>Non-local 网络更像是一个通用的“积木”，可以将其嵌入到任意具体视觉任务模型中的任意位置，可谓“即插即用”</li>
</ul>
<h1 id="non-local-的自注意力结构设计"><a class="markdownIt-Anchor" href="#non-local-的自注意力结构设计"></a> Non-local 的自注意力结构设计？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Non-local-20230408143235.png" alt="Non-local-20230408143235" /></li>
<li>上图是 Non-local 选择<strong>Embedded Gaussian</strong>作为 f 函数设计的 Non-local block，模块最终输出是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">z</mi><mi>i</mi></msub><mo>=</mo><msub><mi>W</mi><mi>z</mi></msub><msub><mi mathvariant="bold">y</mi><mi>i</mi></msub><mo>+</mo><msub><mi mathvariant="bold">x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{z}_i=W_z\mathbf{y}_i+\mathbf{x}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>z</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_z,y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 f 函数和 g 函数计算得到，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是原始输入</li>
<li>(1)输入 X 先被编码到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">T\times H\times W\times 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span> 空间，然后再经过 reshape，dot-product，经过 softmax 归一化得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x_i,x_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>(2) x 经过 1 x 1 卷积得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">T\times H\times W\times 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span> ,reshape 后得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>(3) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f (x_i, x_j) \times g(x_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 得到注意力值，经过 1 x 1 卷积调整通道后和 x 相加</li>
</ul>
<h1 id="non-local-在什么实体之间构建注意力"><a class="markdownIt-Anchor" href="#non-local-在什么实体之间构建注意力"></a> Non-local 在什么实体之间构建注意力？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-03-18%2010.43.06.excalidraw.png" alt="Drawing 2023-03-18 10.43.06.excalidraw" /></li>
<li>注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>H</mi><mi>W</mi><mo>×</mo><mi>T</mi><mi>H</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">THW\times THW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>，表示 T 个样例，高宽为 HW 的矩阵，<strong>对于一个位置的注意力，是只由单个样例内的所有位置计算，还是所有样例的所有位置参与了?</strong></li>
<li>经过是证明，这种空间注意力不仅仅是一个样例参与，而是所有样例都参与，实际上可以忽略样例，假设 THW=18，那么就是 18 个特征点之间构建注意力矩阵 (18,18)，不管这 18 个特征点是来自哪些样例，来自哪个位置，都参与了注意力矩阵的构建</li>
<li>所以总结可以，注意力空间在一个视频帧内、多个视频帧之间构建，其构建过程针对特征点，而不是样例</li>
</ul>
<h1 id="什么是-non-local-means-nlm"><a class="markdownIt-Anchor" href="#什么是-non-local-means-nlm"></a> 什么是 Non-local means (NLM)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/%E5%9B%BE%E5%83%8F%E5%B9%B3%E6%BB%91-20230520224309-1.png" alt="图像平滑-20230520224309-1" /></li>
<li><strong>局部降噪算法</strong>：均值滤波、中值滤波等，都是使用一个固定的 Kernel 对图像进行一个滤波操作。这种算法被称之为局部算法。<strong>“局部均值”滤波器采用目标像素周围的一组像素的平均值来平滑图像</strong></li>
<li><strong>NLM</strong>：图像去噪的一种算法。与“局部均值”滤波器不同，<strong>非局部均值过滤采用图像中所有像素的平均值，并根据这些像素与目标像素的相似程度进行加权</strong>。与局部均值算法相比，这导致滤波后清晰度更高，图像中的细节损失更少</li>
<li><strong>NLM 的实现</strong>：通过在图像块中进行搜索，通过计算滑动窗口与指定窗口的欧氏距离，从而它们之间的相似程度，从而确定加权平均的值，进行滤波操作，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 表示加权平均的 kernel 值，由两个块之间的相似度决定； Opencv 使用 cv: : fastNlMeansDenoisingColored可快速执行NLM $$NL<a href="i">v</a>=\sum\limits_{j\in I}w(i,j)v(j),$$</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>自注意力</tag>
      </tags>
  </entry>
  <entry>
    <title>RetinaNet：Focal Loss for Dense Object Detection</title>
    <url>/2020/04/15/RetinaNet%EF%BC%9AFocal%20Loss%20for%20Dense%20Object%20Detection/</url>
    <content><![CDATA[<p>基于 FPN 的多 head 检测器，最大的创新是提出 focal loss 动态平衡目标检测中正样本少数，负样本大多数的情况</p>
<a id="more"></a>
<h1 id="什么是-retinanet"><a class="markdownIt-Anchor" href="#什么是-retinanet"></a> 什么是 RetinaNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RetinaNet-20230408141600.png" alt="" /></li>
<li>一个常见的基于 FPN 的多 head 检测器，最大的创新是提出 focal loss 动态平衡目标检测中正样本少数，负样本大多数的情况</li>
</ul>
<h1 id="retinanet-的网络结构"><a class="markdownIt-Anchor" href="#retinanet-的网络结构"></a> RetinaNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RetinaNet-20230408141600.png" alt="" /></li>
<li>Backbone：ResNet</li>
<li>Neck：FPN，并输出5个分支，用于预测不同尺度的目标</li>
<li>Head：每个head分为2个分支，其中一个分支输出KA个通道(K表示类别数，A表示Anchor数量)，另一个输出4A个通道(表示框的预测值)，注意这里的K不包括背景</li>
</ul>
<h1 id="retinanet的先验框设置"><a class="markdownIt-Anchor" href="#retinanet的先验框设置"></a> RetinaNet的先验框设置？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Q4X5DyYyORG-zto1rJBr5x-ABvcEOTchccV9zEK-V1vd3YZ4Wu9zZlMqJcSUTnfufsPS6tvKl7tcMWWG6828rp5RmXZWjrqBttlEUdVx2loUlvaI1P6Kpmr7yQj8qX2t.png" alt="" /></li>
<li>RetinaNet 使用 5 个分支预测目标，相对于原图的 stride 分别[32, 64, 128, 256, 512]，使用 3 个 scale，3 个 ratios 为<strong>每个分支</strong>生成 9 种 anchor size，其中 scale 指 anchor 的大小（上图 Scale 每行计算后结果），ratio 为 anchor 的宽高比 (上图 Ratios)</li>
<li>根据 stride 可知，越高的层其 Anchor 越大，预测的目标也越大，RetinaNet 预测的目标大小范围[32, 813]</li>
</ul>
<h1 id="retinanet-如何进行标签匹配"><a class="markdownIt-Anchor" href="#retinanet-如何进行标签匹配"></a> RetinaNet 如何进行标签匹配？</h1>
<ul>
<li><strong>匹配要求：</strong> 每个 gt box 都一定有<strong>至少一个 anchor 匹配</strong></li>
<li><strong>匹配规则：</strong> （1）先验框与所有的 gt 的最大 IOU 小于 0.4，则该 anchor 是<strong>负样本</strong>；（2）先验框与所有的 gt 的最大 IOU 大于等于 0.5，则该 anchor 是<strong>正样本</strong>；（3）未确保每个 gt 均有预测，取与其最大 IOU 的先验框为正样本，即使该 IOU 小于 0.4</li>
</ul>
<h1 id="retinanet的损失函数"><a class="markdownIt-Anchor" href="#retinanet的损失函数"></a> RetinaNet的损失函数？</h1>
<ul>
<li><strong>分类损失：</strong> 分类损失使 Focal loss</li>
<li><strong>回归损失：</strong> 回归损失使平滑绝对值损失 (Smooth L1 Loss)</li>
</ul>
<h1 id="什么是focal-loss"><a class="markdownIt-Anchor" href="#什么是focal-loss"></a> 什么是Focal loss?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/JuBk1Eg3WIdmXPaN4GcgP-LnsGIGAQEk4Du3zeFTYTH2kUgo9WSeCVUuGJKj09_2JYcoN1ktXAFldvBK9DnQvQ1PsrnIkBUJjbOC5R3qdFIz7q8M0HygVACf4DjNcP9c.png" alt="" /></li>
<li>基交叉熵损失提出的一种损失函数，该函数的主要思想是：易分样本（预测概率大于0.5的样本）给于更小的损失，难分样本的损失占比相对更多。如上图的蓝色线是原始交叉熵，其0.5预测概率的样本损失更大，使用Focal loss后其损失变小</li>
<li>Focal loss 定义为，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 是预测的概率，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span> 是人工定义的参数，越大对易分样本损失减少越多<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>L</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msup><mi>p</mi><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F L=\left\{\begin{array}{ll} -(1-p)^{\gamma} \log (p), &amp; \text { if } &amp; y=1 \\ - p^{\gamma} \log (1-p), &amp; \text { if } &amp; y=0 \end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\gamma=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时，退化为标准的交叉熵损失；当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\gamma=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 时，可以看出以原始交叉熵计算容易、难分样本损失比为1:1，经过 focal loss 加权后其比值变为1:16，<strong>难分样本的损失占比上升</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mn>0.9</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>0.9</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>E</mi><mo stretchy="false">(</mo><mn>0.6</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>0.6</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mi>L</mi><mo stretchy="false">(</mo><mn>0.9</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mn>0.1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>0.9</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mi>L</mi><mo stretchy="false">(</mo><mn>0.6</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mn>0.4</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>0.6</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}CE(0.9)=-log(0.9) \\ CE(0.6)=-log(0.6) \\ FL(0.9)=-(0.1)^2log(0.9)\\ FL(0.6)=-(0.4)^2log(0.6)\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mclose">)</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mclose">)</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
</li>
<li>实践中常使用带 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>&gt;</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">\alpha&gt;0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span> 的 Focal loss，可见在训练过程关注对象的排序为<strong>正难 &gt; 负难 &gt; 正易 &gt; 负易</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>L</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="right left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>α</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msup><mi>p</mi><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F L=\left\{\begin{array}{rll} -\alpha(1-p)^{\gamma} \log (p), &amp; \text { if } &amp; y=1 \\ -(1-\alpha) p^{\gamma} \log (1-p), &amp; \text { if } &amp; y=0 \end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
<h1 id="focal-loss为什么能帮助one-stage的目标检测任务"><a class="markdownIt-Anchor" href="#focal-loss为什么能帮助one-stage的目标检测任务"></a> Focal loss为什么能帮助one-stage的目标检测任务？</h1>
<ul>
<li><strong>two stage：</strong> R-CNN 类似的检测器之所以能解决类别不平衡问题，是因为<strong>两阶段级联结构和启发式采样</strong>。提取 proposal 阶段（选择性搜索(SelectiveSearch,SS)、RPN）很快的将候选对象位置的数量缩小到一个小数目（1-2k），过滤掉大多数背景样本（其实就是筛选 anchor 数量）；在第二个分类阶段，执行启发式采样，例如固定的前景背景比（1:3），或在线难样本挖掘（OHEM），以保持前景和背景之间的平衡</li>
<li><strong>one-stage：</strong> 相比之下，单级检测器必须处理在图像中定期采样的一组更大的候选对象位置。因为 one-stage 只有一个阶段，产生的候选框相比 two-stage 要多太多。通常需要大约 100K 个位置（例如 SSD的 8700+个位置），且这里面正样本几个十几个，少之又少。即使你抽样了，最后在训练过程中，整个过程还是被大量容易区分的负样本，也就是背景所主导</li>
<li>少样正样本提供的关键信息却不能在一般所用的 training loss中发挥正常作用，从而无法得出一个能对模型训练提供正确指导的 loss，常用的解决此问题的方法就难负例挖掘(hard negative mining)，或其它更复杂的用于过滤负样本从而使正负样本数维持一定比率的样本取样方法。该论文中提出了 Focal Loss来对最终的 Loss 进行校正</li>
</ul>
<h1 id="什么是正样本-负样本-易分样本-难分样本"><a class="markdownIt-Anchor" href="#什么是正样本-负样本-易分样本-难分样本"></a> 什么是正样本、负样本、易分样本、难分样本？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/070IJa_KBWA6YPxQcHfKrJleKhcSSbPr-sUfFPUmBhuzyv0VfJ-f_IThYZiKjGyusIk32HyDdRWnJPKO4O_XNs0QplNZXxJGADqJSzPYhxQB2-KiYPBciQXA3HS7RcZF.png" alt="" /></li>
<li><strong>正样本</strong>： 与真值对应的目标类别来说该样本为正样本</li>
<li><strong>负样本</strong>： 与真值不对应的其他所有目标类别来说该样本为负样本</li>
<li><strong>简单样本</strong>： 预测时与真值标签误差较小的样本，如预测概率在0.5附近的样本</li>
<li><strong>困难样本</strong>： 预测时与真值标签误差较大的样本，如预测概率在靠近0或靠近1的样本</li>
</ul>
<h1 id="难分负样本挖掘与-focal-loss-的异同"><a class="markdownIt-Anchor" href="#难分负样本挖掘与-focal-loss-的异同"></a> 难分负样本挖掘与 Focal loss 的异同？</h1>
<ul>
<li><strong>相同</strong>：两个方法都是放大难分样本的损失占比，实现网络的进一步学习</li>
<li><strong>差异</strong>：难负例挖掘根据最后损失对损失采样，并选择损失大的负样本（负难）；Focal loss 仍然使用全部样本，但是通过使用预测打分动态加权损失，达到提升难例损失占比的作用（不区分正难和负难，同时提升）</li>
</ul>
<h1 id="通过平衡因子控制正负样本权重和focal-loss的区别"><a class="markdownIt-Anchor" href="#通过平衡因子控制正负样本权重和focal-loss的区别"></a> 通过平衡因子控制正负样本权重和Focal loss的区别？</h1>
<ul>
<li>通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span><strong>静态加权</strong>交叉熵，属于类别加权<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>E</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>α</mi><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">C E=\left\{\begin{array}{ll} -\alpha \log (p), &amp; \text { if } &amp; y=1 \\ -(1-\alpha) \log (1-p), &amp; \text { if } &amp; y=0 \end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span> 根据预测概率<strong>动态加权</strong>难分样本，属于样本加权<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>L</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msup><mi>p</mi><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F L=\left\{\begin{array}{ll} -(1-p)^{\gamma} \log (p), &amp; \text { if } &amp; y=1 \\ - p^{\gamma} \log (1-p), &amp; \text { if } &amp; y=0 \end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>两者针对的样本类型不同，实际使用时，常常将两者合并在一起使用，在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>&gt;</mo><mn>0.5</mn><mo separator="true">,</mo><mi>γ</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\alpha&gt;0.5,\gamma&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的情况下实现以下关注顺序：<strong>正难 &gt; 负难 &gt; 正易 &gt; 负易</strong><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>L</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>α</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msup><mi>p</mi><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> if </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F L=\left\{\begin{array}{ll} -\alpha(1-p)^{\gamma} \log (p), &amp; \text { if } &amp; y=1 \\ -(1-\alpha) p^{\gamma} \log (1-p), &amp; \text { if } &amp; y=0 \end{array}\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-base</tag>
      </tags>
  </entry>
  <entry>
    <title>DANet：Dual Attention Network for Scene Segmentation</title>
    <url>/2020/03/23/DANet%EF%BC%9ADual%20Attention%20Network%20for%20Scene%20Segmentation/</url>
    <content><![CDATA[<p>DANet利用自注意力机制自适应地整合局部特征和他们的全局依赖关系，提出了位置注意模块和通道注意模块，分别对空间和通道维度上的语义相互依赖关系进行了建模</p>
<a id="more"></a>
<h1 id="什么是-danet"><a class="markdownIt-Anchor" href="#什么是-danet"></a> 什么是 DANet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142340.png" alt="DANet-20230408142340" /></li>
<li>DANet 利用自注意力机制自适应地整合局部特征和他们的全局依赖关系，提出了位置注意模块和通道注意模块，分别对空间和通道维度上的语义相互依赖关系进行了建模</li>
</ul>
<h1 id="danet-的网络结构"><a class="markdownIt-Anchor" href="#danet-的网络结构"></a> DANet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142340-1.png" alt="DANet-20230408142340-1" /></li>
<li>在传统的扩张 FCN之上附加以下两种注意力</li>
<li><strong>position attention module</strong>：使用自注意力机制捕获特征图在任意两个位置之间的空间依赖关系，通过加权求和对所有位置的特征进行聚合更新，权重是由对应两个位置的特征相似性决定的</li>
<li><strong>Channel attention module</strong>：使用自注意力机制来捕获任意两个通道图之间的通道依赖关系，并使用所有通道图的加权，和更新每个通道图</li>
</ul>
<h1 id="danet-对位置加权的原理"><a class="markdownIt-Anchor" href="#danet-对位置加权的原理"></a> DANet 对位置加权的原理？</h1>
<ul>
<li><strong>关键在于如何在输入 CHW 的数据流上构建出 (HxW) x (HxW)的空间注意力矩阵，一个很快的想法就是 HWC、CHW 两个矩阵的点积</strong> <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142341.png" alt="DANet-20230408142341" /></li>
<li>假设特征图 A 为3x2x2（CxHxW），经过卷积之后得到的 B, C, D reshape 之后为3x4（CxN），N=HxW</li>
<li>B 经过 reshape（3×2×2—&gt;3×4）, 然后被转置<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142342.png" alt="DANet-20230408142342" /></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>B</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>p</mi><mi>e</mi></mrow><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">B_{reshape}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2605469999999999em;vertical-align:-0.4192159999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>p</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{reshape}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 相乘，然后经过 softmax 得到 S（NxN） <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142343.png" alt="DANet-20230408142343" /></li>
<li>特征图 D 经过 reshape 后为 C×N，D 与 S 的转置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">S^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 相乘得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><msup><mi>S</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">DS^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>（得到 C×N 的矩阵） <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142343-1.png" alt="DANet-20230408142343-1" /></li>
<li><strong>总结</strong>：DS 每一行其实是每个通道的加权展开形式：即（1,1）为第一个 channel 中第一个像素与其他像素的空间权重关系；（1,2）为第一个 channel 中第二个像素与其他像素的空间权重关系……（2,1）为第二个 channel 中第一个像素与其他像素的空间权重关系</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><msup><mi>S</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">DS^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>经过reshape为3×2×2（C×H×W）的矩阵之后再与原始的A相加便可得到空间注意力特征图</li>
</ul>
<h1 id="danet-对通道加权的原理"><a class="markdownIt-Anchor" href="#danet-对通道加权的原理"></a> DANet 对通道加权的原理？</h1>
<ul>
<li><strong>关键在于如何在输入 CHW 的数据流上构建出 C x C 的空间注意力矩阵，一个很快的想法就是 CHW、HWC 两个矩阵的点积</strong> <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142344.png" alt="DANet-20230408142344" /></li>
<li>和[[DANet#^tlzblm|位置加权原理]] 类似，经过一些 reshape、transpose、softmax 之后得到通道特征图 X (CxC) <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DANet-20230408142344-1.png" alt="DANet-20230408142344-1" /></li>
<li><strong>总结</strong>：每一个位置是三个channel的加权，此结果reshape成C×H×W后再与原始的A相加，可得到通道注意力特征图</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>RCNN：Rich feature hierarchies for accurate object detection and semantic segmentation</title>
    <url>/2020/03/03/RCNN%EF%BC%9ARich%20feature%20hierarchies%20for%20accurate%20object%20detection%20and%20semantic%20segmentation/</url>
    <content><![CDATA[<p>利用CNN进行目标检测的首个神经网络，首先利用选择性搜索提取图片的2000个左右的 Region Proposal，然后通过AlexNet提取得到固定长度的特征，接着使用支持向量机(SVM)分析这些特征，以实现获选区域的分类，使用边界框回归分析这些特征，获取获选框更精细位置</p>
<a id="more"></a>
<h1 id="什么是-rcnn"><a class="markdownIt-Anchor" href="#什么是-rcnn"></a> 什么是 RCNN?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RCNN-20230408141544.png" alt="RCNN-20230408141544" /></li>
<li>利用CNN进行目标检测的首个神经网络</li>
<li>利用选择性搜索(SelectiveSearch,SS) 提取图片的2000个左右的 Region Proposal，然后通过AlexNet提取得到固定长度的特征，接着使用支持向量机(SVM)分析这些特征，以实现获选区域的分类，使用边界框回归(Bounding box Regression)分析这些特征，获取获选框更精细位置</li>
</ul>
<h1 id="rcnn的目标识别任务步骤"><a class="markdownIt-Anchor" href="#rcnn的目标识别任务步骤"></a> RCNN的目标识别任务步骤？</h1>
<ul>
<li><strong>(1)图片输入</strong></li>
<li><strong>(2)获取获选框：</strong> 利用选择性搜索(SelectiveSearch,SS)算法在图像中提取2000个左右的Region Proposal</li>
<li><strong>(3)微调CNN分类模型：</strong> 将每个Region Proposal缩放成227x227的大小并输入到CNN，做N+1的多分类分类</li>
<li><strong>(4)训练SVM分类模型：</strong> 将CNN模型的fc7层的输出作为特征，训练SVM的目标及背景的二分类器</li>
<li><strong>(5)边界框回归：</strong> 对被SVM分类为目标的获选框，用边界框回归(Bounding box Regression)校正原来的建议窗口，生成预测窗口坐标</li>
</ul>
<h1 id="rcnn微调时输入-输出是什么损失如何计算"><a class="markdownIt-Anchor" href="#rcnn微调时输入-输出是什么损失如何计算"></a> RCNN微调时，输入、输出是什么？损失如何计算？</h1>
<ul>
<li><strong>输入</strong>： 使用AlexNet进行微调，输入是目标检测的候选框区域的图片，缩放到（227，227），根据IOU&gt;0.5判定正样本，自定义数据采集器，使得每次训练128个图像，其中32个正样本，96个负样本</li>
<li><strong>输出</strong>：输出是N+1分类，判断该候选框内的目标类别</li>
<li>损失函数：使用交叉熵损失(CrossEntropyLoss)</li>
</ul>
<h1 id="什么是选择性搜索-selective-search-ss"><a class="markdownIt-Anchor" href="#什么是选择性搜索-selective-search-ss"></a> 什么是选择性搜索 (Selective Search, SS) ？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/RCNN-20230408141545.png" alt="" /></li>
<li>使用一种过分割手段，将图像分割成小区域 (1k~2k 个)</li>
<li>查看现有小区域，按照合并规则合并可能性最高的相邻两个区域。重复直到整张图像合并成一个区域位置</li>
<li>优先合并以下四种区域： 颜色（颜色直方图）相近的， 纹理（梯度直方图）相近的，合并后总面积小的</li>
</ul>
<h1 id="rcnn是如何训练候选框的分类模型的"><a class="markdownIt-Anchor" href="#rcnn是如何训练候选框的分类模型的"></a> RCNN是如何训练候选框的分类模型的？</h1>
<ul>
<li>1）<strong>预训练模型</strong>：在imageNet上<strong>预训练</strong>AlexNet模型；</li>
<li>2）<strong>微调预训练模型</strong>：修改AlexNet模型最后一层，类别改为(N+1)，在N个获选框上<strong>微调</strong>模型。根据IOU&gt;0.5判定正样本，并使得每个batchsize放入96负样本、32正样本训练</li>
<li>3）<strong>训练SVM模型</strong>：完成微调后，输出每个获选框的fc7层4096维的特征，然后在<strong>SVM</strong>上训练该特征，获得获选框的分类模型。训练SVM给标签时，判断某个候选框是某个类别的正样本的要求是IOU&gt;0.3，为每个类别按正负样本训练SVM分类器</li>
</ul>
<h1 id="rcnn-为什么不使用微调后的-alexnet-作为获选框的分类模型而是重新构建-svm"><a class="markdownIt-Anchor" href="#rcnn-为什么不使用微调后的-alexnet-作为获选框的分类模型而是重新构建-svm"></a> RCNN 为什么不使用微调后的 Alexnet 作为获选框的分类模型，而是重新构建 SVM?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-06%2011.43.00.excalidraw.png" alt="Drawing 2023-02-06 11.43.00.excalidraw" /></li>
<li>两个模型训练时，对正样本的定义不同，微调 AlexNet 时，IOU&gt;0.5 即可；训练 SVM 时，IOU=1，这意味着 AlexNet 的<strong>正负样本比例</strong>比 SVM 大</li>
<li>AlexNet 更加容易过拟合：为了防止 AlexNet 向负样本<strong>过拟合</strong>，取 IOU=0.5 对正负样本进行划分，但是这样也导致和现实不符合，因为 SS 采样得到的样本负样本的数量占绝大比例（虽然 batchsize 正负样本按96:32输入，也存在该问题），进而导致 AlexNet 分类效果比 SVM 差</li>
<li>SVM 仅依靠少数的支持向量就完成分类，不容易发生过拟合，按实际更小的正样本（IOU=1）比例即可完成分类，如果取 IOU&gt;0.5 为正样本，mAp 反而变小</li>
</ul>
<h1 id="rcnn中图片resize有几种方式"><a class="markdownIt-Anchor" href="#rcnn中图片resize有几种方式"></a> RCNN中，图片Resize有几种方式？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/X6Uwim3Sr-WmtcVogKIh0Xy0V-TYef2RZ04Mq-0MqRero24fmCdHyobKGccezlzpv8qKbsYBgfzPIxrNa8OnzVk1wsUUdOBfLez8sqroqEJXDNc_Kdqb3kwDw0QzVDtp.png" alt="" /></li>
<li><strong>B先扩充后裁剪</strong>： 直接在原始图片中，把bounding box的边界进行扩展延伸成正方形，然后再进行裁剪；如果已经延伸到了原始图片的外边界，那么就用bounding box中的颜色均值填充</li>
<li><strong>C先裁剪后扩充</strong>：先把bounding box图片裁剪出来，然后用固定的背景颜色填充成正方形图片(背景颜色也是采用bounding box的像素颜色均值)</li>
<li>**D强制裁剪：**不管图片的长宽比例，管它是否扭曲，进行缩放就是了，全部缩放到CNN输入的大小</li>
</ul>
<h1 id="rcnn如何做边界框回归bounding-box-regression"><a class="markdownIt-Anchor" href="#rcnn如何做边界框回归bounding-box-regression"></a> RCNN如何做边界框回归(Bounding box Regression)？</h1>
<ul>
<li>对每一类目标，使用一个线性脊回归器进行精修。 输入为深度网络pool5层的4096维特征，输出为xy方向的缩放和平移。 训练样本：判定为本类的候选框中和真值重叠面积大于0.6的候选框 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Z8l-GuFej7Mx9GK_K3a0nkGUH8tentWTQtOEH9KrwPM4U8iffpTxr9Avimt6JwPuAIrK7bquZeRYuDxj1mIOb1XAzsdWux9Dwt7eV8R3VS5tJ87g3KJlXMu72SulGADS.png" alt="" /></li>
<li>例子：以密集连接层输出输出边界框的左上、右下的坐标点，说明使用候选框的4096维特征可以计算得到获选框坐标
<ul>
<li>
<p>搭建模型，输出为边界框的左上、右下的坐标点</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># load the VGG16 network, ensuring the head FC layers are left off</span></span><br><span class="line">vgg = VGG16(weights=<span class="string">&quot;imagenet&quot;</span>, include_top=<span class="literal">False</span>, input_tensor=Input(shape=(<span class="number">224</span>, <span class="number">224</span>, <span class="number">3</span>)))</span><br><span class="line">vgg.trainable = <span class="literal">False</span></span><br><span class="line">flatten = vgg.output</span><br><span class="line">flatten = Flatten()(flatten)</span><br><span class="line">bboxHead = Dense(<span class="number">128</span>, activation=<span class="string">&quot;relu&quot;</span>)(flatten)</span><br><span class="line">bboxHead = Dense(<span class="number">64</span>, activation=<span class="string">&quot;relu&quot;</span>)(bboxHead)</span><br><span class="line">bboxHead = Dense(<span class="number">32</span>, activation=<span class="string">&quot;relu&quot;</span>)(bboxHead)</span><br><span class="line">bboxHead = Dense(<span class="number">4</span>, activation=<span class="string">&quot;sigmoid&quot;</span>)(bboxHead) <span class="comment"># 输出为边界框的左上、右下的坐标点</span></span><br><span class="line">model = Model(inputs=vgg.<span class="built_in">input</span>, outputs=bboxHead)</span><br><span class="line">opt = Adam(lr=INIT_LR)</span><br><span class="line">model.<span class="built_in">compile</span>(loss=<span class="string">&quot;mse&quot;</span>, optimizer=opt)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>模型训练:</p>
<pre class="highlight"><code class="python">BASE_PATH = <span class="hljs-string">&quot;dataset&quot;</span>
IMAGES_PATH = os.path.sep.join([BASE_PATH, <span class="hljs-string">&quot;images&quot;</span>])
ANNOTS_PATH = os.path.sep.join([BASE_PATH, <span class="hljs-string">&quot;airplanes.csv&quot;</span>])

data = []
targets = []
<span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> rows:
    (filename, startX, startY, endX, endY) = row
    imagePath = os.path.sep.join([IMAGES_PATH, filename])
    image = cv2.imread(imagePath)

    <span class="hljs-comment"># 模型监督信息为：边界框的真实左上、右下的坐标点，按图片大小归一化</span>
    (h, w) = image.shape[:<span class="hljs-number">2</span>]
    startX = <span class="hljs-built_in">float</span>(startX) / w
    startY = <span class="hljs-built_in">float</span>(startY) / h
    endX = <span class="hljs-built_in">float</span>(endX) / w
    endY = <span class="hljs-built_in">float</span>(endY) / h

    image = load_img(imagePath, target_size=(<span class="hljs-number">224</span>, <span class="hljs-number">224</span>))
    image = img_to_array(image)

    data.append(image)
    targets.append((startX, startY, endX, endY)) 	BASE_PATH = <span class="hljs-string">&quot;dataset&quot;</span>
IMAGES_PATH = os.path.sep.join([BASE_PATH, <span class="hljs-string">&quot;images&quot;</span>])
ANNOTS_PATH = os.path.sep.join([BASE_PATH, <span class="hljs-string">&quot;airplanes.csv&quot;</span>])

data = []
targets = []
<span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> rows:
    (filename, startX, startY, endX, endY) = row
    imagePath = os.path.sep.join([IMAGES_PATH, filename])
    image = cv2.imread(imagePath)

    <span class="hljs-comment"># 模型监督信息为：边界框的真实左上、右下的坐标点，按图片大小归一化</span>
    (h, w) = image.shape[:<span class="hljs-number">2</span>]
    startX = <span class="hljs-built_in">float</span>(startX) / w
    startY = <span class="hljs-built_in">float</span>(startY) / h
    endX = <span class="hljs-built_in">float</span>(endX) / w
    endY = <span class="hljs-built_in">float</span>(endY) / h

    image = load_img(imagePath, target_size=(<span class="hljs-number">224</span>, <span class="hljs-number">224</span>))
    image = img_to_array(image)

    data.append(image)
    targets.append((startX, startY, endX, endY)) 

</code></pre>
</li>
<li>
<p>模型输出 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/1lYBti4IGmCw1eHJ1rD1y0O5e4mgEkUhrecbmZUbLHqMnASdIn_t1P0Xn_k2KQ7F67_hcHq7Y7UzZ8JoA7lVvfky9Cds_tsvDgjMgWucYTCLtW2SATCAcQA_MBoKc1Qv.webp" alt="" /></p>
</li>
</ul>
</li>
</ul>
<h1 id="rcnn有哪些缺点"><a class="markdownIt-Anchor" href="#rcnn有哪些缺点"></a> RCNN有哪些缺点？</h1>
<ul>
<li>1、<strong>训练分多步</strong>：R-CNN的训练先要fine tuning一个预训练的网络，然后针对每个类别都训练一个SVM分类器，最后还要用regressors对bounding-box进行回归，另外region proposal也要单独用selective search的方式获得，步骤比较繁琐</li>
<li>2、<strong>时间和内存消耗比较大</strong>。在训练SVM和回归的时候需要用网络训练的特征作为输入，特征保存在磁盘上再读入的时间消耗还是比较大的</li>
<li>3、<strong>测试的时候也比较慢</strong>，每张图片的每个 region proposal 都要做卷积，重复操作太多</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>EMANet：Expectation-Maximization Attention Networks for Semantic Segmentation</title>
    <url>/2020/02/26/EMANet%EF%BC%9AExpectation-Maximization%20Attention%20Networks%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>EMANet摒弃了在全图上计算注意力图的流程，转而通过期望最大化（EM）算法迭代出一组紧凑的基，在这组基上运行注意力机制，从而大大降低了复杂度</p>
<a id="more"></a>
<h1 id="什么是-emanet"><a class="markdownIt-Anchor" href="#什么是-emanet"></a> 什么是 EMANet?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EMANet-20230408142938.png" alt="EMANet-20230408142938" /></li>
<li>提出的期望最大化注意力机制（EMA），摒弃了在全图上计算注意力图的流程，转而通过期望最大化(Expectation-Maximum,EM)迭代出一组紧凑的基，在这组基上运行注意力机制，从而大大降低了复杂度。其中，E 步更新注意力图，M 步更新这组基。E、M 交替执行，收敛之后用来重建特征图</li>
</ul>
<h1 id="emanet-的网络结构"><a class="markdownIt-Anchor" href="#emanet-的网络结构"></a> EMANet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EMANet-20230408142939.png" alt="EMANet-20230408142939" /></li>
<li>图片经过 CNN 后，经过 EMA Unit 模块重建特征后，再经过分割部分预测每个像素的类别</li>
</ul>
<h1 id="emanet-的期望最大化注意力机制"><a class="markdownIt-Anchor" href="#emanet-的期望最大化注意力机制"></a> EMANet 的期望最大化注意力机制？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/EMANet-20230408142939-1.png" alt="EMANet-20230408142939-1" /></li>
<li>图中是 EMA 模块，其作用是<strong>对输入 X 进行 EM 优化得到一个低秩的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>X</mi><mo stretchy="true">~</mo></mover></mrow><annotation encoding="application/x-tex">\widetilde X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94333em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="svg-align" style="width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7
-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0
 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0
 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128
-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span></span></span></span>。从图片上来讲低秩的过程类似类似保边滤波，去掉图片上的噪声</strong></li>
<li>EMA 模块包括 3 个阶段 Am、Ae 和 Ar，其中 Am、Ae 重复 T 次，以更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span></span></span></span> 和 Z，最后得到 Ar</li>
<li>（1）<strong>Am</strong>：初始化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>K</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mu \in R^{K \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，结合输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>N</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X \in R^{N\times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span> 得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>N</mi><mo>×</mo><mi>K</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Z\in R^{N \times K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span></span></span></span></span></span></span></span>，即 3+5-&gt;4 $${\bf Z}=s o f t m a x\left(\lambda{\bf X}\left(\mu^{T}\right)\right)$$</li>
<li>（2）<strong>Ae</strong>：根据 Z 和 X 更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span></span></span></span>，以下是更新第 k 个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span></span></span></span> 的过程，即 1+6-&gt;2 $$\mu_{k}={\frac{\sum_{n=1}^{N}z_{n k}{\bf x}<em>{n}}{\sum</em>{n=1}^{N}z_{n k}}} $$</li>
<li>（3）<strong>Ar</strong>：X 的重新表达 $${\widetilde{X}}=\mathbf{Z}\mu $$</li>
</ul>
<h1 id="emanet-的期望最大化注意力机制和全图建立注意力的区别"><a class="markdownIt-Anchor" href="#emanet-的期望最大化注意力机制和全图建立注意力的区别"></a> EMANet 的期望最大化注意力机制和全图建立注意力的区别？</h1>
<ul>
<li>已知期望最大化注意力机制的更新机制如下，其构建注意力的过程在于学到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span></span></span></span>，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>K</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mu \in R^{K \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>：$${\widetilde{X}}=\mathbf{Z}\mu=s o f t m a x\left (\lambda{\bf X}\left (\mu^{T}\right)\right)\times \mu $$</li>
<li>对一张大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H\times W\times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 的图构建全图注意力，需要构建大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>W</mi><mo>×</mo><mi>H</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">HW\times HW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 的亲和力矩阵，相比较 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">K\times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，全图注意力的矩阵很大</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>注意力</tag>
      </tags>
  </entry>
  <entry>
    <title>LEDNet：A Lightweight Encoder-Decoder Network for Real-Time Semantic Segmentation</title>
    <url>/2020/01/12/LEDNet%EF%BC%9AA%20Lightweight%20Encoder-Decoder%20Network%20for%20Real-Time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>LEDNet使用非对称的编码器-解码器结构，编码器在残差层采用信道分割和混洗操作，以特征重用的方式增强了信息通信。另一方面，解码器采用APN模块，其中空间金字塔结构有利于扩大感受野，而无需引入大量的计算</p>
<a id="more"></a>
<h1 id="什么是-lednet"><a class="markdownIt-Anchor" href="#什么是-lednet"></a> 什么是 LEDNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LEDNet-20230408143158.png" alt="LEDNet-20230408143158" /></li>
<li>为增加语义分割模型推理速度，LEDNet 提出使用非对称的编码器-解码器结构，编码器在残差层采用<strong>通道分割</strong>和<strong>混洗操作</strong>，以特征重用的方式增强了信息通信。另一方面，解码器采用 APN 模块，其中的空间金字塔结构有利于扩大感受野，而无需引入大量的计算</li>
</ul>
<h1 id="lednet-的网络结构"><a class="markdownIt-Anchor" href="#lednet-的网络结构"></a> LEDNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LEDNet-20230408143159.png" alt="LEDNet-20230408143159" /></li>
<li><strong>编码器</strong>：核心单元是残差模块，该模块利用跳接、通道拆分和混洗来实现。尽管跳接允许卷积学习有助于训练的残差函数，但与一维分解卷积相比，拆分和混洗操作增强了特征通道内的信息交换，同时保持了相似的计算成本</li>
<li><strong>解码器</strong>：设计了一个注意力金字塔网络（APN）来提取密集的特征，而不是进行复杂的卷积，其中注意力机制用于估计每个像素的语义标签</li>
</ul>
<h1 id="lednet-编码器上的通道拆解-混洗模块-split-shuffle-non-bottleneck-ss-nbt"><a class="markdownIt-Anchor" href="#lednet-编码器上的通道拆解-混洗模块-split-shuffle-non-bottleneck-ss-nbt"></a> LEDNet 编码器上的通道拆解、混洗模块 (split-shuffle-non-bottleneck, SS-nbt)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LEDNet-20230408143200.png" alt="LEDNet-20230408143200" /></li>
<li>为提升网络中残差块的效率，设计了 SS-nbt，它采用了拆分转换合并策略，该方法接近大型和密集层的表示能力，但计算复杂度却低得多</li>
<li>每个 SS-nbt 的开头，输入被分为两个较低维的分支，每个分支都有输入的一半通道。为了避免逐点卷积，使用一组专用的1D 滤波器（例如1×3、3×1）执行转换，并使用级联合并两个分支的卷积输出，以使通道数保持不变。为了便于训练，通过恒等映射的分支将堆叠的输出与输入相加。最后，使用相同的信道混洗操作来实现两个拆分分支之间的信息通信</li>
<li>每个SS-nbt的高效率允许我们使用更多的功能通道。其次，在每个SS-nbt单元中，将合并的特征通道随机混洗，然后加入下一个单元。这可以看作是一种功能重用，在某种程度上扩大了网络容量，而又没有显着增加复杂性</li>
</ul>
<h1 id="lednet-的注意力金字塔网络apn"><a class="markdownIt-Anchor" href="#lednet-的注意力金字塔网络apn"></a> LEDNet 的注意力金字塔网络（APN）？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LEDNet-20230408143200-1.png" alt="LEDNet-20230408143200-1" /></li>
<li><strong>金字塔模块（空间注意力）</strong>：上图红色框部分，输入是 128x 64x 128，然后串行使用3×3、5×5和7×7卷积来形成多尺度特征金字塔，并且小尺度的特征会 concate 到大尺度特征，最终输出 128x 64 xC 的特征</li>
<li><strong>通道注意力模块</strong>：上图蓝色框部分，输入128x 64x 128直接通过 GAP 生成 1 x 1 x 128 特征，使用 1 x 1 卷积压缩通道后，直接上采样得到 128 x 64 xC</li>
<li><strong>特征融合</strong>：原始 DCNN 输出（128x 64x C）+金字塔模块（空间注意力）输出（128x 64x C）+通道注意力模块输出（128x 64x C）融合，然后通过上采样 8x生成输出</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>轻量</tag>
        <tag>语义语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《少有人走的路2》-[美]m·斯科特·派克(m.scottPeck)</title>
    <url>/2020/01/11/%E4%B9%A6%E6%91%98_%E5%B0%91%E6%9C%89%E4%BA%BA%E8%B5%B0%E7%9A%84%E8%B7%AF2-%5B%E7%BE%8E%5Dm%C2%B7%E6%96%AF%E7%A7%91%E7%89%B9%C2%B7%E6%B4%BE%E5%85%8B(m.scottPeck).hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/25852589">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27993498.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27993498.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>少有人走的路2</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>[美国]斯科特·派克</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2013-10-1</span></div>
			<div class="douban-card-item"><span>评分: </span><span>8.2</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="中文版序"><a class="markdownIt-Anchor" href="#中文版序"></a> 中文版序</h2>
<blockquote>
<p>真正勇敢的人是敢于面对自己内心的人。只要我们勇敢面对自己的问题和痛苦，不选择逃避，不选择谎言，就一定可以摆脱掉心中那只恶狼的追赶，迎来光明的人生。</p>
</blockquote>
<h2 id="第1章-谎言是心理疾病的根源"><a class="markdownIt-Anchor" href="#第1章-谎言是心理疾病的根源"></a> 第1章  谎言是心理疾病的根源</h2>
<blockquote>
<p>只要接受了人生苦难重重的事实，我们就能从苦难中解脱出来，实现人生的超越。人正是在承受痛苦和解决问题的过程中，心灵才得以成长和成熟</p>
</blockquote>
<blockquote>
<p>如果害怕面对问题，畏惧承受痛苦，一心想要逃避，那么我们虽然能够逃避人生正常的痛苦，却会承受心理疾病这种非正常的痛苦。荣格说：“神经官能症，是人生痛苦常见的替代品。”所以，逃避问题和痛苦是一切心理问题的根源。你不解决问题，你就会成为问题！</p>
</blockquote>
<blockquote>
<p>人是用什么方式在逃避问题和痛苦呢？简单地说，就是谎言。谎言的本质是掩盖真相，颠倒是非，人正是用它来逃避自己面临的问题和需要承受的痛苦。</p>
</blockquote>
<blockquote>
<p>从根本上来说，心理治疗是要让人把曾经逃避的痛苦说出来，它既是一种鼓励说真话的游戏，也是一种揭穿谎言的行为。</p>
</blockquote>
<h2 id="把生命颠倒一下就变成了邪恶"><a class="markdownIt-Anchor" href="#把生命颠倒一下就变成了邪恶"></a> 把生命颠倒一下，就变成了邪恶</h2>
<blockquote>
<p>所谓善，就是从本质上热爱生命，对一切充满生命力的事物都有一种与生俱来的亲近感。这种人拥有正常人具有的情感和意愿，能够努力去获取丰富的人生体验，理解生命的价值和意义。他们发出自己的光，但不会吹熄别人的灯</p>
</blockquote>
<blockquote>
<p>所谓恶，就是对死的东西极度感兴趣。具有“恋尸癖”的人被所有没有生气和死的东西所吸引和狂迷，诸如，死尸、腐物、粪便和污垢。他们对此类事物有一种莫名的亲近感，不管是喜欢还是讨厌，都会被它诱惑，不由自主地注意它，并对其作出反应。这些人发不出生命之光，却会去吹熄别人的灯。</p>
</blockquote>
<blockquote>
<p>恶，是运用一切影响力阻止他人心智成熟与自我完善的行为。</p>
</blockquote>
<h2 id="如何识别伪善之人远离邪恶"><a class="markdownIt-Anchor" href="#如何识别伪善之人远离邪恶"></a> 如何识别伪善之人，远离邪恶</h2>
<blockquote>
<p>伪善之人特别在乎自己的形象，总是衣冠楚楚，他们与普通人没什么两样，有的也许很穷，有的也许很富，有的受过高等教育，有的则目不识丁，表面上看他们都是脚踏实地的公民，看不出有什么不良嗜好。</p>
</blockquote>
<blockquote>
<p>其次，伪善的人对伦理道德十分熟悉，也熟悉法律，因为只有这样，他们才能逃避良心的谴责和法律的制裁。</p>
</blockquote>
<blockquote>
<p>第三，伪善的人努力追名逐利，不怕吃苦，而且还会有超强的心理承受力。</p>
</blockquote>
<blockquote>
<p>第四，伪善之人都是“恶性自恋”的人。</p>
</blockquote>
<blockquote>
<p>最后，也是最重要的一点，识别一个人是不是伪善的恶人，还要听从自己的直觉。</p>
</blockquote>
<h2 id="第3章-压制别人就是邪恶"><a class="markdownIt-Anchor" href="#第3章-压制别人就是邪恶"></a> 第3章  压制别人，就是邪恶</h2>
<blockquote>
<p>罪恶感就像是一盏灯，有了罪恶感，人才能看清自己身上的“恶”，从而走向善；而逃避罪恶感，不愿意承受良心的谴责，心灵就会一片漆黑。这样的心灵不仅无法燃烧出生命的光芒，还会吹熄别人的灯，扼杀别人的生命力。</p>
</blockquote>
<blockquote>
<p>为了逃避罪恶感，人会用谎言来掩盖真相，欺骗自己和别人，进而压制别人的生命力，毁灭别人的人生。</p>
</blockquote>
<h2 id="压制别人就是邪恶"><a class="markdownIt-Anchor" href="#压制别人就是邪恶"></a> 压制别人，就是邪恶</h2>
<blockquote>
<p>杀戮是恶，因为它把鲜活的生命变成了尸体。同样，压制别人的生命力和创造力，限制别人思想自由，阻碍别人心灵成长，一味地控制别人、操纵别人，试图把别人变成行尸走肉，更是一种普遍存在的恶。</p>
</blockquote>
<blockquote>
<p>对于正在成长中的孩子来说，父母最应该给予的是爱。爱的目的，是要帮助孩子确立独立的人格，而不是让他的人格依附于父母；是要让孩子勇敢地去追逐自己的梦想，而不是让孩子替父母圆梦；是要让孩子自己去体验生活，而不是要父母替孩子生活。真正爱孩子的父母都明白，爱孩子，就要尊重孩子，尊重他们的意愿和感受，尊重他们有做决定的权力</p>
</blockquote>
<blockquote>
<p>爱的最终目标，不是要成为孩子生活的中心，而是要从孩子生命的重心中逐渐抽离出来，让孩子去走自己的路。这样的爱不仅能促进孩子的心灵成长，同样也能促进父母的心灵成长。</p>
</blockquote>
<blockquote>
<p>不管父母口口声声说自己多么爱孩子，只要他们不接受孩子的独立性，压制孩子的思想和情感，这都不是爱，而是恶。</p>
</blockquote>
<h2 id="要敞开心灵但不要把心灵交给对方管理"><a class="markdownIt-Anchor" href="#要敞开心灵但不要把心灵交给对方管理"></a> 要敞开心灵，但不要把心灵交给对方管理</h2>
<blockquote>
<p>婚姻不应该成为一个埋葬自我的坟场，而应该成为一个提升自我、拓展自我和完善自我的圣地。同样，婚姻需要彼此坦诚相见，却不需要把自己的心灵出卖给对方。那些试图在婚姻中寻求依赖和控制的人，注定会迷失方向。</p>
</blockquote>
<h2 id="不敢面对自己才会去控制别人"><a class="markdownIt-Anchor" href="#不敢面对自己才会去控制别人"></a> 不敢面对自己，才会去控制别人</h2>
<blockquote>
<p>寻找真实自己的过程，是一个痛苦的过程，需要接纳自己的不完美，承受罪恶感所带来的痛苦。</p>
</blockquote>
<h2 id="爱需要一个空间否则便会感到窒息"><a class="markdownIt-Anchor" href="#爱需要一个空间否则便会感到窒息"></a> 爱需要一个空间，否则便会感到窒息</h2>
<blockquote>
<p>爱，是为了成长，成长需要足够的空间；邪恶的本质是压制，它压制别人的自我，压缩别人的空间。但遗憾的是，有些人偏偏把压制当成了爱。</p>
</blockquote>
<h2 id="第5章-从小缺乏爱长大就容易变坏"><a class="markdownIt-Anchor" href="#第5章-从小缺乏爱长大就容易变坏"></a> 第5章  从小缺乏爱，长大就容易变坏</h2>
<blockquote>
<p>几乎每个人都有一定的自恋倾向。不过，正常的自恋，并不是死死地抱着固有的自我不放，而是能够不断突破自我的界限，获得心灵的成长和心智的成熟。但恶性自恋则与之不同，恶性自恋不愿意放弃固有的自我，顽固坚守陈旧的过去，宁愿牺牲别人，也不愿意改变自己。</p>
</blockquote>
<h2 id="自闭是更高程度的自恋"><a class="markdownIt-Anchor" href="#自闭是更高程度的自恋"></a> 自闭，是更高程度的自恋</h2>
<blockquote>
<p>自闭是自恋的终极形式。彻底的自恋者会认为人与家具没什么两样，都是不具有心理感受和情绪的实物。自恋者心中只认为自己最重要，即布伯所谓的唯我独尊的“自我主义”关系观。</p>
</blockquote>
<h2 id="内心没有安全感就想去控制外面的一切"><a class="markdownIt-Anchor" href="#内心没有安全感就想去控制外面的一切"></a> 内心没有安全感，就想去控制外面的一切</h2>
<blockquote>
<p>所谓病态的自我，就是被谎言包裹着的自我。这个自我不敢面对自己的问题和痛苦，不愿正视自己。说谎的人虽然外表从容淡定，但却始终不敢去正视自己的内心，因为正视内心会让他们感受到极大的痛苦，他们不明白痛苦正是生命力的一种表现，否认痛苦也就否认了生命力。</p>
</blockquote>
<h2 id="没勇气正视过去就不会有未来"><a class="markdownIt-Anchor" href="#没勇气正视过去就不会有未来"></a> 没勇气正视过去，就不会有未来</h2>
<blockquote>
<p>撒谎成性之人不是无药可救的，而每一个人，都应该用心中的爱，给予他们勇气，让他们勇敢地面对过去，走出谎言，获得灵魂的救赎，获得心灵的成长。</p>
</blockquote>
<h2 id="第6章-勇敢地面对谎言"><a class="markdownIt-Anchor" href="#第6章-勇敢地面对谎言"></a> 第6章   勇敢地面对谎言</h2>
<blockquote>
<p>所谓谎言，就是掩盖真相，使自己的认识与实际情况不符。过去的已经过去，你抱着过去的自我不放，与现在的情况不相符，甚至完全脱节，这就是谎言。</p>
</blockquote>
<blockquote>
<p>为什么人会抱着过去的自我不放呢？有两个原因：一是过去的自我被溺爱，自己感觉很舒适，不愿意去改变，这种懒惰的心理注定会阻碍成长的道路；二是过去的自我没有获得父母的爱，甚至还遭到伤害，内心充满了恐惧。</p>
</blockquote>
<blockquote>
<p>回头是岸，意味着勇敢地回到过去，在承认过去自我的基础上，放弃旧我，获得新我，促使自我不断拓展和完善。</p>
</blockquote>
<h2 id="为什么天使会变成魔鬼"><a class="markdownIt-Anchor" href="#为什么天使会变成魔鬼"></a> 为什么天使会变成魔鬼</h2>
<blockquote>
<p>如果我们勇敢面对自己的内心，敢于正视自己的缺陷，敢于承受不完美所带来的痛苦，那么，我们就能在接纳真实自我的基础上拓展自我界限，获得心灵的成长和心智的成熟</p>
</blockquote>
<blockquote>
<p>正视自己的过程，是一个逐步面对真相，逐渐戳穿谎言的过程。由于人性中存在着许许多多的缺陷和弱点，如懒惰、恐惧和骄傲等等，所以人们往往不愿意面对现实，承受痛苦，总是用谎言来逃避。</p>
</blockquote>
<blockquote>
<p>不敢面对真实的自我，人就会选择谎言；选择谎言，意味着失去自我，出卖灵魂；而一个没有灵魂的人则会无恶不作。所以，只有勇敢揭穿谎言，我们才能消除邪恶。</p>
</blockquote>
<h2 id="过分依赖集体个人的心智就会退化"><a class="markdownIt-Anchor" href="#过分依赖集体个人的心智就会退化"></a> 过分依赖集体，个人的心智就会退化</h2>
<blockquote>
<p>首先，选择，意味着放弃。选择一条路，意味着要放弃其他的路；有了一个选择，意味着要放弃其他选择。由于人们不愿意放弃，所以，每当面临选择时，内心总是充满了烦恼和痛苦。其次，选择会产生结果，人们必须为自己的选择负责，并承受选择所带来的结果。当然，好的结果让人欣喜，但坏的结果不仅会招致别人的指责、埋怨，也会让自己陷入懊悔和自责之中，令人痛苦不堪。许多人不愿意承担选择所带来的痛苦，便会把自主选择的权力拱手让给了别人。这就是弗洛姆所说的逃避自由。</p>
</blockquote>
<h2 id="勇敢地面对谎言"><a class="markdownIt-Anchor" href="#勇敢地面对谎言"></a> 勇敢地面对谎言</h2>
<blockquote>
<p>不能勇敢面对自己的问题，就容易产生邪恶。</p>
</blockquote>
<blockquote>
<p>一个人如果心中缺失了爱，他就没有勇气去直面内心的痛苦，就会用谎言来逃避。相反，只要人的心中拥有了足够多的爱的力量，他就能勇敢地去面对人生道路上的任何艰难险阻。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>对中国身份证的了解（大陆、香港、澳门、台湾）</title>
    <url>/2019/12/15/%E5%AF%B9%E4%B8%AD%E5%9B%BD%E8%BA%AB%E4%BB%BD%E8%AF%81%E7%9A%84%E4%BA%86%E8%A7%A3%EF%BC%88%E5%A4%A7%E9%99%86%E3%80%81%E9%A6%99%E6%B8%AF%E3%80%81%E6%BE%B3%E9%97%A8%E3%80%81%E5%8F%B0%E6%B9%BE%EF%BC%89/</url>
    <content><![CDATA[<p>本文在了解较多资料的情况下，总结中国现行的四类身份证（祖国大陆、香港、澳门、台湾）相关知识，包括身份证图解、编码规则、编码匹配校验、编码正确性校验等知识。</p>
<p>注：由于政策的改变，本文总结的身份证编码规则可能失效，查看时请留意当时政策变化。</p>
<a id="more"></a>
<h1 id="身份证图解"><a class="markdownIt-Anchor" href="#身份证图解"></a> 身份证图解</h1>
<h2 id="大陆身份证号码"><a class="markdownIt-Anchor" href="#大陆身份证号码"></a> 大陆身份证号码</h2>
<h3 id="号码构成"><a class="markdownIt-Anchor" href="#号码构成"></a> 号码构成</h3>
<blockquote>
<p>身份证号码共18位，由17位本体码和1位校验码组成:<br>
1.前1、2位数字表示：所在省份的代码；<br>
2.第3、4位数字表示：所在城市的代码；<br>
3.第5、6位数字表示：所在区县的代码；<br>
4.第7~14位数字表示：出生年、月、日；<br>
5.第15、16位数字表示：所在地的派出所的代码；<br>
6.第17位数字表示性别：奇数表示男性，偶数表示女性；<br>
7.第18位数字是校检码：也有的说是个人信息码，一般是随计算机的随机产生，用来检验身份证的正确性。校检码可以是0~9的数字，有时也用x表示。</p>
</blockquote>
<h3 id="一代身份证与二代身份证差别"><a class="markdownIt-Anchor" href="#一代身份证与二代身份证差别"></a> 一代身份证与二代身份证差别</h3>
<blockquote>
<p>1.一代身份证是15位，二代身份证是18位；<br>
2.一代身份证出生年月日采用YYMMDD格式，二代身份证出生年月日采用YYYYMMDD格式；</p>
</blockquote>
<ol start="3">
<li>一代身份证无校验码，二代身份证有校验码。</li>
</ol>
<h2 id="香港身份证号码"><a class="markdownIt-Anchor" href="#香港身份证号码"></a> 香港身份证号码</h2>
<h3 id="号码构成-2"><a class="markdownIt-Anchor" href="#号码构成-2"></a> 号码构成</h3>
<blockquote>
<p>由三部分组成：一个英文字母；6个数字；括号及0-9中的任一个数字，或者字母A。括号中的数字或字母A，是校验码，用于检验括号前面的号码的逻辑正确性，如：A123456(7)</p>
</blockquote>
<h3 id="其他香港身份证知识"><a class="markdownIt-Anchor" href="#其他香港身份证知识"></a> 其他香港身份证知识</h3>
<blockquote>
<p>1.香港人在中国大陆的公民身份号码地址码使用810000开头。大陆发给他们的居住证与大陆人的身份证外观相同，使用功能相同<br>
2.香港身份证由香港特别行政区入境事务处签发，为香港居民的主要身份证明文件。凡年满11岁或在香港逗留多于180天人士，必须于年满11岁后或抵港30天内登记领取身份证。</p>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082021610.png" alt="香港身份证样卡"></p>
<p><strong>身份证上的符号解释：</strong></p>
<blockquote>
<p>1.在姓名下方的数字串，是姓名的中文电报号码，代表中文姓名，比如2621 =李，2535=智，5174=能。<br>
2.在出生日期右边是性别：女F，男M。F代表女，M代表男。<br>
3.在签发日期的下方，分别为第一次领取身份证的时间和本证的签发（换发）时间。如上例：（01-79），表示第一次领取身份证的时间是1979年1月；<br>
4.在出生日期之下，会印有一串符号及英文字母（例如***AZ），意思如下：持证人年龄为18岁或以上及有资格申领香港特别行政区回港证，* 持证人年龄为11岁至17岁及有资格申领香港特别行政区回港证。</p>
<ul>
<li>A 持证人拥有香港居留权</li>
<li>B 持证人所报称的出生日期或地点自首次登记以后，曾作出更改</li>
<li>C 持证人登记领证时在香港的居留受到入境事务处处长的限制</li>
<li>N 持证人所报的姓名自首次登记以后，曾作出更改</li>
<li>O 持证人报称在香港、澳门及中国以外其他地区或国家出生</li>
<li>R 持证人拥有香港入境权</li>
<li>U 持证人登记领证时在香港的居留不受入境事务处处长的限制</li>
<li>W 持证人报称在澳门地区出生</li>
<li>X 持证人报称在中国大陆出生</li>
<li>Z 持证人报称在香港出生</li>
</ul>
</blockquote>
<h2 id="澳门居民身份证"><a class="markdownIt-Anchor" href="#澳门居民身份证"></a> 澳门居民身份证</h2>
<h3 id="号码构成-3"><a class="markdownIt-Anchor" href="#号码构成-3"></a> 号码构成</h3>
<p>澳门居民身份证号码由8个拉丁数字组成格式为“X/NNNNNN/Y”或“XNNNNNN(Y)”，智能身份证将原有格式（X/NNNNNN/Y）改为XNNNNNN(Y)</p>
<blockquote>
<blockquote>
<p>1.在“/”符号前加上一个拉丁数字1、5或7以代表其取证时代，可能是1、5、7。绝大多数人以1字开首；以5字开首的身份证号码代表持有或曾经持有葡萄牙国民身份证或葡萄牙给外国人身份证之人士；以7字开首代表曾经取得蓝卡之人士，大多都是在1970年代至1980年代期间从中国大陆持合法证件到澳门的人士。<br>
2.在“/”符号后加上的拉丁数字则为查核用数码，是为方便电脑处理资料及检查号码输入的正确性而设</p>
</blockquote>
</blockquote>
<h3 id="其他香港身份证知识-2"><a class="markdownIt-Anchor" href="#其他香港身份证知识-2"></a> 其他香港身份证知识</h3>
<p>澳门居民身份证由澳门特别行政区身份证明局签发，种类分为“澳门特别行政区永久性居民身份证”和“澳门特别行政区非永久性居民身份证”,前者有居留权，后者没有居留权。</p>
<p>每张澳门身份证均有持证人的姓名、出生日期等个人资料，并把持证人的黑白照片和签名印在证上。年满18周岁者，当局会发出一张有效期为十年的身份证；而未满18岁者，其身份证有效期则为五年；年界60岁者则其居民身份证为终身。</p>
<p>​	<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082022952.png" alt="澳门居民身份证样卡"></p>
<blockquote>
<p>在澳门身份证的照片下面，会印有葡萄牙文字母（例如ASM），它代表的意思如下：<br>
A 持证人于澳门出生<br>
B 持证人于香港出生<br>
C 持证人于中国大陆、台湾出生<br>
D 持证人于其他国家及地区出生<br>
N 持证人出生地不明，不知道自己在何处出生<br>
S 持证人有出生证明文件。如无出生证明文件则会漏空。<br>
M 持证人为男性（Masculino）<br>
F 持证人为女性（Feminino）</p>
</blockquote>
<h2 id="台湾居民身份证"><a class="markdownIt-Anchor" href="#台湾居民身份证"></a> 台湾居民身份证</h2>
<h3 id="号码构成-4"><a class="markdownIt-Anchor" href="#号码构成-4"></a> 号码构成</h3>
<p>台湾居民身份证号码由字母+9为数字组成，如：eg:A123456789</p>
<blockquote>
<p>1.第一位数出生的县市，是用英文字母26个字母来分的，如：台北市为A、台北线为B，以此类推；<br>
2.第二位是男性或女性，男性为1、女性为2；<br>
3.后面的8位数字都为随机数</p>
</blockquote>
<h1 id="身份证号匹配规则"><a class="markdownIt-Anchor" href="#身份证号匹配规则"></a> 身份证号匹配规则</h1>
<p><strong>大陆身份证</strong><br>
分为两种情况，18位：</p>
 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9X]$</span><br></pre></td></tr></table></figure>
<p>15位：</p>
 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}$</span><br></pre></td></tr></table></figure>
<p><strong>香港身份证</strong></p>
 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">^((\s?[A-Za-z])|([A-Za-z]{2}))\d{6}(\([0−9aA]\)|[0-9aA])$</span><br></pre></td></tr></table></figure>
<p><strong>澳门身份证</strong></p>
 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">^[1|5|7][0-9]{6}(\([0-9Aa]\)$</span><br></pre></td></tr></table></figure>
<p><strong>台湾身份证</strong></p>
 <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">^[a-zA-ZＡ-Ｘ][0-9]{9}$</span><br></pre></td></tr></table></figure>
<p>注：以上规则在身份证格式无误的情况下可以校验出来，实际使用留意特殊字符，如18位身份证号码最后一位可以是X,也可能是x,还可能是半角状态的Ｘ；香港和澳门身份证前面可能加上香港、香港居民身份证等字眼。</p>
<h1 id="身份证号校验规则"><a class="markdownIt-Anchor" href="#身份证号校验规则"></a> 身份证号校验规则</h1>
<p><strong>大陆身份证</strong><br>
可对18位大陆身份证进行校验，其中校验码为第18位，以下为计算方法：</p>
<blockquote>
<p>1.将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分 别为：7 9 10 5 8 4 2 1 6 3 7 9 10 5 8 4 2<br>
2.将这17位数字和系数相乘的结果相加。<br>
3.用加出来和除以11，看余数是多少？<br>
4.余数只可能有0 1 2 3 4 5 6 7 8 9 10这11个数字。其分别对应的最后一位身份证的号码为1 0 X 9 8 7 6 5 4 3 2。<br>
5.通过上面得知如果余数是2，就会在身份证的第18位数字上出现罗马数字的Ⅹ。如果余数是10，身份证的最后一位号码就是2。</p>
</blockquote>
<p><strong>香港身份证</strong><br>
最后一位为校验码，计算规则如下：</p>
<blockquote>
<p>1.首位字母改为数字代表，即A以1代表，B以2代表…Z以26代表，可以得到8个数字，之后第一个数字乘以8，第二个数字乘以7，依此类推，第七个数字乘以2<br>
2.将以上所有乘积相加，得到一个数，再将这个数除以11，得到余数。如果整除，校验码为0，如果余数为1，则校验码为A，如果余数为2～10，则用11减去这个余数，则为校验码。</p>
</blockquote>
<p><strong>澳门身份证</strong></p>
<blockquote>
<p>暂未找到相关资料</p>
</blockquote>
<p><strong>台湾身份证</strong><br>
最后一位为校验码，计算规则如下：</p>
<blockquote>
<p>1.第一位字符转为数字，(ABCDEFGHJKLMNPQRSTUVXYWZIO)对应一组数(10——35)。 令其十位数为X1，个位数为X2； D2到D9分别代表身份证号码的第二至第九位数，分别乘上8、7、6、…1。<br>
2.将乘积相加除以10得出的余数结果。 再用10来减去这个余数结果。就得出身份证上的最后一位数字。 例如R123456783，R=25，检查公式是：<code>2+5*9+1*8+2*7+3*6+4*5+5*4+6*3+7*2+8*1=167</code>， 其167再除以10求余数结果。 其余数结果的个位数为7以10减去得3(检查码)。</p>
</blockquote>
]]></content>
      <categories>
        <category>通识</category>
      </categories>
      <tags>
        <tag>身份证</tag>
      </tags>
  </entry>
  <entry>
    <title>ShuffleNetv1：An Extremely Efficient Convolutional Neural Network for Mobile Devices</title>
    <url>/2019/09/22/ShuffleNetv1%EF%BC%9AAn%20Extremely%20Efficient%20Convolutional%20Neural%20Network%20for%20Mobile%20Devices/</url>
    <content><![CDATA[<p>ShuffleNetv1通过channel shuffle解决分组卷积后，特征无法交流的情况</p>
<a id="more"></a>
<ul>
<li>什么是ShuffleNetv1?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetv1-20230408141120.png" alt="ShuffleNetv1-20230408141120" /></li>
<li>ResNeXt 提出的分组卷积(GroupConvolution)，可以在降低模型参数量的同时，提升模型的预测效果，但是分组后的特征完全不进行交流，虽然可以通过 1x1 卷积缓解，但是 1x1 卷积需要计算量很大，不是理想的方法</li>
<li>ShuffleNetv1通过使用 channel shuffle 操作弥补分组间的信息交流，使得网络可以尽情使用分组卷积</li>
</ul>
</li>
<li>ShuffleNetv1的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetv1-20230408141120-1.png" alt="ShuffleNetv1-20230408141120-1" /></li>
<li>3个不同的Stage组成网络结构，最后一列显示不同的分组其层的输出通道</li>
</ul>
</li>
<li>ShuffleNetv1的基础单元Units?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetv1-20230408141121.png" alt="ShuffleNetv1-20230408141121" /></li>
<li>图a：深度可分离卷积+残差连接，这在MobileNetv2上被作为基础单元</li>
<li>图b：ShuffleNetv1的基础单元，经过该单元后，特征图分辨率不变，使用add进行特征融合</li>
<li>图c：ShuffleNetv1的下采样单元，经过该单元后，特征图分辨率减半，使用concat进行特征融合</li>
</ul>
</li>
<li>ShuffleNetv1如何实现通道混淆(channel shuffle)?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ShuffleNetv1-20230408141121-1.png" alt="ShuffleNetv1-20230408141121-1" /></li>
<li>假定将输入层分为 g 组，总通道数为 g * n，首先你将通道那个维度拆分为 (g, n) 两个维度，然后将这两个维度转置变成 (n, g)，最后重新 reshape 成一个维度 g * n</li>
</ul>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">channel_shuffle</span>(<span class="params">x, groups</span>):</span></span><br><span class="line">	<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">	Parameters</span></span><br><span class="line"><span class="string">		x: Input tensor of with `channels_last` data format</span></span><br><span class="line"><span class="string">		groups: int number of groups per channel</span></span><br><span class="line"><span class="string">	Returns</span></span><br><span class="line"><span class="string">		channel shuffled output tensor</span></span><br><span class="line"><span class="string">	Examples</span></span><br><span class="line"><span class="string">		Example for a 1D Array with 3 groups</span></span><br><span class="line"><span class="string">       &gt;&gt;&gt; d = np.array([0,1,2,3,4,5,6,7,8])</span></span><br><span class="line"><span class="string">       &gt;&gt;&gt; x = np.reshape(d, (3,3))</span></span><br><span class="line"><span class="string">       &gt;&gt;&gt; x = np.transpose(x, [1,0])</span></span><br><span class="line"><span class="string">       &gt;&gt;&gt; x = np.reshape(x, (9,))</span></span><br><span class="line"><span class="string">	&#x27;[0 1 2 3 4 5 6 7 8] --&gt; [0 3 6 1 4 7 2 5 8]&#x27;</span></span><br><span class="line"><span class="string">	&quot;&quot;&quot;</span></span><br><span class="line">	height, width, in_channels = x.shape.as_list()[<span class="number">1</span>:]</span><br><span class="line">	channels_per_group = in_channels // groups</span><br><span class="line">	x = K.reshape(x, [-<span class="number">1</span>, height, width, groups, channels_per_group])</span><br><span class="line">	x = K.permute_dimensions(x, (<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>))  <span class="comment"># transpose</span></span><br><span class="line">	x = K.reshape(x, [-<span class="number">1</span>, height, width, in_channels])</span><br><span class="line">	<span class="keyword">return</span> x</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《少有人走的路》-[美]M·斯科特·派克</title>
    <url>/2019/04/21/%E4%B9%A6%E6%91%98_%E5%B0%91%E6%9C%89%E4%BA%BA%E8%B5%B0%E7%9A%84%E8%B7%AF-%5B%E7%BE%8E%5DM%C2%B7%E6%96%AF%E7%A7%91%E7%89%B9%C2%B7%E6%B4%BE%E5%85%8B.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/1775691">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s2144391.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s2144391.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>少有人走的路</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>[美国]斯科特·派克</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2007-1</span></div>
			<div class="douban-card-item"><span>评分: </span><span>8.4</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="出版者语"><a class="markdownIt-Anchor" href="#出版者语"></a> 出版者语</h2>
<blockquote>
<p>深入心灵，是一段艰难的旅程，也是一条少有人走的路。</p>
</blockquote>
<h2 id="中文版序"><a class="markdownIt-Anchor" href="#中文版序"></a> 中文版序</h2>
<blockquote>
<p>人可以拒绝任何东西，但绝对不可以拒绝成熟。拒绝成熟，实际上就是在回避问题、逃避痛苦。回避问题和逃避痛苦的趋向，是人类心理疾病的根源，不及时处理，你就会为此付出沉重的代价，承受更大的痛苦。心智成熟不可能一蹴而就，它是一个艰苦的旅程。</p>
</blockquote>
<h2 id="问题和痛苦"><a class="markdownIt-Anchor" href="#问题和痛苦"></a> 问题和痛苦</h2>
<blockquote>
<p>解决人生问题的关键在于自律。人若缺少自律，就不可能解决任何麻烦和问题。在某些方面自律，只能解决某些问题，全面的自律才能解决人生所有的问题。</p>
</blockquote>
<blockquote>
<p>人生是一个不断面对问题并解决问题的过程。问题可以开启我们的智慧，激发我们的勇气。为解决问题而努力，我们的思想和心灵就会不断成长，心智就会不断成熟。</p>
</blockquote>
<blockquote>
<p>回避问题和逃避痛苦的倾向，是人类心理疾病的根源。</p>
</blockquote>
<blockquote>
<p>简单地说，所谓自律，就是主动要求自己以积极的态度去承受痛苦，解决问题。自律有四个原则：推迟满足感、承担责任、忠于事实、保持平衡。</p>
</blockquote>
<h2 id="推迟满足感"><a class="markdownIt-Anchor" href="#推迟满足感"></a> 推迟满足感</h2>
<blockquote>
<p>推迟满足感，就是不贪图暂时的安逸，先苦后甜，重新设置人生快乐与痛苦的次序：首先，面对问题并感受痛苦；然后，解决问题并享受更大的快乐。在充满问题和痛苦的人生中，推迟满足感是唯一可行的生活方式。</p>
</blockquote>
<h2 id="子不教谁之过"><a class="markdownIt-Anchor" href="#子不教谁之过"></a> 子不教，谁之过</h2>
<blockquote>
<p>对自我价值的认可是自律的基础，因为当一个人觉得自己很有价值时，就会采取一切必要的措施来照顾自己。自律是自我照顾，自我珍惜，而不是自暴自弃。</p>
</blockquote>
<blockquote>
<p>要让孩子养成推迟满足感的习惯，就必须让他们学会自律。要让他们学会自律，对安全感产生信任，不仅需要父母真心投入，还需要父母表里如一的爱和持之以恒的照顾，这是父母送给子女最好的礼物。如果这份礼物无法从父母那里获得，孩子也有可能从其他渠道得到，不过其过程必然更为艰辛，通常要经过一生的鏖战，而且常常以失败告终。</p>
</blockquote>
<h2 id="解决问题的时机"><a class="markdownIt-Anchor" href="#解决问题的时机"></a> 解决问题的时机</h2>
<blockquote>
<p>许多人都没有付出足够的时间和精力，去解决知识、社交、心理方面的问题——就像我对待机械问题的态度一样。</p>
</blockquote>
<blockquote>
<p>问题一旦出现，就想立刻解决，不然就会思绪烦乱、寝食不安。这样的心态显然不切实际，但一厢情愿地等待问题自行消失，则是更为可怕的事情，通常不会带来任何好结果。</p>
</blockquote>
<blockquote>
<p>忽视问题的存在，反映出人们不愿推迟满足感的心理。前面已经说过，直面问题会使人感觉痛苦。问题通常不可能自行消失，若不解决，就会永远存在，阻碍心智的成熟</p>
</blockquote>
<h2 id="承担责任"><a class="markdownIt-Anchor" href="#承担责任"></a> 承担责任</h2>
<blockquote>
<p>不能及时解决自己面临的问题，这些问题就会像山一样横亘在我们心中，阻碍心灵的成长和心智的成熟。很多人显然忽略了这个道理。我们必须面对属于自己的问题，这是解决问题的基本前提。</p>
</blockquote>
<h2 id="神经官能症与人格失调症"><a class="markdownIt-Anchor" href="#神经官能症与人格失调症"></a> 神经官能症与人格失调症</h2>
<blockquote>
<p>求助于心理医生的大多数人，所患的不是神经官能症，就是人格失调症。它们都是责任感出现问题所致，</p>
</blockquote>
<blockquote>
<p>神经官能症患者为自己强加责任，人格失调症患者则不愿承担原本属于自己的责任。</p>
</blockquote>
<blockquote>
<p>只有通过大量的生活体验，让心灵充分成长，心智足够成熟，我们才能够正确认识自己，客观评定自己和他人应该承担的责任。</p>
</blockquote>
<blockquote>
<p>你不能解决问题，你就会成为问题。</p>
</blockquote>
<h2 id="逃避自由"><a class="markdownIt-Anchor" href="#逃避自由"></a> 逃避自由</h2>
<blockquote>
<p>大多数患者力不从心的根源，在于他们总想逃避自由，不去为自己的问题、自己的生活承担责任。他们感到乏力，是因为他们放弃了自己的力量。如果得到治疗，他们就会知道，作为成年人，他们一生都充满选择和决定的机会。接受这一事实，就会变成自由的人；无法接受这种事实，就会永远觉得自己是个牺牲品。</p>
</blockquote>
<h2 id="忠于事实"><a class="markdownIt-Anchor" href="#忠于事实"></a> 忠于事实</h2>
<blockquote>
<p>实事求是，杜绝虚假，因为虚假与事实完全对立。我们越是了解事实，处理问题就越是得心应手；对事实了解得越少，思维就越是混乱。虚假、错觉和幻想只能让我们不知所措</p>
</blockquote>
<blockquote>
<p>我们对现实的观念就像是一张地图，凭借这张地图，我们才能了解人生的地形、地貌和沟壑，指引自己的道路。如果地图准确无误，我们就能确定自己的位置，知道自己要到什么地方，怎样到达那里；如果地图信息失真，漏洞百出，我们就会迷失方向。</p>
</blockquote>
<blockquote>
<p>我们出生时，并不是带着地图来到世界的。为了在人生的旅途上顺利行进，我们需要努力绘制自己的地图。我们的努力程度越高，对事实的认识越清楚，地图的准确性就越高。</p>
</blockquote>
<blockquote>
<p>绘制人生地图的艰难，不在于我们需要从头开始，而在于需要不断修订，才能使地图的内容准确翔实。</p>
</blockquote>
<blockquote>
<p>人生苦短，我们只想一帆风顺。我们由儿童成长为青年人、中年人乃至老年人，付出了不懈的努力，才绘成了现在这幅关于人生观和世界观的地图，似乎各方面都完美无缺。一旦新的信息与过去的观念发生冲突，需要对地图大幅度修正，我们就会感到恐惧，宁可对新的信息视而不见。</p>
</blockquote>
<h2 id="移情过时的地图"><a class="markdownIt-Anchor" href="#移情过时的地图"></a> 移情：过时的地图</h2>
<blockquote>
<p>移情的定义。我的定义是：把产生和适用于童年时期的那些感知世界、对世界做出反应的方式，照搬到成年后的环境中，尽管这些方式已经不再适用于新的环境。</p>
</blockquote>
<blockquote>
<p>逃避现实的痛苦是人类的天性，只有通过自律，我们才能逐渐克服现实的痛苦，及时修改自己的地图，逐步成长。我们必须忠于事实，尽管这会带来暂时的痛苦，但远比沉湎于虚假的舒适中要好。我们必须忍受暂时的不适感，追求事实而不是假象，并承受这一过程的痛苦。要让心灵获得成长，心智走向成熟，就要竭尽全力，不惜一切代价，完全忠于事实。</p>
</blockquote>
<h2 id="迎接挑战"><a class="markdownIt-Anchor" href="#迎接挑战"></a> 迎接挑战</h2>
<blockquote>
<p>完全忠于事实的生活到底意味着什么呢？首先，它意味着我们要用一生的时间进行不间断地严格地自我反省。我们通过自身与外界的接触来认识世界。</p>
</blockquote>
<blockquote>
<p>忠于事实的生活还意味着我们要敢于接受外界的质疑和挑战。这</p>
</blockquote>
<blockquote>
<p>完全忠于事实的第三个要求，就是我们需要一辈子保持诚实。我们必须不断自我反省，确保我们的言语能够准确地表述出我们所认知的事实。</p>
</blockquote>
<blockquote>
<p>人们不仅对别人撒谎，也会对自己撒谎。由于对别人撒谎违背自己的良知，会遭到良心的谴责，这会使我们感到痛苦，所以，为了逃避这种痛苦，人们便会对自己撒谎</p>
</blockquote>
<blockquote>
<p>心理医生最重要的任务，就是让患者说出真话。长时间自欺欺人，使人的愧疚积聚，就会导致心理疾病。</p>
</blockquote>
<h2 id="隐瞒真相"><a class="markdownIt-Anchor" href="#隐瞒真相"></a> 隐瞒真相</h2>
<blockquote>
<p>谎言通常分为两种：白色谎言和黑色谎言。所谓黑色谎言，就是彻头彻尾地撒谎，叙述的情况与现实完全不符；所谓白色谎言，其本身或许能反映事实，却有意隐瞒大部分真相</p>
</blockquote>
<blockquote>
<p>怎样做才不致违背忠于事实的自律精神呢？我们应该采取如下原则：首先，永远不要说假话，避免黑色谎言；其次，要牢牢记住，除非是迫不得已，或者出于重大道德因素的考虑，否则，不说出全部真相就等于说谎；第三，不可因个人自私自利的欲望，例如满足权力欲、刻意讨上司的欢心、逃避修订心灵地图的挑战等，而将部分真相隐瞒下来；第四，只有在对对方确有好处的情况下，才能有选择地隐瞒部分真相；第五，尽可能忠实地评估对方的需要。这是一件极为复杂的工作，只有以真爱为出发点，才能做出恰当的评判和选择；第六，评估的要领在于，对方能否借助我们提供的事实获得心灵的成长。最后一点需要铭记在心的是，我们通常会低估而不是高估别人运用事实使心灵获得成长的能力。</p>
</blockquote>
<blockquote>
<p>很多人惧怕其中的痛苦，宁可选择有限的诚实和开放，这等同于生活在封闭状态中，不敢把自己以及自己的地图呈现给世人。自我封闭尽管表面上容易，却会让我们付出惨痛的代价。以开放的心态和积极的努力，不断修订人生地图，才能使我们的心灵获得成长。这样的人因为从未说过假话，所以他们可以充满自信地告诉世人，自己给这个世界带来的是启迪和澄清，而不是困扰，并以此为荣。最终他们会获得完全的自由，不必苦于每日的东躲西藏。与过于封闭的人相比，开放的人拥有更健康的心理状态，更美好的人际关系。他们开诚布公，不必文过饰非，因此少了很多忧愁和烦恼。</p>
</blockquote>
<h2 id="保持平衡"><a class="markdownIt-Anchor" href="#保持平衡"></a> 保持平衡</h2>
<blockquote>
<p>失去平衡远比放弃更为痛苦。我想不管是谁，经过人生旅途的急转弯时，都必须放弃某些快乐，放弃属于自己的某一部分。除非永远停留在原地，中止生命之旅，否则这样的放弃是不可避免的。</p>
</blockquote>
<h2 id="抑郁的价值"><a class="markdownIt-Anchor" href="#抑郁的价值"></a> 抑郁的价值</h2>
<blockquote>
<p>心理学家埃里克·艾瑞克森曾列举出人生各阶段的八种危机。只有放弃旧的、过时的观念和习惯，才能渡过危机，顺利进入人生的下一阶段。不少人不敢面对现实，或者无法放弃早已过时的东西，所以无法克服心理和精神的危机，只能止步不前，不能享受到新生带来的欢悦，也不能顺利地进入更加成熟的心智发展阶段。</p>
</blockquote>
<blockquote>
<p>总体说来，这些就是我们在人生过程中必须放弃的生活环境、个人欲望和处世态度。放弃这些的过程就是心智完美成长的过程。</p>
</blockquote>
<h2 id="放弃与新生"><a class="markdownIt-Anchor" href="#放弃与新生"></a> 放弃与新生</h2>
<blockquote>
<p>有一种暂时的放弃自我值得一提，因为这一种放弃是成年生活必须掌握的一种技能，也是促进心智成熟不可或缺的工具。</p>
</blockquote>
<blockquote>
<p>我必须超越现有的一切，超越以自我为中心的观念。消除由个人经验产生的成见之后，才会获得成熟的认识。这一过程包括两个步骤：消除熟悉的过去，追求新鲜的未来。面对陌生的人、事、物，我需要让昔日的经验、当前的需求和未来的期待一并出席，共同对我的需求和现实状况进行评估，做出恰当的判断和决定。为了体验新鲜事物的独特性，我必须以包容一切的姿态，说服既有的成见和观念暂时退位，让陌生、新奇的事物进入感官世界。</p>
</blockquote>
<blockquote>
<p>假使人生的目标就是逃避痛苦，那你完全可以得过且过，不必寻求精神和意识的发展。但是不经痛苦和折磨，就无法实现灵魂的超越。即便达到了很高的精神境界，但那时痛苦的强烈程度，可能远远超过你的想象，让你最终无法承受。</p>
</blockquote>
<h2 id="爱的定义"><a class="markdownIt-Anchor" href="#爱的定义"></a> 爱的定义</h2>
<blockquote>
<p>爱是人们自律的原动力。</p>
</blockquote>
<blockquote>
<p>爱，是为了促进自己和他人心智成熟，而不断拓展自我界限，实现自我完善的一种意愿。</p>
</blockquote>
<blockquote>
<p>真正的爱是行动，是一种由意愿而产生的行动。爱一个人却没有付诸行动，就等于从未爱过。</p>
</blockquote>
<h2 id="坠入情网"><a class="markdownIt-Anchor" href="#坠入情网"></a> 坠入情网</h2>
<blockquote>
<p>永远活在自我界限中，只会给人带来孤独。有的人把自我界限当成是一把保护伞，比如那些性格孤僻的人，因其童年生活都很不快乐，甚至遭到过不同程度的伤害，所以对于他们而言，外面的世界充满险恶，孤独和寂寞反倒能够给他们带来安全感。但是，我们中的大部分人还是渴望摆脱孤独，冲出自我界限的牢笼。</p>
</blockquote>
<h2 id="再谈自我界限"><a class="markdownIt-Anchor" href="#再谈自我界限"></a> 再谈自我界限</h2>
<blockquote>
<p>在爱的过程中，我们感觉自己的灵魂无限延伸，奔向心爱的对象。我们渴望给对方滋养，希望对方能够成长。被自我界限之外的对象吸引，促使我们产生冲动，想把激情乃至生命献给对方，心理学家把这种状态称之为“精神贯注”。</p>
</blockquote>
<blockquote>
<p>恋爱或性却有可能成为真爱的开始，因为恋爱和性爱造成的自我界限的暂时消失，可以使我们对对方做出承诺，而在履行承诺的过程中，真正的爱便可能产生。</p>
</blockquote>
<h2 id="依赖性"><a class="markdownIt-Anchor" href="#依赖性"></a> 依赖性</h2>
<blockquote>
<p>真正的爱是自由的选择。真正相爱的人，不一定非要生活在一起，只是选择生活在一起罢了。</p>
</blockquote>
<blockquote>
<p>所谓消极性依赖，是指患者只在乎别人能为他们做什么，却从不考虑自己能为对方付出多少。</p>
</blockquote>
<blockquote>
<p>依赖性过强的人，总是把失去伴侣的支持当成极其恐怖的事。他们丝毫不肯降低对他人的依赖度，也不肯给予对方更多的自由。</p>
</blockquote>
<blockquote>
<p>只想获取却不愿付出，心智就会永远停留在不成熟的状态，这只会对人生构成限制和束缚，给人际关系造成破坏，让别人跟着遭殃，而不是促进别人的心灵成长。</p>
</blockquote>
<h2 id="精神贯注"><a class="markdownIt-Anchor" href="#精神贯注"></a> 精神贯注</h2>
<blockquote>
<p>过分依赖的人只关心自己的滋养，只在乎自己的感受，只想自己过得丰富而充实。他们渴望快乐和享受，不能忍受成长的痛苦、孤独和寂寞。他们既不关心自己心智的成熟，也不关心别人心智的成熟，哪怕是他们依赖的对象。他们只关心别人是否能永远满足他们的需要。</p>
</blockquote>
<blockquote>
<p>不是所有的“精神贯注”都是爱，那些与心智成熟无关，不能给心灵带来任何滋养的“精神贯注”，都不是真正意义上的爱。</p>
</blockquote>
<blockquote>
<p>爱的唯一目标，乃是促进心智的成熟和人性的进步。</p>
</blockquote>
<blockquote>
<p>我们爱的真正对象应该是人。只有人类的心灵，才有成长与进步的能力。如果我们丧失了爱人类的能力，就可能把情感转移到其他事物上，以为这样也可以培养出真正的爱。</p>
</blockquote>
<blockquote>
<p>对那些寂寞而孤单的人而言，宠物就像他们的生命，是人生的一切，在他们看来，这不是爱又是什么呢？但是，人和人之间的关系，并不同于人和宠物的关系。首先，我们和宠物的沟通相当有限，我们不知道它们每天在想什么，却一厢情愿，把自己的想法和感受投射到它们身上，甚至引之为人生知己。实际上，这只是我们的主观愿望罢了。其次，我们喜欢宠物的原因是，它们表现乖巧，任凭摆弄。如果宠物不听话，破坏家具，随意大小便，甚至咬上我们几口，我们就可能把它们赶出家门。</p>
</blockquote>
<blockquote>
<p>我们豢养宠物，只是希望它们永远都不要长大，可以乖乖地陪伴我们。我们看重的，是宠物对我们的依赖性。</p>
</blockquote>
<h2 id="自我牺牲"><a class="markdownIt-Anchor" href="#自我牺牲"></a> “自我牺牲”</h2>
<blockquote>
<p>很多时候，我们自称为别人着想，可能只是为了逃避责任，满足自己的愿望：我们所做的一切都是出自个人的意愿，核心动机是满足自我的需求；不管为别人做什么事，真正的原因都是为了自己。</p>
</blockquote>
<blockquote>
<p>真正的爱能够使人发生改变，在本质上是一种自我扩展，而非纯粹的自我牺牲。所以，爱在某种意义上是自私的，最终追求的是自我完善。区别爱与非爱的关键不是自私或是无私，而是行为的目的。真爱的目的永远都是促进心智的成熟，出于其他目的的“爱”都不是真爱。</p>
</blockquote>
<h2 id="爱不是感觉"><a class="markdownIt-Anchor" href="#爱不是感觉"></a> 爱，不是感觉</h2>
<blockquote>
<p>真正的爱，需要投入和奉献，需要付出全部的智慧和力量。</p>
</blockquote>
<blockquote>
<p>真正的爱，其价值在于始终如一的行动，这远远大于转瞬即逝的感觉或者精神贯注。真正的爱出自自我意愿，只能依靠实际行动来证明。“爱”与“非爱”的区别，正如善与恶的区别一样，有着客观的标准。爱是行动，不是空想。</p>
</blockquote>
<h2 id="关注的艺术"><a class="markdownIt-Anchor" href="#关注的艺术"></a> 关注的艺术</h2>
<blockquote>
<p>拓展自我界限就如同走路一样，每多走一步或多走一里，都可以逐步对抗与生俱来的惰性，抵御因恐惧而产生的排斥心理。拓展自我界限，意味着摆脱惰性，直面内心的恐惧。而爱则可以给我们勇气，使我们敢于迈向未知的领域，敢于拓展自己和他人的心理界限。</p>
</blockquote>
<blockquote>
<p>爱是为了努力促进自己和他人心智成熟，而表现出来的一种勇气。</p>
</blockquote>
<blockquote>
<p>爱，最重要的体现形式，就是关注。我们爱某个人，一定会关注对方，细心照料对方，进而帮助对方成长。</p>
</blockquote>
<blockquote>
<p>用心倾听是一种耗费精力的过程，必须以爱为出发点，只有基于共同成长、自我拓展和自我完善的意愿，才能够达到倾听的目的。但是，很多人却缺乏用心倾听的能力，不管是在商务活动还是在社交生活中，他们都不会长时间倾听他人讲话，而是采取有选择地倾听，他们的头脑早已被别的事情所占据，一边假装倾听，一边想着怎样使谈话尽早结束，怎样尽快达到目的。</p>
</blockquote>
<h2 id="爱与自律"><a class="markdownIt-Anchor" href="#爱与自律"></a> 爱与自律</h2>
<blockquote>
<p>自律的原动力来自于爱，而爱的本质是一种意愿。自律是将爱转化为实际行动的具体方法。所有的爱，都离不开自律；真正懂得爱的人，必然懂得自我约束，并会以此促进双方心智的成熟。</p>
</blockquote>
<blockquote>
<p>真正的爱，在促进对方心智成熟的同时，也会让你的心灵得到成长，你会体验到莫大的喜悦，幸福感会越发真实和持久。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>Unet++：A Nested U-Net Architecture for Medical Image Segmentation</title>
    <url>/2019/04/13/Unet++%EF%BC%9AA%20Nested%20U-Net%20Architecture%20for%20Medical%20Image%20Segmentation/</url>
    <content><![CDATA[<p>在 Unet 的基础上结合 DenseNet 的思想设计的语义分割网络</p>
<a id="more"></a>
<h1 id="什么是-unet"><a class="markdownIt-Anchor" href="#什么是-unet"></a> 什么是 Unet++？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/UNetPlusPlus-20230408143759.png" alt="UNetPlusPlus-20230408143759" /></li>
<li>UNet++是在 Unet 的基础上结合 DenseNet的思想设计的语义分割网络</li>
</ul>
<h1 id="unet的网络结构"><a class="markdownIt-Anchor" href="#unet的网络结构"></a> Unet++的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/UNetPlusPlus-20230408143759.png" alt="UNetPlusPlus-20230408143759" /></li>
<li>Unet 的基础上增加以下 3 个东西：</li>
<li>(1) <strong>重新设计的跳跃路径（显示为绿色）</strong>：U-Net 采用跳跃连接，直接连接编码器和解码器之间的特征映射，导致<strong>把语义上不相似的特征映射相融合</strong>。在 UNet++中，增加了重新设计的跳跃路径 (绿色显示)，以弥补编码器和解码器子路径之间的语义差别，意思是先经过绿色节点整合特征，再跳跃连接融合特征</li>
<li>(2) <strong>密集跳跃连接（显示为蓝色）</strong>：密集跳跃连接 (用蓝色显示)实现了编码器和解码器之间的跳跃路径。这些 Dense blocks 是受到 DenseNet 的启发，目的是提高分割精度和改善梯度流</li>
<li>(3) <strong>深度监督（显示为红色）</strong>：通过修剪模型来调整模型的复杂性，在速度 (推理时间)和性能之间实现平衡，_ accurate_模式下取所有分割分支输出的平均，_ fast_模式下选择分割分支之一</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>PSANet：Point-wise Spatial Attention Network for Scene Parsing</title>
    <url>/2019/04/12/PSANet%EF%BC%9APoint-wise%20Spatial%20Attention%20Network%20for%20Scene%20Parsing/</url>
    <content><![CDATA[<p>PSA设计出一个双向的空间注意力网络，使得网络比单向空间注意力网络更加有效</p>
<a id="more"></a>
<h1 id="什么是-psanet"><a class="markdownIt-Anchor" href="#什么是-psanet"></a> 什么是 PSANet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PSANet-20230408143425.png" alt="PSANet-20230408143425" /></li>
<li>PSANet 认为由于卷积核的物理结构设计，导致 CNN 中的信息流被约束在局部区域中，从而限制了复杂场景的理解</li>
<li>PSANet 设计了<strong>双向</strong>的信息流传播路径，也就是每个位置都与其他位置相关，同时两个位置能够互相通信，互相影响。其实就是<strong>双向空间注意力</strong>，相比较单向的空间注意力，其特征更加鲁棒</li>
</ul>
<h1 id="psanet-的网络结构"><a class="markdownIt-Anchor" href="#psanet-的网络结构"></a> PSANet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PSANet-20230408143426.png" alt="PSANet-20230408143426" /></li>
<li>网络由 collect 和 distribute 两个平行分支构成。在每个分支中，首先应用1×1的卷积来减少输入特征图 X 的通道数 (C1、C2)，以减少计算开销</li>
</ul>
<h1 id="psanet-的-collect-分支的数据流"><a class="markdownIt-Anchor" href="#psanet-的-collect-分支的数据流"></a> PSANet 的 collect 分支的数据流？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PSANet-20230408143427.png" alt="PSANet-20230408143427" /></li>
<li><strong>collect 分支</strong>：用于收集其他位置对当前点的注意力，但不是为每个位置直接预测一个 HxW 的权重矩阵，而是预测一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>H</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mn>2</mn><mi>W</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2H-1)\times(2W-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 的矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mi>c</mi></msup></mrow><annotation encoding="application/x-tex">H^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span>，然后从该矩阵收集其他点对某个点的注意力 (1 x 1xHW)，收集所有点的的注意力构成 collect 分支的注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>c</mi></msup></mrow><annotation encoding="application/x-tex">A^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span> (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>H</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">H\times W\times HW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>)，使用该注意力矩阵加权原始特征即可</li>
<li><strong>distribute 分支</strong>：同 collect 分支构建矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">H^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span> ，然后从该矩阵某个点到其他点的注意力为 (1 x 1xHW)，收集所有点的的注意力构成 distribute 分支的注意力矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>c</mi></msup></mrow><annotation encoding="application/x-tex">A^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span> (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>H</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">H\times W\times HW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>)，使用该注意力矩阵加权原始特征即可</li>
<li><strong>为什么完整映射是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>H</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mn>2</mn><mi>W</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2H-1)\times(2W-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>？</strong> 因为一个矩阵，任意一个点和其他点有双向连接时，那么就有共计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>H</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mn>2</mn><mi>W</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2H-1)\times(2W-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 个边，因为要去掉自己指向自己权重</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>空间注意力</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《青春大丈夫（谁的青春不迷茫，一本从人生、职场、情感角度，深入浅出地解答了众多疑问的年轻人的书）》-吴主任</title>
    <url>/2019/04/11/%E4%B9%A6%E6%91%98_%E9%9D%92%E6%98%A5%E5%A4%A7%E4%B8%88%E5%A4%AB%EF%BC%88%E8%B0%81%E7%9A%84%E9%9D%92%E6%98%A5%E4%B8%8D%E8%BF%B7%E8%8C%AB%EF%BC%8C%E4%B8%80%E6%9C%AC%E4%BB%8E%E4%BA%BA%E7%94%9F%E3%80%81%E8%81%8C%E5%9C%BA%E3%80%81%E6%83%85%E6%84%9F%E8%A7%92%E5%BA%A6%EF%BC%8C%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%9C%B0%E8%A7%A3%E7%AD%94%E4%BA%86%E4%BC%97%E5%A4%9A%E7%96%91%E9%97%AE%E7%9A%84%E5%B9%B4%E8%BD%BB%E4%BA%BA%E7%9A%84%E4%B9%A6%EF%BC%89-%E5%90%B4%E4%B8%BB%E4%BB%BB.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/27196540">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29606971.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29606971.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>青春大丈夫</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>吴主任</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2017-11</span></div>
			<div class="douban-card-item"><span>评分: </span><span>6.9</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="part1人生不容易愿你不虚此行"><a class="markdownIt-Anchor" href="#part1人生不容易愿你不虚此行"></a> PART1人生不容易，愿你不虚此行</h2>
<blockquote>
<p>最后想对那些犹犹豫豫的人说一句，不要去跟同龄人瞎比较，徒增焦虑，觉得一切都晚了。没有这种事，最重要的是你做出了选择，开启了新生活，起步再晚，也比就地腐烂好。</p>
</blockquote>
<blockquote>
<p>要我说，学什么学，这一代人，所有有野心的优秀年轻人都毁在了学习如何变强大的技巧上。由于这种轻松阅读即可掌握技能的感觉太过良好，人们纷纷上瘾，浪费了大量时间去学习如何学习，到头来什么也不会。你倒是干起来啊！</p>
</blockquote>
<blockquote>
<p>是的，人们并不怕辛苦，人们希望的是立刻见效的回报。</p>
</blockquote>
<blockquote>
<p>实际上坚持需要的并不是毅力，而依然是观念。你需要赋予自己重复的意义，寻找过程的乐趣，并强化坚持下去的美好动机，为了能力更强，为了生活更好，或别的随便什么吧。</p>
</blockquote>
<blockquote>
<p>每个行业里的从业者90%都很平庸，这其中还有至少50%都是在混日子。这听起来对新人来说是非常好的消息，但这些人也都是从新人过来的啊。想想真是伤感。</p>
</blockquote>
<blockquote>
<p>历经几个城市的工作生活，我可能比较有资格说，年轻人，可以大胆地去大城市尝试。大城市有更多的资源、更多的工作机会、更多有意思的人，相对自由和包容……或许一开始的日子不易，但能让一个人迅速成长，这里竞争激烈，同样也充满更多可能。</p>
</blockquote>
<blockquote>
<p>别傻了，那也得是你才华足够出众，才会有人不计较你的外貌。</p>
</blockquote>
<blockquote>
<p>满足要求不是一个下结论的过程，是一个论证的过程。任何投递简历过来的人都被默认为有热情并且向往这份工作，即使人们只是在广撒网，但这并不矛盾。这就意味着，所有有关热情的表态都显得无足轻重。换句话说，如果连工作激情都没有，那么，对即将毕业的年轻人而言，可能真的是一无是处了。</p>
</blockquote>
<blockquote>
<p>做一份自己热爱或至少是喜欢的工作，否则，要么整天闷闷不乐，要么自我催眠告诉自己这份工作意义深远，或者学会挖掘它的正面意义——这也是积极心理学家推荐过的一种方法。</p>
</blockquote>
<blockquote>
<p>多数人在学校里接受的教育，致使其毕业后对世界和未来的认知都是狭隘的，即使如今人人都在用手机阅读和社交，好像世界早就被微信打通了。天真如过去的我就是这么想的。</p>
</blockquote>
<blockquote>
<p>能做到立即行动就已经打败了90%的人。但人们不，人们需要一些更“科学”、更“有效率”的学习方法。花大量的时间沉迷于他人以更高级的包装输出的如何更容易成功的秘籍。</p>
</blockquote>
<blockquote>
<p>如何进步成长的方法早就了然于胸了，好像一个健身爱好者已经把装备都堆满房间了，剩下的就简单了，无非是动起来。故事的结局也很合理，后来这个胖子成了一个装备搜集爱好者。</p>
</blockquote>
<blockquote>
<p>听再多再好的建议都没用，而且如果万一人家的方法看起来特别科学有用，你看得如痴如醉，书一本没看，却修炼成了一个“如何阅读”爱好者，“学会学习”大师，也不是什么坏事，有点像深谙房中术的太监，也是可以去各种公司给人培训赚点钱的。市场前景不能说不广阔。</p>
</blockquote>
<blockquote>
<p>只需要回答自己，跟对方在一起开心吗，以及是否愿意长期跟对方这样开心地生活下去？能沟通交流，在一起有话说，共同成长一起进步，有较好的经济基础，不至于让日子过得狼狈，其他的都不重要，或者说都是可以克服的。</p>
</blockquote>
<h2 id="part2不想当个猪头总可以吧"><a class="markdownIt-Anchor" href="#part2不想当个猪头总可以吧"></a> PART2不想当个猪头总可以吧</h2>
<blockquote>
<p>1.找一份工作的前期功课准备。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>对流媒体传输关键指标作简单预测</title>
    <url>/2019/04/01/%E5%AF%B9%E6%B5%81%E5%AA%92%E4%BD%93%E4%BC%A0%E8%BE%93%E5%85%B3%E9%94%AE%E6%8C%87%E6%A0%87%E4%BD%9C%E7%AE%80%E5%8D%95%E9%A2%84%E6%B5%8B/</url>
    <content><![CDATA[<p>本文使用LSTM对流媒体的6个关键指标进行预测</p>
<a id="more"></a>
<p>现收集有流媒体传输过程中的６个指标，这些指标分别是：</p>
<blockquote>
<ul>
<li>PDCCH信道CCE可用个数    AvaPdcch</li>
<li>PDCCH信道CCE占用个数    OccPdcch</li>
<li>RRC连接最大数        ConRrc</li>
<li>上行PRB平均利用率       UpPrb</li>
<li>下行PRB平均利用率       DownPrb</li>
<li>有效RRC连接最大数     EffConRrc</li>
</ul>
</blockquote>
<h1 id="1数据情况"><a class="markdownIt-Anchor" href="#1数据情况"></a> 1.数据情况</h1>
<p>每个指标的数据格式为：<code>Data-Time-Value</code>，本文首先对数据进行预处理，然后使用LSTM对这６个指标作简单预测。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">filenames=[<span class="string">&#x27;AvaPdcch&#x27;</span>,<span class="string">&#x27;OccPdcch&#x27;</span>,<span class="string">&#x27;ConRrc&#x27;</span>,<span class="string">&#x27;UpPrb&#x27;</span>,<span class="string">&#x27;DownPrb&#x27;</span>,<span class="string">&#x27;EffConRrc&#x27;</span>]  <span class="comment">#属性列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#读取数据</span></span><br><span class="line">dataset=[]</span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">    df=pd.read_csv(filename+<span class="string">&#x27;.csv&#x27;</span>,delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    partfea=np.array(df)[:,-<span class="number">1</span>]</span><br><span class="line">    dataset.append(partfea)</span><br><span class="line"></span><br><span class="line">dataset=np.array(dataset)</span><br><span class="line">dataset=dataset.T</span><br><span class="line"></span><br><span class="line">print(dataset.shape,dataset[<span class="number">1302</span>])</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<blockquote>
<p>(1378, 6) [nan nan 18.0 nan nan 8.0]</p>
</blockquote>
<p>从这输出可以看出，数据量就是1378个，每个数据量是前文的６个指标。并且数据中包含缺失值，为了简单，这里使用均值进行填充，实际上还可以更加灵活处理缺失值，比如整行/列去掉，进行插值等。</p>
<h1 id="2数据预处理"><a class="markdownIt-Anchor" href="#2数据预处理"></a> 2.数据预处理</h1>
<ul>
<li><strong>缺失值填充</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing</span><br><span class="line"></span><br><span class="line">impute = preprocessing.Imputer()</span><br><span class="line">dataset = impute.fit_transform(dataset)</span><br><span class="line"></span><br><span class="line">print(dataset.shape,dataset[<span class="number">1302</span>])</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<blockquote>
<p>(1378, 6) [  7.31026325e+07   9.40476974e+06   1.80000000e+01   3.38872727e-02<br />
1.92543953e-01   8.00000000e+00]</p>
</blockquote>
<ul>
<li><strong>数据归一化</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"></span><br><span class="line">scaler = MinMaxScaler(feature_range=(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">dataset = scaler.fit_transform(dataset)</span><br><span class="line"></span><br><span class="line">print(dataset.shape,dataset[<span class="number">1302</span>])</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<blockquote>
<p>(1378, 6) [ 0.5072962   0.23767169  0.22222222  0.17733455  0.21859107  0.23809524]</p>
</blockquote>
<h1 id="3样本划分及标签处理"><a class="markdownIt-Anchor" href="#3样本划分及标签处理"></a> 3.样本划分及标签处理</h1>
<p>后一个数据作为前一个数据的标签，模型最终是基于当前的数据预测下一状态数据。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train_size=<span class="built_in">int</span>(<span class="number">0.8</span>*<span class="built_in">len</span>(dataset))</span><br><span class="line"><span class="comment">#训练集</span></span><br><span class="line">train_X=dataset[<span class="number">0</span>:train_size,:]</span><br><span class="line">train_y=dataset[<span class="number">1</span>:train_size+<span class="number">1</span>,:]</span><br><span class="line"><span class="comment">#验证集</span></span><br><span class="line">vali_X=dataset[train_size:,:]</span><br><span class="line">vali_y=dataset[train_size+<span class="number">1</span>:,:]</span><br><span class="line"> </span><br><span class="line">train_X=train_X.reshape(train_X.shape[<span class="number">0</span>],<span class="number">1</span>,train_X.shape[<span class="number">1</span>])</span><br><span class="line">vali_X=vali_X.reshape(vali_X.shape[<span class="number">0</span>],<span class="number">1</span>,vali_X.shape[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">print(train_X.shape,train_y.shape,vali_X.shape,vali_y.shape)</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<blockquote>
<p>(1102, 1, 6) (1102, 6) (276, 1, 6) (275, 6)</p>
</blockquote>
<h1 id="4模型训练"><a class="markdownIt-Anchor" href="#4模型训练"></a> 4.模型训练</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> LSTM</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> plot_model</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> SVG</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> keras.utils.vis_utils <span class="keyword">import</span> model_to_dot</span><br><span class="line"></span><br><span class="line"><span class="comment">#构建LSTM网络</span></span><br><span class="line">model=Sequential()</span><br><span class="line">model.add(LSTM(<span class="number">32</span>,input_shape=(<span class="number">1</span>,<span class="number">6</span>)))</span><br><span class="line">model.add(Dense(<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译模型</span></span><br><span class="line">model.<span class="built_in">compile</span>(loss=<span class="string">&#x27;mean_squared_error&#x27;</span>, optimizer=<span class="string">&#x27;adam&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#打印模型</span></span><br><span class="line">model.summary()</span><br><span class="line"></span><br><span class="line"><span class="comment">#保存模型</span></span><br><span class="line">SVG(model_to_dot(model,show_shapes=<span class="literal">True</span>).create(prog=<span class="string">&#x27;dot&#x27;</span>, <span class="built_in">format</span>=<span class="string">&#x27;svg&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#训练LSTM网络</span></span><br><span class="line">model.fit(train_X, train_y, epochs=<span class="number">10</span>, batch_size=<span class="number">1</span>, verbose=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h1 id="5模型评估"><a class="markdownIt-Anchor" href="#5模型评估"></a> 5.模型评估</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#预测数据</span></span><br><span class="line">valipredict=model.predict(vali_X)</span><br><span class="line">print(valipredict.shape,vali_y.shape)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#画图模型预测显示</span></span><br><span class="line">finalypredict=[]</span><br><span class="line"><span class="comment">#归一化后的数据画图,有6列</span></span><br><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">3</span>,figsize=(<span class="number">18</span>,<span class="number">6</span>)) </span><br><span class="line"><span class="keyword">for</span> ind <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    <span class="comment">#归一化数据转换为真实数据</span></span><br><span class="line">    valipredict_real=valipredict[:,ind]*(scaler.data_max_[ind]-scaler.data_min_[ind])+scaler.data_min_[ind]</span><br><span class="line">    vali_y_real=vali_y[:,ind]*(scaler.data_max_[ind]-scaler.data_min_[ind])+scaler.data_min_[ind]</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#未来的6个真实值</span></span><br><span class="line">    finalypredict.append(valipredict_real[-<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">3</span>,ind+<span class="number">1</span>)</span><br><span class="line">    plt.title(filenames[ind]) </span><br><span class="line">    plt.plot(valipredict_real,color=<span class="string">&#x27;red&#x27;</span>,label=<span class="string">&#x27;valipredict&#x27;</span>)</span><br><span class="line">    plt.plot(vali_y_real,color=<span class="string">&#x27;green&#x27;</span>,label=<span class="string">&#x27;vali_y&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082017788.png" alt="模型在验证数据上的预测效果" /></p>
<p>由图可以看出，６个指标基本的趋势被正确预测，但是某个时刻的准确度不是很高，我认为原因有几个：</p>
<blockquote>
<ol>
<li>数据量太少，导致模型无法学习足够的特征</li>
<li>特征太简单，某个指标的预测仅仅依赖于包括自身在内的历史时刻的６个值，这明显不够，可以考虑加入更多特征。比如这几个值明显对”时间“敏感，不同的时间区间内，流媒体的传输需要不同，将时间考虑进去将使得模型学习到更加丰富的特征</li>
<li>模型太简单，在数据量少，特征不多的情况下，我只用了一层的LSTM。</li>
</ol>
</blockquote>
<h1 id="6预测未来下一个6个指标"><a class="markdownIt-Anchor" href="#6预测未来下一个6个指标"></a> 6.预测未来下一个６个指标</h1>
<p>将数据中的最后的６个指标输入已经训练好的模型，模型输出６个值，该６个值作为模型预测到的未来下一个６个指标值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#前文已经存储，直接输出</span></span><br><span class="line">print(finalypredict)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>[93690488.0, 25693568.0, 40.356155, 0.088783175, 0.64066094, 17.614025]</p>
</blockquote>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>LSTM</tag>
      </tags>
  </entry>
  <entry>
    <title>DeepLabv3+：Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation</title>
    <url>/2019/03/29/DeepLabv3+%EF%BC%9AEncoder-Decoder%20with%20Atrous%20Separable%20Convolution%20for%20Semantic%20Image%20Segmentation/</url>
    <content><![CDATA[<p>在DeepLabv3的基础上，引入解码器(Dncoder)提升语义分割的精度</p>
<a id="more"></a>
<h1 id="什么是-deeplabv3"><a class="markdownIt-Anchor" href="#什么是-deeplabv3"></a> 什么是 DeepLabv3+?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Deeplabv3Plus-20230408142741.png" alt="Deeplabv3Plus-20230408142741" /></li>
<li>语义分割关注的2个问题：(1)实例对象多尺度问题；(2) feature 分辨率下降导致预测精度降低，而造成的边界信息丢失问题。 DeepLabv3]改进 ASPP 结构解决了问题1，deeplab v3+通过编码器解决问题2</li>
<li>在DeepLabv3的基础上，引入解码器(Dncoder)提升语义分割的精度；引深度可分离卷积提高语义分割的速度</li>
</ul>
<h1 id="deeplabv3的网络结构"><a class="markdownIt-Anchor" href="#deeplabv3的网络结构"></a> DeepLabv3+的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-24%2011.51.36.excalidraw.png" alt="Drawing 2023-02-24 11.51.36.excalidraw" /></li>
<li><strong>Encoder</strong>：(1)带空洞卷积的 DCNN，可以采用常用的分类网络如 ResNet、Xception；(2)基于 DeepLabv3 改进 ASPP，用于引入多尺度信息</li>
<li><strong>Decoder</strong>：其将底层特征与高层特征进一步融合，提升分割边界准确度</li>
</ul>
<h1 id="deeplabv3的解码器-dncoder的使用"><a class="markdownIt-Anchor" href="#deeplabv3的解码器-dncoder的使用"></a> Deeplabv3+的解码器 (Dncoder)的使用?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Deeplabv3Plus-20230408142741.png" alt="Deeplabv3Plus-20230408142741" /></li>
<li><strong>DeepLabv3 网络输出解码：</strong> 经改进的 ASPP 得到 C3或 C4的特征图，然后 1 x 1 卷积调整通道至类别数量，最后直接上采样 8 倍或 16 倍还原分辨率，这是一种非常暴力的 decoder 方法，不利于得到较精细的分割结果</li>
<li><strong>Deeplabv3+网络输出解码：</strong> 借鉴了 EncoderDecoder 结构，引入了新的 Decoder 模块，首先将 encoder 得到的上采样4x 的特征，然后与 encoder 中对应大小的低级特征 concat，为了防止 encoder 得到的高级特征被弱化，先采用1x1卷积对低级特征进行降维，两个特征 concat 后，再采用3x3卷积进一步融合特征，最后再 4 x 上采样得到与原始图片相同大小的分割预测</li>
</ul>
<h1 id="deeplabv3论文中的空洞深度分离卷积"><a class="markdownIt-Anchor" href="#deeplabv3论文中的空洞深度分离卷积"></a> Deeplabv3+论文中的空洞深度分离卷积？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Deeplabv3Plus-20230408142742.png" alt="Deeplabv3Plus-20230408142742" /></li>
<li>深度可分离卷积中的通道卷积改空洞卷积即可，减少计算量的同时，扩大感受野</li>
</ul>
<h1 id="deeplabv3如何改进xception"><a class="markdownIt-Anchor" href="#deeplabv3如何改进xception"></a> Deeplabv3+如何改进Xception?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Deeplabv3Plus-20230408142743.png" alt="" /></li>
<li>（1）参考MSRA(微软亚洲研究院)的修改 ，增加了更多的层</li>
<li>（2）所有的最大池化层使用stride=2深度可分离卷积(depthwise separable convolution)替换，并将其中的通道卷积(depthwise convolution)改空洞卷积(Atrous convolution)</li>
<li>（3）与MobileNet类似，在3x3 depthwise convolution后增批规范化(Batch Normalization,BN)Relu</li>
</ul>
]]></content>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>书摘：《如何有效阅读【樊登读书、十点读书推荐！学会有效阅读只需3周，YouTube千万点击的大师阅读课】》-藤原和博</title>
    <url>/2019/03/22/%E4%B9%A6%E6%91%98_%E5%A6%82%E4%BD%95%E6%9C%89%E6%95%88%E9%98%85%E8%AF%BB%E3%80%90%E6%A8%8A%E7%99%BB%E8%AF%BB%E4%B9%A6%E3%80%81%E5%8D%81%E7%82%B9%E8%AF%BB%E4%B9%A6%E6%8E%A8%E8%8D%90%EF%BC%81%E5%AD%A6%E4%BC%9A%E6%9C%89%E6%95%88%E9%98%85%E8%AF%BB%E5%8F%AA%E9%9C%803%E5%91%A8%EF%BC%8CYouTube%E5%8D%83%E4%B8%87%E7%82%B9%E5%87%BB%E7%9A%84%E5%A4%A7%E5%B8%88%E9%98%85%E8%AF%BB%E8%AF%BE%E3%80%91-%E8%97%A4%E5%8E%9F%E5%92%8C%E5%8D%9A.hexo/</url>
    <content><![CDATA[<div class="douban-card-block">
	<a class="douban-card" href="https://book.douban.com/subject/26789567">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28705474.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28705474.jpg');"></div>
		</div>
		<div class="douban-card-right" style="line-height: 1.7;">
			<div class="douban-card-item"><span>书名: </span><strong>如何有效阅读一本书</strong></div>
			<div class="douban-card-item"><span>作者: </span><span>[日本]奥野宣之</span></div>
			<div class="douban-card-item"><span>出版年份: </span><span>2016-6</span></div>
			<div class="douban-card-item"><span>评分: </span><span>7.2</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>
<a id="more"></a>
<h2 id="从出于兴趣的阅读到为了开拓人生的阅读"><a class="markdownIt-Anchor" href="#从出于兴趣的阅读到为了开拓人生的阅读"></a> “从出于兴趣的阅读”到“为了开拓人生的阅读”</h2>
<blockquote>
<p>我们已经进入了每个人都必须要对自己的幸福论进行整理，得出属于自己的原创的幸福论的时代。</p>
</blockquote>
<blockquote>
<p>这是一个如果不能拥有“只属于自己”的幸福论，就无法获得幸福的时代。</p>
</blockquote>
<h2 id="如何构筑只属于自己的幸福论"><a class="markdownIt-Anchor" href="#如何构筑只属于自己的幸福论"></a> 如何构筑“只属于自己”的幸福论</h2>
<blockquote>
<p>自己给幸福下定义，从现在自身所处的地方、前进的方向，到想要实现怎样的成就，这一切都必须由自己来决定。</p>
</blockquote>
<h2 id="被有阅读习惯的人和没有阅读习惯的人一分为二的社会"><a class="markdownIt-Anchor" href="#被有阅读习惯的人和没有阅读习惯的人一分为二的社会"></a> 被“有阅读习惯的人”和“没有阅读习惯的人”一分为二的社会</h2>
<blockquote>
<p>我再一次意识到一个事实，如果不能通过读书积累知识，是没有办法拥有自己的观点的。</p>
</blockquote>
<blockquote>
<p>单凭网上的信息只能进行浅显的思考这一观点。我认为在进行深层次的逻辑性思考方面，书是绝对不可或缺的东西。</p>
</blockquote>
<h2 id="有效阅读量决定了薪酬高低"><a class="markdownIt-Anchor" href="#有效阅读量决定了薪酬高低"></a> 有效阅读量，决定了薪酬高低</h2>
<blockquote>
<p>看不看书决定了报酬的高低，是通过读书无限接近专家的薪资水平，还是不读书无限接近自由工作者的薪资水平呢？看书与否会将你的道路分为这两条。</p>
</blockquote>
<h2 id="通过阅读所习得的人生中极为重要的两种能力"><a class="markdownIt-Anchor" href="#通过阅读所习得的人生中极为重要的两种能力"></a> 通过阅读所习得的人生中极为重要的两种能力</h2>
<blockquote>
<p>读书不仅能够实现自己想要做的事，还能帮助我们学习两种能力。那就是“注意力”和“平衡感”。</p>
</blockquote>
<h2 id="阅读训练一如何阅读获得想象力"><a class="markdownIt-Anchor" href="#阅读训练一如何阅读获得想象力"></a> 阅读训练一：如何阅读，获得想象力</h2>
<blockquote>
<p>在电视或是手机上看视频的机会越多，就越会加速这种倾向。正如酒井教授所解说的脑的运作那样，人光是处理源源不断地闯进视觉区域中的影像就已经筋疲力尽了，根本没有空闲对看到的影像进行想象。自然而然，电视和视频的制作方也渐渐不要求观众对影像进行想象了。了解到电视所具有的这种特征之后，加拿大的媒体学者马歇尔·麦克卢汉（Mcluhan）将其称为“冷媒介”。研究结果表明，我们在日常生活中所获取的信息总量的70%以上是由视觉获得的。只要电视作用于视觉让人们看到与现实相近的事物，观众就容易冷静（cool）地对其产生认同感。与此相对，广播是只能听得到声音的媒体。因为能够给予我们的信息量是有限的，所以能够在很大程度上激起听众的想象力，与此同时变得兴奋，情绪渐渐高涨（hot）。因此，马歇尔·麦克卢汉将广播称为“热媒体”。这样看来，读书和听广播一样，都可以说是凭借语言来激发想象力的媒体。并且，读书与被动地获得信息的广播不同，必须要由看书人主动地获取信息，是非常适合“activelearning（自主学习）”的媒体。</p>
</blockquote>
<h2 id="阅读训练三如何阅读将自己的大脑与作者的大脑连接起来"><a class="markdownIt-Anchor" href="#阅读训练三如何阅读将自己的大脑与作者的大脑连接起来"></a> 阅读训练三：如何阅读，将自己的大脑与作者的大脑连接起来</h2>
<blockquote>
<p>通过读书我们可以获得各种各样的感受器，并且在自己脑内储存各种各样的大脑碎片，这就是读书带给我们的帮助。</p>
</blockquote>
<h2 id="阅读训练五如何阅读以获得更多mikata想法或伙伴"><a class="markdownIt-Anchor" href="#阅读训练五如何阅读以获得更多mikata想法或伙伴"></a> 阅读训练五：如何阅读，以获得更多“mikata”（想法或伙伴）</h2>
<blockquote>
<p>读书是读者把作者所获得的知识输入自己大脑中的行为。通过把自己的大脑和他人的“大脑碎片”相连接，自己的大脑可以得到扩张。通过理解作者看待世界的角度和知识，读者可以丰富对世界的看法，拥有进行多面的复眼思考的能力。如果扩大了世界观（看法），就不会轻易被鱼龙混杂的消息所欺骗，在做决定时，供你选择的项目也会变多，这样风险也会降低，所以越多读书就越能保护自己。</p>
</blockquote>
<h2 id="阅读训练六如何阅读预测未来趋势"><a class="markdownIt-Anchor" href="#阅读训练六如何阅读预测未来趋势"></a> 阅读训练六：如何阅读，预测未来趋势</h2>
<blockquote>
<p>读书就是一个把自己的大脑和他人的大脑碎片相结合的行为；而我们脑内所吸收的他人的大脑碎片将会增殖，并且开始互相连接在一起。这会产生全新的思考和意见，而预测未来便是其副产物。</p>
</blockquote>
<h2 id="阅读训练十一如何阅读创造出自己的意见"><a class="markdownIt-Anchor" href="#阅读训练十一如何阅读创造出自己的意见"></a> 阅读训练十一：如何阅读，创造出自己的意见</h2>
<blockquote>
<p>为了消除这个自卑感，我认为自己有必要扩大自己的见识。但并不是说看一本书就能立即生效，所谓见识是需要积累的。只要见识的积累量没有超过一定的刻度，是没有办法创造出自己的意见的。</p>
</blockquote>
<h2 id="阅读训练十三如何阅读建立未来规划"><a class="markdownIt-Anchor" href="#阅读训练十三如何阅读建立未来规划"></a> 阅读训练十三：如何阅读，建立未来规划</h2>
<blockquote>
<p>每个人都在某个地方有所欠缺，但是许多人不知道那个自己所欠缺的部分到底是什么。如果在现实社会中，我们只是得过且过地活着的话，是很难注意到的。要怎么做才能注意到那个自己所欠缺的部分呢？这个问题的答案就在书本之中。</p>
</blockquote>
<blockquote>
<p>要想让团体内的交流变得充实起来，读书也是非常有效的。</p>
</blockquote>
<h2 id="从今往后的时代中不可或缺的信息综合能力"><a class="markdownIt-Anchor" href="#从今往后的时代中不可或缺的信息综合能力"></a> 从今往后的时代中不可或缺的“信息综合能力”</h2>
<blockquote>
<p>所谓信息处理能力，指的就是在世界观固定的情况下玩游戏的时候，最快得出正确答案的能力。</p>
</blockquote>
<blockquote>
<p>所谓信息综合能力，就是把自身所具备的知识和技巧相结合，得出“让自己能够认同的答案”的能力。这并不是指去想什么才是正确答案，关键是要自己创造出能让自己信服的答案。</p>
</blockquote>
<h2 id="阅读是一种工具独处的最好方式便是阅读"><a class="markdownIt-Anchor" href="#阅读是一种工具独处的最好方式便是阅读"></a> 阅读是一种工具：独处的最好方式便是阅读</h2>
<blockquote>
<p>作者的世界观和读者的世界观之间会发生化学反应，进而诞生出全新的世界观。这就是为什么读书可以丰富对世界的看法，交到新的伙伴。</p>
</blockquote>
<h2 id="成年人要如何磨炼信息综合能力"><a class="markdownIt-Anchor" href="#成年人要如何磨炼信息综合能力"></a> 成年人要如何磨炼信息综合能力</h2>
<blockquote>
<p>那些已经对“过家家游戏”没有兴趣的成人要怎么做才好呢？当然了，哪怕成了大人，也有锻炼信息综合能力的方法。其一，旅行。</p>
</blockquote>
<h2 id="有百分百遇到好书的方法吗"><a class="markdownIt-Anchor" href="#有百分百遇到好书的方法吗"></a> 有百分百遇到好书的方法吗</h2>
<blockquote>
<p>我推荐那些真的想要得到对自己来说很重要的书的人进行习惯性的“乱读（广泛阅读）”。这样有可能形成自己从未有过的思考方法，还可能因为读书和陌生的人相遇。在</p>
</blockquote>
<h2 id="在阅读成为习惯之前强制方法也是必要的"><a class="markdownIt-Anchor" href="#在阅读成为习惯之前强制方法也是必要的"></a> 在阅读成为习惯之前，强制方法也是必要的</h2>
<blockquote>
<p>教育，就是“传染”和感染。爱读书的人，读书的时候表情真的是非常丰富的。哪怕在很安静地看书，也会向周围释放出一股气场。</p>
</blockquote>
<h2 id="单单看书是远远不够的"><a class="markdownIt-Anchor" href="#单单看书是远远不够的"></a> 单单看书是远远不够的</h2>
<blockquote>
<p>在最后我想告诉各位的是，只是一个劲读书，把书中的知识输入大脑，可能还是没办法养成读书的习惯。</p>
</blockquote>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>BiSeNet：Bilateral Segmentation Network for Real-time Semantic Segmentation</title>
    <url>/2019/03/20/BiSeNet%EF%BC%9ABilateral%20Segmentation%20Network%20for%20Real-time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>为了兼顾推理速度的同时保留大的特征图分辨率，BiSeNet引入Spatial Path和Context Path，Spatial Path中步长较小来得到高分辨率的特征图，Context Path引入快速的下采样机制来增加感受野，最后使用特征融合模块融合两个分支的特征</p>
<a id="more"></a>
<h1 id="什么是-bisenet"><a class="markdownIt-Anchor" href="#什么是-bisenet"></a> 什么是 BiSeNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNet-20230408142104.png" alt="BiSeNet-20230408142104" /></li>
<li>语义分割 2 个条件越满足，性能越好。即更大的感受野和更丰富的空间信息，大的感受野通过加深网络实现，但是越深层网络的空间信息越弱，两个条件互为矛盾</li>
<li>为了兼顾推理速度的同时保留大的特征图分辨率，BiSeNet引入Spatial Path和Context Path，<strong>Spatial Path中步长较小来得到高分辨率的特征图</strong>，<strong>Context Path引入快速的下采样机制来增加感受野</strong>，最后使用特征融合模块将Spatial Path和Context Path的特征图进行有效融合</li>
</ul>
<h1 id="bisenet-的网络结构"><a class="markdownIt-Anchor" href="#bisenet-的网络结构"></a> BiSeNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/BiSeNet-20230408142105.png" alt="BiSeNet-20230408142105" /></li>
<li><strong>空间分支 (Spatial Path)</strong>：保留原始输入图像的空间尺寸并编码丰富的空间信息。空间分支主要包括三层 CBR，最终得到的特征图是原图的1/8</li>
<li><strong>上下文分支 (Context Path)</strong>：为了兼顾感受野的大小和实时两个因素，上下文分支采用Light Weight模型和全局平均池化去提供更大的感受野</li>
<li><strong>注意力模块 (Attention Refinement，ARM)</strong>：使用全局平均池化生成“通道注意力”，引导上下文分支的特征融合</li>
<li><strong>特征混合模块 (Feature Fusion，FFM)</strong>：两个分支所提取的特征是不同 level 的，所以不能简单的把二者相加。通过一个 CBR 整合特征，然后再次使用“通道注意力”去引导特征融合</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>轻量</tag>
        <tag>语义语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>ICNet for Real-Time Semantic Segmentation on High-Resolution Images</title>
    <url>/2019/03/13/ICNet%20for%20Real-Time%20Semantic%20Segmentation%20on%20High-Resolution%20Images/</url>
    <content><![CDATA[<p>ICNet通过设计3个输入尺度的网络，学习不同尺度的特征，然后通过特征融合模块，输出图片的分割结果</p>
<a id="more"></a>
<h1 id="什么是-icnet"><a class="markdownIt-Anchor" href="#什么是-icnet"></a> 什么是 ICNet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ICNet-20230408143150.png" alt="ICNet-20230408143150" /></li>
<li>ICNet 通过分别处理低、中、高三种分辨率，结合低分辨率的速度和高分辨率的质量，实现速度和质量的提升</li>
<li>上图语义分割的预测结构，其中 a 是 FCN 系列，b 是编码器-解码器结构的，包括 SegNet、DeconvNet、UNet 、ENet ，c 是多尺度预测组合结构，如 DeepLab-MSC，d 是 ICNet 结构</li>
</ul>
<h1 id="icnet-的网络结构"><a class="markdownIt-Anchor" href="#icnet-的网络结构"></a> ICNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ICNet-20230408143151.png" alt="ICNet-20230408143151" /></li>
<li>ICNet 接受 3 个分辨率输入，分别是低、中、高三个分辨率，分辨率之间通过 [[ICNet#^sbyria|CFF]] 连接</li>
<li>低、中分辨率分支的卷积参数是共享的</li>
</ul>
<h1 id="icnet-的-cff-cascade-feature-fusion-unit模块"><a class="markdownIt-Anchor" href="#icnet-的-cff-cascade-feature-fusion-unit模块"></a> ICNet 的 CFF (cascade feature fusion unit)模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ICNet-20230408143152.png" alt="ICNet-20230408143152" /></li>
<li>这是一个组合特征融合模块，该模块的输入有 2 个，一个是低分辨率的输入 F1，另一个是高分辨率输入 F2，F1 上采样 2 倍后与 F2 融合</li>
</ul>
<h1 id="icnet-的损失函数"><a class="markdownIt-Anchor" href="#icnet-的损失函数"></a> ICNet 的损失函数？</h1>
<ul>
<li>ICNet 输入 3 个分辨率的图片，计算了 3 次 loss, 分别是</li>
<li>(1) 低分辨率的 1/32 输出，在上采样 2 倍后，和 1/16 的 gt 计算一次损失</li>
<li>(1) 中分辨率的 1/16 输出，在上采样 2 倍后，和 1/8 的 gt 计算一次损失</li>
<li>(1) 低分辨率的 1/8 输出，在上采样 2 倍后，和 1/4 的 gt 计算一次损失</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>多尺度</tag>
      </tags>
  </entry>
  <entry>
    <title>DPN：Dual Path Networks</title>
    <url>/2019/02/21/DPN%EF%BC%9ADual%20Path%20Networks/</url>
    <content><![CDATA[<p>DPN融合了RestNeXt和DenseNet的优点，提出双路的特征提取架构</p>
<a id="more"></a>
<ul>
<li>什么是 DPN ？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DPN-20230408140151.png" alt="" /></li>
<li>DPN 结合 ResNeXt 的优点（重用特征，因为整个 ResNet 都具备这个属性）和 DenseNet 的优点（在重用特征上存在冗余，但是利于探索新特征）</li>
<li>上图的 d, e 是等价的，都是 DPN，分成左右两个部分，第一部分类似 DenseNet，第二部分是 ResNeXt，对与中间的 shortcut 部分，由左右两部分的特征图经过1x1卷积相加，然后经过3x3卷积，和1x1的卷积（这就是 resnet 的 shortcut 部分），然后对获取的特征图分成两部分，一部分和左边类 DenseNet 对应特征图拼接，另一部分与右边 ResNeXt 的特征图进行相加</li>
</ul>
</li>
<li>DPN 的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DPN-20230408140151.png" alt="" /></li>
<li>（a）残差网络；（b）密集连接网络，每一层都可以获取所有先前微模块的输出；（c）通过共享（b）中层间的相同输出的首个 1×1 连接，密集连接网简并成一个残差网络；（c）中用虚线圈起的长方形标出了残差单元的位置；（d）本篇所提出的双路径结构——dual path architecture——DPN。（e）实现过程中（d）的等价形式，「~」表示一个分支操作（split operation），「+」表示元素级（element-wise）的相加</li>
</ul>
</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_33304197/article/details/80599127">卷积神经网络从lenet到DPN发展历程_dpn 神经网络_qq_643421232的博客-CSDN博客</a></li>
<li><a href="https://blog.csdn.net/u014380165/article/details/75676216">DPN（Dual Path Network）算法详解_dpn网络_AI之路的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>DeepLabv3：Rethinking Atrous Convolution for Semantic Image Segmentation</title>
    <url>/2019/02/19/DeepLabv3%EF%BC%9ARethinking%20Atrous%20Convolution%20for%20Semantic%20Image%20Segmentation/</url>
    <content><![CDATA[<p>优化DeepLabv2的ASPP模块，并且抛弃CRF，实现端到端的语义分割</p>
<a id="more"></a>
<h1 id="什么是-deeplabv3"><a class="markdownIt-Anchor" href="#什么是-deeplabv3"></a> 什么是 DeepLabv3?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv3-20230408142639.png" alt="DeepLabv3-20230408142639" /></li>
<li>DeepLabv1 DeepLabv2都是使空洞卷积提取密集特征来进行语义分割，DeepLabv3依然是在空洞卷积做文章，但是采用多比例的空洞带孔卷积级联或并行来捕获<strong>多尺度</strong>背景</li>
<li>抛弃全连接条件随机场，实现 end-to-end语义分割</li>
</ul>
<h1 id="deeplabv3-的网络结构"><a class="markdownIt-Anchor" href="#deeplabv3-的网络结构"></a> DeepLabv3 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-24%2011.51.36.excalidraw.png" alt="Drawing 2023-02-24 11.51.36.excalidraw" /></li>
<li>(1)首先使用resnet18网络进行的特征提取，得到的是512x32x32的特征图</li>
<li>(2)aspp5个分支都是256x32x32的特征图，将它们拼接在一起，得到1280x32x32的特征图，再经过两次卷积得到20x32x32的特征图</li>
<li>(3) 最后对20x32x32的特征图进行一次上采样操作，得到20x256x256的特征图，即最后我们需要的输出</li>
</ul>
<h1 id="deeplabv3-的-aspp-模块"><a class="markdownIt-Anchor" href="#deeplabv3-的-aspp-模块"></a> DeepLabv3 的 ASPP 模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv3-20230408142639.png" alt="DeepLabv3-20230408142639" /></li>
<li><strong>BackBone</strong>：Image 经过多个 block 的操作得到 output_stride=16 的特征图，经过一个 rate 为2的空洞卷积经过 block4，然后再经过改进的 ASPP ，包括2部分：</li>
<li><strong>(a)空洞卷积部分：</strong> 使用 1x1conv、rate 为{6，12，18}的 3 x 3 空洞卷积</li>
<li><strong>(b) image-level features</strong>：经过一个全局平均池化，接256个1x1的卷积，然后使用双线性插值上采样恢复至output_stride=16</li>
<li>拼接 (a)、(b)得到输出得到 ASPP 输出，和 DeepLabv2 的空洞卷积金字塔池化(ASPP)相比，有 3 个不同：(1)增加 1 x 1 卷积；(2)去掉 rate=24 的空洞卷积；(3)增加 Image Pooling</li>
</ul>
]]></content>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>Xception：Deep Learning with Depthwise Separable Convolutions</title>
    <url>/2019/02/12/Xception%EF%BC%9ADeep%20Learning%20with%20Depthwise%20Separable%20Convolutions/</url>
    <content><![CDATA[<p>在GoogleNetv3的基础，加入深度可分离卷积，并且实际使用时，调换通道卷积和1x1卷积的顺序</p>
<a id="more"></a>
<ul>
<li>什么是Xception？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Xception-20230408141158.png" alt="" /></li>
<li>Inceptionv3的另一种改进,主要采深度可分离卷积来替代原来的Inceptionv3中的卷积操作</li>
<li>Inception系列论文都在提高不同尺度特征的适应能力，通过不同的卷积核加宽模型，使得模型效果更好，上图从左到右，依次是原始Inceptionv3结构、并行3分支、分组3分支、所有通道一组</li>
</ul>
</li>
<li>Xception的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Xception-20230408141158-1.png" alt="Xception-20230408141158-1" /></li>
<li>Xception包含三个部分：输入部分，中间部分和结尾部分；其中所有卷积层和可分离卷积层后面都使批规范化(Batch Normalization,BN)处理，所有的可分离卷积层使用一个深度乘数1（深度方向并不进行扩充）</li>
</ul>
</li>
<li>Xception如何使用深度可分离卷积？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Xception-20230408141159.png" alt="" /></li>
<li>顺序：原深度可分离卷积(depthwise separable convolution)先逐通道卷积，再1x1卷积；而 Xception是反过来，先1x1卷积，再逐通道卷积</li>
<li>激活函数：原版深度可分离卷积的两个卷积之间是不带激活函数的，而Xception在经过1x1卷积之后会带上一个Relu的非线性激活函数</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Tex家族关系</title>
    <url>/2019/02/06/Tex%E5%AE%B6%E6%97%8F%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<p>文章自<a href="https://liam.page/2014/09/08/latex-introduction/"><code>一份其实很短的 LaTeX 入门文档</code></a>学习，整理所得。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082059652.png" alt="Tex家族关系" /></p>
<a id="more"></a>
<h1 id="tex家族关系图"><a class="markdownIt-Anchor" href="#tex家族关系图"></a> Tex家族关系图</h1>
<h2 id="排版引擎"><a class="markdownIt-Anchor" href="#排版引擎"></a> 排版引擎</h2>
<blockquote>
<p>1.所谓的引擎，是指能够实现断行、分页等操作的程序（请注意这并不是定义）</p>
<p>2.标记语言，是指一种将控制命令和文本结合起来的格式，它的主体是其中的文本而控制命令则实现一些特殊效果（同样请注意这并不是定义）</p>
</blockquote>
<h3 id="tex"><a class="markdownIt-Anchor" href="#tex"></a> Tex</h3>
<blockquote>
<p>1.TeX 的源代码是后缀为 .tex 的纯文本文件。使用任意纯文本编辑器，都可以修改</p>
</blockquote>
<h3 id="pdftex"><a class="markdownIt-Anchor" href="#pdftex"></a> pdfTeX</h3>
<blockquote>
<p>dvi 格式是为了排版而产生的，它本身并不支持所谓的「交叉引用」，pdfTeX 直接输出 pdf 格式的文档，这也是 pdfTeX 相对 TeX 进步（易用性方面）的地方</p>
</blockquote>
<h3 id="pdflatex"><a class="markdownIt-Anchor" href="#pdflatex"></a> pdfLaTeX</h3>
<blockquote>
<p>pdfLaTeX 这个程序的主要工作依旧是将 LaTeX 格式的文档进行解释，不过此次是将解释之后的结果交付给 pdfTeX 引擎处理</p>
</blockquote>
<h3 id="xetex"><a class="markdownIt-Anchor" href="#xetex"></a> XeTeX</h3>
<blockquote>
<p>XeTeX 引擎直接支持 Unicode 字符。也就是说现在不使用 CJK 也能排版中日韩文的文档了，并且这种方式要比之前的方式更加优秀。</p>
</blockquote>
<h3 id="xelatex"><a class="markdownIt-Anchor" href="#xelatex"></a> XeLaTeX</h3>
<blockquote>
<p>XeLaTeX 和 XeTeX 的关系与 pdfLaTeX 和 pdfTeX 的关系类似</p>
</blockquote>
<h3 id="luatex"><a class="markdownIt-Anchor" href="#luatex"></a> LuaTeX</h3>
<blockquote>
<p>正在开发完善的一个 TeX 引擎</p>
</blockquote>
<h2 id="发行"><a class="markdownIt-Anchor" href="#发行"></a> 发行</h2>
<blockquote>
<p>所谓 TeX 发行，也叫 TeX 发行版、TeX 系统或者 TeX 套装，指的是包括 TeX 系统的各种可执行程序，以及他们执行时需要的一些辅助程序和宏包文档的集合：</p>
<ul>
<li>CTeX</li>
<li>MiKTeX</li>
<li>TeX Live<br />
概要: 后面两个最流行的两个发行，自带TeXworks编辑器</li>
</ul>
</blockquote>
<h2 id="编辑器"><a class="markdownIt-Anchor" href="#编辑器"></a> 编辑器</h2>
<h3 id="专门的tex编辑器"><a class="markdownIt-Anchor" href="#专门的tex编辑器"></a> 专门的Tex编辑器</h3>
<ul>
<li>TeXworks</li>
</ul>
<blockquote>
<ul>
<li>TeXworks 是 TeX Live 自带的编辑器，而 TeX Live 是 TeX User Group</li>
<li>出品的跨平台发行版，各个操作系统都可以使用 几乎所有 TeX 发行版都带有 TeXworks TeXworks</li>
<li>十分简洁，除了最基本的功能之外，没有其他复杂的东西，能使你将注意力集中在 TeX 的学习上。</li>
</ul>
</blockquote>
<ul>
<li>TeXmaker</li>
<li>TeXstudio</li>
<li>WinEdt</li>
</ul>
<h3 id="文本编辑器"><a class="markdownIt-Anchor" href="#文本编辑器"></a> 文本编辑器</h3>
<ul>
<li>ATOM</li>
<li>Sublime Text</li>
<li>Visual Studio Code</li>
</ul>
<h2 id="宏包"><a class="markdownIt-Anchor" href="#宏包"></a> 宏包</h2>
<blockquote>
<ul>
<li>
<p>所谓宏包，就是一系列控制序列的合集。这些控制序列太常用，以至于人们会觉得每次将他们写在导言区太过繁琐，于是将他们打包放在同一个文件中，成为所谓的宏包</p>
</li>
<li>
<p>请注意，CTeX 宏集和 CTeX 套装是两个不同的东西。CTeX 宏集本质是 LaTeX 宏的集合，包含若干文档类（.cls 文件）和宏包（.sty 文件）。CTeX 套装是一个过时的 TeX 系统。</p>
</li>
</ul>
</blockquote>
<h3 id="ctex"><a class="markdownIt-Anchor" href="#ctex"></a> CTeX</h3>
<blockquote>
<ul>
<li>
<p>CTeX 宏集和 CTeX 套装是两个不同的东西。CTeX 宏集本质是 LaTeX 宏的集合，包含若干文档类（.cls 文件）和宏包（.sty 文件）。CTeX 套装是一个过时的 TeX 系统</p>
</li>
<li>
<p>新版 CTeX 宏集的默认能够自动检测用户的操作系统，并为之配置合适的字库</p>
</li>
</ul>
</blockquote>
<h2 id="latex"><a class="markdownIt-Anchor" href="#latex"></a> Latex</h2>
<blockquote>
<ul>
<li>
<p>排版系统： LaTeX 利用 TeX 的控制命令，定义了许多新的控制命令并封装成一个可执行文件。这个可执行文件会去解释 LaTeX 新定义的命令成为 TeX 的控制命令，并最终交由 TeX 引擎进行排版。</p>
</li>
<li>
<p>最终进行断行、分页等操作的，是 TeX 引擎</p>
</li>
<li>
<p>LaTeX 实际上是一个工具，它将用户按照它的格式编写的文档解释成 TeX 引擎能理解的形式并交付给 TeX 引擎处理，再将最终结果返回给用户</p>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Tex</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(9)-线性代数相关</title>
    <url>/2018/09/24/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(9)-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<p>学过线性代数的都了解矩阵,在矩阵上的文章可做的很多,什么特征矩阵,单位矩阵等.grpah存储可以使用矩阵,比如graph的<code>邻接矩阵</code>,<code>权重矩阵</code>等,这节主要是在等到graph后,如何快速得到这些信息.详细官方文档在<a href="https://networkx.github.io/documentation/stable/reference/linalg.html">这里</a></p>
<a id="more"></a>
<p>注意: 如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="线性代数相关"><a class="markdownIt-Anchor" href="#线性代数相关"></a> 线性代数相关</h1>
<h2 id="图矩阵"><a class="markdownIt-Anchor" href="#图矩阵"></a> 图矩阵</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义图的节点和边</span></span><br><span class="line">nodes=[<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line">edges=[(<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'5'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'5'</span>,<span class="number">2</span>),(<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="number">3</span>),(<span class="string">'1'</span>,<span class="string">'4'</span>,<span class="number">5</span>),(<span class="string">'2'</span>,<span class="string">'1'</span>,<span class="number">7</span>),(<span class="string">'2'</span>,<span class="string">'4'</span>,<span class="number">6</span>),(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="number">0.5</span>),(<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="number">0.5</span>),(<span class="string">'c'</span>,<span class="string">'a'</span>,<span class="number">0.5</span>)]</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">10</span>,<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义一个无向图和有向图</span></span><br><span class="line">G1 = nx.Graph()</span><br><span class="line">G1.add_nodes_from(nodes)</span><br><span class="line">G1.add_weighted_edges_from(edges)</span><br><span class="line"></span><br><span class="line">G2 = nx.DiGraph()</span><br><span class="line">G2.add_nodes_from(nodes)</span><br><span class="line">G2.add_weighted_edges_from(edges)</span><br><span class="line"></span><br><span class="line">pos1=nx.circular_layout(G1)</span><br><span class="line">pos2=nx.circular_layout(G2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#画出无向图和有向图</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">nx.draw(G1,pos1, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'无向图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">nx.draw(G2,pos2, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'有向图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment">#控制numpy输出小数位数</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np.set_printoptions(precision=<span class="number">3</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#邻接矩阵</span></span><br><span class="line">A = nx.adjacency_matrix(G1)</span><br><span class="line">print(<span class="string">'邻接矩阵:\n'</span>,A.todense())</span><br><span class="line"></span><br><span class="line"><span class="comment">#关联矩阵</span></span><br><span class="line">I = nx.incidence_matrix(G1)</span><br><span class="line">print(<span class="string">'\n关联矩阵:\n'</span>,I.todense())</span><br><span class="line"></span><br><span class="line"><span class="comment">#拉普拉斯矩阵</span></span><br><span class="line">L=nx.laplacian_matrix(G1)</span><br><span class="line">print(<span class="string">'\n拉普拉斯矩阵:\n'</span>,L.todense())</span><br><span class="line"></span><br><span class="line"><span class="comment">#标准化的拉普拉斯矩阵</span></span><br><span class="line">NL=nx.normalized_laplacian_matrix(G1)</span><br><span class="line">print(<span class="string">'\n标准化的拉普拉斯矩阵:\n'</span>,NL.todense())</span><br><span class="line"></span><br><span class="line"><span class="comment">#有向图拉普拉斯矩阵</span></span><br><span class="line">DL=nx.directed_laplacian_matrix(G2)</span><br><span class="line">print(<span class="string">'\n有向拉普拉斯矩阵:\n'</span>,DL)</span><br><span class="line"></span><br><span class="line"><span class="comment">#拉普拉斯算子的特征值</span></span><br><span class="line">LS=nx.laplacian_spectrum(G1)</span><br><span class="line">print(<span class="string">'\n拉普拉斯算子的特征值:\n'</span>,LS)</span><br><span class="line"></span><br><span class="line"><span class="comment">#邻接矩阵的特征值</span></span><br><span class="line">AS=nx.adjacency_spectrum(G1)</span><br><span class="line">print(<span class="string">'\n邻接矩阵的特征值:\n'</span>,AS)</span><br><span class="line"></span><br><span class="line"><span class="comment">#无向图的代数连通性</span></span><br><span class="line">AC=nx.algebraic_connectivity(G1)</span><br><span class="line">print(<span class="string">'\n无向图的代数连通性:\n'</span>,AC)</span><br><span class="line"></span><br><span class="line"><span class="comment">#图的光谱排序</span></span><br><span class="line">SO=nx.spectral_ordering(G1)</span><br><span class="line">print(<span class="string">'\n图的光谱排序:\n'</span>,SO)</span><br><span class="line"></span><br><span class="line"><span class="comment">#两个矩阵的解释看:https://blog.csdn.net/Hanging_Gardens/article/details/55670356</span></span><br></pre></td></tr></table></figure>
<p><img src="./.images/1613550454647.png" alt="图矩阵示例"></p>
<p><strong>输出:</strong></p>
<pre><code>邻接矩阵:
 [[0.  0.  0.  0.  5.  0.  0.  0.  6. ]
 [0.  0.  0.  2.  0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.5 0.5 0.  0. ]
 [0.  2.  0.  1.  1.  0.  0.  0.  0. ]
 [5.  0.  0.  1.  0.  0.  0.  0.  7. ]
 [0.  0.  0.5 0.  0.  0.  0.5 0.  0. ]
 [0.  0.  0.5 0.  0.  0.5 0.  0.  0. ]
 [0.  0.  0.  0.  0.  0.  0.  0.  0. ]
 [6.  0.  0.  0.  7.  0.  0.  0.  0. ]]

关联矩阵:
 [[1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 1. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 0. 1. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 0.]]

拉普拉斯矩阵:
 [[11.   0.   0.   0.  -5.   0.   0.   0.  -6. ]
 [ 0.   2.   0.  -2.   0.   0.   0.   0.   0. ]
 [ 0.   0.   1.   0.   0.  -0.5 -0.5  0.   0. ]
 [ 0.  -2.   0.   3.  -1.   0.   0.   0.   0. ]
 [-5.   0.   0.  -1.  13.   0.   0.   0.  -7. ]
 [ 0.   0.  -0.5  0.   0.   1.  -0.5  0.   0. ]
 [ 0.   0.  -0.5  0.   0.  -0.5  1.   0.   0. ]
 [ 0.   0.   0.   0.   0.   0.   0.   0.   0. ]
 [-6.   0.   0.   0.  -7.   0.   0.   0.  13. ]]

标准化的拉普拉斯矩阵:
 [[ 1.     0.     0.     0.    -0.418  0.     0.     0.    -0.502]
 [ 0.     1.     0.    -0.707  0.     0.     0.     0.     0.   ]
 [ 0.     0.     1.     0.     0.    -0.5   -0.5    0.     0.   ]
 [ 0.    -0.707  0.     0.75  -0.139  0.     0.     0.     0.   ]
 [-0.418  0.     0.    -0.139  1.     0.     0.     0.    -0.538]
 [ 0.     0.    -0.5    0.     0.     1.    -0.5    0.     0.   ]
 [ 0.     0.    -0.5    0.     0.    -0.5    1.     0.     0.   ]
 [ 0.     0.     0.     0.     0.     0.     0.     0.     0.   ]
 [-0.502  0.     0.     0.    -0.538  0.     0.     0.     1.   ]]

有向拉普拉斯矩阵:
 [[ 0.889 -0.117 -0.029 -0.087 -0.319 -0.029 -0.029 -0.129 -0.242]
 [-0.117  0.889 -0.026 -0.278 -0.051 -0.026 -0.026 -0.114 -0.056]
 [-0.029 -0.026  0.994 -0.012 -0.009 -0.481 -0.481 -0.025 -0.01 ]
 [-0.087 -0.278 -0.012  0.757 -0.097 -0.012 -0.012 -0.052 -0.006]
 [-0.319 -0.051 -0.009 -0.097  0.994 -0.009 -0.009 -0.041 -0.434]
 [-0.029 -0.026 -0.481 -0.012 -0.009  0.994 -0.481 -0.025 -0.01 ]
 [-0.029 -0.026 -0.481 -0.012 -0.009 -0.481  0.994 -0.025 -0.01 ]
 [-0.129 -0.114 -0.025 -0.052 -0.041 -0.025 -0.025  0.889 -0.045]
 [-0.242 -0.056 -0.01  -0.006 -0.434 -0.01  -0.01  -0.045  0.994]]

拉普拉斯算子的特征值:
 [-1.436e-15  0.000e+00  4.610e-16  7.000e-01  1.500e+00  1.500e+00
  4.576e+00  1.660e+01  2.013e+01]

邻接矩阵的特征值:
 [12.068+0.000e+00j  2.588+0.000e+00j -7.219+0.000e+00j -4.925+0.000e+00j
 -1.513+0.000e+00j  1.   +0.000e+00j -0.5  +2.393e-17j -0.5  -2.393e-17j
  0.   +0.000e+00j]

无向图的代数连通性:
 0.0

图的光谱排序:
 ['4', '2', '1', '0', '5', 'b', 'c', 'a', '3']
</code></pre>
<hr>
<p>后面还有两个小节,由于对图论算法不是很明白,所以先讲明白算法原理,再使用networkX实现,如无须读算法,可以跳过算法原理部分.</p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(8)-DrawingGraph</title>
    <url>/2018/09/23/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(8)-DrawingGraph/</url>
    <content><![CDATA[<p>如果只是简单使用<code>nx.draw</code>,是无法定制出自己需要的graph,并且这样的graph内的点坐标的不定的,运行一次变一次,实际中一般是要求固定的位置,这就需要到<code>布局</code>的概念了.详细的画图信息可以看<a href="https://networkx.github.io/documentation/stable/reference/drawing.html">这里</a>,代码中的关键部分使用了英文进行注释,不在另外注释.</p>
<a id="more"></a>
<p>注意: 如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="drawing-graph"><a class="markdownIt-Anchor" href="#drawing-graph"></a> Drawing Graph</h1>
<h2 id="使用matplotlib"><a class="markdownIt-Anchor" href="#使用matplotlib"></a> 使用Matplotlib</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义graph</span></span><br><span class="line">nodes=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line">edges=[(<span class="number">0</span>,<span class="number">1</span>),(<span class="number">0</span>,<span class="number">5</span>),(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">1</span>,<span class="number">4</span>),(<span class="number">2</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">4</span>),(<span class="string">'a'</span>,<span class="string">'b'</span>),(<span class="string">'b'</span>,<span class="string">'c'</span>),(<span class="string">'c'</span>,<span class="string">'a'</span>)]</span><br><span class="line">G=nx.Graph()</span><br><span class="line">G.add_nodes_from(nodes)</span><br><span class="line">G.add_edges_from(edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用spring_layout布局</span></span><br><span class="line">pos=nx.spring_layout(G)</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">4</span>,figsize=(<span class="number">18</span>,<span class="number">6</span>))</span><br><span class="line">plt.subplot(<span class="number">241</span>)</span><br><span class="line">plt.title(<span class="string">'spring_layout'</span>)</span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>) <span class="comment">#Draw the graph G with Matplotlib.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">242</span>)</span><br><span class="line">plt.title(<span class="string">'draw_networkx'</span>)</span><br><span class="line">nx.draw_networkx(G) <span class="comment">#Draw the graph G using Matplotlib.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">243</span>)</span><br><span class="line">plt.title(<span class="string">'draw_networkx_nodes'</span>)</span><br><span class="line">nx.draw_networkx_nodes(G,pos) <span class="comment">#Draw the nodes of the graph G.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">244</span>)</span><br><span class="line">plt.title(<span class="string">'draw_networkx_edges'</span>)</span><br><span class="line">nx.draw_networkx_edges(G,pos) <span class="comment">#Draw the edges of the graph G.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">245</span>)</span><br><span class="line">plt.title(<span class="string">'draw_networkx_labels'</span>)</span><br><span class="line">nx.draw_networkx_labels(G,pos) <span class="comment">#Draw node labels on the graph G.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">246</span>)</span><br><span class="line">plt.title(<span class="string">'draw_networkx_edge_labels'</span>)</span><br><span class="line">nx.draw_networkx_edge_labels(G,pos) <span class="comment">#Draw edge labels.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">247</span>)</span><br><span class="line">plt.title(<span class="string">'draw_circular'</span>)</span><br><span class="line">nx.draw_circular(G,) <span class="comment">#Draw the graph G with a circular layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">248</span>)</span><br><span class="line">plt.title(<span class="string">'draw_kamada_kawai'</span>)</span><br><span class="line">nx.draw_kamada_kawai(G) <span class="comment">#Draw the graph G with a Kamada-Kawai force-directed layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br><span class="line">plt.close()</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">4</span>,figsize=(<span class="number">18</span>,<span class="number">3</span>))</span><br><span class="line">plt.subplot(<span class="number">141</span>)</span><br><span class="line">plt.title(<span class="string">'draw_random'</span>)</span><br><span class="line">nx.draw_random(G) <span class="comment">#Draw the graph G with a random layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">142</span>)</span><br><span class="line">plt.title(<span class="string">'draw_spectral'</span>)</span><br><span class="line">nx.draw_spectral(G,) <span class="comment">#Draw the graph G with a spectral layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">143</span>)</span><br><span class="line">plt.title(<span class="string">'draw_spring'</span>)</span><br><span class="line">nx.draw_spring(G) <span class="comment">#Draw the graph G with a spring layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">144</span>)</span><br><span class="line">plt.title(<span class="string">'draw_shell'</span>)</span><br><span class="line">nx.draw_shell(G)  <span class="comment">#Draw networkx graph with shell layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082057972.png" alt="png" title="Matplotlib布局1"></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082224234.png" alt="png" title="Matplotlib布局2"></p>
<h2 id="使用graphviz-agraph-dot"><a class="markdownIt-Anchor" href="#使用graphviz-agraph-dot"></a> 使用Graphviz AGraph (dot)</h2>
<p>有些同学不知道如何安装Graphviz，我在这里作一个说明：<br>
1.linux是安装graphviz即可，我使用的命令是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install graphviz</span><br></pre></td></tr></table></figure>
<p>2.Windows我没用实践过，不过我查到Graphviz有官网，里面有windows安装包，地址看下：<br>
<a href="http://www.graphviz.org/download/">http://www.graphviz.org/download/</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">G.clear()</span><br><span class="line"><span class="keyword">from</span> networkx.drawing.nx_pydot <span class="keyword">import</span> write_dot,read_dot</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">3</span>,figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line">K5 = nx.complete_graph(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">A = nx.nx_agraph.to_agraph(K5) <span class="comment">#Return a pygraphviz graph from a NetworkX graph N.</span></span><br><span class="line">G1 = nx.nx_agraph.from_agraph(A) <span class="comment">#Return a NetworkX Graph or DiGraph from a PyGraphviz graph.</span></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.title(<span class="string">'原图'</span>,fontproperties=myfont)</span><br><span class="line">nx.draw_random(G1) <span class="comment">#Draw the graph G with a random layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">write_dot(G1, <span class="string">'graph.test'</span>) <span class="comment">#Write NetworkX graph G to Graphviz dot format on path.</span></span><br><span class="line">G2=read_dot(<span class="string">'graph.test'</span>) <span class="comment">#Return a NetworkX graph from a dot file on path.</span></span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.title(<span class="string">'保存原图后并读取'</span>,fontproperties=myfont)</span><br><span class="line">nx.draw_random(G2) <span class="comment">#Draw the graph G with a random layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">G3 = nx.petersen_graph()</span><br><span class="line">pos = nx.nx_agraph.graphviz_layout(G3) <span class="comment">#Create node positions for G using Graphviz.</span></span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.title(<span class="string">'graphviz_layout'</span>,fontproperties=myfont)</span><br><span class="line">nx.draw_random(G3) <span class="comment">#Draw the graph G with a random layout.</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082057179.png" alt="png" title="Graphviz画图"></p>
<h2 id="图布局"><a class="markdownIt-Anchor" href="#图布局"></a> 图布局</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义graph</span></span><br><span class="line">nodes=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line">edges=[(<span class="number">0</span>,<span class="number">1</span>),(<span class="number">0</span>,<span class="number">5</span>),(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">1</span>,<span class="number">4</span>),(<span class="number">2</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">4</span>),(<span class="string">'a'</span>,<span class="string">'b'</span>),(<span class="string">'b'</span>,<span class="string">'c'</span>),(<span class="string">'c'</span>,<span class="string">'a'</span>)]</span><br><span class="line">G=nx.Graph()</span><br><span class="line">G.add_nodes_from(nodes)</span><br><span class="line">G.add_edges_from(edges)</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">3</span>,figsize=(<span class="number">18</span>,<span class="number">6</span>))</span><br><span class="line">plt.subplot(<span class="number">231</span>)</span><br><span class="line">plt.title(<span class="string">'circular_layout'</span>)</span><br><span class="line">pos=nx.circular_layout(G) <span class="comment">#Position nodes on a circle.</span></span><br><span class="line">nx.draw(G,pos, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">232</span>)</span><br><span class="line">plt.title(<span class="string">'kamada_kawai_layout'</span>)</span><br><span class="line">pos=nx.kamada_kawai_layout(G) <span class="comment">#Position nodes using Kamada-Kawai path-length cost-function.</span></span><br><span class="line">nx.draw(G, pos,with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">233</span>)</span><br><span class="line">plt.title(<span class="string">'random_layout'</span>)</span><br><span class="line">pos=nx.random_layout(G) <span class="comment">#Position nodes uniformly at random in the unit square.</span></span><br><span class="line">nx.draw(G, pos,with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">234</span>)</span><br><span class="line">plt.title(<span class="string">'shell_layout'</span>)</span><br><span class="line">pos=nx.shell_layout(G) <span class="comment">#Position nodes in concentric circles.</span></span><br><span class="line">nx.draw(G, pos,with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">235</span>)</span><br><span class="line">plt.title(<span class="string">'spring_layout'</span>)</span><br><span class="line">pos=nx.spring_layout(G)<span class="comment">#Position nodes using Fruchterman-Reingold force-directed algorithm.</span></span><br><span class="line">nx.draw(G, pos, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">236</span>)</span><br><span class="line">plt.title(<span class="string">'spectral_layout'</span>)</span><br><span class="line">pos=nx.spectral_layout(G) <span class="comment">#Position nodes using the eigenvectors of the graph Laplacian.</span></span><br><span class="line">nx.draw(G, pos, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082058508.png" alt="png" title="图布局"></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(7)-对graph进行分析</title>
    <url>/2018/09/21/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(7)-%E5%AF%B9graph%E8%BF%9B%E8%A1%8C%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>graph构建完成后,对graph的连通等属性进行分析.</p>
<a id="more"></a>
<p>注意: #007e80如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="对图进行分析"><a class="markdownIt-Anchor" href="#对图进行分析"></a> 对图进行分析</h1>
<p>强连通：有向图中任意两点v1、v2间存在v1到v2的路径（path）及v2到v1的路径。<br>
弱联通：将有向图的所有的有向边替换为无向边，所得到的图称为原图的基图。如果一个有向图的基图是连通图，则有向图是弱连通图。</p>
<h2 id="连通子图"><a class="markdownIt-Anchor" href="#连通子图"></a> 连通子图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义图的节点和边</span></span><br><span class="line">nodes=[<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line">edges=[(<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'5'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'5'</span>,<span class="number">2</span>),(<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="number">3</span>),(<span class="string">'1'</span>,<span class="string">'4'</span>,<span class="number">5</span>),(<span class="string">'2'</span>,<span class="string">'1'</span>,<span class="number">7</span>),(<span class="string">'2'</span>,<span class="string">'4'</span>,<span class="number">6</span>),(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="number">0.5</span>),(<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="number">0.5</span>),(<span class="string">'c'</span>,<span class="string">'a'</span>,<span class="number">0.5</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义graph</span></span><br><span class="line">G = nx.Graph()</span><br><span class="line">G.add_nodes_from(nodes)</span><br><span class="line">G.add_weighted_edges_from(edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#找到所有连通子图</span></span><br><span class="line">print(<span class="string">'connected_components of graph: '</span>,<span class="built_in">list</span>(nx.connected_components(G)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示该graph</span></span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>connected_components of graph:  [{'a', 'b', 'c'}, {'4', '0', '5', '1', '2'}, {'3'}]
</code></pre>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082057297.png" alt="png" title="连通子图例子"></p>
<h2 id="弱联通"><a class="markdownIt-Anchor" href="#弱联通"></a> 弱联通</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义graph</span></span><br><span class="line">G = nx.path_graph(<span class="number">4</span>, create_using=nx.DiGraph())</span><br><span class="line">G.add_path([<span class="number">7</span>, <span class="number">8</span>, <span class="number">3</span>])</span><br><span class="line">G.add_path([<span class="number">5</span>, <span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#找出所有的弱连通图</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> nx.weakly_connected_components(G):</span><br><span class="line">    print(c)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#由大到小的规模判断弱连通子图</span></span><br><span class="line">print([<span class="built_in">len</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">sorted</span>(nx.weakly_connected_components(G), key=<span class="built_in">len</span>, reverse=<span class="literal">True</span>)])</span><br><span class="line"></span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>{0, 1, 2, 3, 7, 8}
{9, 5, 6}
[6, 3]
</code></pre>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082057589.png" alt="png" title="弱联通例子"></p>
<h2 id="强连通"><a class="markdownIt-Anchor" href="#强连通"></a> 强连通</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">G.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义图</span></span><br><span class="line">G = nx.path_graph(<span class="number">4</span>, create_using=nx.DiGraph())</span><br><span class="line">G.add_path([<span class="number">3</span>, <span class="number">8</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#找出所有的强连通子图</span></span><br><span class="line">con = nx.strongly_connected_components(G)</span><br><span class="line">print(con,<span class="built_in">type</span>(con),<span class="built_in">list</span>(con))</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示该图</span></span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>&lt;generator object strongly_connected_components at 0x7fe0eefe9c50&gt; &lt;class 'generator'&gt; [{8, 1, 2, 3}, {0}]
</code></pre>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082057911.png" alt="png" title="强连通例子"></p>
<h2 id="子图"><a class="markdownIt-Anchor" href="#子图"></a> 子图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">G.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义图</span></span><br><span class="line">G = nx.DiGraph()</span><br><span class="line">G.add_path([<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line"><span class="comment">#抽取图G的节点作为子图</span></span><br><span class="line">sub_graph = G.subgraph([<span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>])</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line"><span class="comment">#画原图</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'原图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#画子图</span></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">nx.draw(sub_graph, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'子图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082057515.png" alt="png" title="子图例子"></p>
<h2 id="条件过滤"><a class="markdownIt-Anchor" href="#条件过滤"></a> 条件过滤</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#G.clear()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义有向图</span></span><br><span class="line">G = nx.DiGraph()</span><br><span class="line">road_nodes = {<span class="string">'a'</span>:{<span class="string">'id'</span>:<span class="number">1</span>}, <span class="string">'b'</span>:{<span class="string">'id'</span>:<span class="number">1</span>}, <span class="string">'c'</span>:{<span class="string">'id'</span>:<span class="number">3</span>}, <span class="string">'d'</span>:{<span class="string">'id'</span>:<span class="number">4</span>}}</span><br><span class="line">road_edges = [(<span class="string">'a'</span>, <span class="string">'b'</span>), (<span class="string">'a'</span>, <span class="string">'c'</span>), (<span class="string">'a'</span>, <span class="string">'d'</span>), (<span class="string">'b'</span>, <span class="string">'d'</span>)]</span><br><span class="line">G.add_nodes_from(road_nodes.items())</span><br><span class="line">G.add_edges_from(road_edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flt_func_draw</span>():</span></span><br><span class="line">    flt_func = <span class="keyword">lambda</span> d: d[<span class="string">'id'</span>] != <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> flt_func</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#画出原图</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'过滤前'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤原图得到子图</span></span><br><span class="line">flt_func = flt_func_draw()</span><br><span class="line">part_G = G.subgraph(n <span class="keyword">for</span> n, d <span class="keyword">in</span> G.nodes(data=<span class="literal">True</span>) <span class="keyword">if</span> flt_func(d))</span><br><span class="line"></span><br><span class="line"><span class="comment">#画出子图</span></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">nx.draw(part_G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'过滤后'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082057433.png" alt="png" title="条件过滤后的子图"></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(6)-对graph进行操作</title>
    <url>/2018/09/19/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(6)-%E5%AF%B9graph%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>graph生成后,除了有查看操作,还有移除等操作,还有其他更多操作,具体可以看<a href="https://networkx.github.io/documentation/stable/reference/algorithms/operators.html">这里</a>.下面将比较graph操作前后的不同.</p>
<p>目录:</p>
<a id="more"></a>
<p>注意: 如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="对图进行操作"><a class="markdownIt-Anchor" href="#对图进行操作"></a> 对图进行操作</h1>
<h2 id="移除某些节点和边"><a class="markdownIt-Anchor" href="#移除某些节点和边"></a> 移除某些节点和边</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#G.clear()</span></span><br><span class="line"><span class="comment">#生成graph</span></span><br><span class="line">G=nx.path_graph(<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line">plt.suptitle(<span class="string">'移除部分节点和边'</span>,fontproperties=myfont)</span><br><span class="line"></span><br><span class="line"><span class="comment">#画出未操作前的graph</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'操作前'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#移除部分节点和边,移除所有的点和边使用G.clear(),不再单独测试</span></span><br><span class="line">G.remove_node(<span class="number">2</span>)</span><br><span class="line">G.remove_nodes_from([<span class="number">1</span>,<span class="number">5</span>])</span><br><span class="line">G.remove_edge(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#画出操作后的graph</span></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'操作后'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示graph</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082056315.png" alt="png" title="移除某些节点和边"></p>
<h2 id="合并graph"><a class="markdownIt-Anchor" href="#合并graph"></a> 合并graph</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># G1.clear()</span></span><br><span class="line"><span class="comment"># G2.clear()</span></span><br><span class="line"><span class="comment"># G3.clear()</span></span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">3</span>,figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line">plt.suptitle(<span class="string">'合并两个图'</span>,fontproperties=myfont)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成graph1</span></span><br><span class="line">G1=nx.path_graph(<span class="number">8</span>)</span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">nx.draw(G1, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'图1'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成graph2</span></span><br><span class="line">G2=nx.complete_graph(<span class="number">3</span>)</span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">nx.draw(G2, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'图2'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#移除部分节点和边,移除所有的点和边使用G.clear(),不再单独测试</span></span><br><span class="line">G3=nx.disjoint_union(G1,G2)</span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">nx.draw(G3, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'合并后'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示graph</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082056860.png" alt="png" title="合并graph"></p>
<h2 id="有向图和无向图的转化"><a class="markdownIt-Anchor" href="#有向图和无向图的转化"></a> 有向图和无向图的转化</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#无向图转有向图</span></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">3</span>))</span><br><span class="line">plt.suptitle(<span class="string">'无向图转换为有向图'</span>,fontproperties=myfont)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义无向图</span></span><br><span class="line">G = nx.path_graph(<span class="number">8</span>)</span><br><span class="line"><span class="comment">#转换为有向图</span></span><br><span class="line">G2=G.to_directed()</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面是可视化转换前后的两个图</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'无向图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">nx.draw(G2, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'有向图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br><span class="line">plt.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#有向图转无向图</span></span><br><span class="line">G.clear()</span><br><span class="line">G2.clear()</span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">3</span>))</span><br><span class="line">plt.suptitle(<span class="string">'有向图转换为无向图'</span>,fontproperties=myfont)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义有向图</span></span><br><span class="line">G = nx.path_graph(<span class="number">8</span>,create_using=nx.DiGraph())</span><br><span class="line"><span class="comment">#转换为无向图</span></span><br><span class="line">G2=G.to_undirected()</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面是可视化转换前后的两个图</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'有向图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">nx.draw(G2, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.title(<span class="string">'无向图'</span>,fontproperties=myfont)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注:可以看出无向图转有向图时,得到的边都是双向</span></span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082056807.png" alt="png" title="无向图转换为有向图"></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082224589.png" alt="png" title="有向图转换为无向图"></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(5)-查看graph的信息</title>
    <url>/2018/09/18/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(5)-%E6%9F%A5%E7%9C%8Bgraph%E7%9A%84%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p>有时候graph建好后,我们并不清除该graph内节点的,边的信息,这就需要调用函数去查看了.</p>
<a id="more"></a>
<p>注意: 如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="查看graph的信息"><a class="markdownIt-Anchor" href="#查看graph的信息"></a> 查看Graph的信息</h1>
<h2 id="查看graph内节点边的数量"><a class="markdownIt-Anchor" href="#查看graph内节点边的数量"></a> 查看graph内节点,边的<code>数量</code></h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成graph</span></span><br><span class="line">G=nx.path_graph(<span class="number">8</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看节点和边的情况</span></span><br><span class="line">print(<span class="string">'number of nodes'</span>,G.number_of_nodes())</span><br><span class="line">print(<span class="string">'number of edges'</span>,G.number_of_edges())</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082055184.png" alt="enter description here" title="例子图"></p>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>number of nodes 8
number of edges 7
</code></pre>
</blockquote>
<h2 id="查看graph中的点边"><a class="markdownIt-Anchor" href="#查看graph中的点边"></a> 查看graph中的点,边</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#输出graph所有的点和边</span></span><br><span class="line">print(<span class="string">'all nodes of Graph'</span>,G.nodes())</span><br><span class="line">print(<span class="string">'all edges of Graph'</span>,G.edges())</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>all nodes of Graph [0, 1, 2, 3, 4, 5, 6, 7]
all edges of Graph [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)]
</code></pre>
</blockquote>
<h2 id="查看某些节点的度"><a class="markdownIt-Anchor" href="#查看某些节点的度"></a> 查看某些节点的度</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看节点2和3的度</span></span><br><span class="line">print(<span class="string">'degree of some nodes'</span>,G.degree([<span class="number">2</span>, <span class="number">3</span>]))</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>degree of some nodes [(2, 2), (3, 2)]
</code></pre>
</blockquote>
<h2 id="查看节点边信息"><a class="markdownIt-Anchor" href="#查看节点边信息"></a> 查看节点&amp;边信息</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置一些节点信息</span></span><br><span class="line">G.nodes[<span class="number">1</span>][<span class="string">'room'</span>] = <span class="number">714</span></span><br><span class="line">G.nodes[<span class="number">1</span>][<span class="string">'color'</span>] = <span class="string">'b'</span></span><br><span class="line"><span class="comment">#设置一些边信息</span></span><br><span class="line">G[<span class="number">1</span>][<span class="number">2</span>][<span class="string">'weight'</span>] = <span class="number">4.7</span></span><br><span class="line">G[<span class="number">1</span>][<span class="number">2</span>][<span class="string">'color'</span>] = <span class="string">"blue"</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'imformation of one nodes'</span>,G.nodes[<span class="number">1</span>])</span><br><span class="line">print(<span class="string">'imformation of all nodes'</span>,G.nodes.data())</span><br><span class="line"></span><br><span class="line">print(<span class="string">'imformation of all nodes'</span>,G.edges.data())  <span class="comment">#边不支持[x]这样的下标访问</span></span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>imformation of one nodes {'room': 714, 'color': 'b'}
imformation of all nodes [(0, {}), (1, {'room': 714, 'color': 'b'}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {})]
imformation of all nodes [(0, 1, {}), (1, 2, {'weight': 4.7, 'color': 'blue'}), (2, 3, {}), (3, 4, {}), (4, 5, {}), (5, 6, {}), (6,7, {})]
</code></pre>
</blockquote>
<h2 id="遍历一个有权图"><a class="markdownIt-Anchor" href="#遍历一个有权图"></a> 遍历一个有权图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义一个有权无向图</span></span><br><span class="line">FG = nx.Graph()</span><br><span class="line">FG.add_weighted_edges_from([(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0.125</span>), (<span class="number">1</span>, <span class="number">3</span>, <span class="number">0.75</span>), (<span class="number">2</span>, <span class="number">4</span>, <span class="number">1.2</span>), (<span class="number">3</span>, <span class="number">4</span>, <span class="number">0.375</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment">#遍历邻接矩阵</span></span><br><span class="line"><span class="keyword">for</span> n, nbrs <span class="keyword">in</span> FG.adj.items():</span><br><span class="line">    <span class="keyword">for</span> nbr, eattr <span class="keyword">in</span> nbrs.items():</span><br><span class="line">        wt = eattr[<span class="string">'weight'</span>]</span><br><span class="line">        <span class="comment">#权重小于0.5的输出</span></span><br><span class="line">        <span class="keyword">if</span> wt &lt; <span class="number">0.5</span>: </span><br><span class="line">            print(<span class="string">'way1-(%d, %d, %.3f)'</span> % (n, nbr, wt))</span><br><span class="line"></span><br><span class="line"><span class="comment">#遍历所有边</span></span><br><span class="line"><span class="keyword">for</span> (u, v, wt) <span class="keyword">in</span> FG.edges.data(<span class="string">'weight'</span>):</span><br><span class="line">    <span class="comment">#权重小于0.5的输出</span></span><br><span class="line">    <span class="keyword">if</span> wt &lt; <span class="number">0.5</span>: </span><br><span class="line">        print(<span class="string">'way2-(%d, %d, %.3f)'</span> % (u, v, wt))</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<pre><code>way1-(1, 2, 0.125)
way1-(2, 1, 0.125)
way1-(3, 4, 0.375)
way1-(4, 3, 0.375)
way2-(1, 2, 0.125)
way2-(3, 4, 0.375)
</code></pre>
</blockquote>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(4)-设置graph的信息</title>
    <url>/2018/09/17/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(4)-%E8%AE%BE%E7%BD%AEgraph%E7%9A%84%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p>要画出美观的graph,需要对graph里面的<code>节点</code>,<code>边</code>,<code>节点的布局</code>都要进行设置,具体可以看官方文档:<a href="https://networkx.github.io/documentation/stable/tutorial.html#adding-attributes-to-graphs-nodes-and-edges">Adding attributes to graphs, nodes, and edges</a>部分.</p>
<a id="more"></a>
<p>注意:如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="设置graph的信息"><a class="markdownIt-Anchor" href="#设置graph的信息"></a> 设置graph的信息</h1>
<h2 id="创建graph时添加属性"><a class="markdownIt-Anchor" href="#创建graph时添加属性"></a> 创建graph时添加属性</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#G.clear()</span></span><br><span class="line">G=nx.Graph()</span><br><span class="line">G = nx.Graph(day=<span class="string">"Friday"</span>)</span><br><span class="line">print(<span class="string">'Assign graph attributes when creating a new graph: '</span>,G.graph)</span><br><span class="line">G.graph[<span class="string">'day'</span>] = <span class="string">"Monday"</span></span><br><span class="line">print(<span class="string">'Assign graph attributes when have a graph: '</span>,G.graph)</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<p>Assign graph attributes when creating a new graph:  {‘day’: ‘Friday’}<br>
Assign graph attributes when have a graph:  {‘day’: ‘Monday’}</p>
</blockquote>
<h2 id="指定节点的属性"><a class="markdownIt-Anchor" href="#指定节点的属性"></a> 指定节点的属性</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建时设置</span></span><br><span class="line">G.add_node(<span class="number">1</span>, time=<span class="string">'5pm'</span>)</span><br><span class="line">G.add_nodes_from([<span class="number">3</span>,<span class="number">4</span>], time=<span class="string">'2pm'</span>,color=<span class="string">'g'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#直接设置</span></span><br><span class="line">G.nodes[<span class="number">1</span>][<span class="string">'room'</span>] = <span class="number">714</span></span><br><span class="line">G.nodes[<span class="number">1</span>][<span class="string">'color'</span>] = <span class="string">'b'</span></span><br><span class="line"></span><br><span class="line">print(G.nodes.data())</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<p>[(1, {‘room’: 714, ‘time’: ‘5pm’, ‘color’: ‘b’}), (3, {‘time’: ‘2pm’, ‘color’: ‘g’}), (4, {‘time’: ‘2pm’, ‘color’: ‘g’})]</p>
</blockquote>
<h2 id="指定边的属性"><a class="markdownIt-Anchor" href="#指定边的属性"></a> 指定边的属性</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建时设置</span></span><br><span class="line">G.add_edge(<span class="number">1</span>, <span class="number">2</span>, weight=<span class="number">4.7</span> )</span><br><span class="line">G.add_edges_from([(<span class="number">3</span>, <span class="number">4</span>), (<span class="number">4</span>, <span class="number">5</span>)], color=<span class="string">'red'</span>,weight=<span class="number">10</span>)</span><br><span class="line">G.add_edges_from([(<span class="number">1</span>, <span class="number">2</span>, {<span class="string">'color'</span>: <span class="string">'blue'</span>}), (<span class="number">2</span>, <span class="number">3</span>, {<span class="string">'weight'</span>: <span class="number">8</span>})])</span><br><span class="line"></span><br><span class="line"><span class="comment">#直接设置</span></span><br><span class="line">G[<span class="number">1</span>][<span class="number">2</span>][<span class="string">'weight'</span>] = <span class="number">4.7</span></span><br><span class="line">G[<span class="number">1</span>][<span class="number">2</span>][<span class="string">'color'</span>] = <span class="string">"blue"</span></span><br><span class="line">G.edges[<span class="number">3</span>, <span class="number">4</span>][<span class="string">'weight'</span>] = <span class="number">4.2</span></span><br><span class="line">G.edges[<span class="number">1</span>, <span class="number">2</span>][<span class="string">'color'</span>] = <span class="string">"green"</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'edge 1-2: '</span>,G.edges[<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'edge 3-4: '</span>,G.edges[<span class="number">3</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<p>edge 1-2:  {‘weight’: 4.7, ‘color’: ‘green’}<br>
edge 3-4:  {‘weight’: 4.2, ‘color’: ‘red’}</p>
</blockquote>
<h2 id="显示graph"><a class="markdownIt-Anchor" href="#显示graph"></a> 显示graph</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成节点标签</span></span><br><span class="line">labels={}</span><br><span class="line">labels[<span class="number">1</span>]=<span class="string">'1'</span></span><br><span class="line">labels[<span class="number">2</span>]=<span class="string">'2'</span></span><br><span class="line">labels[<span class="number">3</span>]=<span class="string">'3'</span></span><br><span class="line">labels[<span class="number">4</span>]=<span class="string">'4'</span></span><br><span class="line">labels[<span class="number">5</span>]=<span class="string">'5'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取graph中的边权重</span></span><br><span class="line">edge_labels = nx.get_edge_attributes(G,<span class="string">'weight'</span>)</span><br><span class="line">print(<span class="string">'weight of all edges:'</span>,edge_labels)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成节点位置</span></span><br><span class="line">pos=nx.circular_layout(G)</span><br><span class="line">print(<span class="string">'position of all nodes:'</span>,pos)</span><br><span class="line"></span><br><span class="line"><span class="comment">#把节点画出来</span></span><br><span class="line">nx.draw_networkx_nodes(G,pos,node_color=<span class="string">'g'</span>,node_size=<span class="number">500</span>,alpha=<span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#把边画出来</span></span><br><span class="line">nx.draw_networkx_edges(G,pos,width=<span class="number">1.0</span>,alpha=<span class="number">0.5</span>,edge_color=<span class="string">'b'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#把节点的标签画出来</span></span><br><span class="line">nx.draw_networkx_labels(G,pos,labels,font_size=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#把边权重画出来</span></span><br><span class="line">nx.draw_networkx_edge_labels(G, pos, edge_labels)</span><br><span class="line"></span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line"><span class="comment">#去掉坐标刻度</span></span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<p>weight of all edges: {(1, 2): 4.7, (3, 4): 4.2, (2, 3): 8, (4, 5): 10}<br>
position of all nodes: {1: array([1.00000000e+00, 2.38418583e-08]), 2: array([0.30901696, 0.95105658]), 3: array([-0.80901709,  0.58778522]), 4: array([-0.80901698, -0.58778535]), 5: array([ 0.30901711, -0.95105647])}</p>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082055394.png" alt="有权无向图" title="有权无向图"></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(3)-手动创建graph</title>
    <url>/2018/09/16/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(3)-%E6%89%8B%E5%8A%A8%E5%88%9B%E5%BB%BAgraph/</url>
    <content><![CDATA[<p>不可否认,日常中我们使用最多的还是,使用自己的数据去手动创建自己的图形,而不是使用生成器,现从给graph添加<code>点</code>和边入手,讲解手动创建graph.</p>
<a id="more"></a>
<p>如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="给graph添加节点"><a class="markdownIt-Anchor" href="#给graph添加节点"></a> 给graph添加节点</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> ceil</span><br><span class="line"></span><br><span class="line"><span class="comment">#该函数由于显示一组graph,传上来的是一组graph和这些graph的描述.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ShowGraph</span>(<span class="params">glists,ginfo,rowsize=<span class="number">4</span></span>):</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#每行放rowsize个,计算可以放多少行</span></span><br><span class="line">    row=ceil(<span class="built_in">len</span>(glists)/rowsize)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#定义组图</span></span><br><span class="line">    plt.subplots(row,rowsize,figsize=(<span class="number">15</span>,<span class="number">3</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#开始画图</span></span><br><span class="line">    <span class="keyword">for</span> ind <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(glists)):</span><br><span class="line">        <span class="comment">#定义子图</span></span><br><span class="line">        plt.subplot(row,rowsize,ind+<span class="number">1</span>)</span><br><span class="line">        nx.draw(glists[ind],with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#设置图片</span></span><br><span class="line">        plt.title(ginfo[ind],fontproperties=myfont)</span><br><span class="line">        plt.axis(<span class="string">'on'</span>)</span><br><span class="line">        plt.xticks([])</span><br><span class="line">        plt.yticks([])</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#添加单个节点</span></span><br><span class="line">G1=nx.Graph()</span><br><span class="line">G1.add_node(<span class="number">1</span>)</span><br><span class="line">G1.add_node(<span class="string">"spam"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加一组节点</span></span><br><span class="line">G2=nx.Graph()</span><br><span class="line">G2.add_nodes_from([<span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">G2.add_nodes_from(<span class="string">"spam"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用生成器</span></span><br><span class="line">G3=nx.Graph()</span><br><span class="line">H = nx.path_graph(<span class="number">10</span>)</span><br><span class="line">G3.add_nodes_from(H)</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意:G1.add_nodes_from(H)表示用H中的节点表示G1这个graph,如果要往G1这个graph添加H这个graph,形成graph中的graph,可以使用以下命令</span></span><br><span class="line">G4= nx.Graph()</span><br><span class="line">G4.add_node(<span class="number">1</span>)</span><br><span class="line">G4.add_node(H)</span><br><span class="line"></span><br><span class="line">glists=[G1,G2,G3,G4]</span><br><span class="line">ginfo=[<span class="string">'添加单个节点'</span>,<span class="string">'添加一组节点'</span>,<span class="string">'使用生成器'</span>,<span class="string">'添加子图'</span>]</span><br><span class="line">ShowGraph(glists,ginfo)</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054936.png" alt="png" title="给graph添加节点"></p>
<h1 id="给graph添加边"><a class="markdownIt-Anchor" href="#给graph添加边"></a> 给graph添加边</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除前面的graph</span></span><br><span class="line">G1.clear()</span><br><span class="line">G2.clear()</span><br><span class="line">G3.clear()</span><br><span class="line">G4.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加单边</span></span><br><span class="line">G1=nx.Graph()</span><br><span class="line">G1.add_edge(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">G1.add_edge(<span class="number">3</span>, <span class="string">'m'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加一组边</span></span><br><span class="line">G2=nx.Graph()</span><br><span class="line">e=(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">G2.add_edge(*e)</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加多组边</span></span><br><span class="line">G3=nx.Graph()</span><br><span class="line">G3.add_edges_from([(<span class="number">3</span>,<span class="number">4</span>),(<span class="number">4</span>,<span class="number">2</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用边生成器</span></span><br><span class="line">G4= nx.Graph()</span><br><span class="line">H = nx.path_graph(<span class="number">10</span>)</span><br><span class="line">G4.add_edges_from(H.edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加一组有权边</span></span><br><span class="line">G5=nx.Graph()</span><br><span class="line">G5.add_weighted_edges_from([(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="number">5.0</span>), (<span class="string">'b'</span>, <span class="string">'c'</span>, <span class="number">3.0</span>), (<span class="string">'a'</span>, <span class="string">'c'</span>, <span class="number">1.0</span>), (<span class="string">'c'</span>, <span class="string">'d'</span>, <span class="number">7.3</span>)])  <span class="comment">#边上权重显示看设置graph信息-&gt;指定边属性</span></span><br><span class="line"></span><br><span class="line">glists=[G1,G2,G3,G4,G5]</span><br><span class="line">ginfo=[<span class="string">'添加单边'</span>,<span class="string">'添加一组边'</span>,<span class="string">'添加多组边'</span>,<span class="string">'使用边生成器'</span>,<span class="string">'添加一组有权边'</span>]</span><br><span class="line">ShowGraph(glists,ginfo,rowsize=<span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054316.png" alt="png" title="给graph添加边"></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(2)-graph生成器</title>
    <url>/2018/09/15/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(2)-graph%E7%94%9F%E6%88%90%E5%99%A8/</url>
    <content><![CDATA[<p>本节主要讲解如何快速使用内置的方法生成graph,官方的文档在<a href="https://networkx.github.io/documentation/stable/reference/generators.html">这里</a>,里面包含了networkX的所有graph生成器,下面的内容只是我节选的内容,并将graph画出来而已.</p>
<a id="more"></a>
<p>声明,文中重复使用了以下代码块 ,现在统一注释在这里:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.subplot(<span class="number">221</span>)  <span class="comment">#生成2*2的组图,并且当前子图在2*2矩阵的第一个位置.第二个位置是222</span></span><br><span class="line">plt.title(<span class="string">'complete_graph'</span>) <span class="comment">#子图的标题</span></span><br><span class="line">nx.draw(G, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>) <span class="comment">#将graph画出来</span></span><br><span class="line">plt.axis(<span class="string">'on'</span>) <span class="comment">#需要坐标轴,以便框住graph</span></span><br><span class="line">plt.xticks([]) <span class="comment">#横坐标不需要刻度</span></span><br><span class="line">plt.yticks([]) <span class="comment">#纵坐标不需要刻度</span></span><br></pre></td></tr></table></figure>
<p>注意如果代码出现找不库,请返回第一个教程,把库文件导入.</p>
<h1 id="生成graph"><a class="markdownIt-Anchor" href="#生成graph"></a> 生成graph</h1>
<h2 id="小图图集的生成器"><a class="markdownIt-Anchor" href="#小图图集的生成器"></a> 小图图集的生成器</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#graph_atlas的图已经被定义,只需要按标号取出来就可以,下面将前10个取出来</span></span><br><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">5</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"><span class="keyword">for</span> ind <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    G.clear()</span><br><span class="line">    </span><br><span class="line">    G=nx.graph_atlas(ind)</span><br><span class="line">    plt.subplot(<span class="number">2</span>,<span class="number">5</span>,ind+<span class="number">1</span>)</span><br><span class="line">    nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#下面是设置图片</span></span><br><span class="line">    plt.axis(<span class="string">'on'</span>)</span><br><span class="line">    plt.title(<span class="string">'graph_atlas_%s'</span>%ind)</span><br><span class="line">    plt.xticks([])</span><br><span class="line">    plt.yticks([])</span><br><span class="line">plt.show()</span><br><span class="line">plt.close()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054137.png" alt="png" title="小图图集的生成器"></p>
<h2 id="调用函数生成经典的graph"><a class="markdownIt-Anchor" href="#调用函数生成经典的graph"></a> 调用函数生成经典的graph</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">K_5 = nx.complete_graph(<span class="number">5</span>)</span><br><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.title(<span class="string">'complete_graph'</span>)</span><br><span class="line">nx.draw(K_5, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">K_3_5 = nx.complete_bipartite_graph(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">plt.subplot(<span class="number">222</span>)</span><br><span class="line">plt.title(<span class="string">'complete_bipartite_graph'</span>)</span><br><span class="line">nx.draw(K_3_5, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">barbell = nx.barbell_graph(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">plt.subplot(<span class="number">223</span>)</span><br><span class="line">plt.title(<span class="string">'barbell_graph'</span>)</span><br><span class="line">nx.draw(barbell, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">lollipop = nx.lollipop_graph(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">plt.subplot(<span class="number">224</span>)</span><br><span class="line">plt.title(<span class="string">'lollipop_graph'</span>)</span><br><span class="line">nx.draw(lollipop, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054091.png" alt="png" title="经典的graph"></p>
<h2 id="格子graph"><a class="markdownIt-Anchor" href="#格子graph"></a> 格子graph</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">G.clear()</span><br><span class="line"></span><br><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">3</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"><span class="comment">#二维网格图</span></span><br><span class="line">G=nx.grid_2d_graph(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'grid_2d_graph'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#n维网格图</span></span><br><span class="line">grid_graph = nx.grid_graph(dim=[<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">plt.subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">nx.draw(grid_graph,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'grid_graph'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#m×n的六角形格子图。</span></span><br><span class="line">G=nx.hexagonal_lattice_graph(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'hexagonal_lattice_graph'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#n维超立方体图形。</span></span><br><span class="line">G=nx.hypercube_graph(<span class="number">3</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'hypercube_graph'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#三角格子图</span></span><br><span class="line">G=nx.triangular_lattice_graph(<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'hypercube_graph'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054740.png" alt="png" title="格子graph"></p>
<h2 id="各种已经被命名的小graph"><a class="markdownIt-Anchor" href="#各种已经被命名的小graph"></a> 各种已经被命名的小graph</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">petersen = nx.petersen_graph()</span><br><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.title(<span class="string">'petersen_graph'</span>)</span><br><span class="line">nx.draw(petersen, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">tutte = nx.tutte_graph()</span><br><span class="line">plt.subplot(<span class="number">222</span>)</span><br><span class="line">plt.title(<span class="string">'tutte_graph'</span>)</span><br><span class="line">nx.draw(tutte, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">maze = nx.sedgewick_maze_graph()</span><br><span class="line">plt.subplot(<span class="number">223</span>)</span><br><span class="line">plt.title(<span class="string">'sedgewick_maze_graph'</span>)</span><br><span class="line">nx.draw(maze, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">tet = nx.tetrahedral_graph()</span><br><span class="line">plt.subplot(<span class="number">224</span>)</span><br><span class="line">plt.title(<span class="string">'tetrahedral_graph'</span>)</span><br><span class="line">nx.draw(tet, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054748.png" alt="png" title="已经被命名的小graph"></p>
<h2 id="使用随机graph生成器"><a class="markdownIt-Anchor" href="#使用随机graph生成器"></a> 使用随机graph生成器</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">er = nx.erdos_renyi_graph(<span class="number">10</span>, <span class="number">0.15</span>)</span><br><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.title(<span class="string">'erdos_renyi_graph'</span>)</span><br><span class="line">nx.draw(er, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">ws = nx.watts_strogatz_graph(<span class="number">30</span>, <span class="number">3</span>, <span class="number">0.1</span>)</span><br><span class="line">plt.subplot(<span class="number">222</span>)</span><br><span class="line">plt.title(<span class="string">'watts_strogatz_graph'</span>)</span><br><span class="line">nx.draw(ws, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">ba = nx.barabasi_albert_graph(<span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line">plt.subplot(<span class="number">223</span>)</span><br><span class="line">plt.title(<span class="string">'barabasi_albert_graph'</span>)</span><br><span class="line">nx.draw(ba, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">red = nx.random_lobster(<span class="number">10</span>, <span class="number">0.9</span>, <span class="number">0.9</span>)</span><br><span class="line">plt.subplot(<span class="number">224</span>)</span><br><span class="line">plt.title(<span class="string">'random_lobster'</span>)</span><br><span class="line">nx.draw(red, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054774.png" alt="png" title="随机graph生成器"></p>
<h2 id="社交网络"><a class="markdownIt-Anchor" href="#社交网络"></a> 社交网络</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回Zachary的空手道俱乐部图。</span></span><br><span class="line">G.clear()</span><br><span class="line">G = nx.karate_club_graph()</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'karate_club_graph'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line"><span class="comment">#戴维斯南方女性社交网络。</span></span><br><span class="line">G.clear()</span><br><span class="line">G = nx.davis_southern_women_graph()</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'davis_southern_women_graph'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054230.png" alt="png" title="社交网络"></p>
<h2 id="社区"><a class="markdownIt-Anchor" href="#社区"></a> 社区</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.subplots(<span class="number">2</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">er = nx.caveman_graph(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.title(<span class="string">'caveman_graph'</span>)</span><br><span class="line">nx.draw(er, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">ws = nx.random_partition_graph([<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>],<span class="number">.25</span>,<span class="number">.01</span>)</span><br><span class="line">plt.subplot(<span class="number">222</span>)</span><br><span class="line">plt.title(<span class="string">'random_partition_graph'</span>)</span><br><span class="line">nx.draw(ws, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">ba = nx.ring_of_cliques(<span class="number">8</span>, <span class="number">4</span>)</span><br><span class="line">plt.subplot(<span class="number">223</span>)</span><br><span class="line">plt.title(<span class="string">'ring_of_cliques'</span>)</span><br><span class="line">nx.draw(ba, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">red = nx.windmill_graph(<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">plt.subplot(<span class="number">224</span>)</span><br><span class="line">plt.title(<span class="string">'windmill_graph'</span>)</span><br><span class="line">nx.draw(red, with_labels=<span class="literal">True</span>, font_weight=<span class="string">'bold'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054657.png" alt="png" title="社区"></p>
<h2 id="树"><a class="markdownIt-Anchor" href="#树"></a> 树</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#返回随机树</span></span><br><span class="line">G.clear()</span><br><span class="line">G = nx.random_tree(<span class="number">10</span>)</span><br><span class="line">nx.draw(G,with_labels=<span class="literal">True</span>)</span><br><span class="line">plt.title(<span class="string">'random_tree'</span>)</span><br><span class="line">plt.axis(<span class="string">'on'</span>)</span><br><span class="line">plt.xticks([])</span><br><span class="line">plt.yticks([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082054718.png" alt="png" title="树"></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>NetworkX系列教程(1)-创建graph</title>
    <url>/2018/09/10/NetworkX%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B(1)-%E5%88%9B%E5%BB%BAgraph/</url>
    <content><![CDATA[<p>研究中经常涉及到<code>图论</code>的相关知识,而且常常面对某些术语时,根本不知道在说什么.前不久接触了<strong>NetworkX</strong>这个graph处理工具,发现这个工具已经解决绝大部分的<code>图论</code>问题(也许只是我自己认为的,没有证据证明),所以把这个工具的使用学习下,顺便学习<code>图论</code>的相关知识.</p>
<p><strong>NetworkX</strong>本来是有官方文档的,花时间去学也是可以的,我这里把认为重要的整理出来.这些内容会分几次发布,做成一个系列使用教程.</p>
<a id="more"></a>
<p><strong>系统环境</strong>:</p>
<blockquote>
<p>linuxmint 18.3<br>
python 3.5.2<br>
numpy                             1.14.3<br>
matplotlib                        1.5.1<br>
networkx                          2.1</p>
</blockquote>
<p><strong>全文注意事项</strong>:</p>
<blockquote>
<p>1.为了方便,graph我有时候会称为<code>图</code>,这时候不要将这个和图片混淆了.<br>
2.代码中会频繁使用G.clear(),这是在画新的graph之前,先清空原先的graph<br>
3.matplotlib包不能显示<code>平行边</code>,<code>自循环</code>这类的边,所以需要借助pydot包来显示,不过一般使用matplotlib来显示</p>
</blockquote>
<h1 id="创建一个graph"><a class="markdownIt-Anchor" href="#创建一个graph"></a> 创建一个Graph</h1>
<p><strong>例子:</strong><br>
下面涉及的graph如果不是特别需要,我将使用<code>图1</code>这个手动创建的graph,这个graph有双向边,有孤岛节点,有平行边,有自循环</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082053791.png" alt="图1 例子图" title="图1 例子图"></p>
<h2 id="导入相应包定义graph"><a class="markdownIt-Anchor" href="#导入相应包定义graph"></a> 导入相应包,定义graph</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#导入相应的包</span></span><br><span class="line"><span class="keyword">import</span> networkx <span class="keyword">as</span> nx</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> networkx.drawing.nx_pydot <span class="keyword">import</span> to_pydot</span><br><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> *  </span><br><span class="line"></span><br><span class="line"><span class="comment">#定义自定义字体，文件名从1.b查看系统中文字体中来,这是Linux字体路径,windows系统的字体路径自查</span></span><br><span class="line">myfont = FontProperties(fname=<span class="string">'/usr/share/fonts/truetype/wqy/wqy-zenhei.ttc'</span>)  </span><br><span class="line"><span class="comment">#解决负号'-'显示为方块的问题  </span></span><br><span class="line">matplotlib.rcParams[<span class="string">'axes.unicode_minus'</span>]=<span class="literal">False</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#定义图的节点和边</span></span><br><span class="line">nodes=[<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line">edges=[(<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'5'</span>,<span class="number">1</span>),(<span class="string">'0'</span>,<span class="string">'5'</span>,<span class="number">2</span>),(<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="number">3</span>),(<span class="string">'1'</span>,<span class="string">'4'</span>,<span class="number">5</span>),(<span class="string">'2'</span>,<span class="string">'1'</span>,<span class="number">7</span>),(<span class="string">'2'</span>,<span class="string">'4'</span>,<span class="number">6</span>),(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="number">0.5</span>),(<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="number">0.5</span>),(<span class="string">'c'</span>,<span class="string">'a'</span>,<span class="number">0.5</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#用于显示图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ShowGraph</span>(<span class="params">G</span>):</span></span><br><span class="line">    <span class="comment">#使用pydot保存图片</span></span><br><span class="line">    P=to_pydot(G)                                                               </span><br><span class="line">    P.write_jpeg(<span class="string">'pydot.png'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#使用matplotlib保存图片</span></span><br><span class="line">    pos=nx.shell_layout(G)</span><br><span class="line">    nx.draw(G,pos,with_labels=<span class="literal">True</span>)</span><br><span class="line">    plt.savefig(<span class="string">'mat.png'</span>)</span><br><span class="line">    plt.close()  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#将前面两张图显示</span></span><br><span class="line">    plt.subplots(figsize=(<span class="number">12</span>,<span class="number">6</span>))</span><br><span class="line">    <span class="comment">#plt.suptitle('Diffrent')</span></span><br><span class="line">    <span class="comment">#载入matplotlib的图片</span></span><br><span class="line">    plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">    plt.title(<span class="string">'matplotlib'</span>)</span><br><span class="line">    plt.imshow(Image.<span class="built_in">open</span>(<span class="string">'mat.png'</span>))</span><br><span class="line">    <span class="comment">#plt.axis('off')</span></span><br><span class="line">    <span class="comment">#去掉坐标刻度</span></span><br><span class="line">    plt.xticks([])</span><br><span class="line">    plt.yticks([])</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#载入pydot的图片</span></span><br><span class="line">    plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">    plt.title(<span class="string">'pydot'</span>)</span><br><span class="line">    plt.imshow(Image.<span class="built_in">open</span>(<span class="string">'pydot.png'</span>))</span><br><span class="line">    <span class="comment">#plt.axis('off')</span></span><br><span class="line">    <span class="comment">#去掉坐标刻度</span></span><br><span class="line">    plt.xticks([])</span><br><span class="line">    plt.yticks([])</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#显示图片</span></span><br><span class="line">    plt.show() </span><br></pre></td></tr></table></figure>
<h2 id="有自循环的无向图"><a class="markdownIt-Anchor" href="#有自循环的无向图"></a> 有自循环的无向图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义无向图</span></span><br><span class="line">G = nx.Graph()</span><br><span class="line"></span><br><span class="line"><span class="comment">#往图添加节点和边</span></span><br><span class="line">G.add_nodes_from(nodes)</span><br><span class="line">G.add_weighted_edges_from(edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示图片</span></span><br><span class="line">ShowGraph(G)</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082053665.png" alt="png" title="有自循环的无向图"></p>
<h2 id="有自循环的有向图"><a class="markdownIt-Anchor" href="#有自循环的有向图"></a> 有自循环的有向图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#清除前面的无向图</span></span><br><span class="line">G.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义有向图</span></span><br><span class="line">G = nx.DiGraph()</span><br><span class="line"><span class="comment">#添加节点和边</span></span><br><span class="line">G.add_nodes_from(nodes)</span><br><span class="line">G.add_weighted_edges_from(edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示图片</span></span><br><span class="line">ShowGraph(G)</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082053560.png" alt="png" title="有自循环的有向图"></p>
<h2 id="有自循环和平行边的无向图"><a class="markdownIt-Anchor" href="#有自循环和平行边的无向图"></a> 有自循环和平行边的无向图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#清除前面的无向图</span></span><br><span class="line">G.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义带平行边无向图</span></span><br><span class="line">G = nx.MultiGraph()</span><br><span class="line"><span class="comment">#添加节点和边</span></span><br><span class="line">G.add_nodes_from(nodes)</span><br><span class="line">G.add_weighted_edges_from(edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示图片</span></span><br><span class="line">ShowGraph(G)</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082053022.png" alt="png" title="有自循环和平行边的无向图"></p>
<h2 id="有自循环和平行边的有向图"><a class="markdownIt-Anchor" href="#有自循环和平行边的有向图"></a> 有自循环和平行边的有向图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#清除前面的无向图</span></span><br><span class="line">G.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义带平行边有向图</span></span><br><span class="line">G = nx.MultiDiGraph()</span><br><span class="line"><span class="comment">#添加节点和边</span></span><br><span class="line">G.add_nodes_from(nodes)</span><br><span class="line">G.add_weighted_edges_from(edges)</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示图片</span></span><br><span class="line">ShowGraph(G)</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082053222.png" alt="png" title="有自循环和平行边的有向图"></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
        <tag>NetworkX</tag>
      </tags>
  </entry>
  <entry>
    <title>DSSD：Deconvolutional Single Shot Detector</title>
    <url>/2018/08/21/DSSD%EF%BC%9ADeconvolutional%20Single%20Shot%20Detector/</url>
    <content><![CDATA[<p>在SSD基础上增 DSSD 的反卷积模块和 DSSD 的预测模块</p>
<a id="more"></a>
<h1 id="什么是dssd"><a class="markdownIt-Anchor" href="#什么是dssd"></a> 什么是DSSD?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DSSD-20230408152313.png" alt="DSSD-20230408152313" /></li>
<li>目标检测思想 YOLOv1一样，将原图划分为 SxS 的单元格，通过对单元格的预测，生成对图片目标的检测</li>
<li>在 SSD基础上增 DSSD 的反卷积模块和 DSSD 的预测模块</li>
</ul>
<h1 id="dssd的网络结构"><a class="markdownIt-Anchor" href="#dssd的网络结构"></a> DSSD的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DSSD-20230408152313.png" alt="DSSD-20230408152313" /></li>
<li>DSSD网络SSD的网络结构的改进版，主要改进内容包括：(1)替换SSD的VGG，使用ResNet101作为特征提取网络；(2) 提出基于top down的网络结构，并用反卷积代替传统的双线性插值上采样;(2) 新增预测模块，并引入残差单元，优化候选框回归和分类任务输入的特征图</li>
</ul>
<h1 id="dssd的损失函数"><a class="markdownIt-Anchor" href="#dssd的损失函数"></a> DSSD的损失函数？</h1>
<ul>
<li>DSSD最后预测的内容和SSD一致，计算损失过程也一致，参SSD的损失函数</li>
<li>整个过程的误差分为两部分：softmax 分类误差和边框回归误差<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>l</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mrow><mo fence="true">(</mo><msub><mi>L</mi><mtext>conf </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><msub><mi>L</mi><mtext>loc </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>l</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L(x, c, l, g)=\frac{1}{N}\left(L_{\text {conf }}(x, c)+\alpha L_{\text {loc }}(x, l, g)\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">conf </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">loc </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
</li>
<li>softmax分类误差：使交叉熵损失(CrossEntropyLoss) 计算正负样本的交叉熵和</li>
<li>边框回归误差：采平滑绝对值损失 (Smooth L1 Loss)</li>
</ul>
<h1 id="dssd-关于预测模块的改进"><a class="markdownIt-Anchor" href="#dssd-关于预测模块的改进"></a> DSSD 关于预测模块的改进?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DSSD-20230408152342.png" alt="DSSD-20230408152342" /></li>
<li>(a) 为SSD所使用的预测方法，直接在多特征图上使用两个3x3的卷积分别做分类和边框回归</li>
<li>(b) 在（a）的基础上增加了一个残差单元</li>
<li>© 作者改进的只含一个残差单元的预测模型</li>
<li>(d) 包含两个残差单元的预测模型</li>
<li>作者经过实验发现，（c）的预测输出结果最好</li>
</ul>
<h1 id="dssd如何使用反卷积模块"><a class="markdownIt-Anchor" href="#dssd如何使用反卷积模块"></a> DSSD如何使用反卷积模块？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DSSD-20230408152342-1.png" alt="DSSD-20230408152342-1" /></li>
<li>反卷积模块目的是将深层特征图（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">H \times W \times 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span>）和浅层特征图（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>H</mi><mo>×</mo><mn>2</mn><mi>W</mi><mo>×</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">2H \times 2W \times D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>）进行融合，使得融合后的特征图同时具有深层特征图的语义信息和浅层特征图的位置信息</li>
<li><strong>深层特征图（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">H \times W \times 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span>）</strong>：首先是2x2x512的反卷积，输出是2Hx2Wx512，然后是3x3x512的卷积和BN层，输出是2Hx2Wx512</li>
<li><strong>浅层特征图（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>H</mi><mo>×</mo><mn>2</mn><mi>W</mi><mo>×</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">2H \times 2W \times D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>）</strong>： 经过卷积+BatchNorm之后输出2Hx2Wx512</li>
<li>这里特征融合方式是Element-wise product(同元素相乘)</li>
</ul>
<h1 id="dssd如何生成先验框"><a class="markdownIt-Anchor" href="#dssd如何生成先验框"></a> DSSD如何生成先验框？</h1>
<ul>
<li>SSD生成先验框不同的是，DSSD借YOLOv2生成及设置先验框的方法产生先验框</li>
</ul>
<h1 id="dssd-如何进行标签匹配"><a class="markdownIt-Anchor" href="#dssd-如何进行标签匹配"></a> DSSD 如何进行标签匹配?</h1>
<ul>
<li>DSSD 标签匹配方法和 SSD的规则一样，不同的是 DSSD 借 YOLOv2生成及设置先验框的方法产生先验框</li>
</ul>
<h1 id="dssd-和-ssd-的差异"><a class="markdownIt-Anchor" href="#dssd-和-ssd-的差异"></a> DSSD 和 SSD 的差异？</h1>
<ul>
<li>网络结构存在差异：SSD使用VGG16作为骨干网络，而DSSD使用Resnet101；DSSD在SSD基础上增DSSD的反卷积模块 和DSSD的预测模块</li>
<li>先验框生成方式存在差异：SSD根据设置值生成先验框，DSSD通过对训练集聚类获得更好的先验框</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
        <tag>anchor-free</tag>
      </tags>
  </entry>
  <entry>
    <title>DenseNet：Densely Connected Convolutional Networks</title>
    <url>/2018/07/16/DenseNet%EF%BC%9ADensely%20Connected%20Convolutional%20Networks/</url>
    <content><![CDATA[<p>通过设计更加激进的跨连接，实现大量的重复梯度传递，因此可以使用较少的参数实现较快的收敛</p>
<a id="more"></a>
<ul>
<li>
<p>什么是 DenseNet ？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DenseNet-20230408135926.png" alt="DenseNet-20230408135926" /></li>
<li>实践证明，ResNet 只有少数的残差块参与学习，随机丢掉某些层可以提升 ResNet 的泛化能力，带来两点启发：1）网络表现得像个整体，某一层可以不仅仅依赖前一层；2）每层提取的特征不是非必要的，说明其他大部分特征比较冗余。<strong>基于以上两点 DenseNet 提出让网络的每一层和前面的所有层相连，同时把每一层设计地特别窄，学习很少的特征图以此降低冗余性</strong></li>
<li>密集连接机制有 2 个好处：1）<strong>梯度可以传递更远</strong>：不会因为网络深而出现梯度消失的问题；2）<strong>特征更集中</strong>：通过降低 block 的输出通道数，降低冗余的可能</li>
</ul>
</li>
<li>
<p>DensNet的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DenseNet-20230408135926-1.png" alt="DenseNet-20230408135926-1" /></li>
<li>每个阶段都包含 1 个 <strong>DenseBlock</strong> 和1 个 <strong>Transition</strong> 组成，每个 DenseBlock 由 K 个 dense layer 组成，Transition 负责串联两个 DenseBlock</li>
<li>最后的 DenseBlock 之后是一个 global AvgPooling 层，然后送入一个 softmax 分类器</li>
</ul>
</li>
<li>
<p>DensNet网络结构的DenseBlock部分？</p>
<ul>
<li>DenseBlock内各个层的特征图大小一致，因此可以在channel维度上连接<br />
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DenseNet-20230408135927.png" alt="DenseNet-20230408135927" /></li>
<li><strong>每个卷积块输出 k 通道特征：</strong> 所有 DenseBlock 中各个层卷积之后均输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个特征图，这是 DenseNet 的<strong>Growth rate</strong> ，假定输入层的特征图的 channel 数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">k_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ,那么 l 层的输入特征图为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>0</mn></msub><mo>+</mo><mi>k</mi><mo stretchy="false">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k_0+k(l-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> , 因此随着层数增加，尽管 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 设定得较小，DenseBlock 的输入会非常多，不过这是由于特征重用所造成的<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DenseNet-20230408135927-1.png" alt="" /></li>
<li>由于后面层的输入会非常大，DenseBlock内部可以采用bottleneck层来减少计算量，主要是原有的结构中增加1x1 Conv <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DenseNet-20230408135928.png" alt="" /></li>
</ul>
</li>
<li>
<p>DensNet 网络结构的 Transition 部分？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DenseNet-20230408135926-1.png" alt="DenseNet-20230408135926-1" /></li>
<li>负责连接两个相邻的 DenseBlock，结构为<strong>BN+ReLU+1x1 Conv+2x2 AvgPooling，</strong> 同时具有降低特征图大小及压缩模型的作用</li>
<li><strong>降低特征图大小：</strong> 使用2x2 AvgPooling 减小特征图</li>
<li><strong>压缩模型：</strong> 假定 Transition 的上接 DenseBlock 得到的特征图 channels 数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> Transition 层可以产生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>θ</mi><mi>m</mi><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor\theta m\rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord mathnormal">m</span><span class="mclose">⌋</span></span></span></span> 个特征图，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\theta \in(0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 是压缩系数。当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\theta =1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时，特征个数经过 Transition 层没有变化，即无压缩，而当压缩系数小于1时被压缩</li>
</ul>
</li>
<li>
<p>DensNet与ResNet在网络结构上的差异？</p>
<ul>
<li>ResNet连接示意图 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/_xF1UksB7IIJlb8M2gHLS7xg1e6drNvpaANfn6XI0UP4m_l8_7SriCrEoNF_ZwmwLvXJw_tKDjgQIoG6ZFmKKNNC1gny_w8ISuUH94QZt-5v8w2PcA98VrC_lBmEYP5A.png" alt="" /></li>
<li>DensNet连接示意图 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/gjGeQzmDkgh4wuvFT9I16b56XivXc9OUfnEqgoeuOlt7wNa9PNRDjwMOgRVopQuFv3PBu2gWBjf_D7y-yqyOispWZRmn9cU7wkWx77d_dRDNJk-e31eOvMdVH_NIKNhs.png" alt="" /></li>
<li>ResNet的跨连接只在ResNetBlock上，没有跨更远；而DensNet的同一DenseBlock 内每个卷积层接受前面所有卷积层k个特征图输入</li>
<li>ResNet跨连接后的融合操作是“加法”，DensNet是**“拼接”</li>
</ul>
</li>
<li>
<p>如何理解DensNet的Feature Reuse(特征重用)？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Pasted%20image%2020230321110813.png" alt="" /></li>
<li>作者训练的L=40,K=12的DenseNet,对于任意Denseblock中的所有卷积层，<strong>计算之前某层feature map在该层权重的绝对值平均数，这一平均数表明了这一层对于之前某一层feature的利用率</strong>，下图为由该平均数绘制出的热力图 ，红色表示strong use，蓝色表示almost no use，横坐标是选定层，纵坐标为选定层的之前层，最右侧以及第一行 为Transition层</li>
<li>a) 一些较早层提取出的特征仍可能被较深层直接使用</li>
<li>b) 即使是Transition layer也会使用到之前Denseblock中所有层的特征</li>
<li>c) 第2-3个Denseblock中的层对之前Transition layer利用率很低，说明transition layer输出大量冗余特，证明Compression的必要性</li>
<li>d) 最后的分类层虽然使用了之前Denseblock中的多层信息,但更偏向于使用最后几个feature map的特征,说明在网络的最后几层,某些high-level的特征可能被产生</li>
</ul>
</li>
<li>
<p>DenseNet特别耗费显存吗？</p>
<ul>
<li>DenseNet 在训练时对内存消耗非常厉害这个问题，其实是算法实现不优带来的，对于大多数框架（如 Torch 和 TensorFlow），每次拼接操作都会开辟新的内存来保存拼接后的特征。这样就导致一个 L 层的网络，要消耗相当于 L(L+1)/2 层网络的内存（第 l 层的输出在内存里被存了 (L-l+1) 份）</li>
<li>解决这个问题的思路其实并不难，我们只需要预先分配一块缓存，供网络中所有的拼接层（Concatenation Layer）共享使用，这样 DenseNet 对内存的消耗便从平方级别降到了线性级别。在梯度反传过程中，我们再把相应卷积层的输出复制到该缓存，就可以重构每一层的输入特征，进而计算梯度</li>
</ul>
</li>
<li>
<p>ResNet和 DensNet 如何进行反向传播？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DensNet-20230408140018.png" alt="" /></li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mo fence="true">(</mo><msub><mi>o</mi><mn>1</mn></msub><mo>+</mo><msub><mi>l</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>W</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial l_{1}}=\frac{\partial L}{\partial l_{2}} \frac{\partial l_{2}}{\partial o} \frac{\partial o}{\partial l_{1}}=\frac{\partial L}{\partial l_{2}} \frac{\partial l_{2}}{\partial o} \frac{\partial\left(o_{1}+l_{1}\right)}{\partial l_{1}}=\frac{\partial L}{\partial l_{2}} \frac{\partial l_{2}}{\partial o}(W+1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DensNet-20230408140018-1.png" alt="" /></li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mo fence="true">(</mo><msub><mi>o</mi><mn>1</mn></msub><mi>c</mi><mi>a</mi><mi>t</mi><msub><mi>l</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>l</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow></mfrac><mo stretchy="false">(</mo><mtext> Wcat </mtext><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial l_{1}}=\frac{\partial L}{\partial l_{2}} \frac{\partial l_{2}}{\partial o} \frac{\partial o}{\partial l_{1}}=\frac{\partial L}{\partial l_{2}} \frac{\partial l_{2}}{\partial o} \frac{\partial\left(o_{1} c a t l_{1}\right)}{\partial l_{1}}=\frac{\partial L}{\partial l_{2}} \frac{\partial l_{2}}{\partial o}(\text { Wcat } 1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">o</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord text"><span class="mord"> Wcat </span></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>cat为运算算子，cat=concate,将两个张量按照维度拼接起来，W cat 1是在W上按照<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">l_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的shape的1全部concate到W上</li>
</ul>
</li>
<li>
<p>DenseNet的梯度传播特点？</p>
<ul>
<li>前馈传递和权重更新方程：在 DenseNet 中，第 i个密集层的输出将与第 i个密集层的输入连接<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DensNet-20230408140018-2.png" alt="DensNet-20230408140018-2" /></li>
<li>前馈传递和权重更新方程为 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DensNet-20230408140019.png" alt="" /> <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DensNet-20230408140019-1.png" alt="" /></li>
<li><strong>大量梯度信息被重新</strong>用于更新不同密集层的权重。这将导致不同的密集层<strong>反复学习复制的梯度信息</strong></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>lixuxmint系统定制与配置（6）-个性化配置</title>
    <url>/2018/07/13/lixuxmint%E7%B3%BB%E7%BB%9F%E5%AE%9A%E5%88%B6%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%886%EF%BC%89-%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>在系统安装完毕，基础的应用安装也弄完后，最后是按照自己的使用习惯配置系统使用环境，本文主要基于<code>linuxmint</code>的系统特性进行配置，主要分为以下几个部分对系统进行配置。</p>
<a id="more"></a>
<h1 id="系统环境配置"><a class="markdownIt-Anchor" href="#系统环境配置"></a> 系统环境配置</h1>
<h2 id="桌面布局"><a class="markdownIt-Anchor" href="#桌面布局"></a> 桌面布局</h2>
<h3 id="整体布局"><a class="markdownIt-Anchor" href="#整体布局"></a> 整体布局</h3>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082052739.png" alt="桌面布局" /></p>
<h3 id="桌面控件"><a class="markdownIt-Anchor" href="#桌面控件"></a> 桌面控件</h3>
<h4 id="系统负载"><a class="markdownIt-Anchor" href="#系统负载"></a> 系统负载</h4>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082052395.png" alt="系统负载" /></p>
<h4 id="网络速度"><a class="markdownIt-Anchor" href="#网络速度"></a> 网络速度</h4>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082052856.png" alt="网络速度" /></p>
<h4 id="天气"><a class="markdownIt-Anchor" href="#天气"></a> 天气</h4>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082052889.png" alt="天气" /></p>
<h4 id="快捷键-快速锁屏"><a class="markdownIt-Anchor" href="#快捷键-快速锁屏"></a> 快捷键-快速锁屏</h4>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082052652.png" alt="快速锁屏" /></p>
<h1 id="应用配置"><a class="markdownIt-Anchor" href="#应用配置"></a> 应用配置</h1>
<p>firfox</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082052125.png" alt="插件展示" /></p>
<table>
<thead>
<tr>
<th>序号</th>
<th>插件名</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>VivaldiFox</td>
<td>网页标签颜色随内容变化</td>
</tr>
<tr>
<td>2</td>
<td>SwitchyOmegaα</td>
<td>快速切换浏览器是否代理</td>
</tr>
<tr>
<td>3</td>
<td>Anki 划词制卡助手</td>
<td>收集网页陌生单词</td>
</tr>
<tr>
<td>4</td>
<td>夜间助手</td>
<td>调节网页背景色</td>
</tr>
<tr>
<td>5</td>
<td>Textmarker</td>
<td>给网页文字作标记（加粗，上色）</td>
</tr>
<tr>
<td>6</td>
<td>Evernote Web Clipper</td>
<td>印象笔记插件-裁剪网页</td>
</tr>
</tbody>
</table>
<p>rime<br />
选择架构fcitx<br />
设置输入法<br />
美化输入法</p>
<p>小书匠<br />
帐号登录<br />
博客发布设置<br />
图床设置</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082052758.png" alt="图床设置" /></p>
<p>Calibre<br />
存储目录设置<br />
书库导入<br />
插件安装</p>
<p>坚果云<br />
帐号登录<br />
同步目录设置</p>
<p>Zotero<br />
存储目录设置</p>
<p>Shutter<br />
基础配置<br />
安装“编辑扩展”</p>
<p>VLC</p>
<p>Anki</p>
<p>Godenldict</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linuxmint系统定制与配置（5）-效率配置</title>
    <url>/2018/07/13/linuxmint%E7%B3%BB%E7%BB%9F%E5%AE%9A%E5%88%B6%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%885%EF%BC%89-%E6%95%88%E7%8E%87%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文针对zsh终端及登录服务器等常用操作进行快捷配置，提高日常工作效率</p>
<a id="more"></a>
<h1 id="zsh安装与配置"><a class="markdownIt-Anchor" href="#zsh安装与配置"></a> zsh安装与配置</h1>
<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<h3 id="检查当前的终端类型"><a class="markdownIt-Anchor" href="#检查当前的终端类型"></a> 检查当前的终端类型</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br></pre></td></tr></table></figure>
<p>一般情况下，系统会默认安装bash,所以会得到以下输出：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082049848.png" alt="检查终端类型" /></p>
<h3 id="安装zsh"><a class="markdownIt-Anchor" href="#安装zsh"></a> 安装zsh</h3>
<p>(1)安装zsh到系统</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure>
<p>(2)设置zsh为默认的终端</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">chsh -s $(which zsh)</span><br></pre></td></tr></table></figure>
<p>(3)检查设置是否成功<br />
首先是注销系统，重新登录，然后在终端使用<code>echo $SHELL</code>检查当前使用终端，如果输出是包含zsh文字，表示安装成功。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082049099.png" alt="检查终端设置是否成功" /></p>
<h2 id="美化zsh"><a class="markdownIt-Anchor" href="#美化zsh"></a> 美化zsh</h2>
<p>从上面的图看出，未美化前的zsh输出没有任何颜色区分，这样的zsh不是提高我们效率的zsh.<br />
这时候就需要<code>Oh My Zsh</code>这个框架来管理zsh的配置。</p>
<p>安装<code>Oh My Zsh</code>可以使用以下两种方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">&quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span></span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">&quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</span></span><br></pre></td></tr></table></figure>
<p>安装完成后，可以通过编辑<code>~/.zshrc</code>的这个文件来对zsh来进行配置（插件，主题等）。下面是通过配置这个文件来提高工作效率的过程,主题和插件我就使用默认的，没有深入折腾。</p>
<h2 id="配置zsh"><a class="markdownIt-Anchor" href="#配置zsh"></a> 配置zsh</h2>
<h3 id="别名设置"><a class="markdownIt-Anchor" href="#别名设置"></a> 别名设置</h3>
<p>别名，即是通过将一个长命令映射到更短的特殊字符，终端输入该特殊字符相当于输入特殊字符。</p>
<p><strong>解压相关</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> -s gz=<span class="string">&#x27;tar -xzvf&#x27;</span> </span><br><span class="line"><span class="built_in">alias</span> -s tgz=<span class="string">&#x27;tar -xzvf&#x27;</span> </span><br><span class="line"><span class="built_in">alias</span> -s zip=<span class="string">&#x27;unzip&#x27;</span> </span><br><span class="line"><span class="built_in">alias</span> -s bz2=<span class="string">&#x27;tar -xjvf&#x27;</span> </span><br></pre></td></tr></table></figure>
<p><strong>文档编辑相关</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> -s php=vim</span><br><span class="line"><span class="built_in">alias</span> -s py=vim </span><br><span class="line"><span class="built_in">alias</span> -s rb=vim </span><br><span class="line"><span class="built_in">alias</span> -s html=vim</span><br></pre></td></tr></table></figure>
<p>注：需提前安装vim</p>
<p><strong>远程登录服务器与端口映射</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> labser=<span class="string">&#x27;ssh tom@172.xxx.xxx.xxx&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> sshl8888=<span class="string">&#x27;ssh tom@172.xxx.xxx.xxx -L 8888:localhost:8888&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> sshl8889=<span class="string">&#x27;ssh tom@172.xxx.xxx.xxx -L 8889:localhost:8889&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> sshl8890=<span class="string">&#x27;ssh tom@172.xxx.xxx.xxx -L 8890:localhost:8890&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>通配符设置</strong><br />
使用zsh后，有些时候无法使用通配符，需要在配置文件中加入下面一行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setopt</span> nonomatch</span><br></pre></td></tr></table></figure>
<p>把以上配置信息拷贝到<code>~/.zshrc</code>文件末尾，然后使用<code>source ~/.zshrc</code>使之生效。</p>
<hr />
<h1 id="自动登录服务器"><a class="markdownIt-Anchor" href="#自动登录服务器"></a> 自动登录服务器</h1>
<p>每次远程登录服务器，需要手动敲命令和输入密码，如如果要连接多个窗口或者远程拷贝文件，效率就非常低下了。这里使用zsh的别名，配合使用xxxx,达到一个很短的命令登录到服务器内。</p>
<p>ssh服务有两种验证用户登录的方式，一种是基于密码口令的认证，一种是基于密钥的认证。一般的手动登录属于密码口令登录，</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082049045.png" alt="密码口令登录服务器" /></p>
<p>下面是ssh基于密钥认证过程图示</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082049212.png" alt="ssh免密登录" /></p>
<p>下面是生成和分配密钥对的过程：</p>
<p><strong>生成密钥</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p><strong>复制公钥到服务器</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub tom@172.xxx.xxx.xxx</span><br></pre></td></tr></table></figure>
<p>结合上面的别名，比如可以直接输入<code>labser</code>就登录到服务器来，快的中间不到1s的功夫，大大提高工作效率；拷贝文件时，没有做别名设置仍然需要输入原命令，但是可以免密拷贝。</p>
<hr />
<h1 id="快捷键配置"><a class="markdownIt-Anchor" href="#快捷键配置"></a> 快捷键配置</h1>
<p>Linuxmint设置里面的<code>键盘</code>项，有一栏快捷键，里面可以设置自定义快捷键。</p>
<p><strong>截图快捷键</strong><br />
我使用<code>Shutter</code>进行截图，每次需要截图，使用快捷键，调出Shutter的选区截图（命令是shutter -s）,所以我的设置如图。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082050288.png" alt="自定义快捷键" /></p>
<p><strong>锁屏</strong><br />
平常喜欢使用super+L进行锁屏，所以这样设置快捷键。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082050924.png" alt="锁屏快捷键" /></p>
<p><strong>终端新开一个tab</strong><br />
打开终端后，喜欢使用super+T在同一终端下新开一个页面。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082050196.png" alt="终端新开一个tab" /></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>lixuxmint系统定制与配置（4）-应用安装</title>
    <url>/2018/07/13/lixuxmint%E7%B3%BB%E7%BB%9F%E5%AE%9A%E5%88%B6%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%884%EF%BC%89-%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>本文针对列出目前linux上常用的软件，其实每个软件都有自己的个性化配置，以后有时间了，逐个记录下来。编程主力环境是Python,编辑器使用Jupyter,这个编辑器是在远程服务器启动，映射端口到本地来编辑。</p>
<a id="more"></a>
<p><strong>浏览器：</strong> 自带的firfox，Opear(我需要两个浏览器，一个浏览器用来浏览网页，一个用来编程)<br />
<strong>文档编辑器：</strong> 自带的libreoffice,自带的文本编辑器，Markdown编辑器（Typro）</p>
<p><strong>Pdf文档：</strong> FoxitReader<br />
<a href="https://www.foxitsoftware.cn/downloads/">https://www.foxitsoftware.cn/downloads/</a></p>
<p><strong>文献管理：</strong> Zotero<br />
<a href="https://www.zotero.org/">https://www.zotero.org/</a></p>
<p><strong>文档备份：</strong> 坚果云<br />
（下载&amp;Python3运行环境）<a href="https://www.jianguoyun.com/s/downloads/linux">https://www.jianguoyun.com/s/downloads/linux</a><br />
登录出现链接错误提示：<a href="https://blog.csdn.net/jasonzhoujx/article/details/80640566">https://blog.csdn.net/jasonzhoujx/article/details/80640566</a></p>
<p><strong>字典：</strong> goldendict<br />
安装/设置/添加字典</p>
<p><strong>版本控制：</strong> Git</p>
<p><strong>截图：</strong> shutter<br />
shutter内图片编辑器安装看下面这篇文章<br />
<a href="https://www.linuxidc.com/Linux/2018-04/151911.htm">Ubuntu 18.04中的Shutter禁用了“编辑”选项解决-Linux公社</a></p>
<p><strong>gif录屏：</strong> peak</p>
<p>**思维导图：**Xmind<br />
<a href="https://www.xmind.cn/">https://www.xmind.cn/</a><br />
<a href="https://my.oschina.net/2012/blog/1590732">https://my.oschina.net/2012/blog/1590732</a></p>
<p>KX上网：shadowsocks-gui<br />
<a href="https://github.com/shadowsocks/shadowsocks-qt5/releases">https://github.com/shadowsocks/shadowsocks-qt5/releases</a></p>
<p><strong>音乐：</strong> 网易云音乐<br />
到<a href="http://music.163.com/#/download">这里</a>下载Linux版本，然后使用以下命令安装。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i netease-cloud-music_1<span class="number">.1</span><span class="number">.0</span>_amd64_ubuntu.deb</span><br></pre></td></tr></table></figure>
<p>安装完成后，如果<code>遇到点击了，却没有启动</code>的问题，在这个文件<code>/usr/share/applications/netease-cloud-music.desktop</code>的exec添加<code>--no-sandbox</code>，然后<mark>重启</mark>即解决。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082050542.png" alt="修改后的文件" /></p>
<p><strong>视频：</strong> 使用浏览器观看</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linuxmint系统定制与配置（3）-字体</title>
    <url>/2018/07/13/linuxmint%E7%B3%BB%E7%BB%9F%E5%AE%9A%E5%88%B6%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%883%EF%BC%89-%E5%AD%97%E4%BD%93/</url>
    <content><![CDATA[<p>系统中自带的字体实在太难看了，看起来不清晰，不明确，特别是终端字体比较难看，正所谓有一个好的字体，可以带来好心情，并提高工作与效率。</p>
<a id="more"></a>
<h1 id="常用中文字体"><a class="markdownIt-Anchor" href="#常用中文字体"></a> 常用中文字体</h1>
<p>文泉驿微黑,微软雅黑,思源黑体</p>
<h1 id="字体安装"><a class="markdownIt-Anchor" href="#字体安装"></a> 字体安装</h1>
<h2 id="检查已安装字体"><a class="markdownIt-Anchor" href="#检查已安装字体"></a> 检查已安装字体</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fc-list             <span class="comment">#检查已安装的所有字体</span></span><br><span class="line">fc-list :lang=zh    <span class="comment">#只检查中文</span></span><br></pre></td></tr></table></figure>
<h2 id="安装字体"><a class="markdownIt-Anchor" href="#安装字体"></a> 安装字体</h2>
<p>安装字体提供在线和本地两种方法，一般安装完字体后，还需要手动建立字体缓存。</p>
<h3 id="字体安装-2"><a class="markdownIt-Anchor" href="#字体安装-2"></a> 字体安装</h3>
<p><strong>（1）在线安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ttf-wqy-microhei  <span class="comment">#文泉驿-微米黑</span></span><br><span class="line">sudo apt-get install ttf-wqy-zenhei   <span class="comment">#文泉驿-正黑</span></span><br><span class="line">sudo apt-get install xfonts-wqy     <span class="comment">#文泉驿-点阵宋体</span></span><br></pre></td></tr></table></figure>
<p><strong>（2）本地安装</strong><br />
现拿到字体 雅黑：msyh.ttf ，把它拷贝到两个位置(<code>~/.fonts</code>和<code>/usr/share/fonts/</code>)后，再授予权限即完成安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv msyh.ttf ~/.fonts         <span class="comment">#拷贝到相应目录</span></span><br><span class="line">mv msyh.ttf /usr/share/fonts/zh_CN   <span class="comment">#拷贝到相应目录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/.fonts;chmod 766 msyh.ttf     <span class="comment">#授予权限</span></span><br><span class="line"><span class="built_in">cd</span> ~/.config//usr/share/fonts/zh_CN;chmod 766 msyh.ttf   <span class="comment">#授予权限</span></span><br></pre></td></tr></table></figure>
<p><strong>思源黑体</strong>需要下载字体文件进行安装，里面简体中文的就只有几个，不知道为什么不分开，而是要去下载<br />
1G多的文件，我把字体下载下来了，并把开源字体存储在：链接: &gt;<a href="https://pan.baidu.com/s/1eGeTsOG2m0b2cs_-s-4T5A">https://pan.baidu.com/s/1eGeTsOG2m0b2cs_-s-4T5A</a> 密码: krt7<br />
下载下来后，字体文件直接被<code>字体管理器</code>识别了，直接点击安装即可。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082049133.png" alt="使用字体管理器进行字体安装" /></p>
<h3 id="更新字体缓存"><a class="markdownIt-Anchor" href="#更新字体缓存"></a> 更新字体缓存</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfontscale</span><br><span class="line">mkfontdir</span><br><span class="line">fc-cache -fv  </span><br><span class="line"><span class="comment">#通常复制字体进~/.fonts就会自动刷新字体，如果没有，用这个命令，如果复制进的是/usr/share/fonts/，用sudo fc-cache -fv</span></span><br></pre></td></tr></table></figure>
<p>经过这两个步骤完成字体的安装，可以用<code>fc-list</code>查看是否更新字体到字体库中，也可以在选择字体时查看。</p>
<h1 id="字体环境配置"><a class="markdownIt-Anchor" href="#字体环境配置"></a> 字体环境配置</h1>
<p>在linuxmint的环境中，可以在设置-&gt;字体找到字体设置界面，其他Linux系统自查。我的设置如下，由于我是经常要面对电脑的，所以喜欢把自己放大一点，变黑明显点。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082049008.png" alt="字体设置" /></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linuxmint系统定制与配置（2）-输入法</title>
    <url>/2018/07/13/linuxmint%E7%B3%BB%E7%BB%9F%E5%AE%9A%E5%88%B6%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%882%EF%BC%89-%E8%BE%93%E5%85%A5%E6%B3%95/</url>
    <content><![CDATA[<p>本文是linuxmint安装完成的第二个设置，即安装rime输入法，并进行个性化配置，RIME的官网在<a href="https://rime.im/">这里</a></p>
<a id="more"></a>
<h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1>
<p>刚开始是使用ibus-rime,后来使用过程感觉不舒服，就换回fcitx-rime。使用以下命令安装fcitx-rime</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo apt install fcitx fcitx-rime</span><br></pre></td></tr></table></figure>
<h1 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h1>
<p>我现在基本使用的是默认配置，不过我拼音不太准确，所以我喜欢使用<code>地球注音</code>，这样打出的字能看到拼音。感觉很不错。基本上使用过程是下面这样的：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048140.png" alt="fcitx-rime使用" /></p>
<p><strong>配置过程</strong><br />
1.在输入法中添加rime<br />
2.切换到rime后，按下F4进入进入下面两个配置过程</p>
<p>3.默认的配置已经很好用了，本来想自定义一下界面，发现相关资料很少，所以就不折腾了。首先选择地球注音。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048111.png" alt="选择地球注音" /></p>
<p>注：如果候选项无<code>地球拼音</code>，使用下面命令进行安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install librime-data-terra-pinyin</span><br></pre></td></tr></table></figure>
<p>并在<code>/home/wu/.config/fcitx/rime/default.yaml</code>中添加下’- schema: terra_pinyin’(引号不加)</p>
<p>其次是选择<code>中/汉/半</code>，然后选择<code>繁体字-&gt;简体字</code></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048231.png" alt="繁体字转简体字" /></p>
<p>注：选字列表竖排显示是在fcitx设置中选择的</p>
<p><img src="./.images/1613474558170.png" alt="选字列表竖排显示" /></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linuxmint系统定制与配置（1）-系统初始配置</title>
    <url>/2018/07/13/linuxmint%E7%B3%BB%E7%BB%9F%E5%AE%9A%E5%88%B6%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%881%EF%BC%89-%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>经常安装新的系统，每次安装完都得去搜索一边如何将系统部署为之前的环境，不仅耗费时间，还不一定能弄回之前的环境，现在把从<code>裸机</code>-&gt;到<code>工作环境</code>的系统定制及配置过程记录下来，期间的配置文件尽量记录下来，以便后面直接使用</p>
<a id="more"></a>
<p>本人的工作环境自评：现在是一名研究生，爱琢磨新的技术，linux系统linuxmint）上的主要是学习，做科研，些许的休闲（听歌，浏览器看视频）.</p>
<h1 id="裸机第一次启动该干什么"><a class="markdownIt-Anchor" href="#裸机第一次启动该干什么"></a> 裸机第一次启动，该干什么？</h1>
<p>系统安装过程中我一般选择时Engshli，因为终端跳转目录时，如果文件名是中文名的，比较不方便，并且我觉得系统毕竟默认是英文的，安装时选择是英文，会不会导致后面系统使用会出现兼容问题（这个完全属于猜测，没有证实或没能证实）。总之，我觉得系统安装就用英文吧，后面第一次开机就该改语言，没影响什么。</p>
<h2 id="看开机引导"><a class="markdownIt-Anchor" href="#看开机引导"></a> 看开机引导</h2>
<p>裸机启动，登录进去后看到第一个界面就是欢迎界面。在这个界面中可以快速配置一些必要的信息。从而开启你的Linux高效的工作方式。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048564.png" alt="开机欢迎界面" /></p>
<p><strong>系统快照</strong>： linuxmint19开始，可以随时备份系统快照。以后机器遇到什么不可以解决的问题时，利用这个快照，可以随时将系统重置会快照的系统。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048076.png" alt="创建系统快照" /></p>
<p><strong>驱动管理器</strong>： 主要是显卡的驱动可以在这里快速安装（注意：电脑需先联上互联网）</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048245.png" alt="系统驱动管理" /></p>
<p><strong>系统更新</strong>： 查看系统当前可用更新，这可能需要更新几次（注意：电脑需先联上互联网）</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048746.png" alt="更新" /></p>
<p>其他选项此时暂不设置。尤其需要注意的是，如果联网安装过程过慢时，可以选择不安装，待下面设置了国内软件源后再更新。</p>
<h2 id="改系统语言"><a class="markdownIt-Anchor" href="#改系统语言"></a> 改系统语言</h2>
<p>欢迎向导看完之后，现在开始将系统设置为简体中文，中文界面可以方便后面的设置。在系统设置里找到<code>language</code>这一项，然后选择<code>Chinese，China UTF-8</code>，然后点击下面的应用到整个系统。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048044.png" alt="更改系统语言" /></p>
<p>更改系统语言需要重启才可以生效，现在就重启。<mark>这里注意了</mark>，重启选择文件目录语言时，必须选择保留原名字，这样是方便终端进行目录的调整，如果你改成中文，以后就知道怎么悲惨了。（如果很不幸你该了中文，那就把系统语言设置为英文再设置回中文）</p>
<h2 id="改软件源"><a class="markdownIt-Anchor" href="#改软件源"></a> 改软件源</h2>
<p>重启后，开始更新软件源，因为以后免不了在线安装软件包和更新系统，但是直接使用官方的服务器更新可能比较慢，这时候我们需要将软件源设置为国内的。</p>
<p>在设置中找到<code>软件源</code>，依次点击<code>主要</code>和<code>基础</code>，点进去以后也不要立即选，等系统测试各个源的速度后，选择一个速度最快的当作软件源</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082048151.png" alt="更换软件源" /></p>
<h2 id="更新系统"><a class="markdownIt-Anchor" href="#更新系统"></a> 更新系统</h2>
<p>如果在开机引导界面没有更新系统，现在换了软件源，可以更快更新软件了。现在就进入<code>更新管理器</code>进行更新，如果想使用终端进行更新，依次使用使用一下命令。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt uograde</span><br></pre></td></tr></table></figure>
<h2 id="重启系统"><a class="markdownIt-Anchor" href="#重启系统"></a> 重启系统</h2>
<p>至此，系统层面的设置已完成，下面是针对个人用户更加详细，个性化的设置了，现在开始重启系统，让前面的配置开始生效。（如果存储空间足够，可以在此时备份一个快照）。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>图论---算法篇</title>
    <url>/2018/07/03/%E5%9B%BE%E8%AE%BA---%E7%AE%97%E6%B3%95%E7%AF%87/</url>
    <content><![CDATA[<p>图论中的算法基本都是提出后,经过检验的.我就不讨论算法很基础的原理,只是从看懂一个算法的角度去学习.本着不花时间去重复别人优秀工作的原则,本文中很多部分引用了别人的工作,甚至是照搬过来,因为我觉得算法这东西已经类似<code>真理</code>,证明不需要你,你可以看得懂,别人也可以,只是表达方式不同,别人有优秀的表达方式,我为什么不用呢!</p>
<a id="more"></a>
<h1 id="算法类"><a class="markdownIt-Anchor" href="#算法类"></a> 算法类</h1>
<h2 id="戴克斯特拉算法da"><a class="markdownIt-Anchor" href="#戴克斯特拉算法da"></a> 戴克斯特拉算法(D.A)</h2>
<p><strong>描述:</strong> 又译<strong>迪杰斯特拉算法</strong>,使用了<code>广度优先搜索</code>解决赋权有向图或者无向图的单源最短路径问题，算法最终得到一个最短路径树。</p>
<p><strong>原理:</strong> 迪杰斯特拉算法主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082035213.jpg" alt="迪杰斯特拉算法算法图示"></p>
<p>结合上图,详细解释迪杰斯特拉算法:<br>
通过维护一个两个集合来实现:</p>
<blockquote>
<p>1.一个集合内存储已经找到的最短距离及其路径(假设为D)<br>
2.另一个是未找到的最短距离的点到起始顶点的路径(假设为U)<br>
下面更新U的过程也是如此</p>
</blockquote>
<p>图示目标:寻找顶点1到所有顶点的最短路径.</p>
<p><strong>第一步:初始化D,U</strong><br>
初始节点到自身距离为0,直接初初始化到D集合,U集合维护顶点到初始节点1的距离和长度,根据上图,可初始化为以下两个集合.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082036396.png" alt="enter description here" title="初始化"></p>
<p>注:  图中表示节点名称,每个集合记录距离和路径,路径中的数字也表示节点名称,空间不够,不标单引号了.</p>
<p>以下步骤是不断更新两个集合的过程:</p>
<blockquote>
<p>1.D根据U更新当前最短路径到自己(扩张过程)<br>
2.U根据新加入的节点更新自己(松弛过程)<br>
3.迭代以上过程,直到所有路径遍历完</p>
</blockquote>
<p>下面是各个迭代过程图示:</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082036302.png" alt="第二步"><br>
由前面的初始情况可知,与节点1直接相连接一共3个点,最近的点是2.把1与2的当前最短距离和路径加到集合D中,然后根据新的集合D,更新集合U的信息,更新的过程是:</p>
<blockquote>
<p>1.首先看看2节点的出边有那些,图中可以看到是:3,4<br>
2.节点1经过2节点到达上面两个节点与直接到达上面两个节点的距离比较,那个距离小就把信息更新到U集合中</p>
</blockquote>
<hr>
<!-- ![Diagram](./attachments/1529908444491.drawio.html) --->
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082036459.png" alt="第三步"></p>
<p>上一次迭代完成后,集合D有1,2两个点,这两个点能到达的点是6,3,4;广度遍历路径得到1到3个节点的3最近,将节点3填到D中,然后更新U.<br>
此时的广度遍历就是从1开始,可以经过2,最终到达3,4,6其中一个节点的路径.具体包括:</p>
<blockquote>
<p>a. 1-&gt;3<br>
b. 1-&gt;6<br>
c. 1-&gt;2-&gt;4</p>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082036332.png" alt="第四步"><br>
上一次迭代完成后,集合D有1,2,3三个点,这三个点能到达的点是6,4;广度遍历路径得到<code>1-&gt;3-&gt;6</code>这路径最短,将6更新到D后,更新U.</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082036504.png" alt="第五步"><br>
上一次迭代完成后,集合D有1,2,3,6四个点,这四个点能到达的点是5,4;广度遍历路径得到<code>1-&gt;3-&gt;4</code>这路径最短,将4更新到D后,更新U.</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082036998.png" alt="第六步"><br>
上一次迭代完成后,集合D有1,2,3,6,4五个点,这五个点能到达的点是5;广度遍历路径得到<code>1-&gt;3-&gt;6-&gt;5</code>这路径最短,将4更新到D后,更新U.</p>
<p>最终,节点1到各个节点的最短路径及其长度都保存在集合D中.</p>
<blockquote>
<p>注:迪杰斯特拉算法也可用于有向图最短路径查找,还有一个迪杰斯特拉的优化算法<code>双向的迪杰斯特拉</code>,改进的地方是从源点和终点同时广度优先搜索最短路径,总的来说双向的迪杰斯特拉比一般迪杰斯特拉更快.</p>
</blockquote>
<hr>
<h2 id="最短路径快速算法spfa"><a class="markdownIt-Anchor" href="#最短路径快速算法spfa"></a> 最短路径快速算法(SPFA)</h2>
<p><strong>描述:</strong><br>
SPFA算法是西南交通大学段凡丁于1994年发表的,是一个用于求解<mark>有向带权图单源最短路径</mark>的改良的贝尔曼-福特算法。这一算法被认为在随机的稀疏图上表现出色，并且<mark>极其适合带有负边权的图</mark>。 然而SPFA在最坏情况的时间复杂度与贝尔曼-福特算法相同，因此在非负边权的图中仍然最好使用戴克斯特拉算法。</p>
<p><strong>原理:</strong></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082036461.png" alt=""></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082037118.png" alt="最短路径快速算法图示"></p>
<p>声明:<br>
图片来源于:<a href="https://blog.csdn.net/xunalove/article/details/70045815">最快最好用的——spfa算法</a></p>
<hr>
<h2 id="弗洛伊德算法floyd-warshall"><a class="markdownIt-Anchor" href="#弗洛伊德算法floyd-warshall"></a> 弗洛伊德算法(Floyd-Warshall)</h2>
<p><strong>描述:</strong><br>
是解决任意两点间的最短路径的一种算法，可以正确处理有向图或负权（但不可存在负权回路）的最短路径问题，同时也被用于计算有向图的传递闭包.</p>
<p><strong>原理:</strong><br>
假设我有以下graph:</p>
<!-- ![Diagram](./attachments/1529980535179.drawio.html) -->
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082037398.png" alt="演示graph"></p>
<p>可以得到以下的邻接矩阵:</p>
<!--![Diagram](./attachments/1529981065032.drawio.html)-->
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082037095.png" alt="graph的邻接矩阵"></p>
<p>该邻接矩阵D记录了有向图中,直接可达节点之间的距离.<br>
下面就1-&gt;3的最短路径进行分析:</p>
<p>直接可达的路径权重为:9<br>
比这短的路径可能是1-&gt;X-&gt;3 (X是除1,3外的所有点中的一个或多个)</p>
<p><strong>假设X长度为1</strong>,X就是2,4,5其中一个值,1-&gt;X-&gt;3的路径长度小于9,在矩阵中就是D[1][x]+D[x][3]&lt;9(为了理解,假设矩阵从1开始编号).<br>
D[1][2]+D[2][3]=5+3=8&lt;9  更新最短路径长度<br>
D[1][4]+D[4][3]=∞+∞=∞<br>
D[1][5]+D[5][3]=∞+∞=∞</p>
<p><strong>假设X长度是2</strong>,X就是考虑顺序在2,4,5中任取两个.有以下情况<br>
D[1][2]+D[2][4]+D[4][3]=5+2+∞=∞<br>
D[1][4]+D[4][2]+D[2][3]=∞+∞+3=∞<br>
…剩下组合省略</p>
<p><strong>同理X长度为3时</strong>,有以下情况<br>
D[1][2]+D[2][4]+D[4][5]+D[5][3]=2+2+1+2=7&lt;8  更新<br>
…剩下组合省略</p>
<p>最后找到,1到3的最短路径是,1-&gt;2-&gt;4-&gt;5-&gt;3,最短距离为8,更新D矩阵得到:</p>
<!-- ![Diagram](./attachments/1530004137360.drawio.html) -->
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082038146.png" alt="更新后D矩阵"></p>
<p>在这个新的D上继续算其他节点之间的最短路径.当然,这在程序中就是简单遍历,其实这里X的长度就是1到3中间需要经过多少节点.所有节点遍历完成,得到graph内两两节点之间的最短距离.</p>
<hr>
<h2 id="克鲁斯卡尔算法ka"><a class="markdownIt-Anchor" href="#克鲁斯卡尔算法ka"></a> 克鲁斯卡尔算法(K.A)</h2>
<p><strong>描述:</strong><br>
一种用来查找最小生成树的算法，由Joseph Kruskal在1956年发表。用来解决同样问题的还有Prim算法和Boruvka算法等。三种算法都是贪心算法的应用。和Boruvka算法不同的地方是，Kruskal算法在图中存在相同权值的边时也有效。</p>
<p><strong>原理:</strong></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082038926.gif" alt="克鲁斯卡尔算法算法图示"></p>
<p>把所有边选出来,并按照权重进行排序,从权重最小边开始选择,每次选择一条边,每次选择的边不能与原来的边构成环,知道选择的边包含所有的节点.</p>
<hr>
<h2 id="普里姆算法pa"><a class="markdownIt-Anchor" href="#普里姆算法pa"></a> 普里姆算法(P.A)</h2>
<p><strong>描述:</strong><br>
图论中的一种算法，可在加权连通图里搜索最小生成树。意即由此算法搜索到的边子集所构成的树中，不但包括了连通图里的所有顶点，且其所有边的权值之和亦为最小。</p>
<p><strong>原理:</strong><br>
从单一顶点开始，普里姆算法按照以下步骤逐步扩大树中所含顶点的数目，直到遍及连通图的所有顶点。</p>
<blockquote>
<pre><code>输入：一个加权连通图，其中顶点集合为V，边集合为E；
初始化：Vnew = {x}，其中x为集合V中的任一节点（起始点），Enew = {}；
重复下列操作，直到Vnew = V：
    在集合E中选取权值最小的边（u, v），其中u为集合Vnew中的元素，而v则是V中没有加入Vnew的顶点（如果存在有多条满足前述条件即具有相同权值的边，则可任意选取其中之一）；
    将v加入集合Vnew中，将（u, v）加入集合Enew中；
输出：使用集合Vnew和Enew来描述所得到的最小生成树。
</code></pre>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082038502.png" alt="原图"></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082038854.png" alt="1"><br>
(1)顶点D被任意选为起始点。顶点A、B、E和F通过单条边与D相连。A是距离D最近的顶点，因此将A及对应边AD以高亮表示。</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082039233.png" alt="2"><br>
(2)下一个顶点为距离D或A最近的顶点。B距D为9，距A为7，E为15，F为6。因此，F距D或A最近，因此将顶点F与相应边DF以高亮表示。</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082039331.png" alt="3"><br>
(3)算法继续重复上面的步骤。距离A为7的顶点B被高亮表示。</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082039890.png" alt="4"><br>
(4)在当前情况下，可以在C、E与G间进行选择。C距B为8，E距B为7，G距F为11。E最近，因此将顶点E与相应边BE高亮表示。</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082039992.png" alt="5"><br>
(5)这里，可供选择的顶点只有C和G。C距E为5，G距E为9，故选取C，并与边EC一同高亮表示。</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082039887.png" alt="6"><br>
(6)顶点G是唯一剩下的顶点，它距F为11，距E为9，E最近，故高亮表示G及相应边EG。</p>
<hr>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082039520.png" alt="7"><br>
(7)现在，所有顶点均已被选取，图中绿色部分即为连通图的最小生成树。在此例中，最小生成树的权值之和为39。</p>
<hr>
<h2 id="拓扑排序算法tsa"><a class="markdownIt-Anchor" href="#拓扑排序算法tsa"></a> 拓扑排序算法(TSA)</h2>
<p><strong>描述:</strong><br>
对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边(u,v)∈E(G)，则u在线性序列中出现在v之前。</p>
<p>图形的顶点可以表示要执行的任务，并且边缘可以表示一个任务必须在另一个任务之前执行的约束; 在这个应用中，拓扑排序只是一个有效的任务顺序。通常，我们把这种顶点表示活动、边表示活动间先后关系的有向图称做顶点活动网(Activity On Vertex network)，简称<strong>AOV网</strong>。</p>
<p>一个AOV网应该是一个有向无环图，即不应该带有回路，因为若带有回路，则回路上的所有活动都无法进行.在AOV网中，若不存在回路，则所有活动可排列成一个线性序列，使得每个活动的所有前驱活动都排在该活动的前面，我们把此序列叫做拓扑序列(Topological order)，由AOV网构造拓扑序列的过程叫做拓扑排序(Topological sort)。AOV网的拓扑序列不是唯一的，满足上述定义的任一线性序列都称作它的拓扑序列。</p>
<p><strong>原理:</strong><br>
重复以下两个步骤,即可以得到拓扑序列.</p>
<blockquote>
<p>1.在有向图中任意选择一个无前驱的节点,并且作为当前的拓扑序列输出<br>
2.删除与 前面选择的无前驱节点 的所有关联的边</p>
</blockquote>
<p>例子:</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082039713.png" alt="e拓扑排序算法例子"></p>
<p>下面是得到其中一个拓扑序列的过程:</p>
<blockquote>
<p>第一步:a是无前驱的节点,选择<br>
第二步:a去掉后,b,c为无前驱节点,任选一个,假设选择c<br>
第三步:a,c去掉,只有b为无前驱节点,选择<br>
第四步:a,c,b去掉后,d,e为无前驱节点,任选一个,假设选择d<br>
第五步:a,c,b,d去掉后,e,f为无前驱节点,任选一个,假设选择f<br>
第六步:a,c,b,d,f去掉后,只有e为无前驱节点,选择<br>
第六步:a,c,b,d,f,e去掉后,只有g为无前驱节点,选择<br>
第七步:所有节点遍历完成,得到拓扑序列</p>
</blockquote>
<p>最终得到的拓扑序列为<code>a-&gt;c-&gt;b-&gt;d-&gt;f-&gt;e-&gt;g</code></p>
<hr>
<h2 id="关键路径算法cpa"><a class="markdownIt-Anchor" href="#关键路径算法cpa"></a> 关键路径算法(CPA)</h2>
<p><strong>描述:</strong><br>
关键路径：在AOE网中，从始点到终点具有最大路径长度（该路径上的各个活动所持续的时间之和）的路径称为关键路径,一个AOE网中不一定只有一条关键路径，可能会有多条。<br>
关键活动：关键路径上的活动（边）。<br>
由于AOE网中的某些活动能够同时进行，故完成整个工程所必须花费的时间应该为始点到终点的最大路径长度。关键路径长度是整个工程所需的最短工期。</p>
<p><strong>原理:</strong><br>
现有无向有权图</p>
<!--![Diagram](./attachments/1530005452480.drawio.html) -->
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082040494.png" alt="无向有权图"></p>
<p>根据这个graph定义四个值：前两个针对顶点，后两个针对边</p>
<p>(1)事件最早开始时间：顶点最早发生的时间。<br>
节点B只有A指向,所以其最早开始时间是1,对于节点E,需要等待B,C,D完成才能开始,缺一不可,所以其最早时间是A-&gt;D-&gt;E:8</p>
<p>(2)事件最晚开始时间：顶点最晚发生的时间，超出则会延误整个工期。<br>
从右往左推,假设求得关键路径是A-&gt;D-&gt;E-&gt;H-&gt;J:18,以H为例,J-&gt;H:18-7=11表示J最晚开始时间,超过这个时间J无法在18内完成.J-&gt;I-&gt;H为例,18-5-1=12,也是H的最迟开始时间,但是11比12靠前,所以11为H的最迟开始时间.</p>
<p>(3)活动的最早开始时间：边最早发生时间。<br>
求某一点的最早开始时间就是计算该节点前所有几点完成的时刻.比如E开始时,必须等待A-&gt;C-&gt;E(4);A-&gt;B-&gt;E(4);A-&gt;D-&gt;E(8)上的边必须先完成,取最长时间8为E的最早开始时间,比如上图各节点的最早开始时间如下:</p>
<!---  可编辑文件:   ![Diagram](./attachments/1530145603750.drawio.html) --->
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082040796.png" alt="最早发生时间"></p>
<p>图中所标数字是每个节点的最早开始时间,假设源点(A)从0开始算起,汇点不需要时间处理.那么整个网络,最长的路径就是18(A-&gt;D-&gt;E-&gt;H-&gt;J).各个点的最迟发生时间从后往前推,取较小的,比如H这个点J-&gt;H(18-7=11),J-&gt;I-&gt;H(18-5-1=12),就取11.</p>
<p>(4)活动的最晚开始时间：边最晚发生时间。不推迟工期的最晚开工时间。</p>
<p>以上数字均是时间点,从<code>源点</code>算起.<br>
假设起点是vo，则我们称从v0到vi的最长路径的长度为vi的最早发生时间，同时，vi的最早发生时间也是所有以vi为尾的弧所表示的活动的最早开始时间，使用e（i）表示活动ai最早发生时间，除此之外，我们还定义了一个活动最迟发生时间，使用l（i）表示，不推迟工期的最晚开工时间。我们把e（i）=l（i）的活动ai称为关键活动.</p>
<p>下面是算法的推理过程:<br>
1.构建graph网络<br>
2.从源点开始求graph的拓扑排序序列,如果序列个数小于graph节点个数,则graph存储环,程序退出,否则根据拓扑序列求各个节点的<code>最早开始时间ve(j)</code>,计算公式为:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">ve(j)=Max(ve(i)+Dur(i,j))</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>3.从汇点求graph的逆拓扑序列,然后根据该序列求各个节点的<code>最晚开始时间vl(j)</code>,计算公式为:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">vl(j)=Min(vl(i)-Dur(i,j))</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>4.如果ve(j)=vl(j),则i-.j是关键路径,否则不是.</p>
<hr>
<h2 id="广度优先搜索算法bfs"><a class="markdownIt-Anchor" href="#广度优先搜索算法bfs"></a> 广度优先搜索算法(BFS)</h2>
<p><strong>描述:</strong><br>
又译作宽度优先搜索，或横向优先搜索，是一种图形搜索算法。简单的说，BFS是从根节点开始，沿着树的宽度遍历树的节点。如果所有节点均被访问，则算法中止。广度优先搜索的实现一般采用open-closed表。</p>
<p><strong>原理:</strong><br>
优先搜索同以层次的节点,和优先往纵深搜索不同,过程如下图,代码过程不描述.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082040298.gif" alt="广度优先搜索算法"></p>
<hr>
<h2 id="深度优先搜索算法dfs"><a class="markdownIt-Anchor" href="#深度优先搜索算法dfs"></a> 深度优先搜索算法(DFS)</h2>
<p><strong>描述:</strong><br>
是一种用于遍历或搜索树或图的算法。沿着树的深度遍历树的节点，尽可能深的搜索树的分支。当节点v的所在边都己被探寻过，搜索将回溯到发现节点v的那条边的起始节点。这一过程一直进行到已发现从源节点可达的所有节点为止。如果还存在未被发现的节点，则选择其中一个作为源节点并重复以上过程，整个进程反复进行直到所有节点都被访问为止。属于盲目搜索。</p>
<p><strong>原理:</strong><br>
过程如下图,代码过程不描述.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082040353.gif" alt="深度优先搜索算法"></p>
<p>参考:<br>
<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE%E8%AE%BA">维基百科-图论</a><br>
<a href="https://baike.baidu.com/item/%E8%BF%AA%E6%9D%B0%E6%96%AF%E7%89%B9%E6%8B%89%E7%AE%97%E6%B3%95/4049057?fr=aladdin">百度百科-迪杰斯特拉算法</a><br>
<a href="https://blog.csdn.net/qq_35644234/article/details/60870719">最短路径问题—Dijkstra算法详解</a><br>
<a href="https://blog.csdn.net/qq_35644234/article/details/60578189">数据结构—拓扑排序详解</a><br>
<a href="https://blog.csdn.net/qq_34374664/article/details/52261672">傻子也能看懂的弗洛伊德算法</a><br>
<a href="https://www.cnblogs.com/jsgnadsj/p/3432820.html">算法学习记录-图——应用之关键路径</a><br>
<a href="https://blog.csdn.net/qq_35644234/article/details/52664108">数据结构----关键路径详解</a></p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
      </tags>
  </entry>
  <entry>
    <title>Python中的各种排序问题</title>
    <url>/2018/06/30/Python%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E6%8E%92%E5%BA%8F%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>在编写Python时,经常需要进行排序操作,简单的list排序还是很容易的,碰到复杂的就没办法,只能去查了,现在把编程过程中遇到的所有排序问题列下来,欢迎大家提供更加简洁,高效的排序方法,也欢迎<br />
大家给出自己在Python遇到的排序问题.</p>
<p>Python排序根本依赖于两个内建的函数:</p>
<ul>
<li>list.sort()         对list成员进行排序，不返回副本</li>
<li>sorted(list)    对list成员进行排序，返回副本</li>
</ul>
<blockquote>
<p>注:以下使用sorted(list)进行演示</p>
</blockquote>
<a id="more"></a>
<h1 id="基本的排序"><a class="markdownIt-Anchor" href="#基本的排序"></a> 基本的排序</h1>
<h2 id="列表list"><a class="markdownIt-Anchor" href="#列表list"></a> 列表(list)</h2>
<h3 id="按列表元素大小排序"><a class="markdownIt-Anchor" href="#按列表元素大小排序"></a> 按列表元素大小排序</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数值类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>([<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>])</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#字符类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#字符串类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;ad&#x27;</span>,<span class="string">&#x27;ada&#x27;</span>,<span class="string">&#x27;ad1&#x27;</span>,<span class="string">&#x27;abe&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;abe&#x27;</span>, <span class="string">&#x27;ad&#x27;</span>, <span class="string">&#x27;ad1&#x27;</span>, <span class="string">&#x27;ada&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#字符串中包含大小写</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;ad&#x27;</span>,<span class="string">&#x27;ada&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ad1&#x27;</span>,<span class="string">&#x27;abe&#x27;</span>,<span class="string">&#x27;Abe&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">[<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;Abe&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;abe&#x27;</span>, <span class="string">&#x27;ad&#x27;</span>, <span class="string">&#x27;ad1&#x27;</span>, <span class="string">&#x27;ada&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#小写字母优先</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;ad&#x27;</span>,<span class="string">&#x27;ada&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ad1&#x27;</span>,<span class="string">&#x27;abe&#x27;</span>,<span class="string">&#x27;Abe&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],key=<span class="built_in">str</span>.lower)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;abe&#x27;</span>, <span class="string">&#x27;Abe&#x27;</span>, <span class="string">&#x27;ad&#x27;</span>, <span class="string">&#x27;ad1&#x27;</span>, <span class="string">&#x27;ada&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>规则解释:</p>
<ol>
<li>如果list内的元素是字符/字符串,默认优先将<mark>大写字母</mark>排前面,其次再按照规则2进行排序;通过参数<code>key=str.lower</code>控制其从<mark>小字母</mark>优先排.</li>
<li>如果list内的元素是字符/字符串,将<mark>依次</mark>按照该字符/字符串的<mark>ASCCII值 #800023</mark>进行排序</li>
<li>虽然列表内的元素的类型可以不一样,但是sotred(list)<mark>不支持 #80000f</mark>列表中既有数字又有字符的排序</li>
</ol>
<h3 id="按列表元素的属性"><a class="markdownIt-Anchor" href="#按列表元素的属性"></a> 按列表元素的属性</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#按列表元素的长度进行排序</span></span><br><span class="line"><span class="built_in">sorted</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;ad&#x27;</span>,<span class="string">&#x27;ada&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ad1&#x27;</span>,<span class="string">&#x27;abe&#x27;</span>,<span class="string">&#x27;Abe&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],key=<span class="keyword">lambda</span> <span class="built_in">str</span>:<span class="built_in">len</span>(<span class="built_in">str</span>))</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;ad&#x27;</span>, <span class="string">&#x27;ada&#x27;</span>, <span class="string">&#x27;ad1&#x27;</span>, <span class="string">&#x27;abe&#x27;</span>, <span class="string">&#x27;Abe&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>注:<br />
lambda为匿名函数,没有函数的具体名称,使用匿名函数是为了使代码更为精简.实际上<code>lambda str:len(str)</code>等价于:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Getlenght</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">len</span>(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure>
<h2 id="字典dictory"><a class="markdownIt-Anchor" href="#字典dictory"></a> 字典(dictory)</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#对字典进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(&#123;<span class="number">1</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;A&#x27;</span>&#125;)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照字典中的values的大小进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span></span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;DE&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;DDDB&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;QPOIE&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;WWB&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span>.items()</span><br><span class="line">dict_items([(<span class="number">1</span>, <span class="string">&#x27;DE&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;DDDB&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;QPOIE&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;WWB&#x27;</span>)])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(<span class="built_in">dict</span>.items(),key=<span class="keyword">lambda</span> value:value[<span class="number">1</span>])</span><br><span class="line">[(<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;DDDB&#x27;</span>), (<span class="number">1</span>, <span class="string">&#x27;DE&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;QPOIE&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;WWB&#x27;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照字典中的values的长度进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(<span class="built_in">dict</span>.items(),key=<span class="keyword">lambda</span> value:<span class="built_in">len</span>(value[<span class="number">1</span>]))</span><br><span class="line">[(<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>), (<span class="number">1</span>, <span class="string">&#x27;DE&#x27;</span>), (<span class="number">5</span>, <span class="string">&#x27;WWB&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;DDDB&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;QPOIE&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<p>对字典进行排序,实际上是对字典keys组成的list进行排序,即sorted(dict)==sorted(sorted.values())</p>
<h2 id="元组tuple排序"><a class="markdownIt-Anchor" href="#元组tuple排序"></a> 元组(tuple)排序</h2>
<h3 id="单个元组排序和列表的方法一样"><a class="markdownIt-Anchor" href="#单个元组排序和列表的方法一样"></a> 单个元组排序和列表的方法一样</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#元组排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup1=(<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(tup1)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup2=(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(tup2)</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h3 id="元组列表"><a class="markdownIt-Anchor" href="#元组列表"></a> 元组列表</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tuplist=[(<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>),(<span class="string">&#x27;c&#x27;</span>,<span class="number">4</span>),(<span class="string">&#x27;e&#x27;</span>,<span class="number">0</span>),(<span class="string">&#x27;d&#x27;</span>,<span class="number">2</span>),(<span class="string">&#x27;f&#x27;</span>,<span class="number">3</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>student_tuples = [(<span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="number">15</span>),(<span class="string">&#x27;jane&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">12</span>),(<span class="string">&#x27;dave&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">10</span>),]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line"><span class="comment">#直接对元组列表进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(tuplist)</span><br><span class="line">[(<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;c&#x27;</span>, <span class="number">4</span>), (<span class="string">&#x27;d&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;e&#x27;</span>, <span class="number">0</span>), (<span class="string">&#x27;f&#x27;</span>, <span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照元组的第某个值进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(tuplist,key=<span class="keyword">lambda</span> tup:tup[<span class="number">1</span>])</span><br><span class="line">[(<span class="string">&#x27;e&#x27;</span>, <span class="number">0</span>), (<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;d&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;f&#x27;</span>, <span class="number">3</span>), (<span class="string">&#x27;c&#x27;</span>, <span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照元组的第某个值进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(student_tuples, key=<span class="keyword">lambda</span> student: student[<span class="number">2</span>])</span><br><span class="line">[(<span class="string">&#x27;dave&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">10</span>), (<span class="string">&#x27;jane&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">12</span>), (<span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="number">15</span>)]</span><br></pre></td></tr></table></figure>
<p>注:直接对元组列表进行排序是按照元组的<mark>第一个值</mark>进行排序</p>
<h1 id="高级排序"><a class="markdownIt-Anchor" href="#高级排序"></a> 高级排序</h1>
<h2 id="使用operator模块"><a class="markdownIt-Anchor" href="#使用operator模块"></a> 使用Operator模块</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> operator <span class="keyword">import</span> itemgetter, attrgetter</span><br><span class="line"></span><br><span class="line"><span class="comment">#一个排序关键字</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(student_tuples, key=itemgetter(<span class="number">2</span>))</span><br><span class="line">[(<span class="string">&#x27;dave&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">10</span>), (<span class="string">&#x27;jane&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">12</span>), (<span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="number">15</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#两个排序关键字</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(student_tuples, key=itemgetter(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">[(<span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="number">15</span>), (<span class="string">&#x27;dave&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">10</span>), (<span class="string">&#x27;jane&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="number">12</span>)]</span><br></pre></td></tr></table></figure>
<h2 id="字符串的多关键字排序"><a class="markdownIt-Anchor" href="#字符串的多关键字排序"></a> 字符串的多关键字排序</h2>
<p>基于上面的多关键字排序,可以对字符串做一些有趣的排序,平常我们对字符串进行排序时,可能带有数字,这时候排序只是像平常那样逐个字符串<mark>ASCCII值 #800023</mark>进行排序:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list01=[<span class="string">&#x27;dog1&#x27;</span>,<span class="string">&#x27;cat3&#x27;</span>,<span class="string">&#x27;bird7&#x27;</span>,<span class="string">&#x27;swan4&#x27;</span>,<span class="string">&#x27;penguin6&#x27;</span>,<span class="string">&#x27;cattle5&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#字符串排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(list01)</span><br><span class="line">[<span class="string">&#x27;bird7&#x27;</span>, <span class="string">&#x27;cat3&#x27;</span>, <span class="string">&#x27;cattle5&#x27;</span>, <span class="string">&#x27;dog1&#x27;</span>, <span class="string">&#x27;penguin6&#x27;</span>, <span class="string">&#x27;swan4&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>但是有时候我们需要按照字符串中的字母进行排序,这时候就需要将字符串中的数字切割出来,然后传入key参数给sorted.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#按照字符串的某个数字进行排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">sort_str</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">str</span>:</span><br><span class="line">		<span class="keyword">try</span>:</span><br><span class="line">			c=re.findall(<span class="string">&#x27;\d+&#x27;</span>,<span class="built_in">str</span>)[<span class="number">0</span>]</span><br><span class="line">		<span class="keyword">except</span>:</span><br><span class="line">			c=-<span class="number">1</span></span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">int</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(list01,key=sort_str)</span><br><span class="line">[<span class="string">&#x27;dog1&#x27;</span>, <span class="string">&#x27;cat3&#x27;</span>, <span class="string">&#x27;swan4&#x27;</span>, <span class="string">&#x27;cattle5&#x27;</span>, <span class="string">&#x27;penguin6&#x27;</span>, <span class="string">&#x27;bird7&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>如果字符串中类似这样的,而你只想对字符串的某些位置的数字进行排序,我们先来看看只针对字符串一个特定位置的排序.</p>
<blockquote>
<p>[‘cb_cha0_amni0’,‘cb_cha0_amni2’,‘cb_cha1_amni1’,‘cb_cha0_amni3’]</p>
</blockquote>
<p>使用上面的排序方法得到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list02=[<span class="string">&#x27;cb_cha0_amni0&#x27;</span>,<span class="string">&#x27;cb_cha0_amni2&#x27;</span>,<span class="string">&#x27;cb_cha1_amni1&#x27;</span>,<span class="string">&#x27;cb_cha0_amni3&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(list02,key=sort_str)</span><br><span class="line">[<span class="string">&#x27;cb_cha0_amni0&#x27;</span>, <span class="string">&#x27;cb_cha0_amni2&#x27;</span>, <span class="string">&#x27;cb_cha0_amni3&#x27;</span>, <span class="string">&#x27;cb_cha1_amni1&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>上面的自定义提取数字的函数<code>c=re.findall('\d+',str)[0]</code>这一句决定了要对字符串的第几个数字进行排序,假设我要对上面字符数组的第二个值进行排序,重新定义一个提取数值的方法,每次调用返回字符串的第二个数字.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">sort_str1</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">str</span>:</span><br><span class="line">		<span class="keyword">try</span>:</span><br><span class="line">			c=re.findall(<span class="string">&#x27;\d+&#x27;</span>,<span class="built_in">str</span>)[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">except</span>:</span><br><span class="line">			c=-<span class="number">1</span></span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">int</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(list02,key=sort_str1)</span><br><span class="line">[<span class="string">&#x27;cb_cha0_amni0&#x27;</span>, <span class="string">&#x27;cb_cha1_amni1&#x27;</span>, <span class="string">&#x27;cb_cha0_amni2&#x27;</span>, <span class="string">&#x27;cb_cha0_amni3&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>比较炸的是你的需求是:<mark>按照字符串中的多个字母排序(比如优先按照第一个字母排序,然后按照第二个字母排序) #007e80</mark></p>
<p>一个想法是:把字符串解析为元组,然后使用<code>itemgetter</code>来完成多关键字排序.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#字符串已经被拆分为元组</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list03=[(<span class="string">&#x27;cb_cha&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;_amni&#x27;</span>,<span class="number">0</span>),(<span class="string">&#x27;cb_cha&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;_amni&#x27;</span>,<span class="number">1</span>),(<span class="string">&#x27;cb_cha&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;_amni&#x27;</span>,<span class="number">2</span>),(<span class="string">&#x27;cb_cha&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;_amni&#x27;</span>,<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#对元祖进行多关键字排序</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>listtmp=<span class="built_in">sorted</span>(list03, key=itemgetter(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>listtmp</span><br><span class="line">[(<span class="string">&#x27;cb_cha&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;_amni&#x27;</span>, <span class="number">0</span>), (<span class="string">&#x27;cb_cha&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;_amni&#x27;</span>, <span class="number">2</span>), (<span class="string">&#x27;cb_cha&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;_amni&#x27;</span>, <span class="number">3</span>), (<span class="string">&#x27;cb_cha&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;_amni&#x27;</span>, <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#将排序后的元组转成字符串</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> strtmp:<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,strtmp)),listtmp))</span><br><span class="line">[<span class="string">&#x27;cb_cha0_amni0&#x27;</span>, <span class="string">&#x27;cb_cha0_amni2&#x27;</span>, <span class="string">&#x27;cb_cha0_amni3&#x27;</span>, <span class="string">&#x27;cb_cha1_amni1&#x27;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>注:这里用了匿名函数和多个map,这对处理大量的数据是的问题,会耗费很多时间.这种情况比较好的方法是使用excle进行排序,当然,你得手动先将数据分割成一列一列的.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082058933.png" alt="EXCLE的自定义排序" /></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python中多层List展平为一层</title>
    <url>/2018/06/29/Python%E4%B8%AD%E5%A4%9A%E5%B1%82List%E5%B1%95%E5%B9%B3%E4%B8%BA%E4%B8%80%E5%B1%82/</url>
    <content><![CDATA[<p>使用Python脚本的过程中,偶尔需要使用<code>list多层转一层</code>,又总是忘记怎么写搜索关键词,所以总是找了很久,现在把各种方法记录下来,方便自己也方便大家.</p>
<p>方法很多,现在就简单写8种,后面再对这8种方法做基准测试.</p>
<p>声明:文中的方法均收集自<a href="https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python">Making a flat list out of list of lists in Python</a></p>
<a id="more"></a>
<h1 id="方法汇总"><a class="markdownIt-Anchor" href="#方法汇总"></a> 方法汇总</h1>
<p><strong>1.定义减层方法</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">import</span> perfplot</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable  <span class="comment"># or from collections.abc import Iterable</span></span><br><span class="line"><span class="keyword">from</span> iteration_utilities <span class="keyword">import</span> deepflatten</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用两次for循环</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forfor</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [item <span class="keyword">for</span> sublist <span class="keyword">in</span> a <span class="keyword">for</span> item <span class="keyword">in</span> sublist]</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过sum</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_brackets</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(a, [])</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用functools內建模块</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functools_reduce</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> functools.reduce(operator.concat, a)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用itertools內建模块</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">itertools_chain</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(itertools.chain.from_iterable(a))</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用numpy</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numpy_flat</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(numpy.array(a).flat)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用numpy</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numpy_concatenate</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(numpy.concatenate(a))</span><br><span class="line"></span><br><span class="line"><span class="comment">#自定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flatten</span>(<span class="params">items</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Yield items from any nested iterable; see REF.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(x, Iterable) <span class="keyword">and</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(x, (<span class="built_in">str</span>, <span class="built_in">bytes</span>)):</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> flatten(x)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">yield</span> x</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pylangs_flatten</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(flatten(a))</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用库iteration_utilities</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iteration_utilities_deepflatten</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(deepflatten(a, depth=<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<p><strong>2.测试</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]]</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;--------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(forfor(a))</span><br><span class="line">print(sum_brackets(a))</span><br><span class="line">print(functools_reduce(a))</span><br><span class="line">print(itertools_chain(a))</span><br><span class="line">print(numpy_flat(a))</span><br><span class="line">print(numpy_concatenate(a))</span><br><span class="line">print(pylangs_flatten(a))</span><br><span class="line">print(iteration_utilities_deepflatten(a))</span><br></pre></td></tr></table></figure>
<p><mark>输出:</mark></p>
<blockquote>
<p>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]<br />
--------------------------<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />
[1, 2, 3, 4, 5, 6, 7, 8, 9]</p>
</blockquote>
<hr />
<h1 id="各种方法的基准测试消耗时间对比"><a class="markdownIt-Anchor" href="#各种方法的基准测试消耗时间对比"></a> 各种方法的基准测试(消耗时间对比)</h1>
<p>各种方法在小数据上消耗时间差别不大,如果数据很小,没必要为了选择而烦恼,如果数据很大,可以参考下面基准测试的结果来选择减层方法.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> simple_benchmark <span class="keyword">import</span> benchmark</span><br><span class="line"></span><br><span class="line"><span class="comment">#基准测试</span></span><br><span class="line">b = benchmark(</span><br><span class="line">    [forfor, sum_brackets, functools_reduce, itertools_chain,numpy_flat, numpy_concatenate, pylangs_flatten,iteration_utilities_deepflatten],</span><br><span class="line">    arguments=&#123;<span class="number">2</span>**i: [[<span class="number">0</span>]*<span class="number">5</span>]*(<span class="number">2</span>**i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">13</span>)&#125;,</span><br><span class="line">    argument_name=<span class="string">&#x27;number of inner lists&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示测试结果</span></span><br><span class="line">plt.subplots(<span class="number">1</span>,<span class="number">1</span>,figsize=(<span class="number">15</span>,<span class="number">10</span>))</span><br><span class="line">b.plot()</span><br><span class="line">plt.legend(loc = <span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082059027.png" alt="消耗时间对比" /></p>
<p>相同数据量,纵轴方向越小,方法越快.</p>
<hr />
<p>代码可以从<a href="https://files.cnblogs.com/files/wushaogui/list%E5%A4%9A%E5%B1%82%E8%BD%AC%E4%B8%80%E5%B1%82.ipynb.zip">这里</a>下载,需要部署Jupyter环境,可参考我的博客部署方法.</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>图论---问题篇</title>
    <url>/2018/06/28/%E5%9B%BE%E8%AE%BA---%E9%97%AE%E9%A2%98%E7%AF%87/</url>
    <content><![CDATA[<p>图论中的算法基本都是提出后,经过检验的.我就不讨论算法很基础的原理,只是从看懂一个算法的角度去学习.本着不花时间去重复别人优秀工作的原则,本文中很多部分引用了别人的工作,甚至是照搬过来,因为我觉得算法这东西已经类似<code>真理</code>,证明不需要你,你可以看得懂,别人也可以,只是表达方式不同,别人有优秀的表达方式,我为什么不用呢!</p>
<a id="more"></a>
<h1 id="问题类"><a class="markdownIt-Anchor" href="#问题类"></a> 问题类</h1>
<h2 id="路径问题"><a class="markdownIt-Anchor" href="#路径问题"></a> 路径问题</h2>
<h3 id="柯尼斯堡七桥问题"><a class="markdownIt-Anchor" href="#柯尼斯堡七桥问题"></a> 柯尼斯堡七桥问题</h3>
<p>这个问题是基于一个现实生活中的事例：当时东普鲁士柯尼斯堡（今日俄罗斯加里宁格勒）市区跨普列戈利亚河两岸，河中心有两个小岛。小岛与河的两岸有七条桥连接。在所有桥都只能走一遍的前提下，如何才能把这个地方所有的桥都走遍？</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082040541.png" alt="柯尼斯堡七桥问题"></p>
<p>摘自:</p>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E6%9F%AF%E5%B0%BC%E6%96%AF%E5%A0%A1%E4%B8%83%E6%A1%A5%E9%97%AE%E9%A2%98">维基百科-柯尼斯堡七桥问题</a></p>
</blockquote>
<hr>
<h3 id="哈密顿回路问题"><a class="markdownIt-Anchor" href="#哈密顿回路问题"></a> 哈密顿回路问题</h3>
<p>哈密顿图是一个无向图,由指定的起点前往指定的终点，途中经过所有其他节点且只经过一次</p>
<p><strong>哈密顿回路:</strong> 闭合的哈密顿路径称作哈密顿回路<br>
<strong>哈密顿路径:</strong> 含有图中所有顶点的路径称作哈密顿路径。</p>
<p>摘自:</p>
<blockquote>
<p><a href="https://baike.baidu.com/item/%E5%93%88%E5%AF%86%E9%A1%BF%E5%9B%9E%E8%B7%AF/5575399">百度百科-哈密顿回路</a></p>
</blockquote>
<hr>
<h3 id="最小生成树问题"><a class="markdownIt-Anchor" href="#最小生成树问题"></a> 最小生成树问题</h3>
<p><strong>最小生成树</strong>是一副连通加权无向图中一棵权值最小的生成树。具体定义为: 在一给定的无向图 G = (V, E) 中，(u, v) 代表连接顶点 u 与顶点 v 的边（即 ( u , v ) ∈ E ，而 w(u, v) 代表此边的权重，若存在 T 为 E 的子集（即 T ⊆ E 且 (V, T) 为树，使得下面的值最小.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">w(T)=\sum_{(u,v)\subseteq E}{w(u,v)}</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>可以描述为以下问题,有一个有权无向图,找到路径把所有顶点连起来,并保证边上权重和最小. 所以最小生成树也称为:<strong>最小权重生成树</strong></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082040123.png" alt="enter description here" title="最小生成树"></p>
<p>一个连通图可能有多个生成树。当图中的边具有权值时，总会有一个生成树的边的权值之和小于或者等于其它生成树的边的权值之和。广义上而言，对于非连通无向图来说，它的每一连通分量同样有最小生成树，它们的并被称为<strong>最小生成森林</strong>。</p>
<p>以有线电视电缆的架设为例，若只能沿着街道布线，则以街道为边，而路口为顶点，其中必然有一最小生成树能使布线成本最低。</p>
<p>摘自:</p>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91">维基百科-最小生成树</a></p>
</blockquote>
<hr>
<h3 id="中国邮路问题"><a class="markdownIt-Anchor" href="#中国邮路问题"></a> 中国邮路问题</h3>
<p>也称<strong>中国邮递员问题</strong>,此问题为在一个连通的无向图中找到一最短的封闭路径，且此路径需通过所有<em>边</em>至少一次。</p>
<p>注意:下面有一个<code>旅行商问题</code>是经过所有<em>点</em>一次,和这个<em>边</em>不同.</p>
<p>简单来说，邮递员问题就是在一个已知的地区，邮差要设法找到一条最短路径，可以走过此地区所有的街道，且最后要回到出发点.</p>
<p>摘自:</p>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E9%82%AE%E9%80%92%E5%91%98%E9%97%AE%E9%A2%98">维基百科-邮递员问题</a></p>
</blockquote>
<hr>
<h3 id="最短路问题"><a class="markdownIt-Anchor" href="#最短路问题"></a> 最短路问题</h3>
<p>最短路径问题是图论研究中的一个经典算法问题，旨在寻找图（由结点和路径组成的）中两结点之间的最短路径。算法具体的形式包括：</p>
<blockquote>
<p><strong>确定起点的最短路径问题</strong> - 即已知起始结点，求最短路径的问题。适合使用Dijkstra算法。<br>
<strong>确定终点的最短路径问题</strong> - 与确定起点的问题相反，该问题是已知终结结点，求最短路径的问题。在无向图中该问题与确定起点的问题完全等同，在有向图中该问题等同于把所有路径方向反转的确定起点的问题。<br>
<strong>确定起点终点的最短路径问题</strong> - 即已知起点和终点，求两结点之间的最短路径。<br>
<strong>全局最短路径问题</strong> - 求图中所有的最短路径。适合使用Floyd-Warshall算法。</p>
</blockquote>
<p>用于解决最短路径问题的算法被称做“最短路径算法”，有时被简称作“路径算法”。最常用的路径算法有：</p>
<blockquote>
<p>Dijkstra算法<br>
A*算法<br>
Bellman-Ford算法<br>
SPFA算法（Bellman-Ford算法的改进版本）<br>
Floyd-Warshall算法<br>
Johnson算法<br>
Bi-Direction BFS算法</p>
</blockquote>
<p>摘自:</p>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98">维基百科-最短路问题</a></p>
</blockquote>
<hr>
<h3 id="斯坦纳树"><a class="markdownIt-Anchor" href="#斯坦纳树"></a> 斯坦纳树</h3>
<p>斯坦纳树问题是组合优化问题，与最小生成树相似，是最短网络的一种。最小生成树是在给定的点集和边中寻求最短网络使所有点连通。而最小斯坦纳树允许在给定点外增加额外的点，使生成的最短网络开销最小。</p>
<p><strong>展示问题,以供理解:</strong></p>
<blockquote>
<p>1.平原上的三个城镇间要兴建一个公用的煤气供应站，在选址问题上，要考虑的主要问题是使由供应站到三个城镇的输送管道的总长最短。如何去寻找合适地点？<br>
2.假若要建的是一个垃圾处理站，要修建三条公路将垃圾站与三个城镇连起来。这时，因为三个城镇的居民的数目或工业性质等的不同，每天运送垃圾使用的车辆数目各不相同，运输的费用也就各异。因此，选取地点时，如果仍考虑使三条公路的总长最小，就不合理了。这时应该考虑：先计算出三个城镇单位时间内生产的垃圾数量的百分比（或每日运输费用的百分比），如何选取地点，使得每个城镇垃圾运输数量与公路里程的乘积之和为最小。</p>
</blockquote>
<p>摘自:</p>
<blockquote>
<p><a href="https://baike.baidu.com/item/%E6%96%AF%E5%9D%A6%E7%BA%B3%E6%A0%91/12796694?fr=aladdin">百度百科-斯坦纳树</a></p>
</blockquote>
<hr>
<h3 id="旅行商问题np困难"><a class="markdownIt-Anchor" href="#旅行商问题np困难"></a> 旅行商问题（NP困难）</h3>
<p>假设有一个旅行商人要拜访n个城市，他必须选择所要走的路径，路径的限制是每个城市只能拜访一次，而且最后要回到原来出发的城市。路径的选择目标是要求得的路径路程为所有路径之中的最小值。</p>
<p>注意 ：上面有一个<code>中国邮路问题</code>是经过所有<em>边</em>一次,和这个<em>点</em>不同.</p>
<p>摘自:</p>
<blockquote>
<p><a href="https://baike.baidu.com/item/TSP%E9%97%AE%E9%A2%98/840008?fromtitle=%E6%97%85%E8%A1%8C%E6%8E%A8%E9%94%80%E5%91%98%E9%97%AE%E9%A2%98&amp;fromid=10675002&amp;fr=aladdin">百度百科-TSP问题</a></p>
</blockquote>
<hr>
<h2 id="网络流与匹配"><a class="markdownIt-Anchor" href="#网络流与匹配"></a> 网络流与匹配</h2>
<h3 id="最大流问题"><a class="markdownIt-Anchor" href="#最大流问题"></a> 最大流问题</h3>
<p>在优化理论中,最大流问题涉及到在一个单源点、单汇点的网络流中找到一条最大的流。<br>
最大流问题可以被看作是一个更复杂的网络流问题的特殊情况,。s-t流（从源点s到汇点t）的最大值等于s-t割的最小容量，这被称为最大流最小割定理。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041256.png" alt="最大流问题"></p>
<p><strong>最小费用最大流问题:</strong> 在一个网络中每段路径都有“容量”和“费用”两个限制的条件下，此类问题的研究试图寻找出：流量从A到B，如何选择路径、分配经过路径的流量，可以达到所用的费用最小的要求。<br>
在实际中：n辆卡车要运送物品，从A地到B地。由于每条路段都有不同的路费要缴纳，每条路能容纳的车的数量有限制，如何分配卡车的出发路径可以达到费用最低，物品又能全部送到。</p>
<p>摘自:</p>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98">维基百科-最大流问题</a><br>
<a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E9%97%AE%E9%A2%98">维基百科-最小费用最大流问题</a></p>
</blockquote>
<hr>
<h2 id="染色"><a class="markdownIt-Anchor" href="#染色"></a> 染色</h2>
<h3 id="四色问题"><a class="markdownIt-Anchor" href="#四色问题"></a> 四色问题</h3>
<p>每个无外飞地的地图都可以用不多于四种颜色来染色，而且不会有两个邻接的区域颜色相同</p>
<blockquote>
<p>外飞地：某国家拥有一块与本国分离开来的领土，该领土被其他国家包围，则该领土称为某国的外飞地。</p>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082041457.png" alt="四色问题示意图"></p>
<p>摘自:</p>
<blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E5%9B%9B%E8%89%B2%E5%AE%9A%E7%90%86">维基百科-四色定理</a></p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
      <tags>
        <tag>图论</tag>
      </tags>
  </entry>
  <entry>
    <title>ResNeXt：Aggregated Residual Transformations for Deep Neural Networks</title>
    <url>/2018/06/22/ResNeXt%EF%BC%9AAggregated%20Residual%20Transformations%20for%20Deep%20Neural%20Networks/</url>
    <content><![CDATA[<p>在ResNet的基础上引入分组卷积，降低模型参数量的同时，要求模型生成更鲁棒的特征</p>
<a id="more"></a>
<ul>
<li>
<p>什么是 ResNeXt ?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNeXt-20230408141106.png" alt="ResNeXt-20230408141106" /></li>
<li></li>
<li>ResNeXt 同时借鉴 ResNet的&quot;堆叠相同 Shape 子结构&quot;和 Inception 的&quot;split-transform-merge&quot;，不过不同于 Inception，ResNeXt 不需要设计复杂的 Inception 模块，而是每个分支采用相同的拓扑结构</li>
<li>ResNeXt的本质是分组卷积，通过变量基数来控制组的数量</li>
</ul>
</li>
<li>
<p>ResNeXt的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNeXt-20230408141107.png" alt="ResNeXt-20230408141107" /></li>
<li>首选ResNeXt借鉴VGGNet网络结构特点(堆叠块)，然后再借鉴GoogleNetv1的&quot;split-transform-merge&quot;设计出ResNeXt的基本结构，图中ResNeXt每块采用C个相同分支进行变换，ResNeXt-50（32x4d）的32表示每块采用的<strong>分组数量</strong>，4d表示每组卷积<strong>输出的通道数</strong></li>
<li>由图可知，ResNet-50与ResNeXt-50（32x4d）参数相近，所需计算量也相近</li>
</ul>
</li>
<li>
<p>ResNeXt实现残差学习的原理</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNeXt-20230408141108.png" alt="ResNeXt-20230408141108" /></li>
<li>由ResNet学习残差原理可知，ResNet学习残差的方式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">F(x)+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></li>
<li>ResNeXt学习残差的公式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><msub><mi>T</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{C} T_{i}(x)+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> ，这里的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_i(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 指的是ResNeXt的多个相同拓扑的路径，其中的C指的是路径重复的数量，也即ResNeXt中的“基数”</li>
<li>上图是ResNet及ResNeXt的基本块，在第一层转换中，ResNet的256个特征图直接通过1x1卷积转为64个，而ResNeXt将卷积核分为32组(每个卷积核大小为256x1x1x4)，每组生成4个特征图，每组特征concatenation得到128个特征图</li>
</ul>
</li>
<li>
<p>ResNeXt、InceptionResNet、分组卷积的关系？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNeXt-20230408141108-1.png" alt="ResNeXt-20230408141108-1" /></li>
<li>上图a、b、c分别是ResNeXt、InceptionResNet相似块、分组卷积，通过计算分析，上图三种结构确实等价，b与c等价是显然的</li>
<li>a 与 b 等价的原因是：在 a 中，4维特征图通过1\1卷积变为256维，然后32个256维数据求和，而在 b 中，是先将4维数据 concat 成 128维，在利用1x1卷积，实际上也就是求和过程</li>
<li>第三种结构较为简单且具有较高的效率，所以作者在实验中选择第三种结构</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>使用LSTM预测航班人数</title>
    <url>/2018/05/17/%E4%BD%BF%E7%94%A8LSTM%E9%A2%84%E6%B5%8B%E8%88%AA%E7%8F%AD%E4%BA%BA%E6%95%B0/</url>
    <content><![CDATA[<p>郑重声明，文章大部分翻译自: <a href="https://machinelearningmastery.com/time-series-prediction-lstm-recurrent-neural-networks-python-keras/"><br />
Time Series Prediction with LSTM Recurrent Neural Networks in Python with Keras</a></p>
<p><strong>数据:</strong> 1949到1960共12年,每年12个月的数据,一共 144 个数据,单位是 1000, 原文数据下载在<a href="https://datamarket.com/data/set/22u3/international-airline-passengers-monthly-totals-in-thousands-jan-49-dec-60#!ds=22u3&amp;display=line">这里</a></p>
<p><strong>目标:</strong> 预测国际航班未来 1 个月的乘客数</p>
<a id="more"></a>
<h2 id="1导入相应库文件及数据情况"><a class="markdownIt-Anchor" href="#1导入相应库文件及数据情况"></a> 1.导入相应库文件及数据情况</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#导入相应的库</span></span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> read_csv</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> LSTM</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> plot_model</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> SVG</span><br><span class="line"><span class="keyword">from</span> keras.utils.vis_utils <span class="keyword">import</span> model_to_dot</span><br><span class="line"></span><br><span class="line"><span class="comment">#将数据存储为两个矩阵，一个矩阵的ind位置存储t时刻的值，另一个矩阵存储t+1时刻的值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_dataset</span>(<span class="params">dataset, look_back=<span class="number">1</span></span>):</span></span><br><span class="line">    dataX, dataY = [], []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dataset)-look_back-<span class="number">1</span>):</span><br><span class="line">        a = dataset[i:(i+look_back), <span class="number">0</span>]</span><br><span class="line">        dataX.append(a)</span><br><span class="line">        dataY.append(dataset[i + look_back, <span class="number">0</span>])</span><br><span class="line">    <span class="keyword">return</span> numpy.array(dataX), numpy.array(dataY)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fix random seed for reproducibility</span></span><br><span class="line">numpy.random.seed(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取数据</span></span><br><span class="line">dataframe = read_csv(<span class="string">&#x27;international-airline-passengers.csv&#x27;</span>, usecols=[<span class="number">1</span>], engine=<span class="string">&#x27;python&#x27;</span>, skipfooter=<span class="number">3</span>)</span><br><span class="line">dataset = dataframe.values</span><br><span class="line">dataset = dataset.astype(<span class="string">&#x27;float32&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数据集</span></span><br><span class="line">print(<span class="string">&#x27;样本中的前面两个数据: \n&#x27;</span>,dataset[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">print(<span class="string">&#x27;整个样本的规模: &#x27;</span>,<span class="built_in">len</span>(dataset))</span><br><span class="line"></span><br><span class="line">plt.plot(dataset)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<p>样本中的前面两个数据:<br />
[[112.]  [118.]]<br />
整个样本的规模:  144</p>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082033445.jpg" alt="数据" title="真实数据在月份上的分布" /></p>
<hr />
<h2 id="2标准化数据划分数据"><a class="markdownIt-Anchor" href="#2标准化数据划分数据"></a> 2.标准化数据,划分数据</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#LSTM对输入数据的规模很敏感，特别是在使用sigmoid（默认）或tanh激活函数时。</span></span><br><span class="line"><span class="comment">#将数据重新调整到0到1的范围（也称为标准化）可能是一种很好的做法。</span></span><br><span class="line"></span><br><span class="line">scaler = MinMaxScaler(feature_range=(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">dataset = scaler.fit_transform(dataset)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 划分训练集与测试集,这里使用67%的原始数据作为训练数据,剩下33%作为测试数据</span></span><br><span class="line">train_size = <span class="built_in">int</span>(<span class="built_in">len</span>(dataset) * <span class="number">0.67</span>)</span><br><span class="line">test_size = <span class="built_in">len</span>(dataset) - train_size</span><br><span class="line">train, test = dataset[<span class="number">0</span>:train_size,:], dataset[train_size:<span class="built_in">len</span>(dataset),:]</span><br><span class="line">print(<span class="string">&#x27;划分数据集后的得到的训练数据和测试数据(训练数据未有标签): &#x27;</span>,train.shape,test.shape)</span><br></pre></td></tr></table></figure>
<p><strong>输出</strong>:</p>
<blockquote>
<p>划分数据集后的得到的训练数据和测试数据(训练数据未有标签):  (96, 1) (48, 1)</p>
</blockquote>
<hr />
<h2 id="3生成样本"><a class="markdownIt-Anchor" href="#3生成样本"></a> 3.生成样本</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成[t,t+look_back]时间间隔和t+look_back时刻的两个矩阵</span></span><br><span class="line">look_back = <span class="number">1</span></span><br><span class="line">trainX, trainY = create_dataset(train, look_back)</span><br><span class="line">testX, testY = create_dataset(test, look_back)</span><br><span class="line"></span><br><span class="line">print(trainX[:<span class="number">2</span>], trainY[:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据被Reshape成 [samples, time steps, features]，这是放入LSTM的shape</span></span><br><span class="line">trainX = numpy.reshape(trainX, (trainX.shape[<span class="number">0</span>], <span class="number">1</span>, trainX.shape[<span class="number">1</span>]))</span><br><span class="line">testX = numpy.reshape(testX, (testX.shape[<span class="number">0</span>], <span class="number">1</span>, testX.shape[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;构造得到模型的输入数据(训练数据已有标签trainY): &#x27;</span>,trainX.shape,testX.shape)</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<p>[[0.01544401] #第一个月份数据<br />
[0.02702703]] #第二个月份数据<br />
[0.02702703 0.05405405]  #每个样本在模型上的应该得到的输出</p>
</blockquote>
<blockquote>
<p>构造得到模型的输入数据(训练数据已有标签trainY):  (95, 1, 1) (47, 1, 1)</p>
</blockquote>
<hr />
<p><strong>这里解释下数据为什么这样划分?</strong><br />
前面我们已经说明了,我们是基于历史数据预测下一时刻的数据,但是每次依赖多少历史数据,我们没有说.这个例子的参数<code>look_back=1</code>设置说明历史数据是1,也就是基于前一个月份数据预测下一个月份数据.下面我以第一年的数据说明数据划分情况.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082034327.png" alt="enter description here" title="第一年的数据情况" /></p>
<p>当我们基于1个历史数据预测下一个值时,样本划分就像图示的蓝,红框,蓝色框表示输入模型的数据,红色表示<code>希望</code>模型输出的数据(当然只是希望,会有偏差,后面我们用均方根误差来衡量模型真实输出和这个值的差距).蓝,红框在所有的数据上滑动,得到类似上面的数据划分情况.</p>
<p><mark>当然 #007480</mark>,你也可以改动这个<code>look_back</code>这个值,基于历史多少数据来预测下一个数据可以自己设定.</p>
<p><mark>注意:本来训练数据和测试数据分别有96,48个,但是经过这样划分后都减少1个,分别为95,47.这是因为最后一个数据没有标签.但是测试数据没有必要这样分,因为他不需要标签,这里分的意思是利用分到的标签用于计算模型在测试数据上的均方根误差. #800014</mark></p>
<hr />
<h2 id="4构建lstm网络"><a class="markdownIt-Anchor" href="#4构建lstm网络"></a> 4.构建LSTM网络</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#构建LSTM网络</span></span><br><span class="line">model = Sequential()</span><br><span class="line">model.add(LSTM(<span class="number">4</span>, input_shape=(<span class="number">1</span>, look_back)))</span><br><span class="line">model.add(Dense(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译训练LSTM网络</span></span><br><span class="line">model.<span class="built_in">compile</span>(loss=<span class="string">&#x27;mean_squared_error&#x27;</span>, optimizer=<span class="string">&#x27;adam&#x27;</span>)</span><br><span class="line">model.fit(trainX, trainY, epochs=<span class="number">50</span>, batch_size=<span class="number">1</span>, verbose=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#打印模型</span></span><br><span class="line">model.summary()</span><br><span class="line"></span><br><span class="line"><span class="comment">#保存模型</span></span><br><span class="line">SVG(model_to_dot(model,show_shapes=<span class="literal">True</span>).create(prog=<span class="string">&#x27;dot&#x27;</span>, <span class="built_in">format</span>=<span class="string">&#x27;svg&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Epoch <span class="number">1</span>/<span class="number">50</span></span><br><span class="line"><span class="number">95</span>/<span class="number">95</span> [==============================] - 2s 18ms/step - loss: <span class="number">0.0406</span></span><br><span class="line">Epoch <span class="number">2</span>/<span class="number">50</span></span><br><span class="line"><span class="number">95</span>/<span class="number">95</span> [==============================] - 1s 6ms/step - loss: <span class="number">0.0199</span></span><br><span class="line">Epoch <span class="number">3</span>/<span class="number">50</span></span><br><span class="line"><span class="number">95</span>/<span class="number">95</span> [==============================] - 1s 6ms/step - loss: <span class="number">0.0147</span></span><br><span class="line">........后面直到<span class="number">50</span>次省略</span><br><span class="line"></span><br><span class="line"> ______________________________________________________________________________________</span><br><span class="line"> Layer (<span class="built_in">type</span>)                 Output Shape              Param <span class="comment">#   </span></span><br><span class="line"> ======================================================================================</span><br><span class="line"> lstm_7 (LSTM)                (<span class="literal">None</span>, <span class="number">4</span>)                 <span class="number">96</span>        </span><br><span class="line"> ______________________________________________________________________________________</span><br><span class="line"> dense_7 (Dense)              (<span class="literal">None</span>, <span class="number">1</span>)                 <span class="number">5</span>         </span><br><span class="line"> ======================================================================================</span><br><span class="line"> Total params: <span class="number">101</span></span><br><span class="line"> Trainable params: <span class="number">101</span></span><br><span class="line"> Non-trainable params: <span class="number">0</span></span><br><span class="line"> ______________________________________________________________________________________</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082034540.png" alt="enter description here" title="模型图示" /></p>
<hr />
<h2 id="5查看模型效果"><a class="markdownIt-Anchor" href="#5查看模型效果"></a> 5.查看模型效果</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用已训练的模型进行预测</span></span><br><span class="line">trainPredict = model.predict(trainX)</span><br><span class="line">testPredict = model.predict(testX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预测的值是[0,1]这样的标准化数据，需要将该值转换回原始值</span></span><br><span class="line">trainPredict = scaler.inverse_transform(trainPredict)</span><br><span class="line">trainY = scaler.inverse_transform([trainY])</span><br><span class="line">testPredict = scaler.inverse_transform(testPredict)</span><br><span class="line">testY = scaler.inverse_transform([testY])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算预测的均方根误差</span></span><br><span class="line">trainScore = math.sqrt(mean_squared_error(trainY[<span class="number">0</span>], trainPredict[:,<span class="number">0</span>]))</span><br><span class="line">print(<span class="string">&#x27;Train Score: %.2f RMSE&#x27;</span> % (trainScore))</span><br><span class="line">testScore = math.sqrt(mean_squared_error(testY[<span class="number">0</span>], testPredict[:,<span class="number">0</span>]))</span><br><span class="line">print(<span class="string">&#x27;Test Score: %.2f RMSE&#x27;</span> % (testScore))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图：对训练数据的预测</span></span><br><span class="line">trainPredictPlot = numpy.empty_like(dataset)</span><br><span class="line">trainPredictPlot[:, :] = numpy.nan</span><br><span class="line">trainPredictPlot[look_back:<span class="built_in">len</span>(trainPredict)+look_back, :] = trainPredict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图：对测试数据的预测</span></span><br><span class="line">testPredictPlot = numpy.empty_like(dataset)</span><br><span class="line">testPredictPlot[:, :] = numpy.nan</span><br><span class="line"><span class="comment">#testPredictPlot[len(trainPredict)+(look_back*2)+1:len(dataset)-1, :] = testPredict</span></span><br><span class="line">testPredictPlot[<span class="built_in">len</span>(trainPredict)+look_back:<span class="built_in">len</span>(dataset)-<span class="number">1</span>, :] = testPredict</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图片</span></span><br><span class="line">plt.plot(scaler.inverse_transform(dataset),color=<span class="string">&#x27;blue&#x27;</span>,label=<span class="string">&#x27;Raw data&#x27;</span>)</span><br><span class="line">plt.plot(trainPredictPlot,color=<span class="string">&#x27;red&#x27;</span>,label=<span class="string">&#x27;Train process&#x27;</span>)</span><br><span class="line">plt.plot(testPredictPlot,color=<span class="string">&#x27;green&#x27;</span>,label=<span class="string">&#x27;Test process&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在折线图上显示标签</span></span><br><span class="line">leg = plt.legend(loc=<span class="string">&#x27;best&#x27;</span>, ncol=<span class="number">1</span>, fancybox=<span class="literal">True</span>)</span><br><span class="line">leg.get_frame().set_alpha(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><strong>输出:</strong></p>
<blockquote>
<p>Train Score: 23.39 RMSE   #训练数据的均方根误差<br />
Test Score: 46.92  RMSE  #测试数据的均方根误差</p>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082034159.png" alt="enter description here" title="模型效果图示" /></p>
<p><mark>蓝色 #0e0080</mark>线是<code>原始数据</code>,<mark>红色 #800028</mark>是<code>训练数据的预测情况</code>,<mark>绿色</mark>是<code>测试数据的预测情况</code>,红色和绿色线越靠近蓝色线,表示模型对数据拟合能力越好.</p>
<hr />
<h2 id="6预测未来的数据"><a class="markdownIt-Anchor" href="#6预测未来的数据"></a> 6.预测未来的数据</h2>
<p>最后一个数据集的下一个月情况没有被预测,现把它拿到后进行预测.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#测试数据的最后一个数据没有预测,这里补上</span></span><br><span class="line">finalX = numpy.reshape(test[-<span class="number">1</span>], (<span class="number">1</span>, <span class="number">1</span>, testX.shape[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment">#预测得到标准化数据</span></span><br><span class="line">featruePredict = model.predict(finalX)</span><br><span class="line"></span><br><span class="line"><span class="comment">#将标准化数据转换为人数</span></span><br><span class="line">featruePredict = scaler.inverse_transform(featruePredict)</span><br><span class="line"></span><br><span class="line"><span class="comment">#原始数据是1949-1960年的数据,下一个月是1961年1月份</span></span><br><span class="line">print(<span class="string">&#x27;模型预测1961年1月份的国际航班人数是: &#x27;</span>,featruePredict)</span><br></pre></td></tr></table></figure>
<p><strong>输出</strong>:</p>
<blockquote>
<p>模型预测1961年1月份的国际航班人数是:  [[430.27188]]</p>
</blockquote>
<hr />
<h2 id="7扩展"><a class="markdownIt-Anchor" href="#7扩展"></a> 7.扩展</h2>
<p>模型有些参数可以自己手动调一下,看看模型在不同参数下的效果(虽然我估计数据量太少,可能调参带来的变化不是很大,但是可以体验调参的过程),下面我就可以调的参数说明:</p>
<blockquote>
<p>(1)损失函数现在使用的是<code>mean_squared_error</code>,可以调成别的<br />
(2)优化器是<code>adam</code>,也可以调,甚至对优化器内的参数进行调整(比如学习率)<br />
(3)训练次数是50,可以调低点(因为我看后面模型的损失不下降了)<br />
(4)基于历史多少数据的参数<code>look_back</code>可调,你可以设置为3,5…</p>
</blockquote>
<p>全部代码可以在<a href="https://files.cnblogs.com/files/wushaogui/%E5%9F%BA%E4%BA%8ELSTM%E7%9A%84%E8%88%AA%E7%8F%AD%E4%B9%98%E5%AE%A2%E9%A2%84%E6%B5%8B.zip">这里</a>找到.</p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>LSTM</tag>
      </tags>
  </entry>
  <entry>
    <title>Jupyter开发环境搭建</title>
    <url>/2018/04/11/Jupyter%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>Jupyter Notebook是一款开放源代码的Web应用程序，允许您创建和共享包含实时代码，方程式，可视化和叙述文本的文档。用途包括：数据清理和转换，数值模拟，统计建模，数据可视化，机器学习等等。</p>
<blockquote>
<p>翻译自<a href="http://jupyter.org/index.html">Jupyter官网</a></p>
</blockquote>
<a id="more"></a>
<h1 id="1jupyter安装"><a class="markdownIt-Anchor" href="#1jupyter安装"></a> 1.Jupyter安装</h1>
<p><strong>2.1检查你的python版本</strong><br />
一般在Linux上直接在命令行执行下面命令便可以可到python版本。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082045890.gif" alt="enter description here" title="查看系统Python版本" /></p>
<p>在Windows,命令行输入同样命令进行检查。</p>
<p><strong>2.2安装jupyter</strong></p>
<p>如果你的系统是Python 3的版本，输入以下命令安装：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> python3 -m pip install --upgrade pip</span><br><span class="line">python3 -m pip install jupyter</span><br></pre></td></tr></table></figure>
<p>如果你的系统是Python 2的版本，输入以下命令安装：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br><span class="line">python -m pip install jupyter</span><br></pre></td></tr></table></figure>
<h1 id="2notedown插件安装"><a class="markdownIt-Anchor" href="#2notedown插件安装"></a> 2.notedown插件安装</h1>
<p>markdown是一种文字编辑器，通过约定的符号快速写出自己需要的文档。<br />
通过下面命令在jupyter 上安装markdown</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install https://github.com/mli/notedown/tarball/master</span><br></pre></td></tr></table></figure>
<p>插件安装完成后，需要配置启动Jupyter是默认启动markdown插件，配置过程如下：</p>
<p>(1)生成配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure>
<p>(2)修改配置文件<br />
Windows系统下配置文件在：C:\Users\Administrator.jupyter\jupyter_notebook_config.py<br />
Linux系统的配置文件在：~/.jupyter/jupyter_notebook_config.py</p>
<p>打开这个文件，并将下面的配置添加到文件的末尾。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c.NotebookApp.contents_manager_class = <span class="string">&#x27;notedown.NotedownContentsManager&#x27;</span></span><br></pre></td></tr></table></figure>
<h1 id="3扩展包安装"><a class="markdownIt-Anchor" href="#3扩展包安装"></a> 3.扩展包安装</h1>
<p>Jupyter notebook extensions是一个为Jupyter notebook提供一系列扩展的库。安装它将极大提升编程效率。</p>
<p><strong>安装</strong><br />
(1) 安装Python包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install jupyter_contrib_nbextensions</span><br></pre></td></tr></table></figure>
<p>(2)安装js脚本和css文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter contrib nbextension install --user</span><br></pre></td></tr></table></figure>
<p>安装完成后，启动jupyter notebook,会有Nbextensions这一选项，点击会出现如下图情况。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082045692.png" alt="Nbextensions" /></p>
<p>推荐三个插件：</p>
<blockquote>
<p>1.Collapsible Headings  代码过长时，使用这个来折叠代码，简直不能太爽<br />
2.ExecuteTime 记录Shell的最后运行时间<br />
3.ScrollDown 输出很长时，自动往下刷新</p>
</blockquote>
<h1 id="4运行jupyter"><a class="markdownIt-Anchor" href="#4运行jupyter"></a> 4.运行Jupyter</h1>
<p>Linux/Windows系统均是在命令行中输入<code>jupyter notebook</code>来启动jupyter</p>
<h1 id="5在远端服务器上运行jupyter"><a class="markdownIt-Anchor" href="#5在远端服务器上运行jupyter"></a> 5.在远端服务器上运行jupyter</h1>
<p>通常将jupyter运行在服务器上，然后通过浏览器远程使用jupyter,一般而言，在服务器启动jupyter后，需要交jupyter运行端口映射到本地，然后本地才可以访问。</p>
<p>（1）服务器启动jupyter<br />
登录进服务器后，到你想使用jupyter的目录下运行jupyter,运行方式参考<code>第4步</code></p>
<p>（2）映射服务器端口到地址<br />
服务器启动后，会在命令行告诉你，jupyter是在那个端口执行的。Linux/Mac映射比较简单，Windows目前知道使用Xshell进行映射。</p>
<p><strong>Linux/Mac映射服务器端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh tom@172.xx.xx.xx -L 8888:localhost:8888</span><br></pre></td></tr></table></figure>
<p><strong>Windows映射服务器端口</strong><br />
在Xshell上连接到服务器，并已经启动jupyter后，下一步是设置端口映射，进入当前连接的属性界面，点击<code>隧道</code>，将服务器端口与本地端口填上去，确定即可。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082045215.png" alt="enter description here" title="Xshell映射远程端口" /></p>
<p>参考材料：</p>
<ul>
<li><a href="http://jupyter.org/install">Jupyter官方安装过程</a></li>
<li><a href="https://blog.csdn.net/zsWang9/article/details/78771555">深度学习第一课:MXNet/Gluon环境配置和安装</a>(插件安装部分)</li>
<li><a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions">jupyter_contrib_nbextensions</a></li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>改变ubuntu终端显示语言（桌面系统是中文，终端提示是英文）</title>
    <url>/2018/04/10/%E6%94%B9%E5%8F%98ubuntu%E7%BB%88%E7%AB%AF%E6%98%BE%E7%A4%BA%E8%AF%AD%E8%A8%80%EF%BC%88%E6%A1%8C%E9%9D%A2%E7%B3%BB%E7%BB%9F%E6%98%AF%E4%B8%AD%E6%96%87%EF%BC%8C%E7%BB%88%E7%AB%AF%E6%8F%90%E7%A4%BA%E6%98%AF%E8%8B%B1%E6%96%87%EF%BC%89/</url>
    <content><![CDATA[<p>本文针对linux系统设置为中文后，终端也同步被改为中文，当出现错误提示时，不方便搜索答案，因此需要将终端语言改为英文的</p>
<a id="more"></a>
<p>1.打开终端：<br />
$ vi .bashrc</p>
<p>2.最后添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$TERM</span>&quot;</span>=<span class="string">&quot;linux&quot;</span> ] ;<span class="keyword">then</span></span><br><span class="line"><span class="built_in">export</span> LANGUAGE=en_US</span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>关闭当前终端，重新打开终端后命令中的提示就显示英文提示了。</p>
<p>注意对那些中文文件名，文件夹名会显示为乱码。<br />
实际是改变系统两个环境变量  $LANGUAGE 和 $LANG的值（可以用echo $LANG 来查看值）</p>
<p>注：此方法在bash和zsh上均有效</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ENet：A Deep Neural Network Architecture for Real-Time Semantic Segmentation</title>
    <url>/2018/04/10/ENet%EF%BC%9AA%20Deep%20Neural%20Network%20Architecture%20for%20Real-Time%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>以 SegNet为基础设计的语义分割模型，在编码阶段使用相同的最大池化索引(max-pooling indices)进行上采样</p>
<a id="more"></a>
<h1 id="什么是-enet"><a class="markdownIt-Anchor" href="#什么是-enet"></a> 什么是 ENet？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ENet-20230408142944.png" alt="ENet-20230408142944" /></li>
<li>以 SegNet 为基础设计的语义分割模型，在编码阶段使用相同的 最大池化索引(max-pooling indices) 进行上采样</li>
<li>在开头设计 init block减小 featrue  map, 提升模型速度，使用 prelu激活函数、空洞卷积、dropout</li>
</ul>
<h1 id="enet-的网络结构"><a class="markdownIt-Anchor" href="#enet-的网络结构"></a> ENet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ENet-20230408142945.png" alt="ENet-20230408142945" /></li>
<li>nit block将 featrue map 减小，然后是两组bottleneck 实现下采样，最后使用最大池化索引(max-pooling indices) 实现上采样</li>
</ul>
<h1 id="enet-的-init-block-bottle-neck"><a class="markdownIt-Anchor" href="#enet-的-init-block-bottle-neck"></a> ENet 的 init block、bottle neck?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ENet-20230408142945-1.png" alt="ENet-20230408142945-1" /></li>
<li><strong>init block</strong>：2 个分支，1 个是下采样 1 倍的池化，1 个是下采样 1 倍的卷积，最后 concate。提前下采样，使得 ENet 的计算量减少</li>
<li><strong>bottle neck</strong>：瓶颈模块，使用 1 x 1 卷积+空洞卷积+dropout</li>
</ul>
]]></content>
      <tags>
        <tag>轻量</tag>
        <tag>语义语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>PSPNet：Dilated Residual Networks</title>
    <url>/2018/03/29/PSPNet%EF%BC%9ADilated%20Residual%20Networks/</url>
    <content><![CDATA[<p>PSPNet通过在网络中使用金字塔池化模块PPM,一定程度解决语义分割的多尺度问题</p>
<a id="more"></a>
<h1 id="什么是-pspnet"><a class="markdownIt-Anchor" href="#什么是-pspnet"></a> 什么是 PSPNet ?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PSPNet-20230408143431.png" alt="" /></li>
<li>一种语义分割模型，通过在编码器和解码器之间嵌入金字塔池化模块（PyramidPoolingModule,PPM），实现不同尺度的特征感知，提高语义分割的精度</li>
</ul>
<h1 id="pspnet的网络结构"><a class="markdownIt-Anchor" href="#pspnet的网络结构"></a> PSPNet的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PSPNet-20230408143431.png" alt="" /></li>
<li><strong>编码器(Encoder)</strong>：使用了预训练的ResNet，使空洞卷积(Atrousconvolution)增大感受野。最后输出的feature map是原图的1/8</li>
<li><strong>金字塔池化模块 (PPM)</strong>：使用了四种尺寸的金字塔，池化所用的 kerne 分别1×1, 2×2, 3×3，6×6。池化之后上采样，然后将得到的 feature map, 包括池化之前的做一个级联, 后面接一个卷积层得到最终的预测图像</li>
<li><strong>解码器 (Decoder)</strong>：基于金字塔池化后的特征，进行卷积，并通过1x1卷积输出 HxWxC 矩阵</li>
</ul>
<h1 id="什么是金字塔池化模块pyramid-pooling-module-ppm"><a class="markdownIt-Anchor" href="#什么是金字塔池化模块pyramid-pooling-module-ppm"></a> 什么是金字塔池化模块（Pyramid Pooling Module, PPM）？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/_tcvll3em81BukNCzhlExbypLwyhBKhhJRmmdfpE_CFOJ-TKPMZ-mLeL3uPPfISDV2HRu1YQMcXkkVcjBS6n0SAQfmdqIITkq8qyfXKD6DfGyvu6QBwcDgORXDlB8cCc.png" alt="" /></li>
<li><strong>多尺度池化：</strong> PPM在Featrue Map中进行多个分辨率下进全局最大池化，得到每个尺度上捕获的特征图，本文使用4个尺度，分别为1，2，3，6</li>
<li><strong>1x1卷积：</strong> 使1x1卷积调整每个尺度的特征的通道数量，减少参数量的同时，进行跨通道特征融合</li>
<li><strong>上采样：</strong> 对每个尺度的特征进行上采样双线性插值），并将所有尺度特征图进行级联(concatenate)，得到的特征包含图像的全局上下文和小块信息</li>
</ul>
<h1 id="pspnet的损失函数"><a class="markdownIt-Anchor" href="#pspnet的损失函数"></a> PSPNet的损失函数？</h1>
<ul>
<li>输入标签的 hxw，分割后得到的输出是 hxC，其中 C 为每个像素的类别概率</li>
<li>使交叉熵损失 (CrossEntropyLoss) 计算损失</li>
</ul>
<h1 id="pspnet-的编码器的辅助分类器实现步骤"><a class="markdownIt-Anchor" href="#pspnet-的编码器的辅助分类器实现步骤"></a> PSPNet 的编码器的辅助分类器实现步骤？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PSPNet-20230408143457.png" alt="" /></li>
<li>ResNet101模型训练期间，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>权重的辅助损失，以平衡最终损失和辅助损失。在测试过程中，放弃了辅助损失。它是一种深度测试监督的使用策略，训练非常深这个类似GoogleNet、Inceptionv1辅助分类</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/PSPNet-20230408143457-1.png" alt="PSPNet-20230408143457-1" /></li>
<li>由上图可知，加入辅助损失，可以提升效果，并在0.4权重在最优</li>
</ul>
<h1 id="金字塔池化模块ppm与空间金字塔池化spp的区别"><a class="markdownIt-Anchor" href="#金字塔池化模块ppm与空间金字塔池化spp的区别"></a> 金字塔池化模块(PPM)与空间金字塔池化(SPP)的区别？</h1>
<ul>
<li>空间金字塔池化(SpatialPyramidPooling,SPP)：于 2015 年何恺明在<strong>目标识别网络</strong>SPPNet 中提出，解决目标检测不同尺度图片的获得定长特征的问题，经过该池化，2D 的 featrue map 变为 1 D.</li>
<li>金字塔池化模块（PyramidPoolingModule,PPM）：于 2017 年的在<strong>语义分割网络</strong>PSPNet 中提出，用于收集特征图的多尺度特征，经过该模块的 featrue map 分辨率不变，channel 翻倍</li>
</ul>
<h1 id="金字塔池化模块-ppm与空洞卷积空间金字塔池化-aspp的区别"><a class="markdownIt-Anchor" href="#金字塔池化模块-ppm与空洞卷积空间金字塔池化-aspp的区别"></a> 金字塔池化模块 (PPM)与空洞卷积空间金字塔池化 (ASPP)的区别？</h1>
<ul>
<li><strong>PPM</strong> 中间使用不同 kernel size 的卷积提取多尺度特征，得到的特征 size 不一样，后续通过上采样才得到固定尺寸的特征</li>
<li><strong>ASPP</strong> 中间则使用空间卷积，对于 3 x 3 卷积，只要使 padding=dalite，输出保持不变，因此 ASPP 卷积后特征相等</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
        <tag>多尺度</tag>
      </tags>
  </entry>
  <entry>
    <title>SSD：Single Shot MultiBox Detector</title>
    <url>/2018/03/28/SSD%EF%BC%9ASingle%20Shot%20MultiBox%20Detector/</url>
    <content><![CDATA[<p>和 YOLOv1的思想类似，但是针对6个尺度特征输出目标预测结果</p>
<a id="more"></a>
<h1 id="什么是-ssd"><a class="markdownIt-Anchor" href="#什么是-ssd"></a> 什么是 SSD?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141624.png" alt="" /></li>
<li>是一个端到端的模型，同时借鉴 FasterRCNN]的锚框 (Anchor) 机制的想法，使得检测效果较定制化边界框 YOLOv1有比较好的提升</li>
<li>目标检测的思想YOLOv1划分网格的思想一致，差异在于SSD对于<strong>每个单元的每个先验框作类别及位置的预测，YOLOv1对每个单元作类别预测，对单元下的先验框作位置预测</strong></li>
</ul>
<h1 id="ssd的网络结构"><a class="markdownIt-Anchor" href="#ssd的网络结构"></a> SSD的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141624-1.png" alt="SSD-20230408141624-1" /></li>
<li>在 VGG16 的基础上，额外添加了 6 层辅助卷积层，目的是<strong>为了识别不同大小的目标</strong></li>
<li><strong>输入</strong>：300x300</li>
<li><strong>输出</strong>：包含 6 个尺度共计 8732 个先验框的预测，其中大尺度特征图（较靠前的特征图）可以用来检测小物体，而小尺度特征图（较靠后的特征图）用来检测大物体</li>
</ul>
<h1 id="ssd的损失函数"><a class="markdownIt-Anchor" href="#ssd的损失函数"></a> SSD的损失函数?</h1>
<ul>
<li>整个过程的误差分为两部分：softmax 分类误差和边框回归误差<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>l</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mrow><mo fence="true">(</mo><msub><mi>L</mi><mtext>conf </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><msub><mi>L</mi><mtext>loc </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>l</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L(x, c, l, g)=\frac{1}{N}\left(L_{\text {conf }}(x, c)+\alpha L_{\text {loc }}(x, l, g)\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">conf </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">loc </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
</li>
<li><strong>分类误差</strong>：使交叉熵损失 (CrossEntropy Loss) 计算正负样本的交叉熵和</li>
<li><strong>边框回归误差</strong>：采平滑绝对值损失(SmoothL1 Loss) ，</li>
</ul>
<h1 id="ssd与yolov1比较"><a class="markdownIt-Anchor" href="#ssd与yolov1比较"></a> SSD与YOLOv1比较？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141625.png" alt="" /></li>
<li>(1) <strong>检测头不同</strong>：SSD 采用 CNN 来直接进行检测，而不是像 YOLOv1那样在全连接层之后做检测</li>
<li>(2) <strong>多尺度不同</strong>：SSD 提取了不同尺度的特征图来做检测，大尺度特征图（较靠前的特征图）可以用来检测小物体，而小尺度特征图（较靠后的特征图）用来检测大物体，YOLOv1 只在 C6 特征上检测</li>
<li>(3) <strong>锚框</strong>：SSD 采用了不同尺度和长宽比的先验框（在 FasterRCNN中叫做锚），YOLOv1 没使用</li>
<li>(4) <strong>cell处理</strong>：SSD 对于<strong>每个单元的每个先验框</strong>，都包含类别+位置预测，即对每个 cell 预测 Bx (5+C)。而 YOLO 每个 cell 只预测一次类别，即对每个 cell 预测 Bx5+C，这也是 YOLOv2 与 YOLOv1的主要差别</li>
</ul>
<h1 id="ssd为什么需要设置先验框"><a class="markdownIt-Anchor" href="#ssd为什么需要设置先验框"></a> SSD为什么需要设置先验框？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141626.png" alt="SSD-20230408141626" /></li>
<li>YOLOv1没有针对数据的先验框，训练初始预测框由随机权重决定，所以需要在训练过程中自适应目标的形状，收敛较慢</li>
<li>SSD 的训练初始预测框是先验框，先验框是比随机权重得到框更加接近 gt 框，因此其收敛更快</li>
</ul>
<h1 id="ssd如何设计不同大小的先验框"><a class="markdownIt-Anchor" href="#ssd如何设计不同大小的先验框"></a> SSD如何设计不同大小的先验框?</h1>
<ul>
<li>先验框大小由尺度和长宽比决定，假设提供2个集合，尺度集合和长宽比集合</li>
<li>SSD分析6个尺度，每个尺度单元分别预测个框，所以总共预测4、6、6、6、4、4个先验框，共计8732个 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141626-1.png" alt="" /></li>
<li>大尺度特征图（较靠前的特征图）可以用来检测小物体，而小尺度特征图（较靠后的特征图）用来检测大物体</li>
</ul>
<h1 id="ssd-如何进行标签匹配"><a class="markdownIt-Anchor" href="#ssd-如何进行标签匹配"></a> SSD 如何进行标签匹配？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141627.png" alt="" /></li>
<li>(1) <strong>确保每个 gt 框都有先验框</strong>：找到与 gt 框 IOU 最大的先验框作为该 gt 框的正样本</li>
<li>(2) <strong>IOU 阈值匹配多个先验框</strong>：剩下的先验框若与某个 ground truth 的 IOU 大于一个阀值也和该 gt 框匹配。如果多个 gt 框与某个先验框 IOU 大于阈值，那么先验框只与 IOU 最大的那个先验框进行匹配</li>
<li>(3) <strong>负样本</strong>：与 ground truth 匹配的先验框为正样本，先验框没有与任何 ground truth 进行匹配则是负样本</li>
</ul>
<h1 id="ssd如何做多featrue-map预测框的合并"><a class="markdownIt-Anchor" href="#ssd如何做多featrue-map预测框的合并"></a> SSD如何做多featrue map预测框的合并？</h1>
<ul>
<li>SSD在多尺度预测到目标后，根据目标的置信度进行排序，并使非极大值抑制（NMS） 进行预测框的筛选</li>
</ul>
<h1 id="ssd如何使用3x3的小卷积核进行预测分类结果和边界框"><a class="markdownIt-Anchor" href="#ssd如何使用3x3的小卷积核进行预测分类结果和边界框"></a> SSD如何使用3x3的小卷积核进行预测分类结果和边界框?</h1>
<ul>
<li>对每个单元应用3×3卷积滤波器以进行预测(这些滤波器像常规CNN滤波器一样计算结果）。每个滤波器输出25个通道：<strong>21个类别分数</strong>+<strong>1个边界框的信息</strong></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141628.png" alt="" /></li>
</ul>
<h1 id="ssd训练时的正负样本比例"><a class="markdownIt-Anchor" href="#ssd训练时的正负样本比例"></a> SSD训练时的正负样本比例？</h1>
<ul>
<li>根SSD设计不同大小的先验框规则 ，SSD共有8732个先验框</li>
<li>为了保证正负样本尽量平衡，SSD采用难负例挖掘(hard negative mining)，就是对负样本进行抽样，抽样时按照置信度误差（预测背景的置信度越小，误差越大）进行降序排列，选取误差的较大的top-k作为训练的负样本，以保证正负样本比例接近1:3</li>
</ul>
<h1 id="ssd的预测过程"><a class="markdownIt-Anchor" href="#ssd的预测过程"></a> SSD的预测过程？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141628-1.png" alt="" /></li>
<li>(1) 对于每个预测框，首先根据类别分数确定类别与置信度值，并过滤掉属于背景的预测框</li>
<li>(2) <strong>阈值过滤</strong>：然后根据置信度阈值（如 0.5）过滤掉阈值较低的预测框</li>
<li>(3) <strong>解码到原图</strong>：对于留下的预测框进行解码，根据先验框得到其真实的位置参数</li>
<li>(4) <strong>取 TopK</strong>：一般需要根据置信度进行降序排列，然后仅保留 top-k（如 400）个预测框</li>
<li>(5) <strong>非极大值抑制（NMS）</strong>：过滤掉那些重叠度较大的预测框。最后剩余的预测框就是检测结果了</li>
</ul>
<h1 id="什么是multibox"><a class="markdownIt-Anchor" href="#什么是multibox"></a> 什么是MultiBox?</h1>
<ul>
<li>一种快速与类别无关边界框回的方法，MultiBox 上完成的工作中使用 Inception block 风格的卷积网络 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SSD-20230408141628-2.png" alt="" /></li>
<li>MultiBox 采用锚框 (Anchor)作为预测的初始化 bounding boxes，并回归与 groundtruth boxes 最接近的预测 boxes</li>
<li>每个特征图单元包含 11 个先验（8x8、6x6、4x4、3x3、2x2），在 1x1 特征图上只有一个，因此每张图像总共有 1420 个先验，从而能够在多个尺度上对输入图像进行稳健的覆盖，以检测各种尺寸的对象</li>
</ul>
<h1 id="ssd与multibox在边界框回归上的区别"><a class="markdownIt-Anchor" href="#ssd与multibox在边界框回归上的区别"></a> SSD与MultiBOX在边界框回归上的区别？</h1>
<ul>
<li>SSD 使用固定的先验，每个特征图单元都与一组不同尺寸和纵横比的默认边界框相关联。这些先验是手动（但仔细）选择的，而在 MultiBox 中，选择它们是因为它们相对于基本事实的 IoU 超过 0.5</li>
<li>MultiBox 不执行对象分类，而 SSD 执行。 因此，对于每个预测的边界框， c 为数据集中的每个可能的类计算</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>读官方Git教程(2)~安装与配置</title>
    <url>/2018/03/25/%E8%AF%BB%E5%AE%98%E6%96%B9Git%E6%95%99%E7%A8%8B(2)~%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>教程内容基本来自<a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">git官方教程</a>,认真都了系列的文章,然后对一些重点的记录下来,做了简单的归纳并写上自己的思考.</p>
<a id="more"></a>
<h1 id="1安装"><a class="markdownIt-Anchor" href="#1安装"></a> 1.安装</h1>
<p>在基于 Debian 的发行版上，使用 apt-get安装:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure>
<h1 id="2配置"><a class="markdownIt-Anchor" href="#2配置"></a> 2.配置</h1>
<p>Git 自带一个 git config 的工具来帮助设置控制 Git 外观和行为的配置变量。 这些变量存储在三个不同的位置：</p>
<blockquote>
<p>(1)/etc/gitconfig 文件: 包含系统上每一个用户及他们仓库的通用配置。 如果使用带有 --system 选项的 git config 时，它会从此文件读写配置变量。<br>
(2)~/.gitconfig 或 ~/.config/git/config 文件：只针对当前用户。 可以传递 --global 选项让 Git 读写此文件。<br>
(3)当前使用仓库的 Git 目录中的 config 文件（就是 .git/config）：针对该仓库。</p>
</blockquote>
<p>每一个级别覆盖上一级别的配置，所以 .git/config 的配置变量会覆盖 /etc/gitconfig 中的配置变量。</p>
<p><strong>配置用户信息</strong><br>
当安装完 Git 应该做的第一件事就是设置你的用户名称与邮件地址。 使用以下命令配置:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"xxxx"</span></span><br><span class="line">git config --global user.email xx@example.com</span><br></pre></td></tr></table></figure>
<p>当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 --global 选项的命令来配置。</p>
<p><strong>配置文本编辑器</strong><br>
Git 会使用操作系统默认的文本编辑器，通常是 Vim。 如果你想使用不同的文本编辑器，例如 Emacs，使用以下命令配置:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global core.editor emacs</span><br></pre></td></tr></table></figure>
<p><strong>检测配置信息</strong><br>
如果想要检查你的配置，可以使用 git config --list 命令来列出所有 Git 当时能找到的配置。</p>
<p>注:你可能会看到重复的变量名，因为 Git 会从不同的文件中读取同一个配置</p>
<p>你可以通过输入 git config <key>来检查 Git 的某一项配置,如查看用户名:</key></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>版本管理</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>读官方Git教程(1)~认识Git</title>
    <url>/2018/03/25/%E8%AF%BB%E5%AE%98%E6%96%B9Git%E6%95%99%E7%A8%8B(1)~%E8%AE%A4%E8%AF%86Git/</url>
    <content><![CDATA[<p>教程内容基本来自<a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">git官方教程</a>,认真都了系列的文章,然后对一些重点的记录下来,做了简单的归纳并写上自己的思考.</p>
<a id="more"></a>
<h1 id="1git介绍"><a class="markdownIt-Anchor" href="#1git介绍"></a> 1.Git介绍</h1>
<p><strong>版本控制</strong>是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。</p>
<p>采用版本控制系统（VCS）是个明智的选择。 有了它你就可以将某个文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态;  你可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因;  又是谁在何时报告了某个功能缺陷等等。 使用版本控制系统通常还意味着，就算你乱来一气把整个项目中的文件改的改删的删，你也照样可以轻松恢复到原先的样子。 但额外增加的工作量却微乎其微。</p>
<h1 id="2git版本控制原理"><a class="markdownIt-Anchor" href="#2git版本控制原理"></a> 2.Git版本控制原理</h1>
<p>Git 和其它版本控制系统（包括 Subversion 和近似工具）的主要差别在于 Git 对待数据的方法。概念上来区分，其它大部分系统以文件变更列表的方式存储信息。下图是一般CSV的设计原理:</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082011144.png" alt="其他版本控制的原理"></p>
<p>存储的是每个文件与初始版本的差异,即每个版本相当于以增量的方式存储当前版本与初始版本的差异.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082011661.png" alt="Git版本控制原理"></p>
<p>Git不采用这种方式,而是是把数据看作是对小型文件系统的一组快照。 每次你提交更新，或在 Git 中保存项目状态时，它主要对当时的全部文件制作一个快照并保存这个快照的索引。Git 对待数据更像是一个 <strong>快照流</strong>。</p>
<h1 id="3git特点"><a class="markdownIt-Anchor" href="#3git特点"></a> 3.Git特点</h1>
<p><strong>3.1本地操作</strong><br>
在 Git 中的绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其它计算机的信息。</p>
<p>举个例子，要浏览项目的历史，Git 不需外连到服务器去获取历史，然后再显示出来——它只需直接从本地数据库中读取。 你能立即看到项目历史。 如果你想查看当前版本与一个月前的版本之间引入的修改，Git 会查找到一个月前的文件做一次本地的差异计算，而不是由远程服务器处理或从远程服务器拉回旧版本文件再来本地处理。</p>
<p><strong>3.2数据完整性</strong><br>
Git 数据库中保存的信息都是以文件内容的哈希值来索引，而不是文件名。这意味着不可能在 Git 不知情时更改任何文件内容或目录内容。同时, 若你在传送过程中丢失信息或损坏文件，Git 就能发现。</p>
<p><strong>3.3一般只添加数据</strong><br>
你执行的 Git 操作，几乎只往 Git 数据库中增加数据。 很难让 Git 执行任何不可逆操作，或者让它以任何方式清除数据。</p>
<h1 id="4git中文件的三种状态"><a class="markdownIt-Anchor" href="#4git中文件的三种状态"></a> 4.Git中文件的三种状态</h1>
<p>Git 有三种状态，你的文件可能处于其中之一：</p>
<blockquote>
<p>a.已提交（committed)   已提交表示数据已经安全的保存在本地数据库中。<br>
b.已修改（modified）  已修改表示修改了文件，但还没保存到数据库中。<br>
c.已暂存（staged)   已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。</p>
</blockquote>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082011535.png" alt="工作目录、暂存区域以及 Git 仓库"></p>
<p>Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。</p>
<p>工作目录是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。</p>
<p>暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。 有时候也被称作<code>索引</code>，不过一般说法还是叫暂存区域。</p>
<p>基本的 Git 工作流程如下：</p>
<blockquote>
<p>在工作目录中修改文件。<br>
暂存文件，将文件的快照放入暂存区域。<br>
提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录。</p>
</blockquote>
<p>如果 Git 目录中保存着的特定版本文件，就属于已提交状态。 如果作了修改并已放入暂存区域，就属于已暂存状态。 如果自上次取出后，作了修改但还没有放到暂存区域，就是已修改状态。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>版本管理</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>ResNet：Deep Residual Learning for Image Recognition</title>
    <url>/2018/03/15/ResNet%EF%BC%9ADeep%20Residual%20Learning%20for%20Image%20Recognition/</url>
    <content><![CDATA[<p>通过网络的跳跃连接实现残差学习 ，使得神经网络可以无需考虑梯度消失或梯度爆炸即可搭建深层网络</p>
<a id="more"></a>
<ul>
<li>
<p>什么是ResNet?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408140940.png" alt="ResNet-20230408140940" /></li>
<li>通过网络的跳跃连接实现残差学习 ，使得神经网络可以无需考虑梯度消失或梯度爆炸即可搭建深层网络，相较于VGGNet 的19层和GoogleNetv1的22层，ResNet可以提供18、34、50、101、152甚至更多层的网络，同时获得更好的精度</li>
<li>值得注意的是，残差网络虽然解决加深网络带来的梯度消失、梯度爆炸或网络退化的问题，但是却<strong>不是整个网络起的作用，而是某些更短的关键层整体起的作用</strong>，和集成算法 理念相近，和丢弃正则化(Dropout)类似</li>
</ul>
</li>
<li>
<p>ResNet的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408140940-1.png" alt="" /></li>
<li>与plain net相比，ResNet多了很多“旁路”，即shortcut路径，其首尾圈出的layers构成一个Residual Block</li>
<li>ResNet中，所有的Residual Block都没有pooling层，降采样是通过conv的stride实现的</li>
<li>分别在conv3_1、conv4_1和conv5_1 Residual Block，降采样1倍，同时feature map数量增加1倍，如图中虚线划定的block</li>
<li>通过Average Pooling得到最终的特征，而不是通过全连接层</li>
<li>每个卷积层之后都紧接着BatchNorm layer</li>
</ul>
</li>
<li>
<p>简单地堆叠网络会导致什么问题？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408140941.png" alt="ResNet-20230408140941" /></li>
<li>单纯加深网络，并没有带来性能的提升，反而可能出现梯度消失(gradient vanishing) 、梯度爆炸(gradient exploding) 和网络退化</li>
</ul>
</li>
<li>
<p>ResNet如何实现残差学习？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408140942.png" alt="ResNet-20230408140942" /></li>
<li>又称恒等映射学习，通过在网络上增加跳跃连接 实现恒等映射的学习</li>
<li>恒等映射学习表达式如下，其中 x 为输入，F 为神经网络的变换，y 为神经网络的输出<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y=F(x)+x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p>
</li>
<li>神经网络学习恒等映射只需要将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ⇒0，而不是y⇒x，经过验证，网络学习<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>⇒0比y⇒更简单、更快</li>
</ul>
</li>
<li>
<p>ResNet如何定义残差块(residual block)、残差路径、Bottleneck结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408140943.png" alt="ResNet-20230408140943" /></li>
<li><strong>残差块：</strong> 有2个路径，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 路径是<strong>残差路径</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 路径为恒等映射，称之为 shortcut 路径，图中的+号表示 element-wise addition，要求参与运算的 F (x)和 x 的尺寸要相同</li>
<li><strong>残差路径：</strong> 根据残差块定义，衍生分成2种结构，（1）<strong>“basic block”</strong>，由2个3×3卷积层构成；（2）<strong>Bottleneck</strong>，由1×1 卷积构造，相比较“basic block”结构可<strong>降低计算复杂度的现实考虑</strong></li>
<li>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bottleneck</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">      <span class="comment"># Standard bottleneck</span></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, c1, c2, shortcut=<span class="literal">True</span>, g=<span class="number">1</span>, e=<span class="number">0.5</span></span>):</span>  <span class="comment"># ch_in, ch_out, shortcut, groups, expansion</span></span><br><span class="line">          <span class="built_in">super</span>(Bottleneck, self).__init__()</span><br><span class="line">          c_ = <span class="built_in">int</span>(c2 * e)  <span class="comment"># e为缩小因子，表示中间层通道相对输出层减小的比例</span></span><br><span class="line">          self.cv1 = Conv(c1, c_, k=<span class="number">1</span>)</span><br><span class="line">          self.cv2 = Conv(c_, c2, k=<span class="number">3</span>, p=<span class="number">1</span>, g=g)</span><br><span class="line">          self.add = shortcut <span class="keyword">and</span> c1 == c2</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">          <span class="keyword">return</span> x + self.cv2(self.cv1(x)) <span class="keyword">if</span> self.add <span class="keyword">else</span> self.cv2(self.cv1(x))</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>ResNet改变网络结构，相当于改变网络的error surface？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/pnYiX1Ga0wmUkpi0knfMX0Z3sUQQfa6_f6knO9xh77ylbgIS5qB2wOp8FqJ7dZm66ksTiduO3ADjj6Jfn9CE8yKDysVC8OOLVQEvfSgxKKDF0lzUfgFBE81jhRuI1HH2.png" alt="" /></li>
<li>由[[VGG]]可知，层数少的网络error surface比较简单，以至于ResNet-20是否加短连接，对error surface影响不大</li>
<li>到ResNet-56时，不加短连接网络的error surface迅速恶化，变得难以优化，引入shortcut后，情况改善</li>
</ul>
</li>
<li>
<p>ResNet为什么可以解决梯度消失？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/dpHDKh0PjVHa-1XOSxPrbRpcYj2VOnWvVUIhCPUpw95lwOqMrkoO_7TBgJOFZ71SxQu3RxMQrJ00EMURc7jHttGQhDTjL5RIzUHZz0qFpm70Pw6Ie9J9GyHP2ShYNcd9.png" alt="" /></li>
<li>由于h(x)=F(x)+x，使得链式求导后的结果如图所示，不管括号内右边部分的求导参数有多小，因为左边的1的存在，并且将原来的链式求导中的连乘变成了连加状态，都能保证该节点参数更新不会发生梯度消失或梯度爆炸现象</li>
<li>ResNet 虽然解决了梯度消失或梯度爆炸，但是本质是解决梯度破碎</li>
</ul>
</li>
<li>
<p>ResNet 为什么可以缓解网络退化？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408141028.png" alt="ResNet-20230408141028" /></li>
<li>左图18层网络解空间是34层的子空间，但34层平面网络在整个训练过程中具有较高的训练误差，出现退化现象，即使添加 BN，确保每层信号不消失，也是这种现象，说明网络退化不是梯度消失或梯度爆炸造成的</li>
<li>右图34层 ResNet 比18层 ResNet 好（2.8%）。更重要的是，34层 ResNet 显示出相当低的训练误差，并可推广到验证数据。这表明退化问题不是过拟合带来的</li>
<li>残差网络残差块表示为：h(x)=F(x)+x，通过学习F(x)⇒0，使得h(x)=x，进而使得<strong>输入信号可以从任意低层直接传播到高层，梯度可以从任意高层传播到底层</strong>，这样的恒等映射这很大程度缓解网络退化现象</li>
</ul>
</li>
<li>
<p>ResNet在大于1000层之后，训练效果很好，但是测试效果下降了，为什么？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408141029.png" alt="ResNet-20230408141029" /></li>
<li>残差结构还是可以的，但网络层数太高了，而数据集相对于网络层数来说有点小了</li>
<li>当层数比较小的时候，残差结构可以很好的缓和退化问题，因为上一层饱和时可以通过残差映射更快的传递给下一层。但是当深度太高时，就算是简化成只有残差传递的话，所以网络还是退化了，即残差网络可以缓和退化问题，并不说解决</li>
</ul>
</li>
<li>
<p>什么是恒等映射？</p>
<ul>
<li>对任意集合A，如果映射f:A⇒A定义为f(a)=a，即规定A中每个元素a与自身对应，则称f为A上的恒等映射</li>
<li>在神经网络中的意思是：输入经过若干层的变换后，输出与输入一样，没有发生变化，通过跳跃连接实现恒等映射学习</li>
</ul>
</li>
<li>
<p>在神经网络中，什么是跳跃连接？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408141029-1.png" alt="ResNet-20230408141029-1" /></li>
<li>将神经网络的输出连接到后面神经网络上</li>
</ul>
</li>
<li>
<p>什么是网络退化？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408141030.png" alt="ResNet-20230408141030" /></li>
<li><strong>网络退化</strong>：一般而言，叠加更多的网络层，模型会在训练集及测试集的性能会变好，因为模型复杂度更高了，表达能力更强了，然而实际上却是相反，<strong>叠加到一定数量后，网络的学习能力下降了</strong></li>
<li>看图可以，<strong>训练集及测试集</strong>上的56-layer效果均比20layer差，说明网络退化不是过拟合 (overfitting)导致的；已知深层神经网络存在梯度消失或梯度爆炸的问题，但是可以通过批规范化(Batch Normalization,BN) 来缓解这个问题，但是还是出现网络退化问题，既然不是过拟合和梯度消失导致的，那是什么导致的呢？</li>
<li>实际上非线性激活函数Relu的存在，每次输入到输出的过程都几乎是不可逆的，这也造成了许多**不可逆的信息损失，即冗余层无法学习到恒等映射，**无法避免出现退化问题</li>
</ul>
</li>
<li>
<p>什么是error surface?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408141030-1.png" alt="" /></li>
<li>神经网络中Total Loss对参数的变化</li>
</ul>
</li>
<li>
<p>什么是梯度破碎(the shattering gradient problem)?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ResNet-20230408141031.png" alt="ResNet-20230408141031" /></li>
<li>在标准前馈神经网络中，随着深度增加，<strong>神经元梯度的相关性(corelation)按指数级减少</strong> (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msup><mn>2</mn><mi>L</mi></msup></mfrac></mrow><annotation encoding="application/x-tex">\frac {1} {2^L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1969729999999998em;vertical-align:-0.35186499999999993em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.648135em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7740928571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">L</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35186499999999993em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>)；同时，<strong>梯度的空间结构也随着深度增加被逐渐消除</strong>。这也就是梯度破碎现象，上图是神经网络梯度及其[[概率论常见名词#^e70uqz|协方差矩阵]]的可视化，可以看到标准的前馈网络的梯度在较深时(b)与白噪声(e)类似</li>
<li>相较标准前馈网络，<strong>残差网络中梯度相关性减少的速度从指数级下降到亚线性级</strong>(sublinearly, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mi>L</mi></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\frac {1} {\sqrt{L}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.383108em;vertical-align:-0.538em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.537397em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322900000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mathnormal mtight">L</span></span></span><span style="top:-2.89229em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10770999999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>)，深度残差网络中，神经元梯度介于棕色噪声与白噪声之间(参见上图中的c,d,e)；残差连接可以<strong>极大地保留梯度的空间结构</strong>。残差结构缓解了梯度破碎问题</li>
</ul>
</li>
<li>
<p>为什么梯度破碎会导致神经网络难以优化？</p>
<ul>
<li>因为<strong>许多优化方法假设梯度在相邻点上是相似的，破碎的梯度会大大减小这类优化方法的有效性</strong></li>
<li>另外，如果梯度表现得像白噪声，那么某个神经元对网络输出的影响将会很不稳定</li>
</ul>
</li>
<li>
<p>为什么ResNet网络比普通网络更容易学习？</p>
<ul>
<li>残差网络残差块表示为：h(x)=F(x)+x，通过学习F(x)⇒0，使得h(x)=x</li>
<li>因为随机初始化权重一般偏向于0，并且ReLU能够将负数激活为0，过滤了负数的线性变化，所以优化F(x)⇒0比h(x)⇒x更快</li>
</ul>
</li>
</ul>
<p>ResNet 系列模型的演化过程？<br />
- ResNet系列模型主要演化方向包括2种：split-transform-merge，squeeze-and-attention<br />
- <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VLKgmgQns28tjymUtyVEB7-Jqk1xUyTq64QT9lFrZEG6WbPP9KI2c_M1eYPCT1p0PbWvJGVJV3eUV9VBin1ysFHDLDkf-DS0jeIzeBs13APc2_qcuSMdAEyTcdGWgUCN.png" alt="" /><br />
- <strong>split-transform-merge</strong>：通过卷积的可分离性质，增加网络宽度，从而在不增加的情况下增加网络的表征能力（不同维度通道特征的融合）<br />
- <strong>squeeze-and-attention</strong>：核心想法是应用全局上下文预测 channel-wise 的注意力因素</p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>SegNet：A Deep Convolutional Encoder-Decoder Architecture for Image Segmentation</title>
    <url>/2018/03/14/SegNet%EF%BC%9AA%20Deep%20Convolutional%20Encoder-Decoder%20Architecture%20for%20Image%20Segmentation/</url>
    <content><![CDATA[<p>SegNet是典型的encoder-decoder语义分割网络，通过反池化进行上采样</p>
<a id="more"></a>
<h1 id="什么是-segnet"><a class="markdownIt-Anchor" href="#什么是-segnet"></a> 什么是 SegNet?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SegNet-20230408143607.png" alt="SegNet-20230408143607" /></li>
<li>基于编码器-解码器的语义分割网络，主要思想：使用编码器期池化 (Pooling) 的索引，通反池化 (UnPooling) 还原图像信息，并实现像素级分类</li>
<li>虽然SegNet没有完全领先FCN、DeepLab、DeconvNet，但是精度和速度的平衡的条件下是更好的选择</li>
</ul>
<h1 id="segnet的网络结构"><a class="markdownIt-Anchor" href="#segnet的网络结构"></a> SegNet的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SegNet-20230408143608.png" alt="SegNet-20230408143608" /></li>
<li>网络的输入 H* W* 3，输出是 H * W * C，C 为类别数量</li>
<li><strong>编码器 (Encoder)</strong>： VGG -16 有 13 个卷积层（除去全连接层）</li>
<li><strong>解码器 (Decoder)</strong>： 对应 decoder 也具有 13 层，其中 upsampling 使用 Encoder 期间 pooling 的位置索引，最后用 Softmax 做像素分类</li>
</ul>
<h1 id="segnet的损失函数"><a class="markdownIt-Anchor" href="#segnet的损失函数"></a> SegNet的损失函数？</h1>
<ul>
<li>输入标签的 h * w，分割后得到的输出是 h * w * C，其中 C 为每个像素的类别概率</li>
<li>将 h* w 拉成一维，如果网络输出包括 softmax，使交叉熵损失 (CrossEntropyLoss) 计算损失</li>
</ul>
<h1 id="segnet-的最大池化索引-max-pooling-indices"><a class="markdownIt-Anchor" href="#segnet-的最大池化索引-max-pooling-indices"></a> SegNet 的最大池化索引 (max-pooling indices)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SegNet-20230408143609.png" alt="SegNet-20230408143609" /></li>
<li>在 Encoder 阶段，保存每个 2x2 区域中最大特征的索引。考虑到整个网络是对称的，所以在解码器阶段的上采样期间，1x1 特征会到达相应池化索引显示的确切位置</li>
<li>作用：改善了边界划分，使边界轮廓更准确，减少了端到端训练的参数量，进而减少内存占用，提高推理速度</li>
</ul>
<h1 id="segnet-fcn的上采样差异"><a class="markdownIt-Anchor" href="#segnet-fcn的上采样差异"></a> SegNet、FCN的上采样差异？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SegNet-20230408143609-1.png" alt="SegNet-20230408143609-1" /></li>
<li>SegNet保留pooling时的位置信息，通反池化(UnPooling)时直接将数据放在原先的位置</li>
<li>[[FCN]]采反卷积(deconvolution)双线性插值，每一个像素都是运算后的结果</li>
</ul>
<h1 id="segnet与deconvnet的异同"><a class="markdownIt-Anchor" href="#segnet与deconvnet的异同"></a> SegNet与DeconvNet的异同？</h1>
<ul>
<li><strong>相同</strong>：（1）都使用VGG16作为特征提取网络；（2）都使用反池化(UnPooling)</li>
<li><strong>差异</strong>：（1）DeconvNet 上采样交替使反卷积 (deconvolution) 和反池化 (UnPooling) ，SegNet 上采样只使反池化 (UnPooling) ；DeconvNet存在 VGG16的全连接层，SegNet 去掉了全连接层</li>
</ul>
<h1 id="segnet与unet的差异"><a class="markdownIt-Anchor" href="#segnet与unet的差异"></a> SegNet与UNet的差异？</h1>
<ul>
<li>U-Net没有利用池化位置索引信息，而是将编码阶段的整个特征图传输到相应的解码器（以牺牲更多内存为代价），并将其连接，再进行上采样（通反卷积(deconvolution)），从而得到解码器特征图</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>DeepLabv2：Semantic Image Segmentation with Deep Convolutional Nets, Atrous Convolution, and Fully Connected CRFs</title>
    <url>/2018/03/02/DeepLabv2%EF%BC%9ASemantic%20Image%20Segmentation%20with%20Deep%20Convolutional%20Nets,%20Atrous%20Convolution,%20and%20Fully%20Connected%20CRFs/</url>
    <content><![CDATA[<p>DeepLabv2 是在DeepLabv1基础上的优化，主要改进是引入空洞卷积金字塔池化(ASPP)</p>
<a id="more"></a>
<h1 id="什么是-deeplabv2"><a class="markdownIt-Anchor" href="#什么是-deeplabv2"></a> 什么是 DeepLabv2?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142622.png" alt="DeepLabv2-20230408142622" /></li>
<li>DeepLabv2 是在 DeepLabv1 基础上的优化，主要改进是引入空洞卷积金字塔池化</li>
<li><strong>特征分辨率的降低</strong>：DeepLabv2 在最后几最大池化(Max pooling)层中去除下采样，取而代之的是使空洞卷积，以更高的采样密度计算特征映射</li>
<li><strong>物体存在多尺度：</strong> 受到空间金字塔池化(SpatialPyramidPooling,SPP)的启发，提出空洞卷积金字塔池化，以多尺度的信息得到更强健的分割结果</li>
<li><strong>DCNN 的空间不变性：</strong> DCNN 中最大池化和下采样组合存在空间不变性(Spatialinvariance)，通过最终的 DCNN 层相应全连接条件随机场 (fully CRFs) 结合来克服这个问题</li>
</ul>
<h1 id="deeplabv2的网络结构"><a class="markdownIt-Anchor" href="#deeplabv2的网络结构"></a> DeepLabv2的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-24%2011.51.36.excalidraw.png" alt="Drawing 2023-02-24 11.51.36.excalidraw" /></li>
<li>与 DeepLabv1 的网络结构相差不大，主要有2点改进：（1）主干网络使用 RestNet 替代 VGG16；（2）使用 空洞卷积金字塔池化(ASPP) 解决多尺度的问题</li>
</ul>
<h1 id="deeplabv2的损失函数"><a class="markdownIt-Anchor" href="#deeplabv2的损失函数"></a> DeepLabv2的损失函数？</h1>
<ul>
<li>CNN的每个输出map(原图1/8大小)空间位置信息与原始groud truth标签（下采样为1/8）交叉熵损失(CrossEntropyLoss)</li>
</ul>
<h1 id="什么是空洞卷积金字塔池化atrous-spatial-pyramid-pooling-aspp-bhummg"><a class="markdownIt-Anchor" href="#什么是空洞卷积金字塔池化atrous-spatial-pyramid-pooling-aspp-bhummg"></a> 什么是空洞卷积金字塔池化(Atrous Spatial Pyramid Pooling, ASPP)? ^bhummg</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142623.png" alt="DeepLabv2-20230408142623" /></li>
<li>在空间金字塔池化(SpatialPyramidPooling,SPP) 的基础上，结合空洞卷积(Atrousconvolution)可在不丢失分辨率（即不进行下采样）的情况下扩大卷积核的感受野，有助于考虑不同的物体比例</li>
<li>根据卷积的输出计算torch.nn.Conv2d，对于卷积核为3x3的空洞卷积，只要其dilation=padding，stride=1，卷积层输出的大小保持不变  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; input = torch.randn(5, 8, 56, 128)</span><br><span class="line">&gt;&gt;&gt; m = torch.nn.Conv2d(8, 33, (3, 3), padding=(4, 4), dilation=(4, 4));</span><br><span class="line">&gt;&gt;&gt; m(input).shape</span><br><span class="line">torch.Size(\[5, 33, 56, 128])</span><br><span class="line">&gt;&gt;&gt; m = torch.nn.Conv2d(8, 33, (3, 3), padding=(24, 24), dilation=(24, 24));</span><br><span class="line">&gt;&gt;&gt; m(input).shape</span><br><span class="line">torch.Size(\[5, 33, 56, 128])</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="deeplabv2的如何训练全连接条件随机场fully-connected-crf"><a class="markdownIt-Anchor" href="#deeplabv2的如何训练全连接条件随机场fully-connected-crf"></a> DeepLabv2的如何训练全连接条件随机场(fully-connected CRF)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142623-1.png" alt="DeepLabv2-20230408142623-1" /></li>
<li>通过10倍的CRF，飞机周围不同颜色的小区域变得平滑起来</li>
<li>CRF是一个后阶段的处理过程，它使DeepLabv1和DeepLabv2变为不是端到端的学习框架</li>
</ul>
<h1 id="deeplabv2的缺点"><a class="markdownIt-Anchor" href="#deeplabv2的缺点"></a> DeepLabv2的缺点？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142624.png" alt="DeepLabv2-20230408142624" /></li>
<li>不能捕捉物体的微妙边界，如自行车和椅子。由于一元术语不够可靠，CRF后处理甚至无法恢复细节</li>
</ul>
<h1 id="deeplabv2与deeplabv1使用空洞卷积的差异"><a class="markdownIt-Anchor" href="#deeplabv2与deeplabv1使用空洞卷积的差异"></a> DeepLabv2与DeepLabv1使用空洞卷积的差异？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142624-1.png" alt="DeepLabv2-20230408142624-1" /></li>
<li>DeepLabv1模型使用了单分支的空洞卷积</li>
<li>DeepLabv2模型使用了多分支的并行空洞卷积，最终组合空洞卷积金字塔池化(ASPP)</li>
</ul>
<h1 id="空洞卷积与标准卷积的效果差异"><a class="markdownIt-Anchor" href="#空洞卷积与标准卷积的效果差异"></a> 空洞卷积与标准卷积的效果差异？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142625.png" alt="DeepLabv2-20230408142625" /></li>
<li>空洞卷积在原图上直接进行卷积操作，这样省去了下采样和上采样的操作，而且计算量不变的情况下（卷积核中那些为0的系数在反向梯度计算中没有传递性），能得到更大的感受野，也就是说能获取到更多的密集特征，尤其是像素的边界信息，对比两个分支的输出feature map可以得到印证</li>
</ul>
<h1 id="deeplabv2使用学习率衰减对结果有什么影响"><a class="markdownIt-Anchor" href="#deeplabv2使用学习率衰减对结果有什么影响"></a> deeplabv2使用学习率衰减对结果有什么影响？</h1>
<ul>
<li>衰减策略：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>r</mi><mo>=</mo><mi>l</mi><mi>r</mi><mo>∗</mo><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow><mrow><mi>m</mi><mi>a</mi><msub><mi>x</mi><mo lspace="0em" rspace="0em">−</mo></msub><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></mfrac><mo fence="true">)</mo></mrow><mtext>power </mtext></msup></mrow><annotation encoding="application/x-tex">l r=l r *\left(1-\frac{i t e r}{m a x_{-} i t e r}\right)^{\text {power }}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.854312em;vertical-align:-0.65002em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.855664em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2736642857142857em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.486765em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.204292em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">power </span></span></span></span></span></span></span></span></span></span></span></span></span> 其中power=0.9 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142625-1.png" alt="" /></li>
<li>使用poly策略比固定的step策略效果要好<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv2-20230408142625-2.png" alt="DeepLabv2-20230408142625-2" /></li>
</ul>
]]></content>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>Unet：Convolutional Networks for Biomedical Image Segmentation</title>
    <url>/2018/02/20/Unet%EF%BC%9AConvolutional%20Networks%20for%20Biomedical%20Image%20Segmentation/</url>
    <content><![CDATA[<p>在FCN的基础上设计解码器，并通过跨连接连接相同分辨率特征</p>
<a id="more"></a>
<h1 id="什么是-unet"><a class="markdownIt-Anchor" href="#什么是-unet"></a> 什么是 UNet?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/UNet-20230408143738.png" alt="UNet-20230408143738" /></li>
<li>Unet是针对医学图像开发的图像分割模型，一种U型结构，可认为是FCN基础上跨连接更彻底一点，即在每次下采样进行跨连接</li>
</ul>
<h1 id="unet的网络结构"><a class="markdownIt-Anchor" href="#unet的网络结构"></a> Unet的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/UNet-20230408143738.png" alt="UNet-20230408143738" /></li>
<li><strong>输入</strong>：H * W * 3，输出是 H/n * W/n * C，n 是输出图与原图的大小比，C 是类别数</li>
<li><strong>编码器</strong>：特征提取网络VGG/ResNet</li>
<li><strong>解码器</strong>：特征融合网络，目标是将编码器学习的判别特征（较低分辨率）语义投影到像素空间（较高分辨率）以获得密集分类</li>
</ul>
<h1 id="unet的损失函数"><a class="markdownIt-Anchor" href="#unet的损失函数"></a> Unet的损失函数？</h1>
<ul>
<li>输入标签的h * w，分割后得到的输出是H/n * W/n * C，其中C为每个像素的类别概率</li>
<li>使交叉熵损失(CrossEntropyLoss) 计算损失</li>
</ul>
<h1 id="unet如何处理超大的医学图像"><a class="markdownIt-Anchor" href="#unet如何处理超大的医学图像"></a> Unet如何处理超大的医学图像？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/UEcrxjTfTq19Fpmx1CdErzZ8KSiR9B9T0gCzdymmbhiwLpezSnIFE74wnwVVIaiG0CHRmtNNXXjJkhlLA_ouRsDX8UbNGL534kfHKdvBlG7Xx4M75Ae5s1EYzlyYyrVd.png" alt="" /></li>
<li>分割时候不可能将原图太小输入网络，所以必须切成一张一张的小patch</li>
<li>在切成小patch的时候，Unet由于网络结构原因适合有重叠的切图</li>
</ul>
<h1 id="unet的缺点"><a class="markdownIt-Anchor" href="#unet的缺点"></a> Unet的缺点？</h1>
<ul>
<li><strong>很慢</strong>：因为这个网络必须训练每个 patch，并且因为 patch 之间的重叠有很多冗余，这样会导致同样特征被多次训练，造成资源的浪费，导致训练时间的加长且效率也会有所降低</li>
<li><strong>定位准确性和获取上下文信息不可兼得：</strong> 大的 patches 需要更多的 max-pooling，这样会减少定位准确性，因为最大池化会丢失目标像素和周围像素之间的空间关系，而小 patches 只能看到很小的局部信息，包含的背景信息不够</li>
</ul>
<h1 id="unet与fcn在特征融合时的差别"><a class="markdownIt-Anchor" href="#unet与fcn在特征融合时的差别"></a> Unet与FCN在特征融合时的差别？</h1>
<ul>
<li>FCN是通过特征图对应像素值的相加来融合特征的</li>
<li>UNet 通过通道数的拼接，这样可以形成更厚的特征，当然这样会更佳消耗显存</li>
</ul>
<h1 id="什么是-弹性变形"><a class="markdownIt-Anchor" href="#什么是-弹性变形"></a> 什么是 <strong>弹性变形？</strong></h1>
<ul>
<li>可对图片模拟力按压的效果，对于分割类似线等细小物体有效果提升</li>
<li>对像素点各个维度产生(-1，1)区间的随机标准偏差，并用高斯滤波（0，sigma）对各维度的偏差矩阵进行滤波，最后用放大系数alpha控制偏差范围</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/HQ5lhsO0xFHJ8w1AZPVDkhG4mwZNSGzfau99fPiQ44JzHJMP-odR-ctVSDlzX_ey2V4ZuN0wFCkJHORh7erthxOg6M-S-MPJ3GjEiS1G4E6q2VdRN0tlMwCxsj08QPpQ.png" alt="" /></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>DeepLabv1：Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs</title>
    <url>/2018/02/18/DeepLabv1%EF%BC%9ASemantic%20Image%20Segmentation%20with%20Deep%20Convolutional%20Nets%20and%20Fully%20Connected%20CRFs/</url>
    <content><![CDATA[<p>通过空洞卷积扩大感受野，使得分割可以处理大尺寸目标，通过CRF后处理模型输出，使得结果更加合理</p>
<a id="more"></a>
<h1 id="什么是-deeplabv1"><a class="markdownIt-Anchor" href="#什么是-deeplabv1"></a> 什么是 DeepLabv1？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv1-20230408142527.png" alt="DeepLabv1-20230408142527" /></li>
<li>DeepLabv1认为DCNNs在图像标记任务中存在3个问题：特征分辨率下降、CNN的空间不变性(Spatial invariance)、 物体存在多尺度</li>
<li><strong>特征分辨率下降：</strong> 下采样可以增大感受野，但会导致分辨率的下降，丢失了细节信息，使空洞卷积 解决该问题，在不改变特征图的大小同时扩大感受野</li>
<li><strong>CNN的空间不变性</strong>：根本是源于重复的池化和下采样，使全连接条件随机场(fully CRFs) 解决了空间不变性的问题</li>
<li><strong>物体存在多尺度：</strong> 原始方法是将图片缩放成不同尺寸，汇总特征得到结果，但是增加了计算成本，DeepLabv1通过将不同层的 featrue map 拼接到一起缓解这个问题，DeepLabv2 在提出空洞卷积金字塔池化(AtrousSpatialPyramidPooling,ASPP) 解决该问题</li>
<li>总结：通过空洞卷积扩大感受野，使得分割可以处理大尺寸目标，通过 CRF 后处理模型输出，使得结果更加合理</li>
</ul>
<h1 id="deeplabv1的网络结构"><a class="markdownIt-Anchor" href="#deeplabv1的网络结构"></a> DeepLabv1的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/Drawing%202023-02-24%2011.51.36.excalidraw.png" alt="Drawing 2023-02-24 11.51.36.excalidraw" /></li>
<li>VGG-16，将全连接层的权重转成了卷积层的权重，构成全卷积网络，进行了8倍下采样</li>
<li>8 倍下采样后直接进行 CRF 修正结果</li>
</ul>
<h1 id="deeplabv1的损失函数"><a class="markdownIt-Anchor" href="#deeplabv1的损失函数"></a> DeepLabv1的损失函数？</h1>
<ul>
<li>CNN的每个输出map(原图1/8大小)空间位置信息与原始groud truth标签（下采样为1/8）交叉熵损失(CrossEntropyLoss)</li>
</ul>
<h1 id="deeplabv1训练步骤"><a class="markdownIt-Anchor" href="#deeplabv1训练步骤"></a> DeepLabv1训练步骤？</h1>
<ul>
<li><strong>（1）训练 DCNN</strong>：此时输出是 CRF 的一元势函数（像素概率），在训练时 CRF 时保持固定</li>
<li><strong>（2）训练 CRF</strong>：在对 DCNN 做 fine-tune 后，使用公式对 CRF 做交叉验证，在100个图像上，给定初始搜索范围，采用从粗到细的寻找策略，寻找到最佳的 CRF 系数</li>
</ul>
<h1 id="deeplabv1如何做多尺度预测"><a class="markdownIt-Anchor" href="#deeplabv1如何做多尺度预测"></a> DeepLabv1如何做多尺度预测？</h1>
<ul>
<li>在输入图片和前四个max-pooling的输出都插入分支，并将这些分支输出与主干网络的输出concat到一起然后再进行像素级分类</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZLGxSAfjxAl02_bxowOsJvIAbcdhkKxLSFyL_20f9mz-0ii-9IzcdasBHURsJMoHSNrLsY2AZejHRcIC2QbfXXiCp7IIASnBMpH_6UjRfwhMM_vAzHp8dTVrCAodhLh_.png" alt="" /></li>
</ul>
<h1 id="deeplabv1-如何使用全连接条件随机场-fully-connected-crf"><a class="markdownIt-Anchor" href="#deeplabv1-如何使用全连接条件随机场-fully-connected-crf"></a> DeepLabv1 如何使用全连接条件随机场 (Fully Connected CRF)？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeepLabv1-20230408142550.png" alt="DeepLabv1-20230408142550" /></li>
<li>通过10次迭代全连接条件随机场(fully CRFs)，飞机周围边沿更加清晰</li>
<li>注意：CRF 是一个后阶段的处理过程，它使得 DeepLabv1、DeepLabv2变为非 end-to-end</li>
</ul>
<h1 id="什么是cnn的空间不变性spatial-invariance"><a class="markdownIt-Anchor" href="#什么是cnn的空间不变性spatial-invariance"></a> 什么是CNN的空间不变性(Spatial invariance)?</h1>
<ul>
<li><strong>空间不变性</strong>：对位置信息不敏感，比如对细节信息不敏感、抽象度较高的任务（图像分类） , 对于同一张图片进行空间变换（旋转不变性(rotationalinvariance)、平移不变性(translationalinvariance)）其图像分类的结果是不变的</li>
<li>空间不变性对图像细节敏感、抽象度较低的任务（如 语义分割、姿态估计等）有干扰，因为任务的结果会随着图像空间变化而改变</li>
</ul>
<h1 id="空洞卷积和下采样有什么区别"><a class="markdownIt-Anchor" href="#空洞卷积和下采样有什么区别"></a> 空洞卷积和下采样有什么区别？</h1>
<ul>
<li>池化(Pooling)：好处是缩小特征图尺寸，增大感受野；坏处：分辨率下降，细节信息丢失</li>
<li>空洞卷积 (Atrous convolution)：增大感受野，同时分辨率不下降</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/qq_37541097/article/details/121692445">DeepLabV1网络简析_太阳花的小绿豆的博客-CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>DeconvNet：Learning Deconvolution Network for Semantic Segmentation</title>
    <url>/2018/02/15/DeconvNet%EF%BC%9ALearning%20Deconvolution%20Network%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>第一个基于解码器-编码器设计的网络，编码阶段使用池化提取特征，解码阶段使用反池化、反卷积还原分辨率</p>
<a id="more"></a>
<h1 id="什么是deconvnet"><a class="markdownIt-Anchor" href="#什么是deconvnet"></a> 什么是DeconvNet?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeconvNet-20230408142443.png" alt="DeconvNet-20230408142443" /></li>
<li>第一个基于解码器-编码器设计的网络，编码阶段使用<strong>池化</strong>提取特征，解码阶段使用<strong>反池化</strong>、反卷积还原分辨率</li>
<li>为了解决 FCN 无法分割过大、过小目标的问题，DeconvNet 通过 EdgeBox 先获取图片目标的获选框，将图片多目标语义分割问题分解为单目标的语义分割问题</li>
</ul>
<h1 id="deconvnet-的网络结构"><a class="markdownIt-Anchor" href="#deconvnet-的网络结构"></a> DeconvNet 的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeconvNet-20230408142443.png" alt="DeconvNet-20230408142443" /></li>
<li><strong>编码器</strong>： 使用VGG-16（去除分类层），把最后分类的全连接层去掉，在适当的层间应用Relu和Maxpooling。增加两个全连接层（1x1卷积）来强化特定类别的投影</li>
<li><strong>解码器</strong>：编码器的镜像，主要包反卷积(deconvolution) 和反池化(UnPooling)</li>
</ul>
<h1 id="deconvnet的损失函数"><a class="markdownIt-Anchor" href="#deconvnet的损失函数"></a> DeconvNet的损失函数？</h1>
<ul>
<li>输入标签的 hxw，分割后得到的输出是 hxwxC，其中 C 为每个像素的类别概率</li>
<li>将 hxw 拉成一维，如果网络输出包括 softmax，使交叉熵损失 (CrossEntropyLoss) 计算损失</li>
</ul>
<h1 id="deconvnet-的训练过程"><a class="markdownIt-Anchor" href="#deconvnet-的训练过程"></a> DeconvNet 的训练过程？</h1>
<ul>
<li><strong>第一阶段</strong>： 用简单的样本（每个样本包含一个目标，且该目标位于中央）进行训练</li>
<li><strong>第二阶段</strong>： 用复杂的、具有挑战性、重叠的样本在第一阶段训练好的模型上fine-turning</li>
</ul>
<h1 id="deconvnet-如何得到最后输出"><a class="markdownIt-Anchor" href="#deconvnet-如何得到最后输出"></a> DeconvNet 如何得到最后输出？</h1>
<ul>
<li><strong>合并概率图</strong>：DeconvNet 预测多个候选框的像素类别概率后，将获选框概率合并到原始大图上，规则有两个，相应位置多个获选框的同类概率最大值或平均值</li>
<li><strong>进一步加工</strong>：获得大图尺度的概率图后，使用 Softmax 得到得到类别的条件概率映射。最后使用全连接条件随机场 (fully CRFs)得到最终的输出映射</li>
</ul>
<h1 id="在-deconvnet-论文中反卷积和反池化有什么差异"><a class="markdownIt-Anchor" href="#在-deconvnet-论文中反卷积和反池化有什么差异"></a> 在 DeconvNet 论文中，反卷积和反池化有什么差异？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeconvNet-20230408142509.png" alt="DeconvNet-20230408142509" /></li>
<li><strong>反卷积(deconvolution)</strong>：低层反卷积层可获得目标的位置，形状等粗略信息，高层反卷积层可获得更精细的信息</li>
<li><strong>反池化 (UnPooling)</strong>：和反卷积目的不同，反池化是通过回溯原始位置来获得更好的结构细节信息，反卷积趋向于获取特定物体类别的形状</li>
</ul>
<h1 id="deconvnet如何进行上采样"><a class="markdownIt-Anchor" href="#deconvnet如何进行上采样"></a> DeconvNet如何进行上采样？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeconvNet-20230408142509-1.png" alt="DeconvNet-20230408142509-1" /></li>
<li><strong>pooling</strong>：的时候用 switch variables 记录<strong>Maxpooling 操作得到的 activation 的位置</strong></li>
<li><strong>Unpooling</strong>：利用 switch variables 把它<strong>放回原位置</strong>，从而恢复成 pooling 前同样的大小</li>
</ul>
<h1 id="deconvnet-论文中总结-fcn-的缺点有哪些"><a class="markdownIt-Anchor" href="#deconvnet-论文中总结-fcn-的缺点有哪些"></a> DeconvNet 论文中，总结 FCN 的缺点有哪些？</h1>
<ul>
<li><strong>对于大于或者小于感受野的目标</strong>，就可能被<strong>分裂或者错误标记</strong><br />
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeconvNet-20230408142509-2.png" alt="DeconvNet-20230408142509-2" /></li>
<li><strong>对于小目标来说，经常会被忽略掉，被当作了背景</strong><br />
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/DeconvNet-20230408142510.png" alt="DeconvNet-20230408142510" /></li>
</ul>
<h1 id="deconvnet-与-fcn-的差异"><a class="markdownIt-Anchor" href="#deconvnet-与-fcn-的差异"></a> DeconvNet 与 FCN 的差异？</h1>
<ul>
<li>FCN 里面对各层的输出只做了一次反卷积 (deconvolution)，然后再整体做双线性插值</li>
<li>DeconvNet 上采样交替使反卷积 (deconvolution) 和反池化 (UnPooling) ，通过堆叠上采样，形成对称的网络</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>FCN：Fully Convolutional Networks for Semantic Segmentation</title>
    <url>/2018/02/13/FCN%EF%BC%9AFully%20Convolutional%20Networks%20for%20Semantic%20Segmentation/</url>
    <content><![CDATA[<p>通过反卷积(deconvolution)上采样、通过跳跃连接实现底层位置信息与高层语义信息，最终实现对融合技术实现对像素级的分类</p>
<a id="more"></a>
<h1 id="什么是-fcn-fully-convolutional-networks"><a class="markdownIt-Anchor" href="#什么是-fcn-fully-convolutional-networks"></a> 什么是 FCN (Fully Convolutional Networks)?</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FCN-20230408142959.png" alt="FCN-20230408142959" /></li>
<li>和分类的最后一层使用全连接层输出不同，分割的输出仍然是 featrue map，每个 cell 的值是对这个位置的分类，所以图像分割属于密集分类</li>
<li>FCN 通过反卷积(deconvolution)上采样、通过跳跃连接实现底层位置信息与高层语义信息，最终实现对融合技术实现对像素级的分类</li>
</ul>
<h1 id="fcn如何实现像素级的分类"><a class="markdownIt-Anchor" href="#fcn如何实现像素级的分类"></a> FCN如何实现像素级的分类？</h1>
<ul>
<li>对于一般的分类CNN网络，网络的最后加入全连接层，经过softmax后就可以获得类别概率信息，但不能标识每个像素点的类别，所以这种全连接方法不适用于图像分割 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FCN-20230408142959-1.png" alt="" /></li>
<li>FCN提出把后面全连接都换成卷积，这样就可以获得一张2维的feature map，后接softmax获得每个像素点的分类信息，从而解决了分割问题 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/FCN-20230408143000.png" alt="" /></li>
</ul>
<h1 id="fcn的网络结构"><a class="markdownIt-Anchor" href="#fcn的网络结构"></a> FCN的网络结构？</h1>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/%E8%AF%AD%E4%B9%89%E5%88%86%E5%89%B2%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF(1)-FCN-20230408154027-1.png" alt="语义分割学习之路(1)-FCN-20230408154027-1" /></li>
<li>FCN 的输入是 H x W x 3，输出是 H x W x C，C 为类别数量</li>
<li>FCN全部由卷积层组成的网络</li>
</ul>
<h1 id="fcn的损失函数"><a class="markdownIt-Anchor" href="#fcn的损失函数"></a> FCN的损失函数？</h1>
<ul>
<li>输入标签的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">h \times w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，分割后得到的输出是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>×</mo><mi>w</mi><mo>×</mo><mn>21</mn></mrow><annotation encoding="application/x-tex">h \times w \times 21</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span></span></span></span>，其中 21 为每个像素的类别概率</li>
<li>使用交叉熵计算损失</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>语义分割</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogleNetv4：Inception-ResNet and the Impact of Residual Connections on Learning</title>
    <url>/2017/12/21/GoogleNetv4%EF%BC%9AInception-ResNet%20and%20the%20Impact%20of%20Residual%20Connections%20on%20Learning/</url>
    <content><![CDATA[<p>在GoogleNetv3的基础上融ResNet的残差思想，设计了多种block</p>
<a id="more"></a>
<ul>
<li>
<p>什么是GoogleNetv4?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv4-20230408140304.png" alt="" /></li>
<li>GoogleNetv3基础上融ResNet，设计出 Stem、Inception-A、Inception-B、Inception-C、Reduction-A、BInception-C等模块，然后通过堆叠这些模块完成网络的构建</li>
</ul>
</li>
<li>
<p>GoogleNetv4的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv4-20230408140304.png" alt="" /></li>
<li>又称Inception-v4，由6大模块组成，包StemInception-A、Inception-B、Inception-C blockReduction-A、Reduction-B，共计76层</li>
</ul>
</li>
<li>
<p>GoogleNetv4 的 Stem 模块？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv4-20230408140326.png" alt="GoogleNetv4-20230408140326" /></li>
<li>Stem模块专门用于GoogleNetv4的开始部分</li>
</ul>
</li>
<li>
<p>GoogleNetv4的Inception-A、Inception-B、Inception-C block？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv4-20230408140327.png" alt="" /></li>
<li>Inception block结合残差连接，设计了3种block</li>
</ul>
</li>
<li>
<p>GoogleNetv4的下采样模块Reduction-A、Reduction-B？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv4-20230408140327-1.png" alt="" /></li>
<li>通过stride控制不同卷积的下采样水平</li>
</ul>
</li>
<li>
<p>GoogleNetv4的损失函数？</p>
<ul>
<li>一般分类损失使交叉熵损失(CrossEntropyLoss)</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogleNetv3：Rethinking the Inception Architecture for Computer Vision</title>
    <url>/2017/12/11/GoogleNetv3%EF%BC%9ARethinking%20the%20Inception%20Architecture%20for%20Computer%20Vision/</url>
    <content><![CDATA[<p>在GoogleNetv2的基础上，引入分解卷积修改inception block，实现模型性能提升</p>
<a id="more"></a>
<ul>
<li>什么是GoogleNetv3？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv3-20230408140253.png" alt="" /></li>
<li>GoogleNetv2基础上改进，主要是引分解卷积实现计算量的下降</li>
</ul>
</li>
<li>GoogleNetv3的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv3-20230408140254.png" alt="GoogleNetv3-20230408140254" /></li>
<li>通过分解卷积，修改inception block，然后堆叠该模块得到GoogleNetv3</li>
</ul>
</li>
<li>GoogleNetv3的卷积核分解方式？
<ul>
<li><strong>大卷积⇒多个小卷积：</strong> 类似 Googlev2 的Inceptionv2 block，将大卷积核分解为多个小卷积核 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv3-20230408140254-1.png" alt="" /></li>
<li><strong>大卷积⇒多个不对称卷积：</strong> 将大卷积核分解为非对称卷积核，空间可分离卷积 (Spatial Separable Convolutions) <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv3-20230408140255.png" alt="" /></li>
</ul>
</li>
<li>GoogleNetv3的损失函数？
<ul>
<li>论文有使用辅助分类器，没说辅助分类器如何贡献损失，GoogleNetv1中2个辅助分类器损失的0.3贡献到总的损失中，一般分类损失使交叉熵损失(CrossEntropyLoss)</li>
</ul>
</li>
<li>GoogleNetv3中，关于辅助分类器的作用？
<ul>
<li>GoogleNetv1的训练辅助分类器 最初设计的目的是为了是梯度能往更深层进行传递，改善收敛速度</li>
<li>GoogleNetv3发现辅助分类器在训练初期并没有导致收敛性的提高，但是在训练接近尾声时，有辅助分类器的网络开始超越没有任何分支的网络的准确率，达到了更高的稳定性水平</li>
<li>GoogleNetv3认为辅助分类词起到了正则化(regularization)的作用。如果侧分支是批量规格化的或者具有丢失层，则网络的主分类器执行得更好，这一事实支持了这一点</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogleNetv2：Batch Normalization：Accelerating Deep Network Training by Reducing Internal Covariate Shift</title>
    <url>/2017/11/02/GoogleNetv2%EF%BC%9ABatch%20Normalization%EF%BC%9AAccelerating%20Deep%20Network%20Training%20by%20Reducing%20Internal%20Covariate%20Shift/</url>
    <content><![CDATA[<p>在GoogleNetv1的基础上修改Inception block得到，并且引入历史性的BN层，使得网络训练的调参更简单</p>
<a id="more"></a>
<ul>
<li>
<p>什么是GoogleNetv2？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv2-20230408140246.png" alt="GoogleNetv2-20230408140246" /></li>
<li>又名Inceptionv2，主要是在GoogleNetv1网络基础上，加入批规范化(Batch Normalization,BN)</li>
<li>BN的加入，使得神经网络的训练不再小心翼翼设计学习率、初始化、dropout等</li>
</ul>
</li>
<li>
<p>GoogleNetv2的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv2-20230408140246-1.png" alt="" /></li>
<li>在GoogleNetv1网络中加入批规范化(Batch Normalization,BN) ，并将Inception block 的5x5卷积改为2个3x3卷积</li>
</ul>
</li>
<li>
<p>GoogleNetv2的Inception block？</p>
<ul>
<li>相比较GoogleNetv1的Inception block，将其中的5x5卷积改为2个3x3卷积</li>
</ul>
</li>
<li>
<p>GoogleNetv2的损失函数？</p>
<ul>
<li>论文没有说使用辅助分类器，一般分类损失使用交叉熵损失(CrossEntropyLoss)</li>
</ul>
</li>
<li>
<p>什么是内部协变量偏移(Internal Covariate Shift,ICS)?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv2-20230408140247.png" alt="" /></li>
<li>多层神经网络中，每一层的参数更新会导致上层的输入数据分布发生变化，通过层层叠加，高层的输入分布变化会非常剧烈，这就使得高层需要不断去重新适应底层的参数更新，这就是<strong>内部协变量偏移</strong></li>
<li>为了训好模型，以前神经网络训练前一般对输入数据进行白化操作(Whitening)，但是这操作只在输入层进行，后来需要非常谨慎地去设定学习率、初始化权重、以及尽可能细致的参数更新策略</li>
<li>批规范化(Batch Normalization,BN) 每层输入可以缓解该问题</li>
</ul>
</li>
<li>
<p>为什么内部协变量偏移导致模型训练困难？</p>
<ul>
<li><strong>数据分布不稳定：</strong> 多层神经网络中，每一层的参数更新会导致上层的输入数据分布发生变化，通过层层叠加，高层的输入分布变化会非常剧烈，这就使得高层需要不断去重新适应底层的参数更新</li>
<li><strong>神经元存在死亡：</strong> 如何不解决“内部协变量偏移”，神经网络的激活值<strong>整体分布逐渐往非线性函数的易饱和区域靠近</strong>，从而导致反向传播时低层神经网络的梯度消失（为0），这是训练深层神经网络时收敛较慢的本质原因</li>
<li>BN通过对输入数据进行规范化，每次都对激活值进行修正，确保层之间激活值的分布保持稳定来缓解该问题</li>
</ul>
</li>
<li>
<p>什么是白化操作(Whitening)?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv2-20230408140248.png" alt="" /></li>
<li>白化的目的是去除输入数据的冗余信息。假设训练数据是图像，由于图像中相邻像素之间具有很强的相关性，所以用于训练时输入是冗余的；白化的目的就是降低输入的冗余性</li>
<li>白化处理分PCA白化和ZCA白化，PCA白化保证数据各维度的方差为1，而ZCA白化保证数据各维度的方差相同。PCA白化可以用于降维也可以去相关性，而ZCA白化主要用于去相关性，且尽量使白化后的数据接近原始输入数据</li>
</ul>
</li>
<li>
<p>白化操作与BN的区别？</p>
<ul>
<li>白化操作(Whitening)是在数据的预处理阶段，就是输入模型之前处理，而BN是在模型中处理</li>
</ul>
</li>
<li>
<p>使用BN对学习率有什么影响？ ^fj6fbf</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv2-20230408140248-1.png" alt="GoogleNetv2-20230408140248-1" /></li>
<li><strong>学习率问题：</strong> 在传统的深度网络中，过高的学习率可能会导致梯度爆炸或消失，并陷入较差的局部极小值，BN引入后可以设计更大的学习率</li>
<li><strong>收敛速度：</strong> 通过比较各个曲线的收敛点，可知加了BN的实验，可以使用更大学习率，其收敛速度更快</li>
<li><strong>Sigmoid的饱和问题：</strong> 通过观察 BN-×5-Sigmoid ，加入BN后，Sigmoid 的饱和问题可以被消除</li>
</ul>
</li>
<li>
<p>使用BN对网络权重有什么影响？</p>
<ul>
<li><strong>初始化权重：</strong> 可以不用精心设计权值初始化</li>
<li><strong>权重L2衰减：</strong> 可以不用L2或者较小的权重衰减(weight decay)</li>
</ul>
</li>
<li>
<p>使用BN对Dropout有什么影响？</p>
<ul>
<li>BN可以实现了丢弃正则化(regularization)对模型正则化的作用，因此可以不用dropout或较小的丢弃正则化(Dropout)</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogLeNetv1：Going deeper with convolutions</title>
    <url>/2017/10/28/GoogLeNetv1%EF%BC%9AGoing%20deeper%20with%20convolutions/</url>
    <content><![CDATA[<p>从GoogleNetv1开始，神经网络设计由类似VGGNet 关注深度转向&quot;宽度&quot;</p>
<a id="more"></a>
<ul>
<li>
<p>什么是GoogleNetv1？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv1-20230408140235.png" alt="" /></li>
<li>GoogleNetv1中参考NIN网络，设计出多分支并行的模块Inception block</li>
<li>从GoogleNetv1开始，神经网络设计由类似VGGNet 关注深度转向”宽度“</li>
</ul>
</li>
<li>
<p>GoogleNetv1 的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv1-20230408140235-1.png" alt="" /></li>
<li>GoogleNetv1对网络的宽度进行了扩展，整个网络由3+3+3总共九个inception模块组成的，每个Inception有两层，加上开头的3个卷积层和输出前的FC层，总共22层</li>
<li>像NIN一样，网络使用全局池化(Global Pooling) 替代全连接层，作为分类层</li>
</ul>
</li>
<li>
<p>GoogleNetv1的Inception block模块？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv1-20230408140236.png" alt="" /></li>
<li>在Inception模块中，1×1、3×3、5×5卷积和3×3最大池化在输入端以并行方式执行，它们的输出堆叠在一起以生成最终输出</li>
<li><strong>原始版本：</strong> 使用 3 种滤波器进行卷积，外加最大池化</li>
<li><strong>降维版本：</strong> 考虑到神经网络训练耗时，在 3x3、5x5 前面使用 1x1 卷积核调整通道数</li>
</ul>
</li>
<li>
<p>GoogleNetv1的损失函数？</p>
<ul>
<li>GoogleNetv1有2个辅助损失及1个最终损失，其中辅助损失30%进行梯度更新，每个损失都是计算交叉熵损失(CrossEntropyLoss)</li>
</ul>
</li>
<li>
<p>GoogleNetv1的Inception block模块拼接特征的作用？</p>
<ul>
<li><strong>解释1：</strong> 在直观感觉上在多个尺度上同时进行卷积，能提取到不同尺度的特征。特征更为丰富也意味着最后分类判断时更加准确</li>
<li><strong>解释2：</strong> 利用稀疏矩阵分解成密集矩阵计算的原理来加快收敛速度。举个例子图4左侧稀疏矩阵和一个2x2的矩阵进行卷积，需要对稀疏矩阵中的每一个元素进行计算；如果像图4右图那样把稀疏矩阵分解成2个子密集矩阵，再和2x2矩阵进行卷积，稀疏矩阵中0较多的区域就可以不用计算，计算量就大大降低 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv1-20230408140237.png" alt="" /></li>
<li>解释3：赫比(Hebbian)原理 指出预先把相关性强的特征汇聚，就能起到加速收敛的作用</li>
</ul>
</li>
<li>
<p>GoogleNetv1的训练辅助分类器？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/GoogleNetv1-20230408140238.jpeg" alt="" /></li>
<li>由于网络的深度相对比较大，能够在所有层保证梯度能传播是一个问题。对此增加了2个辅助分类器，在训练期间辅助分类器的权重为0.3，在预测时，这些层会被丢弃，<strong>这些层有助于解决梯度消失问题并提供正则化</strong></li>
</ul>
</li>
<li>
<p>GoogleNetv1如何应用在目标检测任务？</p>
<ul>
<li>通过MultiBox和选择性搜索(SelectiveSearch,SS)方法得到一系列的候选框，将这些候选框输入到GoogLeNet神经网络中进行分类，得到最终的结果</li>
</ul>
</li>
<li>
<p>Inception 系列网络结构?</p>
<ul>
<li>在Inception出现之前，大部分CNN仅仅是把卷积层堆叠得越来越多，使网络越来越深，以此希望能够得到更好的性能。而Inception则是从网络的堆叠结构出发，提出了<strong>多条并行分支结构</strong>的思想，后续一系列的多分支网络结构均从此而来</li>
<li>目前Inception系列具体网络结构包括：Inceptionv1、 Inceptionv2、 Inceptionv3、 Inceptionv4、 Xception</li>
</ul>
</li>
<li>
<p>什么是赫比(Hebbian)原理?</p>
<ul>
<li>赫布认为“两个神经元或者神经元系统，如果总是同时兴奋，就会形成一种‘组合’，其中一个神经元的兴奋会促进另一个的兴奋”。比如狗看到肉会流口水，反复刺激后，脑中识别肉的神经元会和掌管唾液分泌的神经元会相互促进，“缠绕”在一起，以后再看到肉就会更快流出口水</li>
<li>用在Inception block中就是要把相关性强的特征汇聚到一起，把1x1，3x3，5x5的特征分开。因为训练收敛的最终目的就是要提取出独立的特征，所以预先把相关性强的特征汇聚，就能起到加速收敛的作用</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>VGG：Very Deep Convolutional Networks for Large-Scale Image Recognition</title>
    <url>/2017/10/16/VGG%EF%BC%9AVery%20Deep%20Convolutional%20Networks%20for%20Large-Scale%20Image%20Recognition/</url>
    <content><![CDATA[<p>VGGNet探索了卷积神经网络的深度与其性能之间的关系，成功地构筑了16~19层深的卷积神经网络，证明了增加网络的深度能够在一定程度上影响网络最终的性能，使错误率大幅下降，同时拓展性又很强，迁移到其它图片数据上的泛化性也非常好</p>
<a id="more"></a>
<ul>
<li>什么是 VGGNet？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141147.png" alt="" /></li>
<li>VGGNet探索了卷积神经网络的深度与其性能之间的关系，成功地构筑了16~19层深的卷积神经网络，证明了增加网络的深度能够在一定程度上影响网络最终的性能，使错误率大幅下降，同时拓展性又很强，迁移到其它图片数据上的泛化性也非常好</li>
<li>VGGNet 使用多个小卷积 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 替代一个大的卷积核，在减少参数的同时，增加模型容量</li>
</ul>
</li>
<li>VGGNet<strong>网络结构？</strong>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141148.png" alt="VGG-20230408141148" /></li>
<li>VGGNet模仿AlexNet的网络结构，使用&quot;卷积+激活+池化&quot;的方式提取特征， 从头到尾全部使用的是3x3的卷积核和2x2的池化核 ，按照VGGNet的基本块 堆叠</li>
<li>VGG16包含了16个隐藏层（13个卷积层+3个全连接层），如图中的D列所示</li>
<li>VGG19包含了19个隐藏层（16个卷积层+3个全连接层），如图中的E列所示</li>
</ul>
</li>
<li>VGGNet的基本块是怎么样的？
<ul>
<li>一个 VGGNet块由一系列&quot;卷积+激活+最大池化&quot;组成，使用3×3、填充为 1 的卷积核（保持高度和宽度）和 2×2步长为 2 的最大池化（每个块后的分辨率减半）  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vgg_block</span>(<span class="params">num_convs, in_channels, out_channels</span>):</span></span><br><span class="line">    layers = []</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(num_convs):</span><br><span class="line">        layers.append(nn.Conv2d(in_channels, out_channels, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>))</span><br><span class="line">        layers.append(nn.ReLU())</span><br><span class="line">        in_channels = out_channels</span><br><span class="line">    layers.append(nn.MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> nn.Sequential(*layers) </span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>VGGNet的损失函数？
<ul>
<li>VGGNet最后输出1000类的分类问题，并使用softmax激活函数，计算损失使用负对数似然损失 计算</li>
</ul>
</li>
<li>VGGNet为什么使用小卷积核替代大卷积核?
<ul>
<li>图片的A、B采用相似的网络结构，但是B使用小卷积核，而A使用大卷积核，可以看出：多个小卷积核比单个大核性能好<br />
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141149.png" alt="VGG-20230408141149" /></li>
<li>就感受野 (receptive field) 而言，2 个 3x3 的卷积等价 1 个 5x5 卷积，3 个 3x3 的卷积等价 1 个 7x7 的卷积 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141150.png" alt="" /></li>
<li>除了感受野和参数问题外，ZFNet有实验证明前期大卷积核导致卷积神经网络的aliasing现象 ，进而导致网络学习能力变差</li>
</ul>
</li>
<li>VGGNet中，如何将全连接转为卷积的？
<ul>
<li>在网络测试阶段将训练阶段的三个全连接替换为三个卷积，使得测试得到的全卷积网络因为没有全连接的限制，因而可以接收任意宽或高为的输入</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141150-1.png" alt="" /></li>
<li>例如上图7x7x512的层要跟4096个神经元的层做全连接，则替换为对7x7x512的层作通道数为4096、卷积核为1x1的卷积</li>
<li>“全连接转卷积”的思路是 VGG 作者参考了 OverFeat的工作思路</li>
<li>经过上面转换，参数量是对等的，但是卷积核的数量大大，实际不使用</li>
</ul>
</li>
<li>VGGNet中，随着深度增加，神经网络有什么变化？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141151.png" alt="VGG-20230408141151" /></li>
<li>从11层的A到19层的E，无论是单尺度还是多尺度，随着网络深度增加，网络的top1和top5的<strong>错误率下降很明显</strong></li>
</ul>
</li>
<li>VGGNet实验证明LRN对提升网络性能是否有作用?
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141151-1.png" alt="VGG-20230408141151-1" /></li>
<li>上图A-LRN相比较A，没有性能提升，说明AlexNet 使用的LRN 没有带来性能提升</li>
</ul>
</li>
<li>VGGNet和AlexNet在网络结构上有什么差异？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/VGG-20230408141152.png" alt="" /></li>
<li>VGGNet模仿AlexNet的网络结构，使用&quot;卷积+激活+池化&quot;的方式提取特征</li>
<li>VGGNet卷积全部使用3x3的小卷积核，而不是AlexNet的7x7大卷积核</li>
<li>VGGNet池化全部使用2x2的池化核 ，而不是AlexNet的3x3</li>
</ul>
</li>
<li>VGGNet如何做多尺度训练?
<ul>
<li>将原始图像缩放到不同尺寸S，然后再随机裁切224′224的图片，这样能增加很多数据量，对于防止模型过拟合有很不错的效果</li>
<li>方法1：单尺度，固定S，取S=256和S=384，384的网络根据256训练的参数作为初始化参数，利用更小的学习率来更新参数</li>
<li>方法2：多尺度训练，S 的取值范围为[256,512]，随机采样 S 来单独地重新缩放每个训练图像（类似于缩放），在384网络参数的基础上继续进行训练</li>
<li>权重初始化规则：作者定义了不同深度的网络结构，对于最浅深度的网络结构，作者采用随机初始化（作者设置的深度认为是足够浅，浅到利用随机初始化也可以得到不错的结果。）对于更深一级的网络，原有的层级参数使用已经训练好的，新增的网络参数继续使用随机初始化</li>
</ul>
</li>
<li>VGGNet如何做多尺度预测?
<ul>
<li><strong>单尺度图像的测试</strong>：如果训练图像是单尺度，那么将测试图像的大小变成训练图像的尺度。如果训练图像是多尺度，那么测试图像的大小取多尺度的最小值和最大值的平均值</li>
<li><strong>多尺度图像的测试：</strong> VGG借鉴OverFeat的训练与测试过程 ，根据训练时的输入尺度，选择三个不同的测试图像尺度，对于多尺度训练的，测试尺度选择训练尺度的最小值，最大值，平均值），由于输入图像的不同，最后得到的概率图的空间分辨率不同（<strong>取决于输入图像的大小，如果尺寸按照训练时输入，输出是1x1x1000，大于训练尺寸则使出nxnx1000</strong>） ，所以利用平均池化得到固定的特征向量。此时得到每个尺度图像的概率向量。测试图像还可以进行翻转，将得到的未反转的和反转之后的结果进行平均得到最后的结果。（未反转和反转的各包含3个尺度，然后6个概率向量求平均值）</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>OverFeat：Integrated Recognition, Localization and Detection using Convolutional Networks</title>
    <url>/2017/10/09/OverFeat%EF%BC%9AIntegrated%20Recognition,%20Localization%20and%20Detection%20using%20Convolutional%20Networks/</url>
    <content><![CDATA[<p>OverFeat是CNN用来进行目标检测的早期工作，主要思想是采用多尺度滑动窗口来做分类、定位和检测，虽然是多个任务，但重用了模型前面几层，这种模型重用的思路也是后来R-CNN系列不断沿用和改进的经典做法</p>
<a id="more"></a>
<ul>
<li>
<p>什么是 OverFeat ？</p>
<ul>
<li>OverFeat 早期经典的 one-stage Object Detection 的方法，基于 AlexNet，<strong>实现了识别、定位、检测共用同一个网络框架</strong></li>
<li>主要创新点是： <strong>multiscale 、sliding window、offset pooling，以及基于 AlexNet 的识别、定位和检测方法的融合</strong></li>
</ul>
</li>
<li>
<p>OverFeat的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140651.png" alt="OverFeat-20230408140651" /></li>
<li>基本上和AlexNet一样，也使用了ReLU激活，最大池化。不同之处在于：(1)没有使用LRN;(2) 没有采用重叠池化（Overlapping Pooling） ;(3) 在第一层卷积层，stride设置2，AlexNet选择的stride是4</li>
<li>在训练阶段采用与AlexNet相同的训练方式，然而在测试阶段可是差别很大，overfeat就是把采用FCN的思想把全连接层看成了卷积层，让我们在网络测试阶段可以输入任意大小的图片</li>
</ul>
</li>
<li>
<p>OverFeat 如何使用多尺度 (<strong>multiscale</strong> )？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140652.png" alt="OverFeat-20230408140652" /></li>
<li><strong>训练阶段</strong>：OverFeat 和 AlexNet 的思路一样，随机裁剪出224x224大小的图片，作为CNN的输入进行训练</li>
<li><strong>测试阶段</strong>：OverFeat 没有采用 AlexNet 的 torchvision. transforms. TenCrop 方法，而是直接采用了六种不同尺度的测试图像输入（每个尺度的图像还增加了水平翻转），结合全卷积网络结构，最终输出的维度是不同的</li>
</ul>
</li>
<li>
<p>OverFeat如何使用滑动窗口(<strong>sliding window</strong>)？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140653.png" alt="OverFeat-20230408140653" /></li>
<li>在此之前，很多滑动窗口技术都是为每个窗口重复进行所有的计算，这对计算资源的消耗是巨大的。而 OverFeat 通过<strong>将全连接层改造成卷积层</strong>的方式，使得相同区域的计算结果可以共享</li>
<li>图片尺寸是16 x16时，有4个滑动窗口需要进行重复计算。OverFeat 采用了卷积计算共享的方式，虽然计算结果是一个滑动窗口的4倍，但是计算过程只增加了图中黄色区域。在训练期间，ConvNet 仅生成单个空间输出（顶部）。但是当在测试时在较大的图像上应用时，它产生空间输出图，例如， 2 x2（下）。由于所有层都是卷积应用的，因此较大图像所需的额外计算仅限于黄色区域</li>
</ul>
</li>
<li>
<p>OverFeat如何使用偏差池化(<strong>offset pooling</strong> )？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140654.png" alt="OverFeat-20230408140654" /></li>
<li>在特征提取最后一层（conv 5）直接做 max pooling，将导致最终输入图像的检测粒度不足，所以增加了 offset pooling 的操作</li>
<li>上图 (a)表示 conv 5 后准备下采样的 20 个像素；（b）表示使用 non-overlapping 的 3 像素一组的最大下采样，得到 3 组结果，即二维图像得到 3 x 3 组；©表示（b）的最大下采样结果，经过 5 x 5 卷积后，得到 2 x 2 的结果 (d)；最后整合这三种 offeset 方式得到的每个类的预测结果</li>
<li>在实际的二维图像处理中，上述这个操作会对重复6x2也就是12次，其中6代表6个scale</li>
</ul>
</li>
<li>
<p>OverFeat 进行目标检测的步骤？</p>
<ul>
<li>（1）利用滑动窗口进行不同尺度的区域提名，然后利用 CNN 模型对每个区域进行分类，得到类别和置信度<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140655.png" alt="OverFeat-20230408140655" /></li>
<li>（2）利用多尺度滑动窗口来增加检测数量，提升分类效果<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140656.png" alt="OverFeat-20230408140656" /></li>
<li>（3）用回归模型预测每个对象的位置，放大比例较大的图片，边框数量也较多<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140656-1.png" alt="OverFeat-20230408140656-1" /></li>
<li>（4）边框合并<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/OverFeat-20230408140656-2.png" alt="OverFeat-20230408140656-2" /></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>SqueezeNet：AlexNet-level accuracy with 50x fewer parameters and 0.5MB model size</title>
    <url>/2017/09/28/SqueezeNet%EF%BC%9AAlexNet-level%20accuracy%20with%2050x%20fewer%20parameters%20and%200.5MB%20model%20size/</url>
    <content><![CDATA[<p>对AlexNet网络轻量化设计，主要有3个原则：1）使用1x1卷积替代3x3卷积；2）3x3卷积前先通过1x1卷积降低通道数；3)延迟下采样</p>
<a id="more"></a>
<ul>
<li>什么是SqueezeNet？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SqueezeNet-20230408141138.png" alt="SqueezeNet-20230408141138" /></li>
<li>SqueezeNet是一个<strong>轻量化的分类模型</strong>，可以在保证模型精度不降低的前提下，参数量相比 AlexNet少了50倍，运行速度更快</li>
<li>SqueezeNet基于3个原则设计轻量化网络：1)大量使用1x1卷积核替换 3x3卷积核；2)减少3x3卷积核的输入通道数；3)延迟下采样</li>
</ul>
</li>
<li>SqueezeNet的设计策略？
<ul>
<li><strong>1）大量使用1x1卷积核替换 3x3卷积核：</strong> 从 AlexNet 到 ResNet均使用3x3的卷积，此处部分3x3采用1x1替代，参数可以降低9倍</li>
<li><strong>2）减少3x3卷积核的输入通道数：</strong> 减少卷积核的参数</li>
<li><strong>3）延迟下采样：</strong> 使得卷积层具有更大的激活图</li>
</ul>
</li>
<li>SqueezeNet的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SqueezeNet-20230408141139.png" alt="SqueezeNet-20230408141139" /></li>
<li>上图是 SqueezeNet 的3个版本，原始版本、跳跃连接和瓶颈模块。每个版本一共包含了8Fire moudle，其中在第3和第5个 fire module 使用了3x3的最大池化，对应池化层的 stride 都为2 x2</li>
<li>延迟池化的策略，可以保留较大的Feature Map，提升网络的精度</li>
</ul>
</li>
<li>SqueezeNet的Fire module？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/SqueezeNet-20230408141138.png" alt="SqueezeNet-20230408141138" /></li>
<li><strong>squeeze</strong>：采用 1 x1 卷积核对上一层 feature map 进行卷积，其主要目的是降低 feature map 的通道数</li>
<li><strong>expand</strong>：使用 Inception block结构，包括1x1 和3x3卷积，然后拼接</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
        <tag>轻量</tag>
      </tags>
  </entry>
  <entry>
    <title>Gluon学习03-基础数据类型Ndarray</title>
    <url>/2017/09/23/Gluon%E5%AD%A6%E4%B9%A003-%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BNdarray/</url>
    <content><![CDATA[<p>本文介绍如何Gluon的基本数据类型Ndarray</p>
<a id="more"></a>
<p>本机环境介绍:</p>
<blockquote>
<p>系统:Linuxmint<br>
Python版本:Python3</p>
</blockquote>
<hr>
<h1 id="1api介绍"><a class="markdownIt-Anchor" href="#1api介绍"></a> 1.API介绍</h1>
<p>MxNet版本:1.2.0<br>
API地址:<a href="https://mxnet.incubator.apache.org/api/python/ndarray/ndarray.html">https://mxnet.incubator.apache.org/api/python/ndarray/ndarray.html</a></p>
<p>Ndarray在CPU/GPU上提供必要的张量操作,是一个多维的,固定大小的,同类型的矩阵.mxnet.ndarray与numpy.ndarray非常相似.</p>
<p><strong>The NDArray class:</strong><br>
1.属性<br>
shape/size/ndim/context/dtype</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mxnet <span class="keyword">as</span> mx</span><br><span class="line"><span class="keyword">from</span> mxnet <span class="keyword">import</span> nd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#数据的形状</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.shape</span><br><span class="line">(<span class="number">4L</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = mx.nd.zeros((<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y.shape</span><br><span class="line">(<span class="number">2L</span>, <span class="number">3L</span>, <span class="number">4L</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据的多少</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.zeros((<span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.size</span><br><span class="line"><span class="number">30</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.prod(x.shape)</span><br><span class="line"><span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据的阶/秩</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ndim</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ndim</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据所在的设备</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.context</span><br><span class="line">cpu(<span class="number">0</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(x.context)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = mx.nd.zeros((<span class="number">2</span>,<span class="number">3</span>), mx.gpu(<span class="number">0</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y.context</span><br><span class="line">gpu(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据的类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.zeros((<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.dtype</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = mx.nd.zeros((<span class="number">2</span>,<span class="number">3</span>), dtype=<span class="string">'int32'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y.dtype</span><br></pre></td></tr></table></figure>
<p>2.转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#转为标量,形状必须是(1,)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.ones((<span class="number">1</span>,), dtype=<span class="string">'int32'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.asscalar()</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(x.asscalar())</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.ones((<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = x.copy()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y.asnumpy()</span><br><span class="line">array([[ <span class="number">1.</span>,  <span class="number">1.</span>,  <span class="number">1.</span>],</span><br><span class="line">       [ <span class="number">1.</span>,  <span class="number">1.</span>,  <span class="number">1.</span>]], dtype=float32)</span><br></pre></td></tr></table></figure>
<p>3.创建</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#通过自身API创建</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=nd.arange((<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">0.</span> <span class="number">1.</span> <span class="number">2.</span> <span class="number">3.</span> <span class="number">4.</span> <span class="number">5.</span> <span class="number">6.</span> <span class="number">7.</span> <span class="number">8.</span> <span class="number">9.</span>]</span><br><span class="line">&lt;NDArray <span class="number">10</span> @cpu(<span class="number">0</span>)&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=nd.zeros((<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[[<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>]</span><br><span class="line"> [<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>]]</span><br><span class="line">&lt;NDArray 2x3 @cpu(<span class="number">0</span>)&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c=nd.ones((<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c</span><br><span class="line">[[[<span class="number">1.</span>]</span><br><span class="line">  [<span class="number">1.</span>]</span><br><span class="line">  [<span class="number">1.</span>]]</span><br><span class="line"> [[<span class="number">1.</span>]</span><br><span class="line">  [<span class="number">1.</span>]</span><br><span class="line">  [<span class="number">1.</span>]]]</span><br><span class="line">&lt;NDArray 2x3x1 @cpu(<span class="number">0</span>)&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过list创建</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d=[<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e=nd.array(d)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e</span><br><span class="line">[<span class="number">6.</span> <span class="number">5.</span> <span class="number">4.</span> <span class="number">3.</span> <span class="number">2.</span> <span class="number">1.</span>]</span><br><span class="line">&lt;NDArray <span class="number">6</span> @cpu(<span class="number">0</span>)&gt;</span><br></pre></td></tr></table></figure>
<p>4.形状</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#转置</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.arange(<span class="number">0</span>,<span class="number">6</span>).reshape((<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.asnumpy()</span><br><span class="line">array([[ <span class="number">0.</span>,  <span class="number">1.</span>,  <span class="number">2.</span>],</span><br><span class="line">       [ <span class="number">3.</span>,  <span class="number">4.</span>,  <span class="number">5.</span>]], dtype=float32)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.T.asnumpy()</span><br><span class="line">array([[ <span class="number">0.</span>,  <span class="number">3.</span>],</span><br><span class="line">       [ <span class="number">1.</span>,  <span class="number">4.</span>],</span><br><span class="line">       [ <span class="number">2.</span>,  <span class="number">5.</span>]], dtype=float32)</span><br><span class="line">	   </span><br><span class="line"><span class="comment">#改变形状</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = mx.nd.arange(<span class="number">0</span>,<span class="number">6</span>).reshape(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">[[<span class="number">0.</span> <span class="number">1.</span> <span class="number">2.</span>]</span><br><span class="line"> [<span class="number">3.</span> <span class="number">4.</span> <span class="number">5.</span>]]</span><br><span class="line">&lt;NDArray 2x3 @cpu(<span class="number">0</span>)&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = x.reshape(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line">[[<span class="number">0.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">2.</span> <span class="number">3.</span>]</span><br><span class="line"> [<span class="number">4.</span> <span class="number">5.</span>]]</span><br><span class="line">&lt;NDArray 3x2 @cpu(<span class="number">0</span>)&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#列多少不管,就明确是n行,列= (x.size/n)上整</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = x.reshape(<span class="number">2</span>,-<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line">[[<span class="number">0.</span> <span class="number">1.</span> <span class="number">2.</span>]</span><br><span class="line"> [<span class="number">3.</span> <span class="number">4.</span> <span class="number">5.</span>]]</span><br><span class="line">&lt;NDArray 2x3 @cpu(<span class="number">0</span>)&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#只要一行</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = x.reshape(-<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line">[<span class="number">0.</span> <span class="number">1.</span> <span class="number">2.</span> <span class="number">3.</span> <span class="number">4.</span> <span class="number">5.</span>]</span><br><span class="line">&lt;NDArray <span class="number">6</span> @cpu(<span class="number">0</span>)&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>5.元素扩展</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#拼接,输入数组的唯独应该相同</span></span><br><span class="line">x = [[<span class="number">1</span>,<span class="number">1</span>],[<span class="number">2</span>,<span class="number">2</span>]]</span><br><span class="line">y = [[<span class="number">3</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">5</span>]]</span><br><span class="line">z = [[<span class="number">6</span>,<span class="number">6</span>], [<span class="number">7</span>,<span class="number">7</span>],[<span class="number">8</span>,<span class="number">8</span>]]</span><br><span class="line">concat(x,y,z,dim=<span class="number">0</span>) = [[ <span class="number">1.</span>,  <span class="number">1.</span>],</span><br><span class="line">                       [ <span class="number">2.</span>,  <span class="number">2.</span>],</span><br><span class="line">                       [ <span class="number">3.</span>,  <span class="number">3.</span>],</span><br><span class="line">                       [ <span class="number">4.</span>,  <span class="number">4.</span>],</span><br><span class="line">                       [ <span class="number">5.</span>,  <span class="number">5.</span>],</span><br><span class="line">                       [ <span class="number">6.</span>,  <span class="number">6.</span>],</span><br><span class="line">                       [ <span class="number">7.</span>,  <span class="number">7.</span>],</span><br><span class="line">                       [ <span class="number">8.</span>,  <span class="number">8.</span>]]</span><br></pre></td></tr></table></figure>
<p><strong>参考:</strong><br>
<a href="https://mxnet.incubator.apache.org/api/python/ndarray/ndarray.html">NDArray API</a></p>
<p><font color="red">每日一学,争取进步03</font></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Gluon</tag>
      </tags>
  </entry>
  <entry>
    <title>Numpy中数据的常用的保存与读取方法</title>
    <url>/2017/09/23/Numpy%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BF%9D%E5%AD%98%E4%B8%8E%E8%AF%BB%E5%8F%96%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>在经常性读取大量的数值文件时(比如深度学习训练数据),可以考虑现将数据存储为Numpy格式,然后直接使用Numpy去读取,速度相比为转化前快很多.</p>
<p>下面就常用的保存数据到二进制文件和保存数据到文本文件进行介绍:</p>
<a id="more"></a>
<h1 id="保存为二进制文件npynpz"><a class="markdownIt-Anchor" href="#保存为二进制文件npynpz"></a> 保存为二进制文件(.npy/.npz)</h1>
<h2 id="numpysave"><a class="markdownIt-Anchor" href="#numpysave"></a> <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.save.html#numpy.save">numpy.save</a></h2>
<p>保存一个数组到一个二进制的文件中,保存格式是<code>.npy</code></p>
<p><strong>参数介绍</strong><br>
numpy.save(file, arr, allow_pickle=True, fix_imports=True)</p>
<blockquote>
<p>file:文件名/文件路径<br>
arr:要存储的数组<br>
allow_pickle:布尔值,允许使用Python pickles保存对象数组(可选参数,默认即可)<br>
fix_imports:为了方便Pyhton2中读取Python3保存的数据(可选参数,默认即可)</p>
</blockquote>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#生成数据</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据保存</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.save(<span class="string">'save_x'</span>,x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取保存的数据</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.load(<span class="string">'save_x.npy'</span>)</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></table></figure>
<h2 id="numpysavez"><a class="markdownIt-Anchor" href="#numpysavez"></a> <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.savez.html#numpy.savez">numpy.savez</a></h2>
<p>这个同样是保存数组到一个二进制的文件中,但是厉害的是,它可以保存多个数组到同一个文件中,保存格式是<code>.npz</code>,它其实就是多个前面np.save的保存的<code>npy</code>,再通过打包(未压缩) 的方式把这些文件归到一个文件上,不行你去解压<code>npz</code>文件就知道了,里面是就是自己保存的多个<code>npy</code>.</p>
<p><strong>参数介绍</strong><br>
numpy.savez(file, *args, **kwds)</p>
<blockquote>
<p>file:文件名/文件路径<br>
*args:要存储的数组,可以写多个,如果没有给数组指定Key,Numpy将默认从’arr_0’,'arr_1’的方式命名<br>
kwds:(可选参数,默认即可)</p>
</blockquote>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#生成数据</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y=np.sin(x)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y</span><br><span class="line">array([ <span class="number">0.</span>        ,  <span class="number">0.84147098</span>,  <span class="number">0.90929743</span>,  <span class="number">0.14112001</span>, -<span class="number">0.7568025</span> ,</span><br><span class="line">       -<span class="number">0.95892427</span>, -<span class="number">0.2794155</span> ,  <span class="number">0.6569866</span> ,  <span class="number">0.98935825</span>,  <span class="number">0.41211849</span>])</span><br><span class="line">	   </span><br><span class="line"><span class="comment">#数据保存</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.save(<span class="string">'save_xy'</span>,x,y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取保存的数据</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>npzfile=np.load(<span class="string">'save_xy.npz'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>npzfile  <span class="comment">#是一个对象,无法读取</span></span><br><span class="line">&lt;numpy.lib.npyio.NpzFile <span class="built_in">object</span> at <span class="number">0x7f63ce4c8860</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照组数默认的key进行访问</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>npzfile[<span class="string">'arr_0'</span>]</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>npzfile[<span class="string">'arr_1'</span>]</span><br><span class="line">array([ <span class="number">0.</span>        ,  <span class="number">0.84147098</span>,  <span class="number">0.90929743</span>,  <span class="number">0.14112001</span>, -<span class="number">0.7568025</span> ,</span><br><span class="line">       -<span class="number">0.95892427</span>, -<span class="number">0.2794155</span> ,  <span class="number">0.6569866</span> ,  <span class="number">0.98935825</span>,  <span class="number">0.41211849</span>])</span><br></pre></td></tr></table></figure>
<p>更加神奇的是,你可以不适用Numpy默认给数组的Key,而是自己给数组有意义的Key,这样就可以不用去猜测自己加载数据是否是自己需要的.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数据保存</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.savez(<span class="string">'newsave_xy'</span>,x=x,y=y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取保存的数据</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>npzfile=np.load(<span class="string">'newsave_xy.npz'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照保存时设定组数key进行访问</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>npzfile[<span class="string">'x'</span>]</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>npzfile[<span class="string">'y'</span>]</span><br><span class="line">array([ <span class="number">0.</span>        ,  <span class="number">0.84147098</span>,  <span class="number">0.90929743</span>,  <span class="number">0.14112001</span>, -<span class="number">0.7568025</span> ,</span><br><span class="line">       -<span class="number">0.95892427</span>, -<span class="number">0.2794155</span> ,  <span class="number">0.6569866</span> ,  <span class="number">0.98935825</span>,  <span class="number">0.41211849</span>])</span><br></pre></td></tr></table></figure>
<p>简直不能太爽,深度学习中,有时候你保存了训练集,验证集,测试集,还包括他们的标签,用这个方式存储起来,要啥加载啥,文件数量大大减少,也不会到处改文件名去.</p>
<h2 id="numpysavez_compressed"><a class="markdownIt-Anchor" href="#numpysavez_compressed"></a> <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.savez_compressed.html#numpy.savez_compressed">numpy.savez_compressed</a></h2>
<p>这个就是在前面numpy.savez的基础上加了压缩,前面我介绍时尤其注明numpy.savez是得到的文件打包,不压缩的.这个文件就是对文件进行打包时使用了压缩,可以理解为压缩前各<code>npy</code>的文件大小不变,使用该函数比前面的numpy.savez得到的<code>npz</code>文件更小.</p>
<p><mark>注:函数所需参数和numpy.savez一致,用法完成一样.</mark></p>
<h1 id="保存到文本文件"><a class="markdownIt-Anchor" href="#保存到文本文件"></a> 保存到文本文件</h1>
<h2 id="numpysavetxt"><a class="markdownIt-Anchor" href="#numpysavetxt"></a> <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html#numpy.savetxt">numpy.savetxt</a></h2>
<p>保存数组到文本文件上,可以直接打开查看文件里面的内容.</p>
<p><strong>参数介绍</strong><br>
numpy.savetxt(fname, X, fmt=‘%.18e’, delimiter=’ ‘, newline=’\n’, header=‘’, footer=‘’, comments='# ', encoding=None)</p>
<blockquote>
<p>fname:文件名/文件路径,如果文件后缀是<code>.gz</code>,文件将被自动保存为<code>.gzip</code>格式,np.loadtxt可以识别该格式<br>
X:要存储的1D或2D数组<br>
fmt:控制数据存储的格式<br>
delimiter:数据列之间的分隔符<br>
newline:数据行之间的分隔符<br>
header:文件头步写入的字符串<br>
footer:文件底部写入的字符串<br>
comments:文件头部或者尾部字符串的开头字符,默认是’#’<br>
encoding:使用默认参数</p>
</blockquote>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment">#生成数据</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = y = z = np.ones((<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([[<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>]])</span><br><span class="line">	   </span><br><span class="line"><span class="comment">#保存数据</span></span><br><span class="line">np.savetxt(<span class="string">'test.out'</span>, x)</span><br><span class="line">np.savetxt(<span class="string">'test1.out'</span>, x,fmt=<span class="string">'%1.4e'</span>)</span><br><span class="line">np.savetxt(<span class="string">'test2.out'</span>, x, delimiter=<span class="string">','</span>)</span><br><span class="line">np.savetxt(<span class="string">'test3.out'</span>, x,newline=<span class="string">'a'</span>)</span><br><span class="line">np.savetxt(<span class="string">'test4.out'</span>, x,delimiter=<span class="string">','</span>,newline=<span class="string">'a'</span>)</span><br><span class="line">np.savetxt(<span class="string">'test5.out'</span>, x,delimiter=<span class="string">','</span>,header=<span class="string">'abc'</span>)</span><br><span class="line">np.savetxt(<span class="string">'test6.out'</span>, x,delimiter=<span class="string">','</span>,footer=<span class="string">'abc'</span>)</span><br></pre></td></tr></table></figure>
<p>保存下来的文件都是友好的,可以直接打开看看有什么变化.</p>
<h2 id="numpyloadtxt"><a class="markdownIt-Anchor" href="#numpyloadtxt"></a> <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.loadtxt.html#numpy.loadtxt">numpy.loadtxt</a></h2>
<p>根据前面定制的保存格式,相应的加载数据的函数也得变化.</p>
<p><strong>参数介绍</strong><br>
numpy.loadtxt(fname, dtype=&lt;class ‘float’&gt;, comments=‘#’, delimiter=None, converters=None, skiprows=0, usecols=None, unpack=False, ndmin=0, encoding=‘bytes’)</p>
<blockquote>
<p>fname:文件名/文件路径,如果文件后缀是<code>.gz</code>或<code>.bz2</code>,文件将被解压,然后再载入<br>
dtype:要读取的数据类型<br>
comments:文件头部或者尾部字符串的开头字符,用于识别头部,尾部字符串<br>
delimiter:划分读取上来值的字符串<br>
converters:数据行之间的分隔符<br>
…后面不常用的就不写了</p>
</blockquote>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.loadtxt(<span class="string">'test.out'</span>)</span><br><span class="line">np.loadtxt(<span class="string">'test2.out'</span>, delimiter=<span class="string">','</span>)</span><br></pre></td></tr></table></figure>
<p>参考资料:<br>
<a href="https://docs.scipy.org/doc/numpy/reference/routines.io.html">官方API-Routines</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Gluon学习02-使用GPU</title>
    <url>/2017/09/22/Gluon%E5%AD%A6%E4%B9%A002-%E4%BD%BF%E7%94%A8GPU/</url>
    <content><![CDATA[<p>本文介绍Mxnet如何使用GPU的过程</p>
<a id="more"></a>
<p>本机环境介绍:</p>
<blockquote>
<p>系统:Linuxmint<br>
Python版本:Python3</p>
</blockquote>
<h1 id="1安装cuda与cudnn"><a class="markdownIt-Anchor" href="#1安装cuda与cudnn"></a> 1.安装cuda与cudnn</h1>
<p><strong>(0)定义</strong></p>
<p>CUDA(Compute Unified Device Architecture)，是英伟达公司推出的一种基于新的并行编程模型和指令集架构的通用计算架构，它能利用英伟达GPU的并行计算引擎，比CPU更高效的解决许多复杂计算任务。</p>
<blockquote>
<p>摘自:<a href="https://blog.csdn.net/fangjin_kl/article/details/53906874">CPU、GPU、CUDA，CuDNN 简介</a></p>
</blockquote>
<p>cuDNN（CUDA Deep Neural Network library）：是NVIDIA打造的针对深度神经网络的加速库，是一个用于深层神经网络的GPU加速库。如果你要用GPU训练模型，cuDNN不是必须的，但是一般会采用这个加速库。</p>
<blockquote>
<p>摘自:<a href="https://blog.csdn.net/u014380165/article/details/77340765">GPU，CUDA，cuDNN的理解</a></p>
</blockquote>
<p><strong>(1)下载</strong></p>
<p>选择合适版本下载cuda:<br>
网址:<a href="https://developer.nvidia.com/cuda-downloads">https://developer.nvidia.com/cuda-downloads</a></p>
<p><img src="./.images/1613540535696.png" alt="选择合适版本"></p>
<p>配合前面的cuda版本,下载相应的cudnn:<br>
网址:<a href="https://developer.nvidia.com/rdp/cudnn-archive">https://developer.nvidia.com/rdp/cudnn-archive</a><br>
注:这里需要注册账号才可以下,有时收不到激活邮件,可以多试试不同放入邮箱,不行就出去一下.</p>
<p><strong>(2)安装</strong></p>
<p>下载完成以上两个文件后,首先安装cuda,使用以下命令安装:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i cuda-repo-ubuntu1604-9-0-local_9.0.176-1_amd64.deb</span><br><span class="line">sudo apt-key add /var/cuda-repo-9-0-local/7fa2af80.pub</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install cuda</span><br></pre></td></tr></table></figure>
<p>然后,解压cudnn,将相应文件拷贝的cuda的安装目录上,使用以下命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xvzf cudnn-8.0-linux-x64-v5.1-ga.tgz </span><br><span class="line">sudo cp cuda/include/cudnn.h /usr/<span class="built_in">local</span>/cuda/include</span><br><span class="line">sudo cp cuda/lib64/libcudnn* /usr/<span class="built_in">local</span>/cuda/lib64</span><br><span class="line">sudo chmod a+r /usr/<span class="built_in">local</span>/cuda/include/cudnn.h /usr/<span class="built_in">local</span>/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure>
<p><strong>(3)配置</strong></p>
<p>将cuda安装路径配置到系统路径下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">"<span class="variable">$LD_LIBRARY_PATH</span>:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"</span></span><br><span class="line"><span class="built_in">export</span> CUDA_HOME=/usr/<span class="built_in">local</span>/cuda</span><br></pre></td></tr></table></figure>
<p>根据自己环境将该信息添加到相应文件,我的是<code>~/.zshrc</code>,如果终端是bash,则是<code>~/.bashrc</code>.</p>
<h1 id="2安装mxnet-gpu"><a class="markdownIt-Anchor" href="#2安装mxnet-gpu"></a> 2.安装mxnet-gpu</h1>
<p><strong>(1)卸载以前安装的CPU版本的mxnet</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip uninstall mxnet</span><br></pre></td></tr></table></figure>
<p><strong>(2)安装mxnet-gpu</strong></p>
<p>根据前面安装的cuda 版本,安装相应的mxnet-gpu</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install --pre mxnet-cu75 <span class="comment"># CUDA 7.5</span></span><br><span class="line">pip install --pre mxnet-cu80 <span class="comment"># CUDA 8.0</span></span><br><span class="line">pip install --pre mxnet-cu90 <span class="comment"># CUDA 9.0</span></span><br></pre></td></tr></table></figure>
<p>注:如果安装过程过慢,可以更换pip的源,更换方法是可以看这篇博客<a href="https://blog.csdn.net/chenghuikai/article/details/55258957">更换pip源到国内镜像</a></p>
<p><strong>参考:</strong><br>
<a href="http://zh.gluon.ai/chapter_crashcourse/install.html">Gluon动手学深度学习</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Gluon</tag>
        <tag>cuda</tag>
      </tags>
  </entry>
  <entry>
    <title>分析LSTM中的神经元个数</title>
    <url>/2017/09/22/%E5%88%86%E6%9E%90LSTM%E4%B8%AD%E7%9A%84%E7%A5%9E%E7%BB%8F%E5%85%83%E4%B8%AA%E6%95%B0/</url>
    <content><![CDATA[<p>本文通过拆解LSTM，并通过统计几个模块的参数量来分析各个模块的原理</p>
<a id="more"></a>
<h2 id="1lstm简单介绍"><a class="markdownIt-Anchor" href="#1lstm简单介绍"></a> 1.LSTM简单介绍</h2>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082022151.png" alt="LSTM在时间上展开"></p>
<p>红框从左到右,依次是:<br>
<strong>忘记门层:</strong> 决定从细胞状态中丢弃什么信息,通过当前时刻输入和前一个时刻输出决定<br>
<strong>细胞状态:</strong>  确定并更新<code>新信息</code>到当前时刻的细胞状态中<br>
<strong>输出门层:</strong> 基于目前的细胞状态决定该时刻的输出</p>
<h2 id="2简单假设样例"><a class="markdownIt-Anchor" href="#2简单假设样例"></a> 2.简单假设样例</h2>
<p>假设现有一个样本,Shape=(13,5),时间步是13,每个时间步的特征长度是5.形象点,我把一个样本画了出来:</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>1</mn><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>1</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>1</mn><mn>5</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>2</mn><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>2</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>2</mn><mn>5</mn></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>13</mn><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>13</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>13</mn><mn>5</mn></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}
	  a_1^1 &amp; a_1^2 &amp; \cdots &amp; a_1^{5} \\
	  a_2^1 &amp; a_2^2 &amp; \cdots &amp; a_2^{5} \\
	  \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
	  a_{13}^1 &amp; a_{13}^2 &amp; \cdots &amp; a_{13}^{5} \\
  \end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.5799999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.3800000000000006em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>使用Keras框架添加LSTM层时,我的设置是这样的<code>keras.layers.LSTM(10)</code>,也就是我现在设定,<mark>每个时间</mark>步经过LSTM后,得到的中间隐向量是10维(意思是5-&gt;10维),13个时间步的数据进去得到的是(13*10)的数据.</p>
<p>每个时间步对应神经元个数(参数个数)一样.也就是算一个LSTM中神经元个数,算一个时间步中参与的神经元个数即可.下面将对LSTM每个计算部分进行神经元分析.</p>
<h2 id="3神经元分析"><a class="markdownIt-Anchor" href="#3神经元分析"></a> 3.神经元分析</h2>
<h3 id="31忘记门层"><a class="markdownIt-Anchor" href="#31忘记门层"></a> 3.1忘记门层</h3>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082022462.png" alt="忘记门层"></p>
<p>图中公式的<code>!$h_{t-1}$</code>是上一个状态的隐向量(已设定隐向量长度为10),<code>!$x_t$</code>为当前状态的输入(长度为5),那么<code>!$[h_{t-1},x_t]$</code>的长度就是10+5=15了.<code>!$W_f$</code>和<code>!$b_f$</code>为该层的参数.</p>
<p>该层输出是中间隐向量的长度(10),经过<code>!$\sigma$</code>激活前后的长度不变.只需要考虑<code>!$\sigma$</code>里面的操作得到10维特征即可.</p>
<p><code>!$[h_{t-1},x_t]$</code>是(1,15)的向量,与<code>!$W_f$</code>相乘得到(1,10)的向量,根据矩阵相乘规律,得到<code>!$W_f$</code>是(15,10)的矩阵,得到(1,10)矩阵后,与该门层偏置相加,偏置也应该有相同的形状,即<code>!$b_f$</code>是(1,10)的矩阵.</p>
<p>即:该层神经元为:</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mn>1</mn></msub><mo>=</mo><mn>15</mn><mo>×</mo><mn>10</mn><mo>+</mo><mn>10</mn><mo>=</mo><mn>160</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Neurons_{1} =15 \times 10 + 10 =160 \tag{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<h3 id="32细胞状态"><a class="markdownIt-Anchor" href="#32细胞状态"></a> 3.2细胞状态</h3>
<p>(1)确定更新信息过程</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082022141.png" alt="确定该时刻细胞要更新的内容"></p>
<p>可以看到,这里公式和前面的一样的,<code>!$\sigma$</code>和<code>!$\tanh$</code>都是激活函数,不影响参数个数.</p>
<p>同理这过程的神经元个数是:</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mn>2</mn></msub><mo>=</mo><mn>2</mn><mo>×</mo><mo stretchy="false">(</mo><mn>15</mn><mo>×</mo><mn>10</mn><mo>+</mo><mn>10</mn><mo stretchy="false">)</mo><mo>=</mo><mn>320</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Neurons_{2} =2 \times (15 \times 10 + 10) =320 \tag{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>(2)更新过程</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082024291.png" alt="1613540825378"></p>
<p>公式中的四个值,均是前面计算得到的结果,因此该过程没有参数需要学习.</p>
<h3 id="33输出层"><a class="markdownIt-Anchor" href="#33输出层"></a> 3.3输出层</h3>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082025386.png" alt="1613540825379"></p>
<p>一样的公式,神经元个数一样.即个数为:</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mn>3</mn></msub><mo>=</mo><mn>15</mn><mo>×</mo><mn>10</mn><mo>+</mo><mn>10</mn><mo>=</mo><mn>160</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Neurons_{3} =15 \times 10 + 10 =160 \tag{3}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p>
<h3 id="34总结"><a class="markdownIt-Anchor" href="#34总结"></a> 3.4总结</h3>
<p>把公式(1),(2),(3)的神经元加起来,就是该LSTM的神经元个数了.</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mrow><mi>a</mi><mi>l</mi><mi>l</mi></mrow></msub><mo>=</mo><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mn>1</mn></msub><mo>+</mo><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mn>2</mn></msub><mo>+</mo><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mn>3</mn></msub><mo>=</mo><mn>160</mn><mo>+</mo><mn>320</mn><mo>+</mo><mn>160</mn><mo>=</mo><mn>640</mn></mrow><annotation encoding="application/x-tex">Neurons_{all} =Neurons_{1}+Neurons_{2}+Neurons_{3}=160+320+160 =640 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">4</span><span class="mord">0</span></span></span></span></span></p>
<p>其实,我们可以把这个问题一般化,不看这个例子,<mark>假设你一个时间步的特征长度是n,经过该LSTM得到的长度是m #800028</mark>,这样就可以算出该LSTM层的神经元个数为:</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mi>e</mi><mi>u</mi><mi>r</mi><mi>o</mi><mi>n</mi><msub><mi>s</mi><mrow><mi>a</mi><mi>l</mi><mi>l</mi></mrow></msub><mo>=</mo><mn>4</mn><mo>×</mo><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo><mo>×</mo><mi>m</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">Neurons_{all} =4 \times {((n+m)\times m + m )}  
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></span></span></p>
<h2 id="4测试"><a class="markdownIt-Anchor" href="#4测试"></a> 4.测试</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> LSTM</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"></span><br><span class="line">time_step=<span class="number">13</span></span><br><span class="line">featrue=<span class="number">5</span></span><br><span class="line">hidenfeatrue=<span class="number">10</span></span><br><span class="line"></span><br><span class="line">model=Sequential()</span><br><span class="line">model.add( LSTM(hidenfeatrue,input_shape=(time_step,featrue)))</span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure>
<p>输出是:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">_________________________________________________________________________________</span><br><span class="line">Layer (<span class="built_in">type</span>)                 Output Shape              Param <span class="comment">#   </span></span><br><span class="line">=================================================================================</span><br><span class="line">lstm_8 (LSTM)                (<span class="literal">None</span>, <span class="number">10</span>)                <span class="number">640</span>       </span><br><span class="line">=================================================================================</span><br><span class="line">Total params: <span class="number">640</span></span><br><span class="line">Trainable params: <span class="number">640</span></span><br><span class="line">Non-trainable params: <span class="number">0</span></span><br><span class="line">_________________________________________________________________________________</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>参考:<br>
<a href="https://www.jianshu.com/p/9dc9f41f0b29">理解 LSTM 网络</a><br>
<a href="https://blog.csdn.net/roslei/article/details/61912618">推荐给初学LSTM或者懂个大概却不完全懂的人</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>LSTM</tag>
      </tags>
  </entry>
  <entry>
    <title>Gluon学习01-部署环境</title>
    <url>/2017/09/19/Gluon%E5%AD%A6%E4%B9%A001-%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>Gluon与Maxnet的关系就像Keras与Tensorflow的关系，本文介绍部署Gluon环境的整个过程</p>
<a id="more"></a>
<p>本机环境介绍:</p>
<blockquote>
<p>系统:Linuxmint<br>
Python版本:Python3</p>
</blockquote>
<h1 id="1下载并安装miniconda"><a class="markdownIt-Anchor" href="#1下载并安装miniconda"></a> 1.下载并安装Miniconda</h1>
<p><strong>(1)下载并安装</strong></p>
<p>网址:<a href="https://conda.io/miniconda.html">https://conda.io/miniconda.html</a></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082043135.png" alt="选择自己合适的版本"></p>
<p>Linux环境下,使用命令<code>chmod 755 xx.sh</code>给下载的.sh文件运行权限,然后运行该脚本.按提示安装完成后需要将安装路径配置到相应文件上,一般最后提示将路径写到相应文件,如果提示不对,自己手动添加到相应文件上.比如我终端是zsh,则在<code>~/.zshrc</code>最后添加了下面配置:</p>
<blockquote>
<p>#set Miniconda<br>
export PATH=/home/wu/miniconda3/bin:$PATH</p>
</blockquote>
<p>注:该配置包含了我的用户名<code>wu</code>,复制时需做相应修改.</p>
<p><strong>(2)使用国内源,加速包的安装</strong></p>
<p>使用命令为:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 优先使用清华 conda 镜像。</span></span><br><span class="line">conda config --prepend channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者选用科大 conda 镜像。</span></span><br><span class="line">conda config --prepend channels http://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br></pre></td></tr></table></figure>
<h1 id="2使用miniconda配置gluon环境"><a class="markdownIt-Anchor" href="#2使用miniconda配置gluon环境"></a> 2.使用Miniconda配置Gluon环境</h1>
<p><strong>(1)终端键入以下命令,下载相应的教程文件和配置文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir gluon-tutorials &amp;&amp; <span class="built_in">cd</span> gluon-tutorials</span><br><span class="line">curl https://zh.gluon.ai/gluon_tutorials_zh.tar.gz -o tutorials.tar.gz</span><br><span class="line">tar -xzvf tutorials.tar.gz &amp;&amp; rm tutorials.tar.gz</span><br></pre></td></tr></table></figure>
<p><strong>(2)配置环境</strong></p>
<p>进入下载的目录下,可以看到文件<code>environment.yml</code>,这里面包含了配置环境所需的所有库名称及版本号.打开一开,就是几个库而已.</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082043808.png" alt="所需环境"></p>
<p>使用以下命令来完成环境部署:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda env create -f environment.yml</span><br><span class="line"><span class="built_in">source</span> activate gluon</span><br></pre></td></tr></table></figure>
<h1 id="3测试"><a class="markdownIt-Anchor" href="#3测试"></a> 3.测试</h1>
<p>键入以下命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure>
<p>浏览器会自动打开一个页面,该页面上可用使用<code>cell(块)</code>的方式写代码,非常方便,关于Jupyter notebook的详细安装与配置,请参照  <a href="https://www.cnblogs.com/wushaogui/p/8797841.html">Jupyter开发环境搭建</a></p>
<h1 id="4使用国内服务器加速数据集下载"><a class="markdownIt-Anchor" href="#4使用国内服务器加速数据集下载"></a> 4.使用国内服务器,加速数据集下载</h1>
<p>训练模型时,如果需要在线下载数据,从国外下载数据非常慢,经常导致无法运行,可以更换为国内镜像来解决.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MXNET_GLUON_REPO=https://apache-mxnet.s3.cn-north-1.amazonaws.com.cn/ jupyter notebook</span><br></pre></td></tr></table></figure>
<p><strong>参考:</strong><br>
<a href="http://zh.gluon.ai/chapter_crashcourse/install.html">Gluon动手学深度学习</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Gluon</tag>
      </tags>
  </entry>
  <entry>
    <title>Mxnet框架的环境搭建</title>
    <url>/2017/09/15/Mxnet%E6%A1%86%E6%9E%B6%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>Mxnet是亚马逊开发的深度学习框架，和谷歌Tensorflow是同类型的框架。</p>
<a id="more"></a>
<p>1.安装Mxnet</p>
<p>这里只展示在线安装，源码编译安装等不演示；GPU安装与Mxnet无关，只需安装不同的Mxnet版本就可以。要使用GPU还是得另外配置好Cuda和Cudnn。</p>
<p>（1）安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y wget python gcc</span><br><span class="line">wget https://bootstrap.pypa.io/get-pip.py &amp;&amp; sudo python get-pip.py</span><br></pre></td></tr></table></figure>
<p>(2)安装Mxnet</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install mxnet</span><br></pre></td></tr></table></figure>
<p>注：要安装GPU版本，命令是<code>pip install mxnet-cu90</code>，根据Cuda版本，安装不同mxnet-cuxx版本，具体查官网信息</p>
<p>(3)安装Graphviz（非必须）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install graphviz</span><br><span class="line">pip install graphviz</span><br></pre></td></tr></table></figure>
<p>2.测试是否安装完成</p>
<p>(1)进入python命令编辑界面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure>
<p>(2)依次每行拷贝以下命令进行测试,最后输入一致，即表示安装完成。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import mxnet as mx</span><br><span class="line">&gt;&gt;&gt; a = mx.nd.ones((2, 3))</span><br><span class="line">&gt;&gt;&gt; b = a * 2 + 1</span><br><span class="line">&gt;&gt;&gt; b.asnumpy()</span><br><span class="line">array([[ 3.,  3.,  3.],</span><br><span class="line">       [ 3.,  3.,  3.]], dtype=float32)</span><br></pre></td></tr></table></figure>
<p>(3)退出python控制台</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure>
<p>参考资料：</p>
<ul>
<li><a href="https://mxnet.incubator.apache.org/install/index.html">Mxnet官方安装方法</a></li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Mxnet</tag>
      </tags>
  </entry>
  <entry>
    <title>CAM：Learning Deep Features for Discriminative Localization</title>
    <url>/2017/07/26/CAM%EF%BC%9ALearning%20Deep%20Features%20for%20Discriminative%20Localization/</url>
    <content><![CDATA[<p>和ZFNet类似，是一篇分析CNN原理的经典论文，对后来的弱监督学习有很大的启发，本文证明2个结论：（1）CNN提取的featrue含有位置信息，尽管我们在训练时没有标注位置信息;（2）这些位置信息可以转移到其他认知任务中</p>
<a id="more"></a>
<ul>
<li>什么是类别激活映射图 (Class Activation Mapping,CAM)？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CAM-20230408135816.png" alt="CAM-20230408135816" /></li>
<li>类别激活映射图，也称为类热力图、显著性图等，可以理解为图像中的信息对预测结果的贡献排名，分数越高（颜色越“热”）的地方表示在输入图片中这块区域对网络的响应越高、贡献越大，也就是<strong>吸引网络注意力</strong>的地方</li>
<li>CAM 主要是通过 全局平均池化(Global Average Pooling,GAP) 来实现，在最后一个卷积层后面，先接一个 GAP 层，然后才是分类层 softmax。如图首先对最后卷积层输出 X 取 GAP 得到 A (CHW-&gt;C)，然后用 A 去加权求和 X，即得到 CAM。通过观察 CAM，可以发现模型响应的大部分特征是和识别的目标强相关的</li>
</ul>
</li>
<li>CAM 的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/CAM-20230408135816.png" alt="CAM-20230408135816" /></li>
<li>通过在不同分类模型的最后一层卷积后接 GAP 进行分类，比较分类的准确度</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>NIN：Network In Network</title>
    <url>/2017/06/28/NIN%EF%BC%9ANetwork%20In%20Network/</url>
    <content><![CDATA[<p>通过引入子网络结构代替纯卷积中的线性映射部分，替换传统卷积模式 (卷积+激活+Dropout)的卷积方式；结尾使用全局池化替代 Dropout，提高泛化能力的同时，减小网络</p>
<a id="more"></a>
<ul>
<li>
<p>什么是NIN?</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140638.png" alt="NIN-20230408140638" /></li>
<li>Network In Network (NIN)以一种全新的角度审视了卷积神经网络中的卷积核设计，通过引入<strong>子网络结构</strong>代替纯卷积中的<strong>线性映射部分，</strong> 替换传统卷积模式 (卷积+激活+Dropout)的卷积方式；结尾使用全局池化替代 Dropout，提高泛化能力的同时，减小网络</li>
</ul>
</li>
<li>
<p>NIN的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140639.png" alt="" /></li>
<li>NIN包括3层mlpconv layer+1层全局池化(Global Pooling)</li>
<li>在网络推理（inference）时，<strong>这个多层感知器会对输入特征图的局部特征进行划窗计算</strong>，并且每个划窗的局部特征图对应的乘积的权重是共享的，这两点是和传统卷积操作完全一致的，最大的不同在于多层感知器对局部特征进行了非线性的映射，而传统卷积的方式是线性的</li>
</ul>
</li>
<li>
<p>NIN的损失函数？</p>
<ul>
<li>网络分类层前一层为6x6x1000，对其进行全局池化(Global Pooling) 后，生成1000长度的一维向量，最后使用交叉熵损失(CrossEntropyLoss) 计算损失</li>
</ul>
</li>
<li>
<p>mlpconv layer的原理?</p>
<ul>
<li>在不存在mlp层是，卷积层如图绿色线进行计算，加入mlp层后，如何人理解红色线? <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140639-1.png" alt="" /></li>
<li>上图标准卷积的输出是55x55x96，经过mlp加工后，输出仍然是55x55x96。mlp的计算过程如下图，<strong>mlp连接1个卷积核大小（实际上没有卷积核计算，全连接直接连接像素）内每个位置特征，对其进行加权处理后，得到1个值</strong>，当卷积核扫描完之后，得到和55x55长度的特征</li>
<li>mlp连接卷积层的输入与输出特点
<ul>
<li>输入为一个feature map, 输出为一个feature map 时 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140641.png" alt="" /></li>
<li>输入为多个feature map, 输出为一个feature map 时 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140641-1.png" alt="" /></li>
<li>输入为多个feature map, 输出为多个feature map 时 <img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140642.png" alt="" /></li>
<li><strong>在Mlpconv中，不同的 feature map 之间的开头与能结尾之间的权值不一样，而在隐含层之间的权值是共享的</strong>；通过后面两张图可知，全连接的作用很像深度可分离卷积(depthwise separable convolution) 中的<strong>pointwise(1x1卷积)</strong> ，即使用同一个权重，整合不同特征图上的信息到同一张特征图上，所以实现时，使用1x1卷积替代全连接</li>
</ul>
</li>
<li>mlpconv层的Pytorch实现：实际上就是卷积层+2个1x1卷积</li>
</ul>
</li>
<li>
<p>全连接嵌套在中间，输入shape是不定的，如何确保全连接对上CNN输出？</p>
<ul>
<li>全连接每次计算不是接上一层的所有 featrue map，而是连接固定大小搜索框的所有像素，所以其输入大小是固定的</li>
</ul>
</li>
<li>
<p>卷积层和<strong>广义线性模型(GLM)</strong> 的关系？</p>
<ul>
<li>标准卷积(Convolution) 的滤波器对一个接收域做卷积时，卷积核对其进行<strong>加权求和</strong>，然后接一个激活函数，这样的操作做可以看作是<strong>广义线性模型(GLM)</strong></li>
<li>对于线性可分的问题来说，CNN或许可以提取特征，但是对更复杂问题就无能为力了</li>
</ul>
</li>
<li>
<p>NIN如何使用全局池化？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140642-1.png" alt="" /></li>
<li>一般来说，卷积神经网络会使用全连接层作为分类层，而NIN在最后的分类层使用全局池化(Global Pooling) ，如分类层前的输出是6x6x10，全连接作为分类层时，首先是将特征展平为6x6x10=360长度的特征，然后再使用全连接；而全局池化直接对10个特征图进行池化，得到10个值，作为10分类分类的概率</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140642-2.png" alt="NIN-20230408140642-2" /></li>
<li>使用全局池化后，NIN网络比使用全连接作为分类层模型效果更好</li>
</ul>
</li>
<li>
<p>NIN全局池化分类的特张图有什么特点？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140643.png" alt="NIN-20230408140643" /></li>
<li>上图横向为示例图片，纵向为每个图最后一层mlpconv的输出(6x6x10)，输入全局池化(Global Pooling) 前，通过上图看不同图片对应每个类别的响应位置</li>
<li>可以看出，响应位置集中在标签附近 (对角线)</li>
</ul>
</li>
<li>
<p>相比较LeNet、AlexNet和VGG，NiN有什么不同？</p>
<ul>
<li>LeNet、AlexNet和VGG都有一个共同的设计模式：通过一系列<strong>卷积和池化层</strong>利用空间结构提取特征，然后通过<strong>完全连接层</strong>对表示进行后处理，AlexNet和VGG对LeNet的改进主要在于这些后期网络如何扩展和深化这两个模块</li>
<li>NIN提供了另一种选择。它们是基于一个非常简单的观点提出的：在每个像素的通道上分别使用MLP</li>
</ul>
</li>
<li>
<p>NiN比较AlexNet有什么提升？</p>
<ul>
<li>采用较少参数就取得了 AlexNet 的效果，AlexNet参数大小为 230M，而 Network In Network 仅为 29M</li>
<li>Network In Network 通过创新的创建 MLP 卷积层，提高了网络的非线性表达同时降低了参数量，用全局均值池化代替全连接层，极大的降低了参数量</li>
</ul>
</li>
<li>
<p>NiN与VGG比较有什么差异？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/NIN-20230408140643-1.png" alt="" /></li>
<li>NiN 块由一个卷积层和两个卷积层组成1×11×1卷积层充当具有 ReLU 激活的每像素全连接层</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>ZFNet：Visualizing and Understanding Convolutional Networks</title>
    <url>/2017/06/21/ZFNet%EF%BC%9AVisualizing%20and%20Understanding%20Convolutional%20Networks/</url>
    <content><![CDATA[<p>继Alexnet后，通过观察卷积神经网络某一层的特征图，系统分析了卷积神经网络处理图片的原理，包括：(1)卷积神经网络自动学习区域相关性；(2)卷积神经网络是学习了关键区域的特征，而不是全局特征；(3)卷积神经网络的特征是多层抽象的；(4)浅层卷积神经网络收敛更快；(5)卷积神经网络具有大小不变性、尺度不变性、旋转不变性</p>
<a id="more"></a>
<ul>
<li>
<p>什么是<strong>ZFNet？</strong></p>
<ul>
<li>在AlexNet基础上通过模型微调(fine tuning)提出的大型卷积网络</li>
<li>通过反卷积(deconvolution)的方式可视化各层的输出特征图，进一步解释了卷积操作在大型网络中效果显著的原因</li>
</ul>
</li>
<li>
<p>ZFNet的模型结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141205.png" alt="ZFNet-20230408141205" /></li>
<li>输入224x224x3的图像</li>
<li><strong>第一层：</strong> 96个7x7的卷积，stride为2，然后是RELU，3x3最大池化和局部对比度归一化</li>
<li><strong>第二层：</strong> 256个3x3的卷积，然后是局部对比度归一化</li>
<li><strong>第三、四层：</strong> 连续2个384个3x3的卷积</li>
<li><strong>第五层：</strong> 256个3x3的卷积，然后是3x3最大池化，stride为2和局部对比度归一化</li>
<li><strong>第六、七层：</strong> 4096个密集单元</li>
<li><strong>最后一层：</strong> 1000个密集单元</li>
<li>ZFNet的网络架构是在AlexNet基础上修改而来，与AlexNet相比，差异在2个地方：(1)第1个卷积层，kernel size从11减小为7，将stride从4减小为2；(2)为了让后续feature map的尺寸保持一致，第2个卷积层的stride从1变为2</li>
</ul>
</li>
<li>
<p>ZFNet如何可视化卷积层？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141205-1.png" alt="ZFNet-20230408141205-1" /></li>
<li>给定1张输入图像，先前向传播，得到每一层的feature map，如果想可视化第i层学到的特征，保留该层feature map的最大值，将其他位置和其他feature map置0，将其反向映射回原始输入所在的像素空间</li>
<li>对于一般的卷积神经网络，前向传播时不断经历：卷积-》Relu-》最大池化-》，可视化时，则从某一层的feature map开始，依次反向经历：反池化(UnPooling)-》Relu-》反卷积(deconvolution)</li>
</ul>
</li>
<li>
<p>ZFNet 上，已知卷积参数如何求反卷积参数？</p>
<ul>
<li>ZFNet 可视化卷积层时需要计算反卷积，但是反卷积是有参数，这个参数是如何得到？</li>
<li>实际上，同一层的卷积与反卷积只是输入通道和输出通道调换顺序，其参数量是一样，<strong>ZF 直接将卷积的参数 (kernel，padding，stride)直接复制给反卷积</strong></li>
<li>假设卷积核是 3 x 3，反卷积将每个 1 x 1 区域输出3 x 3，其实就是这个 1 x 1 区域的值乘上卷积核所有位置，如果前向计算的 1 x 1 卷积核够大，那么这 3 x 3 区域就被更加明显激活</li>
</ul>
</li>
<li>
<p>ZFNet可视化卷积层时，如何进行“反激活”？</p>
<ul>
<li>ReLU激活函数，前向传播时只将正值原封不动输出，负值置0，“反激活”过程与激活过程没什么分别，直接将来自上层的map通过ReLU</li>
</ul>
</li>
<li>
<p>ZFNet 可视化卷积层时，如何进行“反池化”？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141207.png" alt="ZFNet-20230408141207" /></li>
<li>记录池化时的最大响应位置，通过反池化(UnPooling) 将最大值回填到响应位置</li>
</ul>
</li>
<li>
<p>卷积神经网络<strong>区域特征关联性分析</strong>？</p>
<ul>
<li>卷积神经网络在搭建及训练过程中，没有明确的机制来建立不同图像中特定对象之间的对应关系（例如，面部眼睛或者鼻子所具有的特殊空间结构）。但是<strong>深度学习模型可能会隐式的计算这些关系</strong></li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141207-1.png" alt="ZFNet-20230408141207-1" /></li>
<li>随机挑选了5张狗的正面照（第1列），对于第2列~第4列，分别遮挡其右眼、左眼、鼻子。剩余的列则随机进行遮挡，计算原始图像与遮挡图像在各层特征向量的海明(汉明)距离(Hamming Distance) ，海明距离越小，一致性越好</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141208.png" alt="ZFNet-20230408141208" /></li>
<li><strong>浅层Layer5：</strong> 眼睛和鼻子的一致性明显好于随机，因此可以说明神经网络确实隐式的计算了共性特征</li>
<li><strong>深层Layer7：</strong> 眼睛、鼻子和随机的一致性差别不大，可能是因为浅层着重在识别一类物品或物体所具有的共性特征（例如狗的鼻子和眼睛），而深层则主要在识别一些更复杂和宏观的特征（例如狗的品种等）</li>
</ul>
</li>
<li>
<p>卷积神经网络<strong>从浅层到深层分别归纳哪些特征</strong>？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141208-1.png" alt="ZFNet-20230408141208-1" /></li>
<li><strong>第一层：</strong> 最简单的特征，即图像中的各种频率。 把它想象成学习图像中的<strong>线条</strong></li>
<li><strong>第二层：</strong> 对各种角落和边缘/颜色组合进行建模。 把它想象成学习图像中的<strong>曲线</strong>。 曲线由小线形成</li>
<li><strong>第三层：</strong> 将其视为学习这些曲线的组合（网格）。 曲线聚集在一起创建<strong>网格</strong>（想想篮子）</li>
<li><strong>第四层：</strong> 特定类别的特征，例如<strong>狗脸</strong>。 把它想象成把篮子塑造成不同的东西</li>
<li><strong>第五层：</strong> 具有一些姿势变化（侧面、正面和其他）的整个对象。 可以把它想象成将所有这些篮子排列成类似不同的<strong>物体</strong></li>
</ul>
</li>
<li>
<p>卷积神经网络训练过程中，不同网络层的特征收敛快慢比较？</p>
<ul>
<li>对 Layer1~Layer5中随机选取的6个激活值进行可视化, 每个 block 共有6行，代表着6个激活值，每一行共有8列，代表着训练的不同阶段，分别为 epoch=[1,2,5,10,20,30,40,64]</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141209.png" alt="ZFNet-20230408141209" /></li>
<li>结论：<strong>较浅的层学到的特征收敛的更快。而更深的层则需要训练至少40~50个epoch才能看到特征的收敛</strong></li>
</ul>
</li>
<li>
<p>卷积神经网络是通过图像整体信息还是关键信息区分图片类别？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141209-1.png" alt="ZFNet-20230408141209-1" /></li>
<li>第一列：分别输入的三张图像，真实类别依次为：博美犬(Pomeranian)、车轮(wheel)、阿富汗猎犬(Afghan hound)</li>
<li>第二列：将原图输入网络，确定Layer5的最大激活值所在区域A后，然后将灰色块从图像的左上角一直遍历滑动到右下角的图片输入网络，收集所有结果的区域A激活值，然后将所有的区域A相加得到，其中蓝色部分的激活值大于红色部分</li>
<li>第三列：将区域A的激活值映射回input的结果（黑色方框为本例的可视化结果，其余三个为类似图像的可视化结果），以第一张图像为例，可以看到最大激活值对应的可视化结果是狗的面部特征</li>
<li>第四列：类似于第二列的方式，将灰色块从图像的左上角一直遍历滑动到右下角，以灰色块滑动的第一个位置为例，如果这张左上角被遮挡的图像被分类器预测为“博美犬”，那么该灰色块覆盖的区域我们就记为“博美犬”（即该区域内每个像素点被标记为“博美犬”这个类别），剩余的位置以此类推，最终统计input图像中每个像素点被分类正确的概率。以第一张图像为例，当灰色块遮挡住狗的面部时，类别“博美犬”的概率会大幅下降</li>
<li>第五列：第四列结果的延伸，为input图像每个像素点对应的概率最高的类别。对于第一张图像，大部分位置的预测结果都是“博美犬”（如果使用灰色块遮挡狗的面部但不遮挡球，则预测结果会变为“网球”）。对于第二张图像，虽然Layer5最大激活值的可视化结果是车身上的文字，但是分类器却对车轮更为敏感。对于第三张图像，其包含多个目标（两个人和一只狗），虽然Layer5最大激活值的可视化结果是人脸，但是分类器却对狗更为敏感</li>
<li>综上可知：<strong>卷积神经在进行图像分类任务时，根据关键位置的特征做为分类依据</strong></li>
</ul>
</li>
<li>
<p>卷积神经网络的aliasing现象？</p>
<ul>
<li>在数字信号处理中，aliasing是指在采样频率过低时出现的不同信号混淆的现象</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141210.png" alt="ZFNet-20230408141210" /></li>
<li>(a)：第一层特征，无特征缩放；(b)：AlexNet的第1层特征，©：ZFNet的第1层特征，(b)可以看到一些灰色方块，那些是没有激活值的死神经元，这是不好的</li>
<li>(d)：AlexNet的第2层特征，(e)：ZFNet的第2层特征，可以看出ZFNet提取的特征更干净，没有出现伪影</li>
<li>ZFNet认为以上问题是第1个卷积层stride过大引起的，为了解决这个问题，可以提高采样频率，所以将stride从4调整为2，与之相应的将kernel size也缩小</li>
</ul>
</li>
<li>
<p>训练神经网络时，使用预训练权重还是全新训练效果好？</p>
<ul>
<li>ZFNet使用了两种不同的训练方法：1）固定Layer1~Layer7的结构和参数，只是使用新的数据集重新训练了softmax层；2）使用新的数据集重新训练整个模型</li>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141211.png" alt="ZFNet-20230408141211" /></li>
<li>使用预训练的ZFNet模型准确率明显高于重新训练的ZFNet模型，说明数据集的大小对模型的性能影响至关重要。</li>
</ul>
</li>
<li>
<p>神经网络相比较传统方法的泛化能力？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141211-1.png" alt="ZFNet-20230408141211-1" /></li>
<li>ZFNet使用更少的数据便可以获得比传统优秀算法更高的准确率，说明同等训练数据情况下，神经网络泛化能力更强</li>
</ul>
</li>
<li>
<p>什么是卷积神经网络的平移不变性 (translational invariance)？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141212.png" alt="ZFNet-20230408141212" /></li>
<li>示例图片 (a1)，<strong>原图与平移图在 ZFNet 第1、7层输出的欧式距离比较</strong>(a2、a3)、每个图片被预测的概率 (a4)</li>
<li>第二、三列说明平移图像经过卷积后，特征保持稳定，甚至在列四的输出层大多数情况下保持稳定， 除了在极端情况下，主要是因为在图像中看不到有问题的物体</li>
</ul>
</li>
<li>
<p>什么是卷积神经网络的大小不变性 (size invariance)？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141212-1.png" alt="ZFNet-20230408141212-1" /></li>
<li>示例图片 (b1)，<strong>原图与平移图在 ZFNet 第1、7层输出的欧式距离比较</strong>(b2、b3)、每个图片被预测的概率 (b4)</li>
<li>第 3 列受图片越来越大的激活面积导致的，但是我们移动是线性的，增长也是线性的，说明移动是影响第 3 列的唯一因素，但是从最后输出第 4列来看，大多数情况下保持稳定</li>
</ul>
</li>
<li>
<p>什么是卷积神经网络的旋转不变性 (rotational invariance)？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/ZFNet-20230408141213.png" alt="ZFNet-20230408141213" /></li>
<li>示例图片 (c1)，<strong>原图与平移图在 ZFNet 第1、7层输出的欧式距离比较</strong>(c2、c3)、每个图片被预测的概率 (c4)</li>
<li>从二、三列来看，旋转对特张图由浅层到深层影响逐渐变大，甚至在第四列看出旋转使得卷积网络犯错，但是这是物体本身特征造成的，和 CNN 无关，比如危险的非洲鳄鱼 (Afican crocodie)，它们的图像看起来都是旋转对称的，它们是稳定的。即<strong>对于具有旋转对称性的物体，CNN 对旋转具有鲁棒性</strong></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>linux上cuda与cudnn环境搭建</title>
    <url>/2017/05/19/linux%E4%B8%8Acuda%E4%B8%8Ecudnn%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>本文介绍在linux上如何安装cuda及cudnn</p>
<a id="more"></a>
<p>cuda官网：<a href="https://developer.nvidia.com/cuda-downloads">https://developer.nvidia.com/cuda-downloads</a></p>
<h2 id="cuda下载"><a class="markdownIt-Anchor" href="#cuda下载"></a> cuda下载</h2>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082046265.png" alt="下载cuda" /></p>
<h2 id="cuda安装"><a class="markdownIt-Anchor" href="#cuda安装"></a> cuda安装</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin</span><br><span class="line">sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600</span><br><span class="line">wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda-repo-ubuntu1804-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb</span><br><span class="line">sudo dpkg -i cuda-repo-ubuntu1804-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb</span><br><span class="line">sudo apt-key add /var/cuda-repo-10-2-local-10.2.89-440.33.01/7fa2af80.pub</span><br><span class="line">sudo apt-get updatesudo apt-get -y install cuda</span><br></pre></td></tr></table></figure>
<p>cudnn官网：<a href="https://developer.nvidia.com/rdp/cudnn-download">https://developer.nvidia.com/rdp/cudnn-download</a></p>
<h2 id="cudnn安装"><a class="markdownIt-Anchor" href="#cudnn安装"></a> cudnn安装</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i libcudnn7_7.6.5.32-1+cuda10.2_amd64.deb</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2>
<p>重启系统，然后运行下面例子</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查找测试例子所在位置</span></span><br><span class="line">locate cuda | grep <span class="string">&#x27;samples&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编译测试例子</span></span><br><span class="line">sudo make -j8</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行测试例子</span></span><br><span class="line"> ./deviceQuery</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082047764.png" alt="测试成功提示" /></p>
<p>输出提示PASS,则安装成功！！！</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>cuda</tag>
      </tags>
  </entry>
  <entry>
    <title>特征工程学习之sklearn单机特征工程</title>
    <url>/2017/03/25/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B%E5%AD%A6%E4%B9%A0%E4%B9%8Bsklearn%E5%8D%95%E6%9C%BA%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[<p>本文基于sklearn进行数据的特征工作</p>
<a id="more"></a>
<h1 id="0数据的导入"><a class="markdownIt-Anchor" href="#0数据的导入"></a> 0.数据的导入</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入IRIS数据集</span></span><br><span class="line">iris=load_iris()</span><br><span class="line"></span><br><span class="line"><span class="comment">#特征矩阵</span></span><br><span class="line">print(iris.data[:<span class="number">5</span>],<span class="built_in">len</span>(iris.data))</span><br><span class="line"></span><br><span class="line"><span class="comment">#目标向量</span></span><br><span class="line">print(iris.target[:<span class="number">5</span>],<span class="built_in">len</span>(iris.target))</span><br></pre></td></tr></table></figure>
<pre><code>[[ 5.1  3.5  1.4  0.2]
 [ 4.9  3.   1.4  0.2]
 [ 4.7  3.2  1.3  0.2]
 [ 4.6  3.1  1.5  0.2]
 [ 5.   3.6  1.4  0.2]] 150
[0 0 0 0 0] 150
</code></pre>
<h1 id="1数据预处理"><a class="markdownIt-Anchor" href="#1数据预处理"></a> 1.数据预处理</h1>
<h2 id="11无量纲化"><a class="markdownIt-Anchor" href="#11无量纲化"></a> 1.1无量纲化</h2>
<h3 id="111标准化"><a class="markdownIt-Anchor" href="#111标准化"></a> 1.1.1标准化</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="comment">#标准化，返回值为标准化后的值</span></span><br><span class="line">iris_standar=StandardScaler().fit_transform(iris.data)</span><br><span class="line">print(iris_standar[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[-0.90068117  1.03205722 -1.3412724  -1.31297673]
 [-1.14301691 -0.1249576  -1.3412724  -1.31297673]
 [-1.38535265  0.33784833 -1.39813811 -1.31297673]
 [-1.50652052  0.10644536 -1.2844067  -1.31297673]
 [-1.02184904  1.26346019 -1.3412724  -1.31297673]]
</code></pre>
<h3 id="112区间缩放"><a class="markdownIt-Anchor" href="#112区间缩放"></a> 1.1.2区间缩放</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 区间缩放，返回值为已经缩放到[0,1]的值</span></span><br><span class="line">iris_minmax=MinMaxScaler().fit_transform(iris.data)</span><br><span class="line">print(iris_minmax[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[ 0.22222222  0.625       0.06779661  0.04166667]
 [ 0.16666667  0.41666667  0.06779661  0.04166667]
 [ 0.11111111  0.5         0.05084746  0.04166667]
 [ 0.08333333  0.45833333  0.08474576  0.04166667]
 [ 0.19444444  0.66666667  0.06779661  0.04166667]]
</code></pre>
<h2 id="12对定量特征进行二值化"><a class="markdownIt-Anchor" href="#12对定量特征进行二值化"></a> 1.2对定量特征进行二值化</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> Binarizer</span><br><span class="line"></span><br><span class="line"><span class="comment">#二值化，分界线设置为3，返回二值化后的特征</span></span><br><span class="line">iris_binarizer=Binarizer(threshold=<span class="number">3</span>).fit_transform(iris.data)</span><br><span class="line">print(iris_binarizer[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[ 1.  1.  0.  0.]
 [ 1.  0.  0.  0.]
 [ 1.  1.  0.  0.]
 [ 1.  1.  0.  0.]
 [ 1.  1.  0.  0.]]
</code></pre>
<h2 id="13对定性特征进行哑编码"><a class="markdownIt-Anchor" href="#13对定性特征进行哑编码"></a> 1.3对定性特征进行哑编码</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> OneHotEncoder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 哑编码，对iris的目标集进行哑编码，返回编码后的值</span></span><br><span class="line">iris_onehotencoder=OneHotEncoder().fit_transform(iris.target.reshape((-<span class="number">1</span>,<span class="number">1</span>)))</span><br><span class="line">print(iris.target[-<span class="number">5</span>:])</span><br><span class="line">print(iris.target.reshape((-<span class="number">1</span>,<span class="number">1</span>))[-<span class="number">5</span>:])</span><br><span class="line">print(iris_onehotencoder[-<span class="number">5</span>:])</span><br></pre></td></tr></table></figure>
<pre><code>[2 2 2 2 2]
[[2]
 [2]
 [2]
 [2]
 [2]]
  (0, 2)	1.0
  (1, 2)	1.0
  (2, 2)	1.0
  (3, 2)	1.0
  (4, 2)	1.0
</code></pre>
<h2 id="14缺失值计算"><a class="markdownIt-Anchor" href="#14缺失值计算"></a> 1.4缺失值计算</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> vstack, array, nan</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> Imputer</span><br><span class="line"></span><br><span class="line"><span class="comment">#缺失值计算，返回值为计算缺失值后的数据</span></span><br><span class="line"><span class="comment">#参数missing_value为缺失值的表示形式，默认为NaN</span></span><br><span class="line"><span class="comment">#参数strategy为缺失值填充方式，默认为mean（均值）</span></span><br><span class="line">iris_imputer=Imputer().fit_transform(vstack((array([nan, nan, nan, nan]), iris.data)))</span><br><span class="line">print(iris_imputer[:<span class="number">5</span>],<span class="built_in">len</span>(iris_imputer))</span><br></pre></td></tr></table></figure>
<pre><code>[[ 5.84333333  3.054       3.75866667  1.19866667]
 [ 5.1         3.5         1.4         0.2       ]
 [ 4.9         3.          1.4         0.2       ]
 [ 4.7         3.2         1.3         0.2       ]
 [ 4.6         3.1         1.5         0.2       ]] 151
</code></pre>
<h2 id="15数据变换"><a class="markdownIt-Anchor" href="#15数据变换"></a> 1.5数据变换</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures</span><br><span class="line"></span><br><span class="line"><span class="comment">#多项式转换</span></span><br><span class="line"><span class="comment">#参数degree为度，默认值为2</span></span><br><span class="line">iris_pol=PolynomialFeatures().fit_transform(iris.data)</span><br><span class="line">print(iris_pol[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[  1.     5.1    3.5    1.4    0.2   26.01  17.85   7.14   1.02  12.25
    4.9    0.7    1.96   0.28   0.04]
 [  1.     4.9    3.     1.4    0.2   24.01  14.7    6.86   0.98   9.     4.2
    0.6    1.96   0.28   0.04]
 [  1.     4.7    3.2    1.3    0.2   22.09  15.04   6.11   0.94  10.24
    4.16   0.64   1.69   0.26   0.04]
 [  1.     4.6    3.1    1.5    0.2   21.16  14.26   6.9    0.92   9.61
    4.65   0.62   2.25   0.3    0.04]
 [  1.     5.     3.6    1.4    0.2   25.    18.     7.     1.    12.96
    5.04   0.72   1.96   0.28   0.04]]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> log1p</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> FunctionTransformer</span><br><span class="line"></span><br><span class="line"><span class="comment">#自定义转换函数为对数函数的数据变换</span></span><br><span class="line"><span class="comment">#第一个参数是单变元函数</span></span><br><span class="line">iris_ftf=FunctionTransformer(log1p).fit_transform(iris.data)</span><br><span class="line">print(iris_ftf[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[ 1.80828877  1.5040774   0.87546874  0.18232156]
 [ 1.77495235  1.38629436  0.87546874  0.18232156]
 [ 1.74046617  1.43508453  0.83290912  0.18232156]
 [ 1.7227666   1.41098697  0.91629073  0.18232156]
 [ 1.79175947  1.5260563   0.87546874  0.18232156]]
</code></pre>
<h1 id="2特征选择"><a class="markdownIt-Anchor" href="#2特征选择"></a> 2.特征选择</h1>
<h2 id="21filter"><a class="markdownIt-Anchor" href="#21filter"></a> 2.1Filter</h2>
<h3 id="211方差选择法"><a class="markdownIt-Anchor" href="#211方差选择法"></a> 2.1.1方差选择法</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> VarianceThreshold</span><br><span class="line"></span><br><span class="line"><span class="comment">#方差选择法，返回值为特征选择后的数据</span></span><br><span class="line"><span class="comment">#参数threshold为方差的阈值</span></span><br><span class="line">iris_vt=VarianceThreshold(threshold=<span class="number">3</span>).fit_transform(iris.data)</span><br><span class="line">print(iris_vt,<span class="built_in">len</span>(iris_vt))</span><br></pre></td></tr></table></figure>
<pre><code>[[ 1.4]
 [ 1.4]
 [ 1.3]
 [ 1.5]
 [ 1.4]
 [ 1.7]
 [ 1.4]
 .......
</code></pre>
<h3 id="212相关系数法此处使用第二篇博客进行修改"><a class="markdownIt-Anchor" href="#212相关系数法此处使用第二篇博客进行修改"></a> 2.1.2相关系数法(此处使用第二篇博客进行修改)</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectKBest,chi2</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> pearsonr</span><br><span class="line"></span><br><span class="line"><span class="comment">#选择K个最好的特征，返回选择特征后的数据</span></span><br><span class="line"><span class="comment">#第一个参数为计算评估特征是否好的函数，该函数输入特征矩阵和目标向量，输出二元组（评分，P值）的数组，数组第i项为第i个特征的评分和P值。在此定义为计算相关系数</span></span><br><span class="line"><span class="comment">#参数k为选择的特征个数</span></span><br><span class="line">iris_pear=SelectKBest(chi2, k=<span class="number">2</span>).fit_transform(iris.data, iris.target)</span><br><span class="line">print(iris_pear,<span class="built_in">len</span>(iris_pear))</span><br></pre></td></tr></table></figure>
<pre><code>[[ 1.4  0.2]
 [ 1.4  0.2]
 [ 1.3  0.2]
 [ 1.5  0.2]
 [ 1.4  0.2]
 [ 1.7  0.4]
 [ 1.4  0.3]
 [ 1.5  0.2]
 [ 1.4  0.2]
  ..........
</code></pre>
<h3 id="213卡方检验"><a class="markdownIt-Anchor" href="#213卡方检验"></a> 2.1.3卡方检验</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectKBest</span><br><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> chi2</span><br><span class="line"></span><br><span class="line"><span class="comment">#选择K个最好的特征，返回选择特征后的数据</span></span><br><span class="line">iris_chi2=SelectKBest(chi2, k=<span class="number">2</span>).fit_transform(iris.data, iris.target)</span><br><span class="line">print(iris_chi2[:<span class="number">5</span>],<span class="built_in">len</span>(iris_chi2))</span><br></pre></td></tr></table></figure>
<pre><code>[[ 1.4  0.2]
 [ 1.4  0.2]
 [ 1.3  0.2]
 [ 1.5  0.2]
 [ 1.4  0.2]] 150
</code></pre>
<h3 id="214互信息法"><a class="markdownIt-Anchor" href="#214互信息法"></a> 2.1.4互信息法</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectKBest</span><br><span class="line"><span class="keyword">from</span> minepy <span class="keyword">import</span> MINE</span><br><span class="line"></span><br><span class="line"><span class="comment">#由于MINE的设计不是函数式的，定义mic方法将其为函数式的，返回一个二元组，二元组的第2项设置成固定的P值0.5</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mic</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    m = MINE()</span><br><span class="line">    m.compute_score(x, y)</span><br><span class="line">    <span class="keyword">return</span> (m.mic(), <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#选择K个最好的特征，返回特征选择后的数据</span></span><br><span class="line">SelectKBest(<span class="keyword">lambda</span> X, Y: array(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:mic(x, Y), X.T)).T, k=<span class="number">2</span>).fit_transform(iris.data, iris.target)</span><br></pre></td></tr></table></figure>
<pre><code>---------------------------------------------------------------------------

ImportError                               Traceback (most recent call last)

&lt;ipython-input-47-807ad1fcacee&gt; in &lt;module&gt;()
      1 from sklearn.feature_selection import SelectKBest
----&gt; 2 from minepy import MINE
      3 
      4 #由于MINE的设计不是函数式的，定义mic方法将其为函数式的，返回一个二元组，二元组的第2项设置成固定的P值0.5
      5 def mic(x, y):


ImportError: No module named 'minepy'
</code></pre>
<h2 id="22wrapper"><a class="markdownIt-Anchor" href="#22wrapper"></a> 2.2Wrapper</h2>
<h3 id="321-递归特征消除法"><a class="markdownIt-Anchor" href="#321-递归特征消除法"></a> 3.2.1 递归特征消除法</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> RFE</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"></span><br><span class="line"><span class="comment">#递归特征消除法，返回特征选择后的数据</span></span><br><span class="line"><span class="comment">#参数estimator为基模型</span></span><br><span class="line"><span class="comment">#参数n_features_to_select为选择的特征个数</span></span><br><span class="line">iris_pfe=RFE(estimator=LogisticRegression(), n_features_to_select=<span class="number">2</span>).fit_transform(iris.data, iris.target)</span><br><span class="line">print(iris_pfe[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[ 3.5  0.2]
 [ 3.   0.2]
 [ 3.2  0.2]
 [ 3.1  0.2]
 [ 3.6  0.2]]
</code></pre>
<h2 id="33-embedded"><a class="markdownIt-Anchor" href="#33-embedded"></a> 3.3 Embedded</h2>
<h3 id="331-基于惩罚项的特征选择法"><a class="markdownIt-Anchor" href="#331-基于惩罚项的特征选择法"></a> 3.3.1 基于惩罚项的特征选择法</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectFromModel</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"></span><br><span class="line"><span class="comment">#带L1惩罚项的逻辑回归作为基模型的特征选择</span></span><br><span class="line">iris_sfm=SelectFromModel(LogisticRegression(penalty=<span class="string">"l1"</span>, C=<span class="number">0.1</span>)).fit_transform(iris.data, iris.target)</span><br><span class="line">print(iris_sfm[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[ 5.1  3.5  1.4]
 [ 4.9  3.   1.4]
 [ 4.7  3.2  1.3]
 [ 4.6  3.1  1.5]
 [ 5.   3.6  1.4]]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LR</span>(<span class="params">LogisticRegression</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, threshold=<span class="number">0.01</span>, dual=<span class="literal">False</span>, tol=<span class="number">1e-4</span>, C=<span class="number">1.0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                 fit_intercept=<span class="literal">True</span>, intercept_scaling=<span class="number">1</span>, class_weight=<span class="literal">None</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                 random_state=<span class="literal">None</span>, solver=<span class="string">'liblinear'</span>, max_iter=<span class="number">100</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                 multi_class=<span class="string">'ovr'</span>, verbose=<span class="number">0</span>, warm_start=<span class="literal">False</span>, n_jobs=<span class="number">1</span></span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#权值相近的阈值</span></span><br><span class="line">        self.threshold = threshold</span><br><span class="line">        LogisticRegression.__init__(self, penalty=<span class="string">'l1'</span>, dual=dual, tol=tol, C=C,</span><br><span class="line">                 fit_intercept=fit_intercept, intercept_scaling=intercept_scaling, class_weight=class_weight,</span><br><span class="line">                 random_state=random_state, solver=solver, max_iter=max_iter,</span><br><span class="line">                 multi_class=multi_class, verbose=verbose, warm_start=warm_start, n_jobs=n_jobs)</span><br><span class="line">        <span class="comment">#使用同样的参数创建L2逻辑回归</span></span><br><span class="line">        self.l2 = LogisticRegression(penalty=<span class="string">'l2'</span>, dual=dual, tol=tol, C=C, fit_intercept=fit_intercept, intercept_scaling=intercept_scaling, class_weight = class_weight, random_state=random_state, solver=solver, max_iter=max_iter, multi_class=multi_class, verbose=verbose, warm_start=warm_start, n_jobs=n_jobs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span>(<span class="params">self, X, y, sample_weight=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="comment">#训练L1逻辑回归</span></span><br><span class="line">        <span class="built_in">super</span>(LR, self).fit(X, y, sample_weight=sample_weight)</span><br><span class="line">        self.coef_old_ = self.coef_.copy()</span><br><span class="line">        <span class="comment">#训练L2逻辑回归</span></span><br><span class="line">        self.l2.fit(X, y, sample_weight=sample_weight)</span><br><span class="line"></span><br><span class="line">        cntOfRow, cntOfCol = self.coef_.shape</span><br><span class="line">        <span class="comment">#权值系数矩阵的行数对应目标值的种类数目</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cntOfRow):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(cntOfCol):</span><br><span class="line">                coef = self.coef_[i][j]</span><br><span class="line">                <span class="comment">#L1逻辑回归的权值系数不为0</span></span><br><span class="line">                <span class="keyword">if</span> coef != <span class="number">0</span>:</span><br><span class="line">                    idx = [j]</span><br><span class="line">                    <span class="comment">#对应在L2逻辑回归中的权值系数</span></span><br><span class="line">                    coef1 = self.l2.coef_[i][j]</span><br><span class="line">                    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(cntOfCol):</span><br><span class="line">                        coef2 = self.l2.coef_[i][k]</span><br><span class="line">                        <span class="comment">#在L2逻辑回归中，权值系数之差小于设定的阈值，且在L1中对应的权值为0</span></span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">abs</span>(coef1-coef2) &lt; self.threshold <span class="keyword">and</span> j != k <span class="keyword">and</span> self.coef_[i][k] == <span class="number">0</span>:</span><br><span class="line">                            idx.append(k)</span><br><span class="line">                    <span class="comment">#计算这一类特征的权值系数均值</span></span><br><span class="line">                    mean = coef / <span class="built_in">len</span>(idx)</span><br><span class="line">                    self.coef_[i][idx] = mean</span><br><span class="line">        <span class="keyword">return</span> self</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectFromModel</span><br><span class="line"> </span><br><span class="line"><span class="comment">#带L1和L2惩罚项的逻辑回归作为基模型的特征选择</span></span><br><span class="line"><span class="comment">#参数threshold为权值系数之差的阈值</span></span><br><span class="line">iris_sfm2=SelectFromModel(LR(threshold=<span class="number">0.5</span>, C=<span class="number">0.1</span>)).fit_transform(iris.data, iris.target)</span><br><span class="line">print(iris_sfm2[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[ 5.1  3.5  1.4  0.2]
 [ 4.9  3.   1.4  0.2]
 [ 4.7  3.2  1.3  0.2]
 [ 4.6  3.1  1.5  0.2]
 [ 5.   3.6  1.4  0.2]]
</code></pre>
<h3 id="332-基于树模型的特征选择法"><a class="markdownIt-Anchor" href="#332-基于树模型的特征选择法"></a> 3.3.2 基于树模型的特征选择法</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectFromModel</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> GradientBoostingClassifier</span><br><span class="line"></span><br><span class="line"><span class="comment">#GBDT作为基模型的特征选择</span></span><br><span class="line">iris_sfm3=SelectFromModel(GradientBoostingClassifier()).fit_transform(iris.data, iris.target)</span><br><span class="line">print(iris_sfm3[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[ 1.4  0.2]
 [ 1.4  0.2]
 [ 1.3  0.2]
 [ 1.5  0.2]
 [ 1.4  0.2]]
</code></pre>
<h1 id="4-降维"><a class="markdownIt-Anchor" href="#4-降维"></a> 4 降维</h1>
<h2 id="41-主成分分析法pca"><a class="markdownIt-Anchor" href="#41-主成分分析法pca"></a> 4.1 主成分分析法（PCA）</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"></span><br><span class="line"><span class="comment">#主成分分析法，返回降维后的数据</span></span><br><span class="line"><span class="comment">#参数n_components为主成分数目</span></span><br><span class="line">iris_pca=PCA(n_components=<span class="number">2</span>).fit_transform(iris.data)</span><br><span class="line">print(iris_pca[:<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[[-2.68420713  0.32660731]
 [-2.71539062 -0.16955685]
 [-2.88981954 -0.13734561]
 [-2.7464372  -0.31112432]
 [-2.72859298  0.33392456]]
</code></pre>
<h2 id="42-线性判别分析法lda"><a class="markdownIt-Anchor" href="#42-线性判别分析法lda"></a> 4.2 线性判别分析法（LDA）</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.lda <span class="keyword">import</span> LDA</span><br><span class="line"></span><br><span class="line"><span class="comment">#线性判别分析法，返回降维后的数据</span></span><br><span class="line"><span class="comment">#参数n_components为降维后的维数</span></span><br><span class="line">LDA(n_components=<span class="number">2</span>).fit_transform(iris.data, iris.target)</span><br></pre></td></tr></table></figure>
<pre><code>---------------------------------------------------------------------------

ImportError                               Traceback (most recent call last)

&lt;ipython-input-56-21fd5d727aec&gt; in &lt;module&gt;()
----&gt; 1 from sklearn.lda import LDA
      2 
      3 #线性判别分析法，返回降维后的数据
      4 #参数n_components为降维后的维数
      5 LDA(n_components=2).fit_transform(iris.data, iris.target)


ImportError: No module named 'sklearn.lda'
</code></pre>
<p><strong>参考文章</strong></p>
<p>1.<a href="http://www.cnblogs.com/jasonfreak/p/5448385.html">使用sklearn做单机特征工程</a></p>
<p>2.<a href="https://blog.csdn.net/lming_08/article/details/39210409">利用scikit-learn进行FeatureSelection</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>特征工程</tag>
        <tag>sklearn</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习链式求导法则</title>
    <url>/2017/03/15/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%93%BE%E5%BC%8F%E6%B1%82%E5%AF%BC%E6%B3%95%E5%88%99/</url>
    <content><![CDATA[<p>本文使用一个两层的神经网络，推导深度学习中经典的过程：链式求导</p>
<a id="more"></a>
<p><strong>原始网络结构</strong><br>
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082032110.png" alt="网络结构"></p>
<p>链式求导法则，从网络的输出层将输入层逐层回传误差，并求得每个参数要下降的梯度。</p>
<h2 id="1输出层的前一层之间的参数更新"><a class="markdownIt-Anchor" href="#1输出层的前一层之间的参数更新"></a> 1.输出层的前一层之间的参数更新</h2>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082032408.png" alt="倒数第二层参数更新示意图"></p>
<p>对于一个神经元来说，其更新节点前的边权重过程需要求三个导数，分别是：<br>
(1)边上尾节点总的误差与输出之间的导数，即目标函数与输出之间的导数</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>r</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>2</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>g</mi><msub><mi>e</mi><mn>1</mn></msub><mo>−</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>g</mi><msub><mi>e</mi><mn>2</mn></msub><mo>−</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>2</mn></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo>−</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>g</mi><msub><mi>e</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">Der_1=\frac{\sigma(E_{total})}{\sigma(Out_{o1})}=\frac{\sigma(E_{o1}+E_{o2})}{\sigma(Out_{o1})}\\=\frac{\sigma(\frac{1}{2}((trage_1-Out_{o1})^2+(trage_2-Out_{o2})^2 ) }{\sigma(Out_{o1})}=Out_{o1}-trage_1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.516108em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.580108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7350000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>(2)边上尾节点输出和其激活函数的导数</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>r</mi><mn>2</mn></msub><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub></mrow></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mrow></mfrac><mo>=</mo><mi>o</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>o</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Der_2=\frac{\sigma(Out_{o1})}{\sigma(net_{o1})}=\frac{\sigma(\frac{1}{1+e^{-net_{o1}}})}{\sigma{(net_{o1})}}=out_{o1}(1-out_{o1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.574439em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.638439em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7933310000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7611214285714286em;"><span style="top:-2.8217785714285717em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>(3)边上尾节点输入与该边的导数</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>r</mi><mn>3</mn></msub><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>5</mn></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>h</mi><mn>1</mn></mrow></msub><mo>∗</mo><msub><mi>w</mi><mn>5</mn></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>5</mn></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>h</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Der_3=\frac{\sigma(net_{o1})}{\sigma(w_5)}=\frac{\sigma(Out_{h1} * w_5+b)}{\sigma(w_5)}=Out_{h1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>边权重<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">w_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>下降的梯度为以上三个导数的乘积。</p>
<h2 id="2其他层参数更新"><a class="markdownIt-Anchor" href="#2其他层参数更新"></a> 2.其他层参数更新</h2>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082033233.png" alt="倒数第三层参数更新示意图"></p>
<p>下面展示求目标函数对权重<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">w_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的梯度，<br>
总体公式：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>∗</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>∗</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\sigma(E_{total})}{\sigma(w_1)}=\frac{\sigma(E_{total})}{\sigma(Out_{h_1})}* \frac{\sigma(Out_{h_1})}{\sigma(net_{h_1})} * \frac{\sigma(net_{h_1})}{\sigma(w_1)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mtext>＝</mtext><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>2</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>2</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo mathvariant="normal">≠</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>2</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\sigma(E_{total})}{\sigma(Out_{h_1})}＝ \frac{\sigma(E_{o1})+\sigma(E_{o2})}{\sigma(Out_{h_1})}= \frac{\sigma(E_{o1})}{\sigma(Out_{h_1})}+ \frac{\sigma(E_{o2})}{\sigma(Out_{h_1})} \neq   \frac{\sigma(E_{o1}+E_{o2})}{\sigma(Out_{h_1})}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">＝</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><msub><mi>o</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>∗</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><msub><mi>o</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><msub><mi>h</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex"> \frac{\sigma(E_{o1})}{\sigma(Out_{h_1})}=\frac{\sigma(E_{o1})}{\sigma(net_{o_1})}* \frac{\sigma(net_{o_1})}{\sigma(Out_{h_1})}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><msub><mi>o</mi><mn>1</mn></msub></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>∗</mo><mfrac><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>O</mi><mi>u</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>n</mi><mi>e</mi><msub><mi>t</mi><mrow><mi>o</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\sigma(E_{o1})}{\sigma(net_{o_1})}=\frac{\sigma(E_{o1})}{\sigma(Out_{o1})} * \frac{\sigma(Out_{o1})}{\sigma(net_{o1})}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3631em;vertical-align:-0.9361em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>通过以上公式可以计算出，目标函数对权重<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">w_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的梯度。</p>
<p>参考：<br>
<a href="https://blog.csdn.net/zhaomengszu/article/details/77834845">大白话讲解BP算法</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>链式求导</tag>
      </tags>
  </entry>
  <entry>
    <title>AlexNet：ImageNet classification with deep convolutional neural networks</title>
    <url>/2017/03/02/AlexNet%EF%BC%9AImageNet%20classification%20with%20deep%20convolutional%20neural%20networks/</url>
    <content><![CDATA[<p>卷积神经网络从这里开始开始火起来，主要内容包括：(1)使用relu训练网络；(2)使用LRN层；(3)使用数据增强；(4)使用dropout；(5)使用重叠池化</p>
<a id="more"></a>
<ul>
<li>
<p>什么是AlexNet？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/AlexNet-20230408135804.png" alt="AlexNet-20230408135804" /></li>
<li>AlexNet是由Alex Krizhevsky 提出的<strong>首个应用于图像分类的深层卷积神经网络</strong></li>
<li>AlexNet和LeNet 很像，基础模块均是：卷积+激活+下采样，但是AlexNet更深</li>
</ul>
</li>
<li>
<p>AlexNet的网络结构？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/AlexNet-20230408135805.png" alt="" /></li>
<li><strong>训练阶段</strong>： 每张训练图片256x256，然后我们随机裁剪出224x224大小的图片，作为CNN的输入进行训练</li>
<li><strong>测试阶段</strong>： 输入256x256大小的图片，我们从图片的5个指定的方位(上下左右+中间)进行裁剪出5张224x224大小的图片，然后水平镜像一下再裁剪5张，这样总共有10张；然后我们把这10张裁剪图片分别送入已经训练好的CNN中，分别预测结果，最后用这10个结果的平均作为最后的输出</li>
<li>8个学习层，包括5个卷积层和3个全连接层，其余层为 局部响应归一化(Local Response Normalization,LRN)层，池化层，softmax 输出层</li>
</ul>
</li>
<li>
<p>AlexNet的损失函数？</p>
<ul>
<li>AlexNet输入是图片(c,h,w)，输出是1000，表示该图片的分类结果</li>
<li>AlexNet使用交叉熵损失(CrossEntropyLoss) 计算损失</li>
</ul>
</li>
<li>
<p>Alexnet中为什么选择使用relu作为激活函数，而不是tanh？</p>
<ul>
<li>tanh 是饱和激活函数，而 Relu 是非饱和的，饱和激活函数更难训练网络，非饱和函数可以让梯度传播到更深层的网络中</li>
<li>在同等训练效果下，使用relu比tanh训练更快<br />
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/AlexNet-20230408135806.png" alt="AlexNet-20230408135806" /></li>
</ul>
</li>
<li>
<p>Alexnet如何使用多GPU进行训练？</p>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/AlexNet-20230408135804.png" alt="AlexNet-20230408135804" /></li>
<li>将每层一半的内核（或神经元）分别放在2个GPU上</li>
<li>第三层从第二层的2个GPU获取输入，而第四层从第三层的各自GPU获取输入</li>
<li>GPU的交叉连接，类似交叉验证，减低了模型过拟合，最终使得分类top-1,top5错误率降低1.7%和1.2%</li>
<li>AlexNet通过通过分组filter训练模型，类似于分组卷积(Group Convolution) ，之所以能减少过拟合，本质是分组卷积降低了filter之间的依赖，相当于正则化(regularization)模型，详细查看：为什么分组卷积有用</li>
</ul>
</li>
<li>
<p>如何理解Alexnet中的重叠池化？</p>
<ul>
<li>重叠池化（Overlapping Pooling）使得Alexnet在ImageNet上的top-1和top-5的错误率分别降低了0.4%和0.3%</li>
<li>使用后，过拟合 (overfitting)现象出现减少</li>
</ul>
</li>
<li>
<p>AlexNet如何减少过拟合？</p>
<ul>
<li><strong>数据增强</strong>：（1）取4角+中心的224＊224区域并进行平移及水平翻转，获得10倍数据量；(2)PCA颜色调整： 比如说，如果你的图片呈现紫色，即主要含有红色和蓝色，绿色很少，然后PCA颜色增强算法就会对红色和蓝色增减很多，绿色变化相对少一点，所以使总体的颜色保持一致</li>
<li><strong>使用丢弃正则化(Dropout)</strong>：避免过拟合的同时，也较少模型收敛时间</li>
</ul>
</li>
<li>
<p>为什么输入到AlexNet网络的图片必须大小固定？</p>
<ul>
<li>卷积层不管原图或featrue map的大小，不需要固定</li>
<li><strong>全连接层因为需要固定输出数量，所以需要固定尺寸输入，导致网络需要固定输入</strong></li>
<li>一般在前处理上使用resize或corp的操作，将数据变为固定尺寸输入；也可以使用空间金字塔池化（Spatial Pyramid Pooling,SPP）将不同大小的图片转为一致的尺寸</li>
</ul>
</li>
<li>
<h2 id="如何使用-pytorch-定义-alexnet"><a class="markdownIt-Anchor" href="#如何使用-pytorch-定义-alexnet"></a> 如何使用 Pytorch 定义 AlexNet？</h2>
<pre><code><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlexNet</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, num_classes=<span class="number">1000</span></span>):</span></span><br><span class="line">	<span class="built_in">super</span>(AlexNet, self).__init__()</span><br><span class="line">	self.features = nn.Sequential(</span><br><span class="line">		nn.Conv2d(<span class="number">3</span>, <span class="number">64</span>, kernel_size=<span class="number">11</span>, stride=<span class="number">4</span>, padding=<span class="number">2</span>),</span><br><span class="line">		nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">		nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">		nn.Conv2d(<span class="number">64</span>, <span class="number">192</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">		nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">		nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">		nn.Conv2d(<span class="number">192</span>, <span class="number">384</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">		nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">		nn.Conv2d(<span class="number">384</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">		nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">		nn.Conv2d(<span class="number">256</span>, <span class="number">256</span>, kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>),</span><br><span class="line">		nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">		nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>),</span><br><span class="line">	)</span><br><span class="line">	self.avgpool = nn.AdaptiveAvgPool2d((<span class="number">6</span>, <span class="number">6</span>))</span><br><span class="line">	self.classifier = nn.Sequential(</span><br><span class="line">		nn.Dropout(),</span><br><span class="line">		nn.Linear(<span class="number">256</span> * <span class="number">6</span> * <span class="number">6</span>, <span class="number">4096</span>),</span><br><span class="line">		nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">		nn.Dropout(),</span><br><span class="line">		nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>),</span><br><span class="line">		nn.ReLU(inplace=<span class="literal">True</span>),</span><br><span class="line">		nn.Linear(<span class="number">4096</span>, num_classes),</span><br><span class="line">	)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">	x = self.features(x)</span><br><span class="line">	x = self.avgpool(x)</span><br><span class="line">	x = torch.flatten(x, <span class="number">1</span>)</span><br><span class="line">	x = self.classifier(x)</span><br><span class="line">	<span class="keyword">return</span> x</span><br></pre></td></tr></table></figure>
</code></pre>
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/d5cvjdwLTcRZ7SljkPZSgWfs-TOXgFrZO2yInxZUxUt8iPAeSqLSxYtY41w8inwh0-hDdtT8-ScMHruLv10AbUHscKcJlVpikNKw59oK6EOSP2bzXp_wW6uwHT68fl8A.png" alt="" /></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>LeNet：Gradient-Based Learning Applied to Document Recognition</title>
    <url>/2016/12/21/LeNet%EF%BC%9AGradient-Based%20Learning%20Applied%20to%20Document%20Recognition/</url>
    <content><![CDATA[<p>首次利用卷积神经网络进行图片分类的，网络比较简单，就是5层，2个卷积层，2个池化层和1个全连接层</p>
<a id="more"></a>
<ul>
<li>什么是LeNet？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LeNet-5-20230408140346.png" alt="" /></li>
<li>LeNet-5是由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>C</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">LeCun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span></span></span></span> 提出的一种用于识别手写数字和机器印刷字符的卷积神经网络（Convolutional Neural Network，CNN），其命名来源于作者<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>C</mi><mi>u</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">LeCun</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span></span></span></span>的名字，5则是其研究成果的代号，在LeNet-5之前还有LeNet-4和LeNet-1鲜为人知</li>
<li>LeNet-5阐述了图像中像素特征之间的相关性能够由参数共享的卷积操作所提取，<strong>卷积-&gt;下采样（池化）-&gt;非线性映射</strong>这样的组合结构是当前流行的大多数深度图像识别网络的基础</li>
<li>缺点：(1)设计较为简单，因此其处理复杂数据的能力有限 ;(2)全连接层的计算代价过大，以后使用卷积层替代</li>
</ul>
</li>
<li>LeNet的网络结构？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/LeNet-5-20230408140346.png" alt="" /></li>
<li>LeNet5 包括2个卷积层、2个下采样层和3个全连接层</li>
</ul>
</li>
<li>
<h2 id="如何使用-pytorch-定义分类模型-lenet"><a class="markdownIt-Anchor" href="#如何使用-pytorch-定义分类模型-lenet"></a> 如何使用 Pytorch 定义分类模型 LeNet？</h2>
<pre><code><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Defining the network (LeNet-5)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeNet5</span>(<span class="params">torch.nn.Module</span>):</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">		<span class="built_in">super</span>(LeNet5, self).__init__()</span><br><span class="line">		<span class="comment"># Convolution (In LeNet-5, 32x32 images are given as input. Hence padding of 2 is done below)</span></span><br><span class="line">		self.conv1 = torch.nn.Conv2d(in_channels=<span class="number">1</span>, out_channels=<span class="number">6</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>, bias=<span class="literal">True</span>)</span><br><span class="line">		<span class="comment"># Max-pooling</span></span><br><span class="line">		self.max_pool_1 = torch.nn.MaxPool2d(kernel_size=<span class="number">2</span>)</span><br><span class="line">		<span class="comment"># Convolution</span></span><br><span class="line">		self.conv2 = torch.nn.Conv2d(in_channels=<span class="number">6</span>, out_channels=<span class="number">16</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>, bias=<span class="literal">True</span>)</span><br><span class="line">		<span class="comment"># Max-pooling</span></span><br><span class="line">		self.max_pool_2 = torch.nn.MaxPool2d(kernel_size=<span class="number">2</span>)</span><br><span class="line">		<span class="comment"># Fully connected layer</span></span><br><span class="line">		<span class="comment"># self.fc1 = torch.nn.Linear(16*5*5, 120)   # 28＊28输入时使用</span></span><br><span class="line">		self.fc1 = torch.nn.Linear(<span class="number">576</span>, <span class="number">120</span>)   <span class="comment"># convert matrix with 16*5*5 (= 400) features to a matrix of 120 features (columns)</span></span><br><span class="line">		self.fc2 = torch.nn.Linear(<span class="number">120</span>, <span class="number">84</span>)       <span class="comment"># convert matrix with 120 features to a matrix of 84 features (columns)</span></span><br><span class="line">		self.fc3 = torch.nn.Linear(<span class="number">84</span>, <span class="number">10</span>)        <span class="comment"># convert matrix with 84 features to a matrix of 10 features (columns)</span></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">		<span class="comment"># convolve, then perform ReLU non-linearity</span></span><br><span class="line">		x = torch.nn.functional.relu(self.conv1(x))</span><br><span class="line">		<span class="comment"># max-pooling with 2x2 grid</span></span><br><span class="line">		x = self.max_pool_1(x)</span><br><span class="line">		<span class="comment"># convolve, then perform ReLU non-linearity</span></span><br><span class="line">		x = torch.nn.functional.relu(self.conv2(x))</span><br><span class="line">		<span class="comment"># max-pooling with 2x2 grid</span></span><br><span class="line">		x = self.max_pool_2(x)</span><br><span class="line">		<span class="comment"># first flatten &#x27;max_pool_2_out&#x27; to contain 16*5*5 columns</span></span><br><span class="line">		<span class="comment"># read through https://stackoverflow.com/a/42482819/7551231</span></span><br><span class="line">		<span class="comment"># x = x.view(-1, 16*5*5) # 28＊28输入时使用</span></span><br><span class="line">		x = x.view(-<span class="number">1</span>, <span class="number">576</span>)</span><br><span class="line">		print(x.shape)</span><br><span class="line">		<span class="comment"># FC-1, then perform ReLU non-linearity</span></span><br><span class="line">		x = torch.nn.functional.relu(self.fc1(x))</span><br><span class="line">		<span class="comment"># FC-2, then perform ReLU non-linearity</span></span><br><span class="line">		x = torch.nn.functional.relu(self.fc2(x))</span><br><span class="line">		<span class="comment"># FC-3</span></span><br><span class="line">		x = self.fc3(x)</span><br><span class="line">		<span class="keyword">return</span> x</span><br></pre></td></tr></table></figure>
  - ![](https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/fCIQUETgcuYap5HKnvkFj_MOjh0xALcSAaWNg6er5vCY3p2m_ri2VbsnMAzafSRCj9DlDI4k-oZhKFEbMaa1fvWB2cByzT7r9bEC4h7hQNCC0WSGLkEv0a7D9O9b42oU.png)
</code></pre>
</li>
<li>LeNet与AlexNet在网络结构上有什么差异？
<ul>
<li><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/mi2LNk7ZEHJqhhRWugPGnIC05Cdn5D3mKhHVINZFNM28OYTkB4DXJBekKvqyZgLxDjv335cY4a8h3llMAA6ruK0o-SrYc5siquSi38TSNGIy_xkTTErtQOTOypl7IA0g.png" alt="" /></li>
<li>LeNet5： 包括2个卷积层、2个下采样层和3个全连接层</li>
<li>AlexNet：5个卷积层、2个全连接隐藏层和1个全连接输出层</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>图片分类</tag>
      </tags>
  </entry>
  <entry>
    <title>Zotero使用教程(2)-数据备份</title>
    <url>/2016/06/02/Zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B(2)-%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/</url>
    <content><![CDATA[<p>这篇文章的目标是让你无论是 <code>换系统</code>，<code>重新安装zotero</code>等都可以还原回你的文献库，而且整个过程基本是自动完成的。</p>
<a id="more"></a>
<p>这部分解决下面的两种情况：</p>
<blockquote>
<p>1.zotero有自己既定的一套存储方式，不是一般的文件管理器那样直接看到其pdf，这个可以通过前篇文章的插件zotfile解决。但是<strong>如果想备份这个插件导出来的pdf,该如何解决呢？</strong><br />
2.zotero不仅保存了pdf,还有各种各样的笔记，网页，如果仅仅保存pdf,显然是不够的。虽然zotero支持整个文献库的导入导出，但是得时常去手动备份，很是麻烦。</p>
</blockquote>
<p>在这里我极度向大家推荐，跨平台的同步工具 <code>坚果云</code>，只需要往设定的同步盘放入文件，文件就自动备份到云端，并且有移动版本，可以随时随地查看自己的文献。</p>
<p>下面是我的坚果云目录：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082100615.png" alt="坚果云目录设置" /></p>
<p>目录解释：<br />
<strong>Zotero</strong>  是Zotero的存储目录，无论你在zotero作笔记，加标签等操作，zotero会存储到这里，然后坚果云自动同步，实现备份,重新安装zotero时，只需要设置该目录为存储目录，文献库就会和原来一模一样（包括笔记，网页啥的都在啊）。</p>
<p><strong>Zotero_papers</strong> 是使用插件zotfile导出的pdf文件目录，在Zotero导出到该目录后，坚果云会自动同步到云端，实现备份</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082100987.png" alt="移动端查看导出的pdf" /></p>
<p>注：图片中导出pdf的有文件夹的层级关系，是因为我在Zotero的文献就是按照层级划分的，插件zotfile会按照层级自动新建文件夹到<strong>Zotero_papers</strong></p>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Zotero</tag>
      </tags>
  </entry>
  <entry>
    <title>Calibre中使用DeDRM插件进行Kindle电子书解锁</title>
    <url>/2016/06/01/Calibre%E4%B8%AD%E4%BD%BF%E7%94%A8DeDRM%E6%8F%92%E4%BB%B6%E8%BF%9B%E8%A1%8CKindle%E7%94%B5%E5%AD%90%E4%B9%A6%E8%A7%A3%E9%94%81/</url>
    <content><![CDATA[<p>本文利用calire的DeDRM插件解锁kindle的加密电子书，文中需要使用kindle的设备号，意味着待解锁的电子书必须是已经购买的</p>
<a id="more"></a>
<p>废话不多说，下面是Calibre和DeDRM插件的下载地址：</p>
<blockquote>
<p><a href="https://calibre-ebook.com/download">https://calibre-ebook.com/download</a><br />
<a href="https://github.com/apprenticeharper/DeDRM_tools/releases/tag/v6.5.5">https://github.com/apprenticeharper/DeDRM_tools/releases/tag/v6.5.5</a></p>
</blockquote>
<p>假设你已经安装好Calibre，并下载好DeDRM插件，只需走以下三个步骤即可完成解锁。</p>
<h1 id="1在calibre上安装dedrm插件"><a class="markdownIt-Anchor" href="#1在calibre上安装dedrm插件"></a> 1.在Calibre上安装DEDRM插件</h1>
<p>将下载的DeDRM插件进行解压，需要强调的是：插件文件在下面图示路径中。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042271.png" alt="图2-插件文件路径" /></p>
<p>在Calibre中点击<code>首选项</code>进入设置界面，点击<code>插件</code>按钮进入插件管理界面。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042254.png" alt="图3-插件管理界面" /></p>
<p>点击<code>从文件中加载插件</code>，然后选择上图2红框的文件，完成插件的安装，安装完成可以在<em>文件类型</em>中找到插件。</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042115.png" alt="图4-安装插件" /></p>
<h1 id="2配置dedrm插件"><a class="markdownIt-Anchor" href="#2配置dedrm插件"></a> 2.配置DeDRM插件</h1>
<p>双击进入插件配置界面，填入<strong>Kindle设备序列号</strong>，即完成配置，步骤如下：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082042191.png" alt="图5-配置插件" /></p>
<p><strong>Kindle设备序列号</strong>通过登录自己的亚马逊帐号找到，步骤如下：</p>
<p><img src="./.images/1613525776983.png" alt="图6-查找Kindle设备序列号" /></p>
<p>注意：填入序列号不能包含空格</p>
<h1 id="3添加书籍"><a class="markdownIt-Anchor" href="#3添加书籍"></a> 3.添加书籍</h1>
<p>使用Calibre添加书籍或者将书籍直接拖入，即可完成解锁，书籍不在有DRM保护。</p>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Calibre</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux文本处理三剑客之awk</title>
    <url>/2016/06/01/Linux%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8Bawk/</url>
    <content><![CDATA[<p>本文针对linux中的文本处理“三剑客”之一的awk命令进行使用解释，awk对以行为单位对文本数据进行处理</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看系统环境</span></span><br><span class="line">!lsb_release -a</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID:	LinuxMint</span><br><span class="line">Description:	Linux Mint 19.3 Tricia</span><br><span class="line">Release:	19.3</span><br><span class="line">Codename:	tricia</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看文本内容</span></span><br><span class="line">!cat awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 M.Tansley     05/99     48311     Green     8     40     44</span><br><span class="line">2 J.Lulu     06/99     48317     green     9     24     26</span><br><span class="line">3 P.Bunny,02/99,48,Yellow,12,35,28</span><br><span class="line">4 J.Troll:07/99:4842:Brown-3:12:26:26</span><br><span class="line">5 L.Tansley:05/99:4712:Brown-2:12:30:28</span><br></pre></td></tr></table></figure>
<p>注意：jupyter运行linux指令需要在指令前加<code>!</code></p>
<h2 id="命令格式"><a class="markdownIt-Anchor" href="#命令格式"></a> 命令格式</h2>
<p><strong>awk 命令的基本格式为：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123; 命令1 &#125; 模式&#123; 命令2 &#125; END&#123; 命令3 &#125;&#x27;</span> 文件</span><br></pre></td></tr></table></figure>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082047085.png" alt="awk工作流程" /></p>
<ul>
<li>1、BEGIN 执行 BEGIN 块的内容，即<code>命令1</code>内容,可选。</li>
<li>2、完成 BEGIN 块的执行，开始执行body块。</li>
<li>3、读入有 \n 换行符分割的记录。</li>
<li>4、将记录按指定的域分隔符划分域，填充域。</li>
<li>5、依次执行各 BODY 块，pattern 部分匹配该行内容成功后，才会执行<code>命令2</code>的内容。</li>
<li>6、循环读取并执行各行直到文件结束，完成body块执行。</li>
<li>7、开始 END 块执行，<code>命令3</code>内容，END 块可以输出最终结果,可选。</li>
</ul>
<p><strong>选用参数</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-F fs</td>
<td>指定以 fs 作为输入行的分隔符，awk 命令默认分隔符为空格或制表符。</td>
</tr>
<tr>
<td>-f file</td>
<td>从脚本文件中读取 awk 脚本指令，以取代直接在命令行中输入指令。</td>
</tr>
<tr>
<td>-v var=val</td>
<td>在执行处理过程之前，设置一个变量 var，并给其设备初始值为 val。</td>
</tr>
</tbody>
</table>
<p><strong>awk 命令的脚本命令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;匹配规则&#123;执行命令&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>1.匹配规则：可以使用字符串（比如 /demo/，表示查看含有 demo 字符串的行）或者正则表达式指定</p>
<p>2.执行命令：需要用大括号（{}）括起来</p>
</blockquote>
<p>注意：</p>
<ul>
<li>整个脚本命令是用单引号（‘’）括起</li>
<li>在 awk 程序执行时，如果没有指定执行命令，则默认会把匹配的行输出；如果不指定匹配规则，则默认匹配文本中所有的行。</li>
</ul>
<p><strong>awk 命令的运行方式：</strong></p>
<ul>
<li>1.awk命令行: #awk</li>
<li>2.awk程序文件: #awk -f  /data/awk_script//将swk命令写到文件中，然后调用这个文件</li>
<li>3.awk脚本: #!/bin/awk -f</li>
</ul>
<h2 id="详细使用"><a class="markdownIt-Anchor" href="#详细使用"></a> 详细使用</h2>
<h3 id="指定分隔符"><a class="markdownIt-Anchor" href="#指定分隔符"></a> 指定分隔符</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> awk_text</span><br><span class="line">print(<span class="string">&#x27;--------------------------------------------------------------&#x27;</span>)   </span><br><span class="line">!awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 M.Tansley     05/99     48311     Green     8     40     44</span><br><span class="line">2 J.Lulu     06/99     48317     green     9     24     26</span><br><span class="line">3 P.Bunny,02/99,48,Yellow,12,35,28</span><br><span class="line">4 J.Troll</span><br><span class="line">5 L.Tansley</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line">1 M.Tansley     05/99     48311     Green     8     40     44</span><br><span class="line">2 J.Lulu     06/99     48317     green     9     24     26</span><br><span class="line">3 P.Bunny,02/99,48,Yellow,12,35,28</span><br><span class="line">4 J.Troll</span><br><span class="line">5 L.Tansley</span><br></pre></td></tr></table></figure>
<h3 id="从文件中读取程序"><a class="markdownIt-Anchor" href="#从文件中读取程序"></a> 从文件中读取程序</h3>
<p>跟 sed 一样，awk 允许将脚本命令存储到文件中，然后再在命令行中引用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!cat awk.sh</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;print  &quot;The fifth number after&quot;  $1  &quot;is&quot;   $6&#125;</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk -f awk.sh awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">The fifth number after1is8</span><br><span class="line">The fifth number after2is9</span><br><span class="line">The fifth number after3is</span><br><span class="line">The fifth number after4is</span><br><span class="line">The fifth number after5is</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!cat awk.func</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/awk -f</span></span><br><span class="line"><span class="meta">#</span><span class="bash">运行前</span></span><br><span class="line">BEGIN &#123;</span><br><span class="line">    math = 0</span><br><span class="line">    english = 0</span><br><span class="line">    computer = 0</span><br><span class="line">    printf &quot;NAME    NO.   MATH  ENGLISH  COMPUTER   TOTAL\n&quot;</span><br><span class="line">    printf &quot;---------------------------------------------\n&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">运行中</span></span><br><span class="line">&#123;</span><br><span class="line">    math+=$3</span><br><span class="line">    english+=$4</span><br><span class="line">    computer+=$5</span><br><span class="line">    printf &quot;%-6s %-6s %4d %8d %8d %8d\n&quot;, $1, $2, $3,$4,$5, $3+$4+$5</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">运行后</span></span><br><span class="line">END &#123;</span><br><span class="line">    printf &quot;---------------------------------------------\n&quot;</span><br><span class="line">    printf &quot;  TOTAL:%10d %8d %8d \n&quot;, math, english, computer</span><br><span class="line">    printf &quot;AVERAGE:%10.2f %8.2f %8.2f\n&quot;, math/NR, english/NR, computer/NR</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk -f awk.func score</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">NAME    NO.   MATH  ENGLISH  COMPUTER   TOTAL</span><br><span class="line">---------------------------------------------</span><br><span class="line">Marry  2143     78       84       77      239</span><br><span class="line">Jack   2321     66       78       45      189</span><br><span class="line">Tom    2122     48       77       71      196</span><br><span class="line">Mike   2537     87       97       95      279</span><br><span class="line">Bob    2415     40       57       62      159</span><br><span class="line">---------------------------------------------</span><br><span class="line">  TOTAL:       319      393      350 </span><br><span class="line">AVERAGE:     63.80    78.60    70.00</span><br></pre></td></tr></table></figure>
<h3 id="设置变量"><a class="markdownIt-Anchor" href="#设置变量"></a> 设置变量</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk -v a=<span class="number">1</span> <span class="string">&#x27;&#123;print NR,$2,$2+a&#125;&#x27;</span> awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 M.Tansley 1</span><br><span class="line">2 J.Lulu 1</span><br><span class="line">3 P.Bunny,02/99,48,Yellow,12,35,28 1</span><br><span class="line">4 J.Troll:07/99:4842:Brown-3:12:26:26 1</span><br><span class="line">5 L.Tansley:05/99:4712:Brown-2:12:30:28 1</span><br></pre></td></tr></table></figure>
<h3 id="内建变量"><a class="markdownIt-Anchor" href="#内建变量"></a> 内建变量</h3>
<table>
<thead>
<tr>
<th style="text-align:center">序号</th>
<th style="text-align:center">变量</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">$n</td>
<td style="text-align:left">当前记录的第n个字段，字段间由FS分隔</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">$0</td>
<td style="text-align:left">完整的输入记录</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">ARGC</td>
<td style="text-align:left">命令行参数的数目</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">ARGIND</td>
<td style="text-align:left">命令行中当前文件的位置(从0开始算)</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">ARGV</td>
<td style="text-align:left">包含命令行参数的数组</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">CONVFMT</td>
<td style="text-align:left">数字转换格式(默认值为%.6g)ENVIRON环境变量关联数组</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">ERRNO</td>
<td style="text-align:left">最后一个系统错误的描述</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">FIELDWIDTHS</td>
<td style="text-align:left">字段宽度列表(用空格键分隔)</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">FILENAME</td>
<td style="text-align:left">当前文件名</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">FNR</td>
<td style="text-align:left">各文件分别计数的行号</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">FS</td>
<td style="text-align:left">字段分隔符(默认是任何空格)</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">IGNORECASE</td>
<td style="text-align:left">如果为真，则进行忽略大小写的匹配</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center">NF</td>
<td style="text-align:left">一条记录的字段的数目</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td style="text-align:center">NR</td>
<td style="text-align:left">已经读出的记录数，就是行号，从1开始</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">OFMT</td>
<td style="text-align:left">数字的输出格式(默认值是%.6g)</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td style="text-align:center">OFS</td>
<td style="text-align:left">输出记录分隔符（输出换行符），输出时用指定的符号代替换行符</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td style="text-align:center">ORS</td>
<td style="text-align:left">输出记录分隔符(默认值是一个换行符)</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td style="text-align:center">RLENGTH</td>
<td style="text-align:left">由match函数所匹配的字符串的长度</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td style="text-align:center">RS</td>
<td style="text-align:left">记录分隔符(默认是一个换行符)</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td style="text-align:center">RSTART</td>
<td style="text-align:left">由match函数所匹配的字符串的第一个位置</td>
</tr>
<tr>
<td style="text-align:center">21</td>
<td style="text-align:center">SUBSEP</td>
<td style="text-align:left">数组下标分隔符(默认值是/034)</td>
</tr>
</tbody>
</table>
<h4 id="数据字段变量"><a class="markdownIt-Anchor" href="#数据字段变量"></a> 数据字段变量</h4>
<p>awk 会自动给<code>一行</code>中的每个数据元素分配一个变量</p>
<table>
<thead>
<tr>
<th>变量</th>
<th style="text-align:left">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>$0</td>
<td style="text-align:left">代表整个文本行；</td>
</tr>
<tr>
<td>$1</td>
<td style="text-align:left">代表文本行中的第 1 个数据字段；</td>
</tr>
<tr>
<td>$2</td>
<td style="text-align:left">代表文本行中的第 2 个数据字段；</td>
</tr>
<tr>
<td>$n</td>
<td style="text-align:left">代表文本行中的第 n 个数据字段。</td>
</tr>
</tbody>
</table>
<p>注意：在 awk 中，默认的字段分隔符是任意的空白字符（例如空格或制表符），awk 在读取一行文本时，会用预定义的字段分隔符划分每个数据字段</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看全部</span></span><br><span class="line">!awk <span class="string">&#x27;&#123;print $0&#125;&#x27;</span> awk_text</span><br><span class="line">print(<span class="string">&#x27;--------------------------------------------------------&#x27;</span>)</span><br><span class="line"><span class="comment"># 查看每一行的第一个内容</span></span><br><span class="line">!awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> awk_text</span><br><span class="line">print(<span class="string">&#x27;--------------------------------------------------------&#x27;</span>)</span><br><span class="line"><span class="comment"># 查看每一行的最后一个内容</span></span><br><span class="line">!awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span> awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 M.Tansley     05/99     48311     Green     8     40     44</span><br><span class="line">2 J.Lulu     06/99     48317     green     9     24     26</span><br><span class="line">3 P.Bunny,02/99,48,Yellow,12,35,28</span><br><span class="line">4 J.Troll:07/99:4842:Brown-3:12:26:26</span><br><span class="line">5 L.Tansley:05/99:4712:Brown-2:12:30:28</span><br><span class="line">--------------------------------------------------------</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">--------------------------------------------------------</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td></tr></table></figure>
<h4 id="其他参数"><a class="markdownIt-Anchor" href="#其他参数"></a> 其他参数</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk <span class="string">&#x27;BEGIN&#123;printf &quot;%4s %4s %4s %4s %4s %4s %4s %4s %4s\n&quot;,&quot;FILENAME&quot;,&quot;ARGC&quot;,&quot;FNR&quot;,&quot;FS&quot;,&quot;NF&quot;,&quot;NR&quot;,&quot;OFS&quot;,&quot;ORS&quot;,&quot;RS&quot;;printf &quot;---------------------------------------------\n&quot;&#125; &#123;printf &quot;%4s %4s %4s %4s %4s %4s %4s %4s %4s\n&quot;,FILENAME,ARGC,FNR,FS,NF,NR,OFS,ORS,RS&#125;&#x27;</span> awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FILENAME ARGC  FNR   FS   NF   NR  OFS  ORS   RS</span><br><span class="line">---------------------------------------------</span><br><span class="line">awk_text    2    1         8    1         </span><br><span class="line">awk_text    2    2         8    2         </span><br><span class="line">awk_text    2    3         2    3         </span><br><span class="line">awk_text    2    4         2    4         </span><br><span class="line">awk_text    2    5         2    5         </span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk <span class="string">&#x27;BEGIN&#123;FS=&quot;[ :]+&quot;&#125;&#123;print  $1,$2&#125;&#x27;</span>   awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 M.Tansley</span><br><span class="line">2 J.Lulu</span><br><span class="line">3 P.Bunny,02/99,48,Yellow,12,35,28</span><br><span class="line">4 J.Troll</span><br><span class="line">5 L.Tansley</span><br></pre></td></tr></table></figure>
<h3 id="多个命令"><a class="markdownIt-Anchor" href="#多个命令"></a> 多个命令</h3>
<p>awk 允许将多条命令组合成一个正常的程序。要在命令行上的程序脚本中使用多条命令，只要在命令之间放个<code>分号</code>即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!echo <span class="string">&quot;My name is Tom&quot;</span> | awk <span class="string">&#x27;&#123;$4=&quot;ann&quot;;print $0&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">My name is ann</span><br></pre></td></tr></table></figure>
<h3 id="begin关键字与end关键字"><a class="markdownIt-Anchor" href="#begin关键字与end关键字"></a> BEGIN关键字与END关键字</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk <span class="string">&#x27;BEGIN &#123; for (i = 1; i &lt;= 5; ++i) print i &#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure>
<h3 id="printf指定输出格式"><a class="markdownIt-Anchor" href="#printf指定输出格式"></a> printf指定输出格式</h3>
<p>printf “FORMAT” ,item1,item2,…//指格式化输出，必须指定FORMAT，不会自动换行，换行使用换行符\n;FORMAT中需要为每个item指定格式符:与item–对应</p>
<p>%c: 显示字符的ASCII码<br />
%d, %i: 显示十进制整数<br />
%e, %E:显示科学计数法数值<br />
%f：显示为浮点数<br />
%g, %G：以科学计数法或浮点形式显示数值<br />
%s：显示字符串<br />
%u：无符号整数<br />
%%: 显示%自身</p>
<p>修饰符：<br />
#[.#]：第一个数字控制显示的宽度；第二个#表示小数点后精度，%3.1f<br />
-: 左对齐（默认右对齐） %-15s<br />
+：显示数值的正负符号 %+d</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk <span class="string">&#x27;BEGIN &#123;printf &quot;%s %s %-4.2f\n&quot;,&quot;TOM&quot;,&quot;man&quot;,66.1234&#125;&#x27;</span></span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123;printf &quot;%-10s %-8s %-4.2f\n&quot;,&quot;TOM&quot;,&quot;man&quot;,66.1234&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">TOM man 66.12</span><br><span class="line">TOM        man      66.12</span><br></pre></td></tr></table></figure>
<h3 id="操作符"><a class="markdownIt-Anchor" href="#操作符"></a> 操作符</h3>
<ul>
<li>算数操作符 ： x+y, x-y,x*y, x/y, x^y, x%y；-x: 转换为负数 ；+x: 转换为数值</li>
<li>赋值操作符 ： =, +=, -=, *=, /=, %=, ^=   ++, –</li>
<li>比较操作符：==, !=, &gt;, &gt;=, &lt;, &lt;=</li>
<li>模式匹配符：~：左边是否和右边匹配包含 !~：是否不匹配</li>
<li>逻辑操作符:与&amp;&amp;，或||，非!</li>
<li>条件表达式（三目表达式）：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!echo <span class="string">&quot;1.7 2.52&quot;</span> | awk <span class="string">&#x27;&#123;printf (&quot;%2f\n&quot;,$1)&#125;&#x27;</span></span><br><span class="line">!echo <span class="string">&quot;1.7 2.52&quot;</span> | awk <span class="string">&#x27;&#123;printf (&quot;%d\n&quot;,$2)&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.700000</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="分支语句"><a class="markdownIt-Anchor" href="#分支语句"></a> 分支语句</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk <span class="string">&#x27;BEGIN &#123;num = 10; if (num % 2 == 0) printf &quot;%d 是偶数\n&quot;, num &#125;&#x27;</span></span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123;num = 11; if (num % 2 == 0) printf &quot;%d 是偶数\n&quot;, num; else printf &quot;%d 是奇数\n&quot;, num &#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">10 是偶数</span><br><span class="line">11 是奇数</span><br></pre></td></tr></table></figure>
<h3 id="循环语句"><a class="markdownIt-Anchor" href="#循环语句"></a> 循环语句</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&#x27;For----------------------------------------------&#x27;</span>)</span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123; for (i = 1; i &lt;= 2; ++i) print i &#125;&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;While----------------------------------------------&#x27;</span>)</span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123;i = 1; while (i &lt; 3) &#123; print i; ++i &#125; &#125;&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;Break----------------------------------------------&#x27;</span>)</span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123;sum = 0; for (i = 0; i &lt; 10; ++i) &#123;sum += i; if (sum &gt; 15) break; else print &quot;Sum =&quot;, sum &#125;&#125;&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;Continue----------------------------------------------&#x27;</span>)</span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123;for (i = 1; i &lt;= 10; ++i) &#123;if (i % 2 == 0) print i; else continue;&#125;&#125;&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;Exit----------------------------------------------&#x27;</span>)</span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123;sum = 0; for (i = 0; i &lt; 10; ++i) &#123;sum += i; if (sum &gt; 15) exit(10); else print &quot;Sum =&quot;, sum &#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">For----------------------------------------------</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">While----------------------------------------------</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">Break----------------------------------------------</span><br><span class="line">Sum = 0</span><br><span class="line">Sum = 1</span><br><span class="line">Sum = 3</span><br><span class="line">Sum = 6</span><br><span class="line">Sum = 10</span><br><span class="line">Sum = 15</span><br><span class="line">Continue----------------------------------------------</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">10</span><br><span class="line">Exit----------------------------------------------</span><br><span class="line">Sum = 0</span><br><span class="line">Sum = 1</span><br><span class="line">Sum = 3</span><br><span class="line">Sum = 6</span><br><span class="line">Sum = 10</span><br><span class="line">Sum = 15</span><br></pre></td></tr></table></figure>
<h3 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h3>
<p><strong>语法格式:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array_name[index]=value</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk <span class="string">&#x27;BEGIN &#123;sites[&quot;runoob&quot;]=&quot;www.runoob.com&quot;;sites[&quot;google&quot;]=&quot;www.google.com&quot;;print sites[&quot;runoob&quot;] &quot;\n&quot; sites[&quot;google&quot;]&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">www.runoob.com</span><br><span class="line">www.google.com</span><br></pre></td></tr></table></figure>
<h3 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h3>
<h4 id="自定义函数"><a class="markdownIt-Anchor" href="#自定义函数"></a> 自定义函数</h4>
<p><strong>语法格式:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> function_name(argument1, argument2, ...)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">function</span> body</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>1.function_name 是用户自定义函数的名称。函数名称应该以字母开头，其后可以是数字、字母或下划线的自由组合。AWK 保留的关键字不能作为用户自定义函数的名称。</li>
<li>2.自定义函数可以接受多个输入参数，这些参数之间通过逗号分隔。参数并不是必须的。我们也可以定义没有任何输入参数的函数。</li>
<li>3.function body 是函数体部分，它包含 AWK 程序代码。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!cat awk.func2</span><br></pre></td></tr></table></figure>
<pre><code># 返回最小值
function find_min(num1, num2)
&#123;
  if (num1 &lt; num2)
    return num1
  return num2
&#125;

# 返回最大值
function find_max(num1, num2)
&#123;
  if (num1 &gt; num2)
    return num1
  return num2
&#125;

# 主函数
function main(num1, num2)
&#123;
  # 查找最小值
  result = find_min(10, 20)
  print &quot;Minimum =&quot;, result

  # 查找最大值
  result = find_max(10, 20)
  print &quot;Maximum =&quot;, result
&#125;

# 脚本从这里开始执行
BEGIN &#123;
  main(10, 20)
&#125;  
</code></pre>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk -f awk.func2</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Minimum = 10</span><br><span class="line">Maximum = 20</span><br></pre></td></tr></table></figure>
<h4 id="内置函数"><a class="markdownIt-Anchor" href="#内置函数"></a> 内置函数</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!awk <span class="string">&#x27;BEGIN &#123;param = 5; result = exp(param); printf &quot;The exponential value of %f is %f.\n&quot;, param, result;&#125;&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;------------------------------------------&#x27;</span>)</span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123;str = &quot;Hello, World&quot;;print &quot;String before replacement = &quot; str;sub(&quot;World&quot;, &quot;Jerry&quot;, str);print &quot;String after replacement = &quot; str&#125;&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;------------------------------------------&#x27;</span>)</span><br><span class="line">!awk <span class="string">&#x27;BEGIN&#123;info=&quot;this is a test2012test!&quot;;print index(info,&quot;11111&quot;)?&quot;ok&quot;:&quot;no found&quot;;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">The exponential value of 5.000000 is 148.413159.</span><br><span class="line">------------------------------------------</span><br><span class="line">String before replacement = Hello, World</span><br><span class="line">String after replacement = Hello, Jerry</span><br><span class="line">------------------------------------------</span><br><span class="line">no found</span><br></pre></td></tr></table></figure>
<h2 id="实例列举"><a class="markdownIt-Anchor" href="#实例列举"></a> 实例列举</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#从文件中找出长度大于10的行</span></span><br><span class="line">!awk <span class="string">&#x27;length&gt;38&#x27;</span> awk_text</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 M.Tansley     05/99     48311     Green     8     40     44</span><br><span class="line">2 J.Lulu     06/99     48317     green     9     24     26</span><br><span class="line">5 L.Tansley:05/99:4712:Brown-2:12:30:28</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#打印Hello world</span></span><br><span class="line">!awk <span class="string">&#x27;BEGIN &#123; print &quot;Hello, world!&quot; &#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Hello, world!</span><br></pre></td></tr></table></figure>
<hr />
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#9*9乘法表</span></span><br><span class="line">!seq <span class="number">9</span> | sed <span class="string">&#x27;H;g&#x27;</span> | awk -v RS=<span class="string">&#x27;&#x27;</span> <span class="string">&#x27;&#123;for(i=1;i&lt;=NF;i++)printf(&quot;%dx%d=%d%s&quot;, i, NR, i*NR, i==NR?&quot;\n&quot;:&quot;\t&quot;)&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1x1=1</span><br><span class="line">1x2=2	2x2=4</span><br><span class="line">1x3=3	2x3=6	3x3=9</span><br><span class="line">1x4=4	2x4=8	3x4=12	4x4=16</span><br><span class="line">1x5=5	2x5=10	3x5=15	4x5=20	5x5=25</span><br><span class="line">1x6=6	2x6=12	3x6=18	4x6=24	5x6=30	6x6=36</span><br><span class="line">1x7=7	2x7=14	3x7=21	4x7=28	5x7=35	6x7=42	7x7=49</span><br><span class="line">1x8=8	2x8=16	3x8=24	4x8=32	5x8=40	6x8=48	7x8=56	8x8=64</span><br><span class="line">1x9=9	2x9=18	3x9=27	4x9=36	5x9=45	6x9=54	7x9=63	8x9=72	9x9=81</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>文本处理</tag>
      </tags>
  </entry>
  <entry>
    <title>Zotero使用教程(1)-安装及配置</title>
    <url>/2016/06/01/Zotero%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B(1)-%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>作为一名科研人员，经常要阅读大量文献（当然我收集&gt;&gt;阅读，哎！），收集来的文献一般我们使用文件夹管理，通常使用文件夹命名和层级分布解决论文的分类问题。</p>
<p>但是，实际上，我需要一种不打开文档就能知道文档说啥的工具，不需要打开文档一点点看标注，才能理解论文说了啥的工具。并且，文档不仅可以在电脑端查看，还可以在移动设备进行查看，甚至推送到Kindle上进行阅读。</p>
<p>下面从Zotero的安装和配置的过程进行讲解，方便搞科研的小伙伴们。</p>
<a id="more"></a>
<h1 id="zotero的安装"><a class="markdownIt-Anchor" href="#zotero的安装"></a> Zotero的安装</h1>
<p>官方链接： <a href="https://www.zotero.org/">https://www.zotero.org/</a></p>
<p>根据自己的系统下载相应文件：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082059840.jpg" alt="下载Zotero" /></p>
<blockquote>
<p>注：右边框是浏览器插件，用于从浏览器保存信息到Zotero。</p>
</blockquote>
<p>安装过程不详细说了，如果你的系统是Linux,把下载的压缩包解压缩后，里面就有可运行程序，将解压缩后的文件夹整个拷贝到相应目录（比如：/opt/Zotero_linux-x86_64），为方便启动，也可以配置路径到系统中。</p>
<h1 id="配置根据个人喜好"><a class="markdownIt-Anchor" href="#配置根据个人喜好"></a> 配置（根据个人喜好）</h1>
<p>启动Zotero成功后，在<code>编辑</code>那里找到<code>首选项</code>，配置以下信息：</p>
<blockquote>
<p>1.中文界面：在<code>高级</code>里的<code>常规</code>中配置语言<br />
2.文件存储位置：这个文件存储位置就是首次启动是设置的位置，如果首次启动没设置好，可以在<code>高级</code>里的<code>文件和文件夹</code>中配置<br />
3.登录个人账号（我没有用Zotero的账号）：这个打开设置界面，在<code>同步</code>下进行设置。只有登录这个账号后才可以选择远程同步方式，比如：同步到Zotero（空间小），WebDav同步（可以用坚果云，不过我同样没用，因为同步上去的东西我看不懂，后面我同样用坚果云备份，但是是同步一个插件规范后的文件）</p>
</blockquote>
<p>注：设置的对应英文名字我在这不进行另外标注</p>
<h1 id="zotero的插件"><a class="markdownIt-Anchor" href="#zotero的插件"></a> Zotero的插件</h1>
<p>Zotero的插件是让我爱上它真正的原因，没找到Zotero之前，我也用过类似工具，始终觉得不顺手，不是收费（原谅学生党这样说，有钱还是可以支持的），就是存储空间受限。</p>
<p><strong>(1) ZotFile</strong><br />
Zotero的神级插件，这玩意可以自动获取导入文件的元数据，自动命名附件（这真的太神奇了 ）！</p>
<p>安装方式<br />
点击 <a href="https://github.com/jlegewie/zotfile/releases">ZotFile</a> 下载插件后，在Zotero的菜单栏的<code>工具</code>找到<code>插件</code>，点击下面红框：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082059048.jpg" alt="本地安装插件" /></p>
<p>然后选择<code>Install Add-on From File</code></p>
<p>配置<br />
在工具目录下，点击<code>ZotFile Preferences</code></p>
<ul>
<li>配置附加文件默认目录</li>
</ul>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082100665.jpg" alt="附加文件默认目录" /></p>
<p>这个目录是为了快速添加附件，当你保存下来的条目没有任何附加时，而你又想为条目添加一些pdf,ppt等附件，你将文件下载到该目录后，右键点击该条目，选择<code>Attach new file</code>，插件会自动加载该目录下最新更新的文件到该条目下。</p>
<ul>
<li>配置文档存储样式</li>
</ul>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082100501.jpg" alt="定义附件存储位置" /></p>
<p>勾选红框上面的勾选框，然后设置相应目录，这个设置是为了快速按一定命名方式导出附件，比如论文可以按下面格式导出：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082100072.jpg" alt="附件导出格式" /></p>
<p>这里的文档命名格式：时间_作者_文档名</p>
<p>是不是很清新的命名，包含很多信息吧，更多命名方式参考：<a href="http://zotfile.com/">http://zotfile.com/</a>   中的“RENAMING RULES”</p>
<p>更为神奇的是，这个目录设置为坚果云的同步目录，这样文档可以跨设备进行浏览了，等我下次更新吧。</p>
<p><strong>(2) Zotero Scholar Citations</strong><br />
<a href="https://github.com/beloglazov/zotero-scholar-citations">Zotero Scholar Citations</a> 开源在github上。是一个引用次数更新插件，不过这个插件需要翻出去才能使用。</p>
<p>安装方式<br />
点击上面链接，把相应的.xpi文件下载下来，然后像前面一样进行本地安装。</p>
<p>配置<br />
不需要配置，直接在相应目录下右键，然后点击<code>update citations</code>，插件会去谷歌学术搜索把当前引用次数下载下来，但是由于谷歌的限制，一次不要更新太多，我曾经一次更新很多，现在到不好使了。</p>
<p><font color="red">注：文献引用次数会在条目的<code>其他</code>列下显示。</font></p>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Zotero</tag>
      </tags>
  </entry>
  <entry>
    <title>linux上wps系统缺失字体</title>
    <url>/2016/06/01/linux%E4%B8%8Awps%E7%B3%BB%E7%BB%9F%E7%BC%BA%E5%A4%B1%E5%AD%97%E4%BD%93/</url>
    <content><![CDATA[<p>在Linux上新安装WPS后，第一次打开就出现以下问题：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082047483.png" alt="wps系统缺失字体" /></p>
<p><strong>问题原因：</strong><br />
Linux上缺少windows字体，把字体添加上去即可。</p>
<a id="more"></a>
<p><strong>操作步骤：</strong><br />
1.下载缺失字体</p>
<blockquote>
<p>国内下载地址：<a href="https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip">https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip</a><br />
国外下载地址：<a href="https://pan.baidu.com/s/17-glCiVNTc70ZDu35dpDjg">https://pan.baidu.com/s/17-glCiVNTc70ZDu35dpDjg</a><br />
<mark>字体下载后，将其解压到/usr/share/fonts中,终端执行以下命令即可</mark></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip wps_symbol_fonts.zip</span><br><span class="line">sudo mv  wps_symbol_fonts  /usr/share/fonts</span><br></pre></td></tr></table></figure>
<p>2.修改字体权限，终端执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/fonts/</span><br><span class="line">chmod 755 wps_symbol_fonts</span><br><span class="line"><span class="built_in">cd</span> /usr/share/fonts/wps_symbol_fonts</span><br><span class="line">chmod 644 *</span><br></pre></td></tr></table></figure>
<p>3.生成字体索引,终端执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/fonts/wps_symbol_fonts</span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br></pre></td></tr></table></figure>
<p>4.更新字体缓存,终端执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo fc-cache</span><br></pre></td></tr></table></figure>
<p>5.重启WPS</p>
<blockquote>
<p>问题解决</p>
</blockquote>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>WPS</tag>
      </tags>
  </entry>
  <entry>
    <title>linux的文件夹共享功能设置</title>
    <url>/2016/06/01/linux%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E5%85%B1%E4%BA%AB%E5%8A%9F%E8%83%BD%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>本文解释linux系统向其他系统共享文件的流程，并以ipad访问过程演示</p>
<a id="more"></a>
<p>1.新建共享文件夹<br />
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082045372.png" alt="enter description here" /></p>
<p>2.设置共享用户<br />
<img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082046890.png" alt="enter description here" /></p>
<blockquote>
<p>好像要求用户wu先是系统用户</p>
</blockquote>
<p>3.终端访问</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082046943.png" alt="enter description here" /></p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082046556.png" alt="enter description here" /></p>
<blockquote>
<p>！需填写密码</p>
</blockquote>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>文件共享</tag>
      </tags>
  </entry>
  <entry>
    <title>安装windows和linux双系统备忘录</title>
    <url>/2016/06/01/%E5%AE%89%E8%A3%85windows%E5%92%8Clinux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%A4%87%E5%BF%98%E5%BD%95/</url>
    <content><![CDATA[<p>本文针对安装windows和linux双系统的流程进行梳理，汇集两个系统上常用的软件，并针对出错的问题进行记录</p>
<a id="more"></a>
<h2 id="安装过程"><a class="markdownIt-Anchor" href="#安装过程"></a> 安装过程</h2>
<p>略</p>
<h2 id="使用软件"><a class="markdownIt-Anchor" href="#使用软件"></a> 使用软件</h2>
<table>
<thead>
<tr>
<th>Windows</th>
<th>Ubuntu</th>
</tr>
</thead>
<tbody>
<tr>
<td>备份数据-》清理硬盘-》安装系统-》卸载多余的东西-》升级win10-》安装软件-》登录各软件帐号-》拷贝数据回本机</td>
<td>刻录U盘-》安装系统-》更新源-》安装软件-》美化</td>
</tr>
</tbody>
</table>
<p>Windows:</p>
<blockquote>
<p>必装：<br />
上网：校园网（<a href="http://dr.com">dr.com</a>)<br />
杀毒软件：电脑管家<br />
笔记：印象笔记<br />
社交：QQ轻聊版<br />
办公：word 2016(破解工具：KMSpico Install)<br />
浏览器：谷歌(<a href="mailto:wushaogui123@gmail.com">wushaogui123@gmail.com</a>)/360极速(15878192524)<br />
网盘：百度网盘<br />
解压工具：闪电压缩<br />
编辑工具：sublime/notepad++<br />
音乐：网易云音乐(<a href="mailto:wushaogui2014@126.com">wushaogui2014@126.com</a>)<br />
截图：Fast stone<br />
翻墙：lantern<br />
驱动：驱动人生<br />
虚拟镜像：Daemon_Tools_Lite<br />
英语词典：有道<br />
选装：<br />
视频：腾讯视频/优酷<br />
购物：阿里旺旺<br />
模拟器：VMwareworkstation_full<br />
U盘刻录工具：UltraISO_cn<br />
思维导图：mini8/visio<br />
画网络图：Cytoscape<br />
Markdown:马克飞象/小书匠<br />
修图工具：Adobe CC 2015 64位<br />
数学工具：Matlab R2016b<br />
游戏和软件：stream<br />
系统工具：CPU-Z<br />
编程类：<br />
C:C-free<br />
R:R+R studio<br />
python:pycham<br />
java:jdk+eclipse<br />
scala:ideaIC</p>
</blockquote>
<p>Ubuntu:<br />
每次安装完Ubuntu后都到网上找别人的“ubuntu安装后需要做的事情”，麻烦得很，现状结合自己的需求将安装完ubuntu后，还原之前工作状态的过程记录下来，以备不时之需！</p>
<p>系统语言的更换-&gt;源的更换与系统的更新-&gt;输入法的安装-&gt;应用的安装-&gt;其他配置</p>
<blockquote>
<p>输入法：搜狗输入法</p>
<p>浏览器：火狐浏览器/Vivaldi<br />
办公：wps</p>
<p>思维导图：Xmind8<br />
音乐：网易云音乐<br />
翻墙：lantern(<a href="https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta-64-bit.deb">https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta-64-bit.deb</a>) / Shadowsocks-Qt5<br />
画网络图：Cytoscape<br />
英语词典：有道<br />
备份：坚果云<br />
壁纸：variety<br />
天气:gis-weather<br />
截图工具：shutter<br />
系统清理：stacer<br />
屏幕录制工具(gif):peek<br />
屏幕录制:kazam<br />
makedown:typroa/小书匠<br />
文档管理：Zotero/mendeley</p>
<p>PDF阅读器：Foxit Reader</p>
<p>相册管理：Pix相册</p>
<p>邮件：雷鸟邮件</p>
<p>Windows软件模拟工具：crossover（QQ/微信）  独立的Wine-QQ与Wechat<br />
服务器文档编辑：vim/notepadqq<br />
编程类：VS/sublime3/git</p>
<p>远程桌面工具：TeamViewer</p>
<p>视频播放器：VLC</p>
<p>終端：zsh</p>
</blockquote>
<blockquote>
<p><strong>升级Ubuntu系统</strong>：<br />
ubuntu14…10怎么升级到ubuntu15.04_百度经验</p>
<p>安装Ubuntu要做的事：<br />
安装Ubuntu 16.04后要做的事 - skykingf的专栏 - 博客频道 - <a href="http://CSDN.NET">CSDN.NET</a></p>
<p><strong>美化：</strong><br />
ubuntu16.04主题美化和软件推荐 - ZeeCoder - 博客频道 - <a href="http://CSDN.NET">CSDN.NET</a></p>
<p><strong>其他问题：</strong></p>
<ul>
<li>
<p>升级过程遇到boot空间不足：<br />
Ubuntu升级出现/boot空间不足解决 - 海涛的CSDN博客 - 博客频道 - <a href="http://CSDN.NET">CSDN.NET</a></p>
</li>
<li>
<p>更换控制台语言：</p>
</li>
<li>
<p>改变ubuntu终端显示语言（桌面系统是中文，终端提示是英文） - Linux系统教程<br />
字体安装：</p>
</li>
<li>
<p>linux终端中最漂亮的几款字体介绍及安装 - 郭大侠的专栏 - 博客频道 - <a href="http://CSDN.NET">CSDN.NET</a></p>
</li>
<li>
<p>网易云音乐无法启动：</p>
</li>
<li>
<p>zsh-通配符问题<br />
-&gt;在~/.zshrc文件中加入下面的设置<br />
setopt nonomatch</p>
</li>
<li>
<p>WPS for Linux提示“系统缺失字体symbol、wingdings、wingdings dinphy - 孜_行 | 小知识，大家享，你也行</p>
</li>
<li>
<p>设置开机启动:<br />
<a href="http://os.51cto.com/art/201508/487326.htm">http://os.51cto.com/art/201508/487326.htm</a><br />
<a href="http://blog.csdn.net/ocgcn2010/article/details/43260705">http://blog.csdn.net/ocgcn2010/article/details/43260705</a></p>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>给阅读的网页作标记</title>
    <url>/2016/06/01/%E7%BB%99%E9%98%85%E8%AF%BB%E7%9A%84%E7%BD%91%E9%A1%B5%E4%BD%9C%E6%A0%87%E8%AE%B0/</url>
    <content><![CDATA[<p><strong>需求</strong>：经常性的阅读一些文档，阅读过程中，想做些记录，但是现有的这方面工具很少，即是有也是需要使用账号登录，并进行收费的</p>
<a id="more"></a>
<p>现在FireFox下找到一款名为Textmarker的插件，该插件支持对文本进行高亮显示，并且可以自定义高亮的样式。</p>
<p>插件地址：<a href="https://addons.mozilla.org/zh-CN/firefox/addon/textmarkerpro/?src=api">https://addons.mozilla.org/zh-CN/firefox/addon/textmarkerpro/?src=api</a></p>
<p>插件使用效果：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082025540.jpeg" alt="Textmarker使用效果" /></p>
<p>我的插件配置：<br />
<img src="./attachments/1613525617396.jpg" alt="Textmarker样式" /></p>
<p>导入配置数据：</p>
<p><img src="https://picgo-1304919305.cos.ap-guangzhou.myqcloud.com/picGo/202304082025015.jpeg" alt="导入配置数据" /></p>
<p><font color="red"><strong>注：标注后刷新会消失高亮，所以建议标注后存储到第三方中，比如印象笔记等</strong></font></p>
]]></content>
      <categories>
        <category>软件工具</category>
      </categories>
      <tags>
        <tag>Firefox</tag>
      </tags>
  </entry>
</search>
